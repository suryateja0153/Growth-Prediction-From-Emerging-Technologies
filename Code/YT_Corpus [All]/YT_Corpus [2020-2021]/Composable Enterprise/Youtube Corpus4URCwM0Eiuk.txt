 hi my name is Jose Rojas I'm a program manager in our identity I specifically work in a Shore Active Directory b2c and today I'm going to share with you some information about a recently eg8 portion of our service which is a Shore Active Directory b2c with custom policies Esther Breton as a reminder a structure of directory b2c is the access platform the controlled access platform for your customers accessing your own applications when your customers come to you they might want to use things like log in with Google login with Facebook they might want to create an account you need to your particular application or sometimes they might want to use an ID they already have such as an actual Active Directory business login or a government ID to log into your applications once they have access on the right side of the page we then refer to accessing applications accessing your api's and providing analytics that are centralized for any number of applications for all your user base today we're especially going to talk about external systems integration because this is part of the superpowers that we recently g8 in b2c just real quick the total value of b2 cs1 secure authentication to the ability to capture any amount of customer information and save it to your directory or other other sources of data or their destinations for your data and lastly everything is branded to your application or your a particular brand you can choose one per brand meny per brand it's up to you so this security and this control comes to you and we provide this with a specific set of benefits of particularly to developers and that's because you might already be aware every time your code base touches things like security like a medication it requires some special review should require some special review and what with the value proposition we give developers is to say look no matter how your users approach you which application or which device we give you one control plane all those applications depicted in the in the slide in the multi colors come to our F director be to see one point to access give access to your users and you can then develop one experience one experience per application or even more than that and what you get is single sign-on you get a consistent set of user experiences and you get to improve them over time as they access different applications and then even things that are a little tricky or a little messy things like compliance things like keeping metrics across applications become much easier when you have to get one central point but with this control plane also there are also some things you might want to do when you arrive here so let's take a look at an example and we're going to do a simple example and more complicated one in this chart we show a user coming to their device log it into your application but then your application knows that this user wants to sign in they may be pushed to sign-in button when they do that the application in your application reaches out to be to CSSP to see please perform an authentication using policy XYZ in this example b2c picks up the experience and presents to the user and it self asserted or a an interactive experience branded by you that would say for example hey how would you like to login would you like to use Google Facebook maybe create a new account let's say the user chooses Facebook in this interaction well the next step be to see it reaches out to Facebook directly makes a connection the user authenticates b2c receives our token back all is good and says ok fine third step let's see if we have this user in the directory if we do great let's authenticate the user if we don't maybe this is an opportunity to create a new user and that's exactly what happens in new user registration and the last step in the simple example we go back to the application issuer token to the application on top and the application continues this journey in a secure fashion ok this is basic and you can achieve this in five minutes or less use in Azure Active Directory b2c user flows just look that up user flows it's the easiest way to configure this journeys and I would 80% of our customers stop there this is just tremendously useful essays but today we're going to talk about some more complicated situations so what if you actually want to change those steps or you want to change the order of those steps this is when user journeys and orchestration steps comes in here we deconstruct the policy specifically a user journey and in this example you see orchestration step is what we call it step 1 choose an identity provider step 2 gather information from the user step 3 verify some of that information so far so good but what if you want to validate the data so what if an orchestration step to the user inputs data and you want to verify whether it's already exist where it's correct with it acceptable in your assistance systems or for example at the end you want to record the user preferences not just in Azure Active Directory b2c but you want to record it in your own database or you want to perhaps provision a user in your sales platform for a future follow-up so let's talk about the data validation specifically this is all part of how B to C does external systems integration and in all use in all cases your user reaching through any kind of app number of apps performs an authentication and immediately after now we can do some external systems interaction and how do we do that one great way to do it ask your functions and I'm going to show that today are sure functions I had superpowers - your journeys you can do things like progressive profiles in different systems you can calculate uh perks for example what's the percentage of a profile that is complete you can do things like check the data take a loyalty account take a player tag which is on what I'm going to show you and these are all my columns superpowers and that you can add in B to C let's go right to a bit of a demo so if we switch over and we go to the user view in B to C and let's go ahead and select our active directory B to C and within B to C you can go to user flows to create a sip the simpler experiences or you go to the identity experience framework to select other experiences that one's work we're going to talk about and within here I've created a number of policies that are available that I've already used and I want to show you what that looks like at the same time within my asher active directory instance I'll have a number of services I use for my applications like perhaps you do as well one of them without Sascha functions and I created a function specific key called check player tag dysfunction is written in C sharp and b2c will interact with it as he will interact with any API and based on the responses from that API continue the user journey or not so now that I've show you a bit of the code in this particular case C sharp it's a verification we'll come back to it but let's see what it looks like so let's take a look at our website we created this website is a demo and within it we provide you the code so you can take a good close look at it but within this experience we have the opportunity to create assign it and it's specific I'm going to show you what it looks like in this particular experience there's a user that's signed up into the application using some of the other applications in the family so the user exists this is the first time the user is going to access this particular application so let's go ahead and go ahead and do a sign-in instead of using a social account this user is just you creating or used its local account specifically in your directory let's go ahead and do a sign-in now this application has seen this user for the very first time so it's going to first save you a set the terms and conditions of this particular part of the site or this particular application in the family I'm going to say yes this preferences by the way are stored in a compliant system as well and I'll continue my next question the system realizes that there's data I have not provided in the past that's relevant to this particular application for games and I'm going to introduce a player tag let's say that I choose our TMS as my player tag a player zone let's just call it recreation play mode oh there's let's just say no so interested not want to receive any offers and I hit create well at this point however you can see right here the system checked whether or not this Blair type was taken this has to be unique throughout the system and it certainly it is not it is not possible let's try a different one see if that works nope this one's also taken what's going on well if we go back to the application to the specific of the API we can see that we created an API and this API has a very limited list of taken it's just for demo purposes player tax that are already taken Artemis Slayer went to three parts of all the list could be in the thousands or millions and typically this interaction would be directly with one of your system that has the data but the idea is that be to see in real time called out to an API specifically national functions and as your function can typically keep up with us in terms of performance are close to globe and it's able to complete this function let's take a look at what this looks like and before we do that let's just complete it let's choose something all together different see if this is accepted and I'm gonna say create and in this case we completed the login into the application so that player tag works but let's talk about how that works so we took a quick look about the the API itself the API is little just listening it's a web hook within it it merely is gonna check whether or not a particular player tag is taken if it is it's going to respond back to B to C with a full string that's gonna have that tag Slayer one two three it's already in use please choose a new one and that was the interaction we saw now what is the B to see half of this equation let's look at that so slip over to the field city of code and within Visual Studio code I've downloaded a number of policies this is the way a policy looks like when you look at it from the constant policy lens within that policy I've done two things first of all in this particular part of the flow I've added a new step in this flow this is when the user is logging in for the first time or logging in period and I've introduced a new function it's called the validation technical profile into an Asscher function check player tag web book hopefully you can see that this is the function that's denominated the API function where I just reached into and it's going to send the data that he just gathered from the user whatever is appropriate or to that function specifically including the player tag now what does look like the other thing I need to do is define what does this function look like in B to C so let's scroll up in this particular function let's take a look at that so from here here this is the declaration of a claims provider and specifically a technical profile at this cribes interaction with the rest api i have the address of the api i get this directly off of asha functions and then i'm going to declare what's the exchange i want to have with this api Beaches who will connect to this api will send a player tag the player tag string itself and you just wait for a reply as you could see the reply was negative do note if it's already taken it'll tell it to the user so by adding two things again I added a validation step right here validation step right here as your functions number one and number two I then added the definition of the API I was able to perform that validation by the way all of this this existing policies existing declarations for user journeys already exist and they're usually available to you in the getting started I'm just going to show you that very quickly getting started with custom policies in Azure Active Directory b2c tells you how to get that going and specifically where to get the existing policies from github great so let's go back to the presentation for a second now that we've shown you how to execute it we've shown you how to do an actual functions let's go back over here and continue this portion so we saw the validation step we took a look at the API itself and I want to point you to a few places to get this started in particular take a look at the training and solution guides that we have available some pretty extensive labs and white papers there and also take a look at the code we provided and the demo that I provided to you today we can't wait to see you in the family lastly for developers a couple quick notes we've been working on releasing programmatic access and it's now publicly available to upload download policies to create applications and register them and also to create tenants we can't wait to see you there and on the right just a rule reference of now some integrations we have a Mitchell studio and we're doing integrations with a number of partners to speed up deployments reach out to us and we look forward to having you around and with that thank you I have a great Microsoft build 2019 