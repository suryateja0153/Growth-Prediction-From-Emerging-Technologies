 So uhm obviously at scale, composability has even more benefit than in smaller deployments. I'll give you just a couple of use case examples. Number one, we're working with a transportation company and what happens with them at 5:00 PM is actually very different than what happens at 2:00 AM. And the model that they have today is, is a bunch of static boxes and they're playing a game of workload matching. If the workload that comes in fits the appropriate box than the world is good. If the workload that comes in ends up on a machine that's oversized then resources are being wasted. And what they said is we want to take a new approach. We want to study the workload as it comes in dynamically spin up small, medium, large, depending on what that workload requirement requires. And as soon as that workload is done, free the resources back into the general pool, right? So that's one customer. By taking a dynamic approach, they're changing the TCO argument inside of their environment. And for them it's not a matter of am I going public cloud or am I mean I am I going dynamic or am I going static? Everyone knows dynamic infrastructure is better. No one says, you know, give me the static stuff for them it's am I going public cloud or am I going on-prem? That's really the question. So what we provide is public cloud is very easy, but when you start thinking about next generation workloads, things that leverage GPU and FPGA's those instantiations on public cloud or just not very cheap. So we give you all of that flexibility that you're getting on public cloud, but we save you money by giving you that capability on prem. So that's use case number one. Another use case is very exciting for us. We're working with a studio down in southern California and they leverage these uh, NVidia G100 GPUs during the daytime. They give those GPUs to their AI engineers. When the AI engineers go home at night, they reprogram the fabric and they use those same GPUs for rendering workloads. They've taken $50,000 worth of hardware and they've doubled the utilization of that hardware. 