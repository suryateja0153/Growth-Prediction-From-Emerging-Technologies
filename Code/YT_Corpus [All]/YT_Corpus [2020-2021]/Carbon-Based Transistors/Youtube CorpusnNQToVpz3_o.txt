 Hello and welcome to our introduction to machine  learning for material science series here. My   name is Ben Atlerbach. I'm a grad student here at  the University of Wisconsin-Madison, and today   I'll be walking through this lab activity, and  hopefully discussing some of the points, some of   the key things to pay attention to. And, you know,  the things that we're going to be focusing on is,   is, you know, what is machine learning? What can it  do for material science? What are the things   that's good at? What are the things that's not  good at? What are some of the strategies that   we can use to improve our machine learning  models, and what is a common workflow where   we can take a data set and then hopefully build a  model out of it and start making some predictions.   So to jump in, I'll go through, initially, the  sections that we'll be covering as we go through,   and if I scroll down here, we can see those in  this notebook that we'll be working through.   So section one is on data inspection, so we'll just  be looking at, you know, what is the data set we're   going to be working with. What are the things  to pay attention to and specifically what is,   how can we clean up the data set so  that it's kind of ready for machine learning.   Section two is feature generation. So this is where  we actually generate the key inputs that we're   going to use for our model. Section three is on  future engineering, and for that we are going to be   using those features that we generated and making  some modifications to them hopefully to improve   their usability in the model. Section four is  on model evaluation. So this is where we start   to decide, you know, how are we gonna know if our  model is performing well? What kind of tests are   we gonna perform on it? Section 5 is where we  actually start fitting and evaluating that model.   So we're going to build a default model using  some some default settings. And then section 6, we're going to start to try to optimize the models.  We're going to start to change things about the   model to affect its performance, and we're going to  see if we can improve the performance of the model,   and then finally, at the end, we're going to make a  few predictions. And we'll see, you know, what those   predictions entail, and what they tell us about,  you know, how we might use this model going forward.   So that goes through all the sections, and the  next thing we need to cover is, you know, how can   you follow along at home for this. So that's one  of the things that's really nice about using   Jupiter notebooks, is this is a, you know, fully  interactive sort of programming environment, and   you can follow along and basically write all  the code that I'm going to be running, look at   the results, and potentially make some changes.  And as I walk through, I'll talk through some   sections where we might make a few changes, so  that if you do have, you know, maybe a little bit   of programming background, or you're just  interested in maybe learning a few things,   you can make a few small changes, and affect  your results, and see how they, how they affect   what we're gonna, we're gonna do. So to start  off, where you need to go is to nanohub.org.   So this will be what it looks like when you first  come here. You will have to log on in order to run   the tools that they're hosting here. So nanohub is  basically a platform where we can host different   tools and run them, and they'll basically, you  know, give us some computing resources to do that.   So the two tools that we're going to be looking  at are first the lab module itself, so it is under   nanohub.org/tools/introMLLab. So you can see that  right at the top here, hopefully. So if you go here,   and then hit launch tool, you'll get exactly to  this page that I was looking at a second ago.   So this is the notebook and it is again running  this interactive programming environment for us.   The other thing that will be useful to know  about is this Jupiter notebook tool. So this   is the kind of underlying framework that the lab  is built off of. You don't need to be running both   at the same time or anything like that, but I will  point out this tool specifically to help save our   results and kind of come back later. So once you  have the notebook open here, you can also go   run the notebook tool, and you'll get to a page  that looks something like this here. So this is   showing you where all the files are on the kind  of virtual computer that nanohub is running for us.   And where you're going to go is under the data  section, and then under results here into this   folder, and you'll get to a number of folders that  look like this that have numbers next to them.   And if this is your first time on  nanohub, you might only see one folder,   and it'll hopefully be, you know, the folder that  was just created for you. So here I have my most   recent I one started an hour ago. So I'm going to  go in here, and then I see here's the intro ML   lab, you know, folder that it created for me. So I'm going to go into there, and then in   the bin, and now I see here's the notebook  that we're running here in the other tab.   And the reason I'm calling attention to that is  if we go back to that notebook, what we can see   is that we can't actually save this notebook. So  I'm looking at the top right here, and it has this   kind of crossed out save. If I try to click the  save icon, it says notebook is read only, here in   the top right, so it's not going to let me, you know,  save any changes that I want to make. In order to   do that, what we need to do is go to the file drop  down menu in the top left, and then what I'm going   to do is make a copy of this notebook. So I'm going  to make this copy, and it'll generate a new tab,   and this will be exactly the same as the one  that I have here, except now I have ownership   of this file. So this is a way to give me the  ability to save and make changes as I go along.   So now I have ownership of this notebook, but it's  exactly the same as the other one. So I'm actually   going to close out of this one, and see it's  going to ask me if I want to leave, that's okay.   So now we have a copy that I have  ownership of, so now when I hit save,   it should save with me. It says checkpoint  created, that's awesome, and if I go back here,   now I can see the copy exists here. So now, if I  come back, you know, in a few days or in a week,   and if my notebook that we originally started  with, you know, got reset or isn't running anymore,   then I can come back and this one will have all  my saved changes as long as I remember to save.   So that should get us going with starting to  follow along there. The last couple things I'm   going to cover is just a few basics of how do we  use a Jupiter notebook. So I mentioned this is like   a programming environment. Based on your background,  you might be fairly comfortable with that. You   might be thinking, you know, how am I actually going  to run code here? And the key thing to remember, if   all else fails, is that to run code, all you need  to do is select a different cell in the notebook,   you see I'm just left clicking on kind of the  left side here, and I get this blue highlight.   So I can select all these different cells, and  if I just start at the top and hit shift enter,   shift plus enter, and it will execute code that's  in the current cell, and go to the next one. And if   there's no code there, it'll just skip that cell.  So you see this first one just has some images.   So I'm just going to hit shift enter, shift  enter and it'll start running code, and the   way that we know that it's running, and it ran  successfully, is we can look on the left here.   And there's a square bracket and when it's running,  it'll have some stars inside of the square bracket,   or an asterisk, sorry, and then when it's done, it'll  give me a number, and that's basically the number   of number of cells that have been ran during this  instance. So this is the first cell I ran, so it has   a one there, so I'm just going to keep going down  here, and keep running. And what I'm actually going   to do is go and run through everything until I  get to section one in the notebook. So I'm just   going to go through here, keep going through all  the introduction information. There's this section   here that basically does a bunch of imports of  different requirements and different packages that   we're going to use. It isn't super important to  to sort of know about those, but it's required for   doing things later on. So I'm going to run through  all of these until I get to this first section on   data cleaning and inspection. And with that, we're  going to stop with the introduction and we'll pick   it up with the next section, where we start going  through looking at our data and understanding how   we're going to do some data cleaning and other  steps like that. So we'll see you in the next one. 