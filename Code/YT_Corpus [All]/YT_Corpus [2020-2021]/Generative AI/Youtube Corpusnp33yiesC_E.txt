 Generative Arts The take up of generative processes in electronic art preceded many other areas, and creative expression with algorithmic processes continues as an active area of innovation. The abstract nature of much art work and its embrace of the strange or impossible meant that the often-unpredictable outcomes of generative processes were more welcome as artistic expression, even when (or perhaps because) they seemed impractical or from another world. Generative process often involve rules that simulate structures or procedures in nature or human practices. In computational systems, we can program those activities to take place using algorithms; like the Lindenmayer system that replicates branching patterns in plant growth. When we apply those rules in software, out of those rules emerge new works, as seen in Jon McCormack’s digital plant images in his Bloom series. These kinds of processes produce works that are often novel, and sometimes valuable. When considering generative creative practices, it is useful to be aware of pioneers in generative art. Two of these are Harold Cohen and David Cope. Cohen created one of the first successful drawing robots, called Aaron, which had works shown in galleries and sold at art auctions. When discussing his motivations for this work Cohen remarked, “It occurred to me that if I could write a [computer] program to do some of the things human beings do when they make representations, then I might possibly learn more about the nature of representation than I ever had done by painting.” (2004) This interest in instructing a computer to make creative works to better understand the creative practices themselves was also a driving force for the music composer David Cope. Cope created some amazing early examples of generative music with the Experiments in Musical Intelligence (Emmy) system that imitated the styles of famous composers based on analysis. It did this well enough to fool all but leading experts in blind tests comparing the originals and computer-generated facsimiles. The broader field of generative arts has influenced the mainstream through practices in Creative Coding. A leading figure in this area is Lauren McCarthy, the developer of the P5.js programming language, and a leading artist in her own right. In creative coding the software becomes the medium of artistic expression and works are realised either in real time as screen-based or projected works or as rendered outputs in more traditional media such as paper prints. Creative coders develop algorithms that produce works with particular aesthetic characteristics embedded in the software. In recent years the techniques of Artificial Intelligence (AI) have been applied to generative arts practices. Typically, these follow machine learning processes where a network extrapolates patterns from many examples of works exposed to it, and then generates new works based on those patterns. A particularly productive approach has been the use of Generative Adversarial Networks (GANs) that use two networks (generator and discriminator) in parallel. The generator produces works and the discriminator (trained on real example) selects those that fool it into assessing them as ‘real’. Because there is not human in the loop, computers can churn through many examples looking for convincing generated effects. However, the network selection process is not always human-like and so some odd, but often interesting, examples are generated. Regardless of the rules used, or if they are hand coded or extrapolated by machine analysis, computational generative art systems are finding an expanding role in creative practices. 