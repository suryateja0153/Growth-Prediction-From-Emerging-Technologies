 hello i am kobayashi from sony in this video i will cover the basics of generative adversarial networks gun these networks enjoyed huge success in image generation in recent years the content in this video is aimed at those with basic knowledge of deep learning please view our previous videos covering the basics of deep learning if you would like to learn or review that content before we talk about guns specifically let's first start by going over how data is generated by neural networks as has been discussed mainly in the video on deep learning fundamentals neural networks configured and trained to function as image classification systems which can take an input of a handwritten digit image to determine the digit neural networks that generate data might output actual images in accordance with some input vector for example we can configure neural networks to output multiple images of digits in accordance with the value of an input vector as shown here neural networks can also be used to generate data in addition to categorization of images and predictions based on input data now let's go over the process to train a neural network to generate image data you can easily get the desired output for example by using a structured training framework in which you collect a significant amount of data on handwritten digits training phase requires datasets consisting of pairs of inputs and outputs the challenge is in selecting the right input vectors as we will see we can use guns as a technique to train a neural network to generate data by using the large number of ground truth images for example such an image generation system would generate images based on vectors compressed via an encoder i would also like to try and create a video on this topic in the future moving on to buddhist simply generative adversarial networks gun is a technique used to generate high quality data by training a neural network to recognize authenticity of generated images and to function as an image generation system that generates authentic images here we have a network that generates images based on some vector this neural network is called the generator we will also use another network called the discriminator to train the gun this network is only used in gun training unlike the image generation network that is the end goal the discriminator determines if an input image generated by the generator is fake or authentic based on a data set of authentic images the weight parameter w for the generator is initially set to random in the gun so that the generator generates multiple images based on the random number in this initial state the generator generates images that are clearly not handwritten digits the images generated by the generator and the dataset are used to train the discriminator to be able to determine authentic images for this purpose we can use the same neural network architecture that was used to train a neural network to distinguish the images here is where we start to discuss the essential point of guns we use the discriminator that can distinguish between fake and authentic images to train the generator specifically we update generator parameters until the discriminator consistently produces output that an image is authentic this results in the generator creating images that would be determined by the discriminator to be authentic images initially the discriminator can only distinguish between random images and digits it would be difficult to say if the generator is actually outputting images of digits even if the discriminator is initially not making correct determinations at this initial stage the generator produces images that really aren't digits and discriminator also is not really able to distinguish between fake and authentic images so first we train the discriminator to distinguish between fake images created by the generator based on the random number and authentic images doing this will enable the discriminator to correctly determine the fake images previously determined incorrectly as authentic images then we train the generator to output images that the discriminator we just trained determined to be authentic doing this results in the generator being able to generate images that can cause the discriminator to make false determinations even though the discriminator is now able to do its job much better by repeating this process several times the generator will gradually be able to generate images of realistic handwritten digits that are indistinguishable from real images of actual handwritten digits this is the framework by which we can train image generation systems because of this iterative process in which the performance of the discriminator and generator is continually improved by making them compete against each other you can now understand why this technique has been given the name of generative adversarial networks it might be easier to think of this scenario from a different perspective with the generator being someone who makes further raise of famous paintings and the discriminator being an appraiser who discovers forgeries as the imposter tries to deceive the appraiser so does the appraiser continue to get better at identifying forgeries as a result of this process continuing again and again the imposter produces forgeries that are nearly indiscernible from the real thing and the appraiser is able to discern extremely high quality forgeries this is essentially what is happening with the gun training process now let's talk specifically about how to design the networks that function as the generator and discriminator in this video we will use neural networks for this purpose we will use a 100 dimensional gaussian random numbers as the generator input we will then design a network that reverses the input and output of the cnn first a fine outputs low resolution images based on the input of the 100 dimensional gaussian distribution in this example 64 images of 7x7 pixels will be output we will use leaky relu as the activation function in this network remember that we use max pooling in the cnn to downsample or reduce the resolution of the images in this scenario we will use unpooling to enlarge the images for example we can use unpooling set with a 2x2 kernel shape to double the image resolution both vertically and horizontally more specifically an operation is performed to copy the brightness of each pixel of the input image into a 2x2 pixel structure then layers of unpooling and leaky relu processes are created with a convolution at the end of each layer with a configuration to output one image convolution outputs an image to sigmoid which then creates the final output in this example the brightness is set between 0 and 1. we can use this neural network to function as the generator for the discriminator we could use a normal binary classification cnn this neural network is configured to determine if an input image is fake or authentic it will output a 1 if it determines a fake image and the 0 if it determines as authentic image next i will describe the process to alternately train the generator and discriminator while a little complicated i will describe this without using formula let's start with training the discriminator which is on the right this part of the discriminator has the same configuration as used for normal classification training we will update neural network parameters so that the discriminator consistently outputs a 0 for authentic images while processing images input from the data set at the same time we will also update parameters using the network that processes fake images with this network as well we need fake images generated by a generator to train the discriminator as such we will configure the network such that the generator and discriminator are connected images generated by the generator from random numbers are provided as input for the discriminator then we will update neural network parameters until the discriminator consistently outputs a 1 for fake images when the input image is a fake image while training the discriminator we give generator parameters fixed to repeat we will not update generator parameters during the discriminator training process we only want to use the generator as the means of generating images during this process while the figure shows two discriminators conceptually we will actually be using only one discriminator in the network when developing actual applications using a deep learning framework you must configure the network so that common parameters are used between the two discriminators with this kind of configuration we can then update parameters so that the discriminator can identify authentic images from the fake images generated from random numbers and images in the dataset now i will describe the process to train the generator which is on the left to do so we need the discriminator to classify images as authentic or fake as such we will configure the network such that the generator and discriminator are connected as before in the same way that we train the discriminator by keeping generator parameters fixed we will update generator parameters while keeping the discriminator parameters fixed in essence we will update generator parameters until the discriminator classifies images generated from random numbers as authentic images with this network the discriminator is used as a loss function so that the discriminator outputs a large value for fake images the takeaway here is that we update generator parameters until the loss represented by this network becomes small we keep alternately updating discriminator parameters and generator parameters by for example repeated uses of mini batch processing this is how we gradually train the generator and discriminator as this training process continues the generator will eventually be able to generate images from the input of random numbers they actually look like handwritten digits this allows us to obtain a neural network that can generate images of various numbers with different line thickness and angles in accordance with the random number that is input we have prepared a sample gun project for neural network console if interested in trying this for yourself please access the link provided in the video description we only cover the very basic configuration of an initial gun in this video guns are a very powerful technique at present in 2019 we have been able to use this technique to generate images indistinguishable from actual photos for example in addition to generating images from random numbers we have many different input output architectures such as image processing generating images from text and generating videos from still images i would like to present more videos in the future covering these techniques 