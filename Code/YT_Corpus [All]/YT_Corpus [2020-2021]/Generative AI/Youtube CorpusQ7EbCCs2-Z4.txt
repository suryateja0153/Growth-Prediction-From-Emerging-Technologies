 howdy doodle think mark.wilson Thomas with me to talk in Teleco mark are you there let's say sure I'm are you doing good I can't see you are they gonna put by the way this background here is not really outside Oh fYI oh oh oh he's gonna that's not that's not mark.wilson Thomas that's not Margaret but he's coming he's gonna come in for a second there you are ya see you how you doing bud it's been a while mate really been a while we don't hang out anymore what happened is this something I you just we just don't talk anymore do I know but let's talk about this because I think it's important to it a I assisted development now and in the future that's the name of this particular segment why don't you introduce it a little bit and then let's get into some things if you have to show us let's start with an intro yeah so I mean I'm I have the privilege of being on the in Teleco team which is part of the visual studio prepared team and for the last couple of years we've been building stuff so a couple years ago a build we brought out some tools that allow you to see Intelli code completions which are those magical stars that you see in your intellisense list that help you to get context contextual recommendations and those worked by basically learning across a huge corpus at the time it was like four and a half thousand github repos of c-sharp code to give you those those contextual recommendations we've kind of broaden that out over the last few years to give recommendations now we do seven languages in Visual Studio and Visual Studio code and we've been previewing a whole bunch of things actually over the last few few years and we've got some more of those to show to you today so all of them have the same thing in common though we're all about trying to smooth out those tedious coding tasks let the Machine take the strain and have you focused on what you want to do that's amazing so get your questions in we're gonna go through a couple of demos to make sure you can see what it's all about but we want your questions get them in I'm seeing them right here so get them in form our rice and Thomas so let's start first Amandla silver yesterday showed me some cool stuff with Intel Akkad and stuff having to do with teams can you drive it well because it was a little fast when she did it sure well we're gonna take a little bit of a more measured and breathing the view of that next to am and so you know when we reproduced the stuff that I talked to you about just now the base recommendation system where we're basically looking at huge numbers of github repos one of the first things that developers said to us was well that's all fine and dandy we're loving those stars with loving how they help us to get through the tasks quicker and to learn api's more quickly but what we really want is for them to show up for the types that we use every day and those aren't necessarily found in github repos on the public internet you know they're found in our code base and we want you to learn from the wisdom of our code base too they wanted their their team's goodness incorporated into the models that we did so we previewed a little while back a way to get those kind of custom models trained up and it works just fine but it was a bit of a pain to keep them up to date and we really felt like we wanted to produce a much better way to solve that problem and so we're you know get those models out to everyone who needed them without them having to go through all the ceremony of training a model up for themselves and so with that in mind we've got something to share with you all today that amanda was previewing yesterday so if you could just roll the video all right let's do the first one let's do it take a look at these great completions that Intelli code is giving me for this dotnet core based type well that's all well and good we've been getting those for a while but what happens when I start working with my own types well now I'm getting great completions there too for this conduit class which is within my own project but all I did was open the project how did that happen how did Intelli code know what to do well if I just flip over quickly now to the github actions page for this project you'll see that I have a training Teleco action and here it is and it's created a model and attached it to the repository in question this means everybody who opens that repository will get the exact results that I was seeing that's wonderful news even better is it only took two lines of Y amel to make that happen you can do the same thing with intelligent completions github action right today in the github marketplace if you're an azure DevOps pipelines user you can use R as your pipeline tasks which is also available in the marketplace so that was deceptively simple can you tell us what is going on with that deceptively simple is right actually there's a ton going on behind the scenes there so what what you're seeing there is we actually when we train a model for you we extract the data from your from your codebase and we extract just the features I know you're a bit of an ml person zeth so you'll know what I mean when I say features we extract the necessary features from your code in order to pass that off to a machine learning model service which we actually run and then we hand that back to you in the form of a model but we only hand it back to the people have the right to access it and that's absolutely important to us because obviously it's your code you don't want your models to be within everybody's hands so we make sure that they're kept only in the hands of those who can prove to us that they have access to your github repo our service knows how to ask that question how to get an answer and we can pass them off just to the right people so yeah we're doing machine learning for you and we're handing you back the results but that's automatic so that means that when I open that github repo if I'm just a developer on the team and my build master or whoever handles my actions pipeline has set this up for me it just happens and it just works I just open up visual studio I start seeing the completions that I need this is this is awesome is it like an artifact in the github repo or what's going on there no no this is actually stored in our service so the the magic really is that we actually have some very interesting technology that we call repo attachment that just allows us to query and check whether you have access to the to the github repo in question and our model will then have a bigger model service will then hand you back a model for your repo if you don't have access no model for you that's impressive so like I saw how you build it what kind of features is it actually bring to the team I'd love to see something about like what kind of things it actually does what kind of completion does it make so yeah the completions here if you've seen our contextual completions before you'll know that they understand your your your coding context so you might well see different recommendations depending on where you are so for instance if you're in a testing bloc if you're in an if statement and you know the recommendations are most likely to be about things that are to do with tests you'll see those things escalated up to the top of the list whereas if you're just in in an instantiation mode you might see something different so yeah it's very much contextually sensitive and it'll be sensitive to the context that you use in the code to train it that's awesome I think you have I think you have a demo on Mike cuz I watched the next one and I was like this is cool can we roll the next video please yeah let me just give you a little bit of pretext on this one because what we have here is something that's really about learning life right for my team is doing so yeah yeah we're not kidding we're it we're really going to learn from your code live we do this locally on the on the local box we'll talk a little bit more after the demos run we used to call this in telecom factories we call it in Telecom suggestions now and yeah check it out in the video and let's chat some more hi I'm about to take care of some code review feedback that I received this selected article variable can be null so my code reviewer said I really ought to take care of that so I'll go ahead and do that a simple knowledge check but in this particular project my team has a way of managing things we always throw a new rest exception here and this is the pattern we follow now I'm pretty certain I have the same problem elsewhere in this code base and particularly even in this file so I'm going to go ahead and look for those locations I could write a regular expression to look for the places that I need to add this same check but it's tricky because this variable name will will change and sometimes the LINQ query hero will change as well so I really need to just suck it up and scroll through my code and look for those locations so I'm gonna look for those and it looks like I have another one here so I'm just gonna go ahead and do the same thing now notice that the variable name has changed here so I'm going to check first if a particle is not and again insert that code now something has happened here and Teleco has spotted that I have been doing some repeated edits and say well I just click on that and sure enough it spotted another location in my file where I might want to do the same thing here it is and it's found something with notice a completely different variable name here and made a suggestion that is exactly what I want isn't that great so now I'm done working in the articles area and I just go ahead and commit my code to the code base sometime later a colleague comes along and cracks open the exact same solution in Visual Studio they're going to go ahead and work on the comments feature area and they're not really aware of any of the work that I did but they crack open delete cs2 work on their own method and they notice immediately that Intelli code is giving them a suggestion and if they crack open that location and you know move there they will see immediately that they have a suggestion that allows them straightaway to apply the very same pattern change that I made in their location this is fantastic because it means that the wisdom that I had in in terms of the repeated edits that I collected has been applied and saved away on the repo that they're operating on now how did that work basically what happened was I hit apply and this action saved it in a way that allows anyone who has access to this repo to retrieve that same set of suggested actions that I was taking to say the shared wisdom is being put pumped around the team so that everyone can stay consistent and isn't that great thanks Intelli code that's so pretty amazing and now this is different than the first thing because I thought the world did tell me like they're different and I know we have a lot to go through and that we have a ton of questions but how are they different and then let's move on to what's on the horizon yeah for sure these are different because this is using a technology called pros which has actually been around for quite a long time if you've ever done flash fill in Excel where you know you take a series and expand it and take formula series and expand them that same technology is there under the hood and and what pros does here is it is actually tracking your ast as you type so as you type in a way it's tracking deltas on that ast and it's creating a number of sprits as it goes to try and move you from A to B in other words from where you started to where you ended up and it then clusters those things together using some clever algorithms that my friends on the pros team have put together and and glasses them together and looks for patterns when it starts to see patterns emerging that you're doing a repeated thing it'll immediately start to produce a analyzer that will actually look for those suggestions in other places in your code so it's kind of the analyzer that you don't have to write um so I know I know I'm like I'm not trying to I want to get through the next two things because there's two more things that are on the horizon and let's play them yeah backhand right let's start with the first one yeah can we write on form in Python I've got some idea what I need to do but I could use some help let's see what intelligence AI assistance provides ah look at that antenna code provides assistance right from a generative model showing me great suggestion to complete my line I'm getting statement completion in an untyped programming language Python I'm going to go ahead and add my local variable and right away Wow in Teleco suggested the whole line I needed to write in the gray text I can accept the code with a single keystroke and just tab through to fill in the blanks this experience really helps I'm in the zone of writing code and I only have to write what's unique to my app and I can learn the API as I go along if I need to thanks Intelli code let's see what future versions have intel acade will be able to do for us when working with those tricky beasts date formatting and regular expressions here in just bad my directory format follows the date format but what's that format string that I need so what I'm just gonna open up format here and it looks like it's gonna give me a little bit of help here so it looks like I can just go ahead and type the date I'm gonna do that I'm gonna say May 13th is an example of 2020 and yes it's got it right I can just go ahead and select that and get a little confident in doing that let's try again now for the the file and for the file where it's just going to use times for the formatting here and so again we're gonna use shared moment and I'm just gonna head and put in a time there and yes once again until the code to the rescue and let's try a regular expression and here I'm just going to type in a couple of decent file name samples and one more just give it a bit of a broader set wow that's pretty amazing in the future rocking regular expressions is gonna be a whole lot easier so we just went through two features really quick hopefully they'll tell me in my ear if I can stretch a little bit I want you to summarize those two features as quickly as you can and let's see if we can take some questions to go ahead so yeah because I can the first one you saw the results of some work that our team is doing we've got a great team of data scientists who are building some Microsoft subtext and specific transformer technology that's an evolution of GPT to specialize in code to allow it to learn from a whole lot less data and to basically make the models deployable in a reasonable size so we can work with those so that's the whole line completions that you saw there and as you saw it's able to produce some pretty great experiment see some pretty great completions we'd love folks to sign up for a potential private preview so go to aka.ms/offweb to be kept up to date with our progress there the second one was using another prose model to do regular expressions and date/time formats by example so all you have to do is show is a great example and we'll give you some great code that's really clear yeah I'm gonna do a rapid-fire yes/no question real quick do three of them is it only for github or can use any kind of source code repository right now github but we are looking at extending to all right number two is it planned Provisionals for your code it will come to vs code yes is there a way to generate the intelecom aatul offline not at this point got it well this has been amazing we have gone rapid-fire thank you so much for spending some time with us my friend oh it's been great another mmm all right we will be right back 