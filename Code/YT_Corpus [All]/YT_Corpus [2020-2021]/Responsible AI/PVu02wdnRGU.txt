 hello everybody welcome to this session about building apps for a changing world using AI you've probably seen a lot of announcements and build and from other platform work at Microsoft with all the power that AI can bring to building your applications I believe we're just scratching the surface and Ahmet will in this session talk about one of the more exciting and more areas with the most potential I'm at Baris part of the AI platform team he has been working with us in the decision AI team helping build some of the features are gonna talk about today and he brings an amazing experience of both building products and deploying them in the field before we start we want to tell people please put your questions in the Q&A we'll be addressing them towards the end and we'll be reading what you write so we will probably combine or analyze which questions to prioritize to make it all make sense and with that I'll hand it over to um it and thank you thank you and thank you all I appreciate you taking out the time to come listen to us I do want to give a big shout out to Ed in Jeff my my partners in crime they're the ones who do the hard work too you know so I can look good hopefully I'm looking good I hope anyone who's not been impacted by the pandemic and the craziness going around us in some fashion or the other I sometimes feel unlucky ones the only thing I really have had to worry about is this mop on my head which my wife keeps threatening to clean up and chicken to let you do that maybe after build enough courage to be able to do that but you know the forces that we are seeing today and creating the chaos you know deeply are deeply approving the habits we have and the patterns and the behaviors both as individuals as companies as businesses organizations and what's fundamental was becoming clear and fundamental is also seemingly weird behavior is messing up a lot of the AI models you know the machine learning models that trained on sort of normal behavior established on cracks and we had to we as humans have to step in to sort of straighten them up and one thing we see more and more is organisations who can adapt themselves quicker and faster to sort of you know this this changing world will come out strong you know as we as we progress in this so I wanted to cover a few areas in there but to start with just briefly on cognitive services so this as some of you might be aware we have five categories of these services this perception based ones around vision speech and language and then decision services that help you make an informed and efficient decision and then finally in search ones which would surface information across a wide variety of sources and the benefit of the cognitive services are you know they you use these AI services which are ml and RL power to build your real world and proven use cases and solutions they are inherent in it being responsible and trustworthy and more importantly right I mean you don't need any expertise to be able to tap into the awesome power that they have you don't need to be a scientist any developer can use it for the most part they're simple simple API is that allow you to use it so when you know when building apps most of AI that is used today generally speaking falls under the buckets of perception prediction right and as we sort of expand on that and start thinking about decisions a lot of those needs to be what actions should organizations take or apps take and in making a choice in those decisions what's the right choice when and the two set of things in that and help you do that is what we're outlining here is anomaly detector and personalize it so anomaly detector is is based on time series it's the first set of use cases and it basically allows you to dig deeper into historical casual reality and all of these in a little in a few minutes and then personalize er allows you to adapt to unsealed things and you can basically personalize an action from collective behavior of users and how things are changing if you look at traditional three-tier architecture right so you know in tier architecture a lot of this is you know the AI is but it is very pointy knife it's very narrow its specifics to do is going back to perception and prediction but as you expand to sort of you know in the decision aspect if and you need to transition and bring on this notion of reasoning and planning as you expand into that and in these one has to fund them what do you think if you that sort of the middle tier which often is where a lot of logic is running you need to start thinking of that sort of a AI living breathing engine right where you have a lot of the ML supervised learning [Music] elements and in complementing that with some newer things that the likes of personalized and an anomaly detector allow you to do it and we seen the effects of this where where where acts and enterprises and organizations are not being able to adapt the algorithms behind the scene are getting into hiccups whether its inventory management fraud detection marketing and what-have-you right so if you take a real example relates if you make it real so let's say if I'm a car insurance I'm an insurance company and I want to do a car claim now maybe I might get a letter or a piece or a text or something I need to extract some data from that it should be OCR and this word like co-ed you know most ml models will not understand because they would have seen that it's new they won't know what to do with it but the rules will be different now right would would you want that every claim you get through go to an underwriter an agent or are they things you can change and adapt to say look a bunch of these I can do on my own automatically and improve them based on the situation the location maybe the the damage I can take photos get into perception and understand based on my data I have combining the knowledge on actually how much damage would there be and the layers of damage right put on the surface it may not show all of it so it doesn't mean that everything has to be manually done over human has to go out a lot of these new rules new decisions I can decide on the fly and adapt given given things are quite different right now right so so the use cases the timelines how it needs to close in this case a case how long can it be open or not can be quite different and adapting to that world so how can we use the two examples we had right so personalize that it's it's the world's first reinforcement learning based enterprise service and really you know the its ability to adapt to unseen things is is really what's critical with this right and that's where some of the reinforcement learning allows us to help and as the environment is changing around us that's really where it can learn from and start adapting and changing but what is it right so at a very simple level it's in the air service that your application allows you to choose the best option from a set of options that you use to make a decision and given and given experience it improves over time so as things shift as new things come along it has never seen before it's learning from that collective real-time behavior of content context and it's proving that it's powered by RL and I'm you know a couple of examples where we are using it and then you see some on the slide you see some examples how you can use it but to make it real like for example Xbox where my sub uses this the Xbox homepage every time you open up the console when you get to the Xbox homepage the contents of that home page are powered by this service right so what should they show to end versus a minute versus Jeff would vary depending on our context and behavior what we're trying to do + new things as it's learning from that each time you log into Windows spotlight that is powered by this if the Start menu in Windows is powered by this R is also used in teams as this call was started and also to optimize hardware usage on as well so that's just some examples on how wide and variety this can be and how do you use a vector how can two simple API calls help you learn and discover new business rules right so let's make an example let's go to one let's say if I am you know given the situation we're in let's say I'm on a breaking news or a section on you know on MSN or pick a news news website so if so I have a user who interacts with my app there's some context about that user I have an environment I have I want to be clear this may not be personalized information right it's not specifics on exactly who the user are is and then I have a list of actions so in my context of the news site I have a number of articles I'm on a show and these articles could be changing quite frequently you know if it is the breaking news section it could be minutes in cases and this is really where what I do is call this one API called rank and I say look here's some context about a user the environment they are in remember the environment you keep changing on a day to day basis you know things we're seeing today was very very different from two weeks ago for example I mean it's a please rank in this context please rank these actions and what it comes back is which one article in this case or which one action should it show you know if you go off run the model the model comes when saying try this in our case we have ABC you say try it try action be right or choice B to display in this case we show that to the user and then this is this notion over the wall which is the second a and you see we need to understand how good was that action so how if you think about how's your app reacting or changing this is really where you your business logic you would work on it and then come back saying I give it as notion of a reward score between zero and one and it's a scalar it's not a binary and how you will define this will depend on your business logic but you get a reward back and these tie to your business outcomes and KPIs and then once we get the reward back the RL model learns from that it updates itself a next time you call rank this is a newer model right so this collective behavior sort of if you grow through this this whole whole one cycle as you go through this whole cycle as more and more users going water or data goes through it the models learning and understanding from that and then inheritance this is it will always keep either will say look I'm gonna send you the best action as I've learned as you giving me the divorcing yes that's good or now and I'm going to go try something new and that's really where it starts getting into these unknowns and adapting to new things and new context and new environments that is that it is seen as it comes to but how do you I mean in terms of code we've always maintained like you know it's a simple to set of API so so before we switch to be just you know just to show you briefly so let's say I'm going to build a simple weather which is you know food I love I love food probably eating too much these days stuck at home but some context about a user may be the time of the day some taste features which I may or may not know about the user but I may have these attributes and context information bad part but items of food and then I can call this API and have actions right these are my list of actions I have attributes against these actions and then there is sort of a unique ID I need that unique ID because at some point when I call back a rank after I need to correlate them back and then so that's my list of actions and then I call you know it's as simple as calling a rank the rank a piercing has the actions here's the context is the event please go ahead and write beans and then once at some point later you come back and give it a reward this reward this delay of time of a reward is is important it doesn't have to be rigid it could be minutes long hours long days long as was some business logic could run for a very long time you know when you have seems like complex for example optimization techniques or supply chain and so on right so there's a lot of things you will not know immediately but at some delayed time let's actually switch over and show you I'm gonna do one thing I'm gonna kick off a script so we can get some traffic going and you can see how that happens when I switch to visual studio and I have it running here already just in the interest of time we are keen to actually gives get some more time later for so we can get into more questions right so so have a simple knock on J's web app actually I'm going to show you the my back first before I before we switch to the code right so it's a simple web app you can actually pull this down from our Docs and play with it I have some environment context information about me as a user so in this case you knows things like where am i running what OS I have if this is an app running you may know location information weather information and all these could be pertinent to what you need and I'm going to say create create one of these rank requests for me I get a meant ID like what I'm going to send that off and then it'll come back whether it's saying pasta in this case and then I can give it a reward saying do I like it or not I mean I've had pasta just last night so I'm gonna give it a lower reward and then somewhere I can send that back a reward back right so now that we've seen it a little bit if I go back here in the core you know you can see as simple as here's the features I have that define users taste and I may or may not get these from the users this may come also from things like location and understanding where I am I have some things like you know in our example things like time so I may choose I may prefer things differently on a Monday morning then perhaps on a Wednesday afternoon kind of a thing right and then if we just go down here is my list of actions that you that we saw earlier right so this attribute is associated with this nutrition levels and so on and these could define into the rules I'm going to do or not do but that's my list of actions that again a lot of these could be business decisions do you need to take in our case it's simple food we're looking at and then here I'm going to draw it and combine these together and send my rank request right just as we saw it simple is my actions here's the context I had thank you very much and then at some point later it's going to come back and say hey is what I think you should do and then I'm going to download or go in and give it a reward with that over and just show you how some of this would look like so I kicked off I kicked off the just to get some traffic to show you when you log into as you can actually see your how some of this is you can see how much data you're coming through or not so you know I I just I just started this as you can see see we started to get about 100 requests each of this would be that full sort of loop if you would write a rank and a report and the other interesting aspect to this is I can come back here and start seeing how good or bad is my my model doing and you remember we touched on that this learns by reinforcement learning and one aspect of that the one the one where we can adapt quicker through this ever changing world and how your apps cannot have quicker is if you think about most ml models I get you know as as models for models don't if it's data that starts shifting we have to go back and sort of clean up the data rerun the model train and deploy it in production and that whole cycle can take weeks and months in most enterprises for example that's quite normal but in our case we can actually have a new model update in minutes now in our simple example you see here we have updating it every 10 minutes and this really one of the advantages of that we have is how quickly you can adapt to this changing world as things are changing and reacting to that so the one thing we could try you ship this announced is yesterday is this notion of apprentice mode so and a reinforcement reinforcement learning model one of the facets it has is that I don't train it like a machine learning model I can only sort of deploy it in production and that's where it starts learning and what that means is any new model you deploy takes time to learn before it sort of gets to some reasonable baseline which for many of our customers is is absolutely ok but then equally there's a few for which that unknown before from from anytime what will is deployed to sort of it it gets trained up to some level some level some baseline that that Delta may not be acceptable because there's a lot of decisions going through that and that will dip down their outcomes what they often and that may not be acceptable so in that what we have this new thing we launched yesterday we call it a learning behavior called apprentice mode and just like how an apprentice learns from the master your new model is learning from your existing logic and behavior of your application the the beauty of this that we see is you do this without changing any code in your app and then you can see how the models gaining confidence helps you mitigate those cold starts and then as you're changing this is not necessarily just brand new things but as you're changing your use cases and actions and features you can you can you can also go understand how that's happening right so you sort of skip the learning curve and once it reaches a certain attainment of performance once you're comfortable with it then you can switch switch it out of what we call the behavior out of apprentice mode to sort of being current and online where it is actually making the business decisions for you as opposed to just sort of sitting in the passenger seat observing and the helps you mitigate those cold starts you don't have to change any line of code and then what the other thing we want to get to is how do you in gain trust when you're using whether it's a friend test mode or any of the cognitive services right we need to be able to empower you things that your apps when you're absolutely used to own the trust of a user now these are not necessarily only embedded in things like our design document hardrock implementation and so on but it's also ingrained in the whole process for example we have a whole team and a dedicated process looking at responsible AI there's a number of sessions on that if you've not had a chance to see a build this is this notion of harms and this is assessment of harms what you think about as a threat model for society so that's ingrained into this right so and as you're building these apps the guides you have for your customers and your users is things like you know how should you be very of data biases what are the common risks and mistakes when implementing these in your apps you know how could you mitigate some of that or not so it's it's it's you know the way we like to think is it's printed in or bolted on and intercept I'm gonna switch quickly to anomaly detector which was sort of the second set of ones we talked about another touched on you know the the ability or the what anomaly detector allows us to do is the ability to dig deeper from historical Kazu cause you allottee it it helps you see problems and behaviors that you haven't seen anybody use done time series no it's quite difficult and hard and then really what the beauty of this is obviously that it takes those unusual patterns what are starting to happen and then ultimately selects the best model in the context of a scenario so if you see two simple examples we have here on the left from example one as more of KPIs from a revenue business outcome perspective and the one on the right is more of sensory output let's say from from a machine on a factory floor now the how we reduce for both and the notion of that things are starting to grow off for both will be very very different and what anomaly detector rouse choose the right algorithm from the ensemble of algorithms on its own and pick the rice right one in the right scenario and and it's quite simple it's 3o API as you call they are hosted on Azure so if you prefer a pass architecture you know it's there if you want to run it on Prem or an edge scenario they support containers as do many other services we have so in closing the you know the forces I want to go back touch on something we open well the forces that we sing now in creating chaos completely upended everything we do right our habits our behaviors what we think is important and organizations that are able to adapt are the ones who are going to come over stronger so what could you do I mean go trial you see you know go if you have another chance to play with the cognitive services go play with them you can go see personalizes you can go see anomaly detector we'd also have we have a community of practice so if you're quite interested in how is decision AI helping where is it heading where and reinforcement learning being one aspect of that please do come and join our community we collectively are learning from this we would love to hear what you're thinking what your challenges are what could we do for you you know it's a new area right now and how we can collectively go on that together so with that I think we want to open it up for questions if you have a Jeff I don't know if there's any questions and your view I think first I am it is the no you Battin you now we should be okay sorry Amit and sorry folks so we go great questions from the audience here one of the ones that you might touch upon is people are asking if the models are continuously updating versus having discrete moments of train and use could you touch on that a little bit and how personalized er does RL in this sense oh that's a great question I'm gonna go back and show you so if you switch back to my machine I'm gonna go back and show you this oh so one of the things is as the as you're sending in your reward signals the models continuous learning and always updating learning from back it doesn't mean you that a new model is automatically deployed for for inference to pick up and that's where you control it so if you can see my settings right now so one of the configurations I think I have is how often should I update the model in production even though the model will be learning and training the whole all the time I may choose to you know it's not that every every instance of that I want to deploy it I may this depending on my business or thing I may choose how much time I want to go deployed one minute is not something I would recommend that is just for the demo that you see on there but it's up to your logic how you want to do that great other questions and I like these it people are think are thinking this through so one somebody noticed that the pasta was a recommended dish in the demo but you gave it a lower reward they're asking which part of the context will is associate with this lower reward can you talk a little bit about maybe how the actions and the context both play a role in the learning the model for the future yes absolutely so I mean third one would be learning from collective behavior it's not an individual specific behavior and in the notion of collective behavior we would know things like which press which context is weighing on which action stronger so for example in my case I give it a lower reward because I just had passed an animal bust again so idea I choose I chose to give it a lower award now in my example the context it doesn't know I had pasta for dinner last night for example but it may have other information that coming so they tie in the features you have time with the actions that that you're activating the words but it's not a one-to-one time so as my features are drifting and I give it a lower reward so it like you know in a business case that's where someone the model is going to go start exploring and then I know which which weights are carrying over or not I don't know if I explained that properly no I I think I think it came through and like because the person asks how did is it learn you had pass a lot last night maybe live this was a movie site you could have a feature in your context which says this user watched this movie yesterday or the last watched sort of feature and maybe a lot of people who see like you know I don't know Star Wars 3 then go on to see Star Wars 4 depending on what sequence of where does the reward come from like a human you know the button but you talk about business logic right so so even though is a simple number it's a scaler it really is something you have to decide in your business outcomes in your app what it is many cases we've seen it's not usually a one thing on you know thumbs up or thumbs down it's often a combination of various enterprise systems if it's an enterprise company and depending on your outcome you're after so if you go back to just picking on the example and heads if you're building something like Netflix or something like like a movie thing what you would get on the reward is like a news one actually if I just go back to that what we build was did I click on the news article suggested maybe that's a lower award it's a point to did I start interacting with and more scrolling did I read it all the way to the end or not so in my example I chose reading it all the way to the end as sort of good right so that got bit B highest award so you have to then put it in the context of what your business outcome is what are you after and then choosing based on that what what your logic and KPI should be to give it a reward the other thing I want to add on is in many business flows if you're thinking about this taking a decision it's not you would call this once a different stages he may call multiple times personalized for different decision than you're taking as you're walking through that so it's not one and done you may have multiple ones in how you construct for each one perm you little different hey Amit we have a final question here I think also points to how these systems are built to learn they're asking about what is the criteria or metrics to determine which anomaly algorithm is appropriate for each given data community some join there and ask if I didn't understand this properly if I understood it properly you're saying look if my deviations or if my anomaly or what possibly anomalies of a certain category how does it know which algorithm to pick so I think that's how properly or not but what it does is think we'll have time but if I go bad we won't have much time to show you things but we'll post there may be some links in the in the chat which is the right one to pick from basically yeah so thank you very much everybody please look at the screen here's other content to take a look at there's great sessions on reinforcement learning for gaming autonomous systems and so on and yeah please join our community of practice you saw that QR code that's a chat room where we build a future of these technologies together and thank you on it thank you 