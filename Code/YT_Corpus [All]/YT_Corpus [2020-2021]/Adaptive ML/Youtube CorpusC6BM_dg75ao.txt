 Hey there, I'm Rohan Kokkula and welcome to my youtube channel in this video i'll be demonstrating my work on recently participated machine learning challenge by HackerEarth you can get this link from the video description so this HackerEarth machine learning challenge was in association with pride circle the key responsibility of this challenge was to categorize quotes that are uploaded during pride month on the basis of its sentiments that are positive negative or random so the task is divided into two parts ocr and natural language processing so once we have extracted the text from images we need to perform sentiment analysis so based on polarity of text we'll classify them into positive negative or random so here's the app that i created using streamlit so as we now know task is divided into two parts that is ocr and sentiment analysis here's my approach to extract text from images i used pytesseract api the documentation of python is in the readme file of the github repository the link to my repository is in the description so you can either clone it or download zip and extract it I have deployed this app on heroku platform so there were 5042 participants in this challenge and I ranked 113th these are in detail steps to be followed for either localhost or for heroku deployment here's the pytesseract api link this api is not as much accurate as the raw convolution neural networks algorithm but it's good for faster results so for the second part i have used textblob for sentiment analysis here's the link so this textblob is a python package for processing textual data it provides a simple api for dividing into common nlp tasks such as part of speech sentiment analysis and classification so this api has an object called polarity which returns a float value depending on the sentiment so these are some rules we can classify sentiments based on polarity let's upload an image from the dataset provided so without any image processing this gives no results so the page segmentation mode from the sidebar is just a mode to determine whether you want to read text line wise or paragraph wise so if we'll just tweak some of the features such as thresholding which is ranging from 0 to 255 we can find some text visible there is still some problem for extracting text due to the blurriness and contrast we can solve this problem by converting image first into grayscale and then selecting binary inverse so by doing this we have successfully extracted text from this image so as we know this code is positive and it's predicted as positive so as i said page segmentation mode is used to read the text line wise or paragraph wise let's try with another example let's select an image with a gradient rainbow background so when adaptive mean thresholding is applied it is automatically converted into grayscale by changing page segmentation mode we can get somewhat text but not perfect let's try with other thresholding methods so we have extracted text with ToZero thresholding at grayscale with threshold as 231 let's try this without image thresholding so this extracted partial text and give sentiment as negative if you want to know more about thresholding follow this link so this is the original image and then it's converted to binary then binary inverse then truncate Tozero and Tozero inverse so if you scroll down there is adaptive thresholding of mean and gaussian that's it try the app and let me know in the comment section 