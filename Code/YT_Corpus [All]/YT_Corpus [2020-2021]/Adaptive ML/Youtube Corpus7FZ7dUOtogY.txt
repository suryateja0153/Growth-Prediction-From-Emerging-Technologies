 In this video we will demonstrate how to run Vitis libraries on AWS using binder. BinderHub enables end users to easily specify the desired computing environment from a Git repo. InAccel makes easier the multi-tenant execution of Python libraries on multiple FPGAs. A notebook server is deployed on an AWS f1 instance... and the users are able to run the accelerated applications inside common Jupyter notebooks. At first we show an example of running a Xilinx Vitis accelerator for Machine Vision. Multiple instances of the notebooks may run in parallel. This example application reads 2 images and performs a stereoscopic image processing. The FPGA instances are used to speedup the computations. InAccel makes much easier the deployment of Vitis libraries on any FPGA cluster... since it discovers the available resources and automatically deploys the workload to the FPGAs. The same can be applied in more complex applications with multiple threads. In this use-case we will emulate video preocessing on streaming data. The first thread reads input frames and submits the acceleration tasks, while the second thread displays the output frames. InAccel Coral allows the optimum resource allocation... allowing software developers to invoke FPGA accelerated functions in the same way as software ones. Multiple notebook apps may run in parallel and InAccel manager takes care of the utilization of the available FPGAs. The same can be applied also in financial applications. In this last example, we show how you can deploy a Vitis Quanittative Finance app on AWS using BinderHub. We show how easy it is to speedup Black&Scholes using FPGAs from a simple notebook stored in a GitHub repo. Using InAccel it is easier than ever to treat FPGAs like any other computing resource. 