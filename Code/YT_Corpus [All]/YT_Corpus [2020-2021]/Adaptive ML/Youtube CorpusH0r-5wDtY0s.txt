 welcome everyone in this session we'd like to cover our experiences on transforming open source into live service with dr. Singh mo and I are both working at common computer where we are building a solution for making open source more useful if you have any questions during this session feel free to contact us at emails mentioned here [Music] ok let's get started in this session you will learn status of tarkir utilization in open source communities common issues when using occur in their open source projects bastok practices of decreasing open source projects lastly you will learn how to deploy a Live service from open source projects and why it is useful let's take a quick look at darker adoption status for open source projects according to our research 7% of 200k popular projects content are correlated files the way we got this number was first we crawled github projects over 50 stars which was 210 k then we counted github projects which includes bear named Tucker file or tapper compose which was 15k among the projects with docker file we categorize them into three types first web types which export support and run servers second binary job types which can be run to complete using the Quran third ml types whose repositories are tagged with ml keywords later we will show you different learnings from each type when touring and production izing now let's move on to the next topic why is it always hard to run software made by other developers let's identify problems with on example suppose I want to make on API that can generate random images since I don't want to build it from scratch as always I start with googly here we can see a few promising results oblivion sans random image API at the first wizard Dobies random image API and so on when I clicked the part result it was a returning PHP since I have very little experience in writing PHP I want to try another one the next result is written in JavaScript which is my favorite line gauge and even has a demo link available however when you click the demo link it is broken this is a typical case for open source projects because the author may not be able to maintain the service as long as the code is shared the third result looks promising written in nodejs which I am familiar with it kindly explains how to build an wrong code in readme file as well but when I actually tried npm build it fails badly so one does not simply make your code work in summary every developer wants to run code right away but there are several horrors that need to be overcome first if you are not familiar with the language you may want to skip second if topic build pills you need to do something to fix it third even after a successful build it may not run for the various reasons the runtime environment is simply not the same as the one who shared the code lastly if I want to bring up service on the cloud I need to start worrying about where to deploy and how I can afford the server cost the clerk can solve many of the problems mentioned above docker is portable so anyone who is attacker can reproduce the shares result without worrying about on the line runtime environment also performance is reasonably good the core also gives you ability you can deploy an application many times a day and productionize right away without changing mods from the local environment darker isolates resources quite well so it's fine for you to run separate our containers on the same cloud or machine lastly micro service architecture can be implemented intuitively by container rising and connecting many small images remember three types web pioneer job machine learning will categorize it earlier let's go over each example the first example we have is easy appointments on the example for web server the second example is shell chat which is a shell script static analysis tool the last example is detector on to Facebook's object detection and segmentation motion learning library thanks minion in this demonstration I'm going to show a side-by-side comparison about how easy it is to execute necessary comments when the project is talk wised first I will show you how to build an Londo is the appointment project without using attack the right side of the video shows the entire command list needed for this project is your appointment projects requires a patch pH and Maya scale which is called a p.m. step the process of installing a p.m. was very long and difficult I had it enter more than 20 comments less on error occurred in then and I failed to learn is your apartment on the other hand the process of learning the is the apartment project using darker went release mmus the demo video is five minutes long but most of the time was spent waiting for installation of the darker and darker compose the only change I made was the app URL environment variable then I landed the compulsive command and it just worked you can see his appointment is launched successfully on the way [Music] the second example is about the colliding or binary job type project here you can see this just check project it's implemented in Haskell to compile the Haskell project you need to enter couple which is package manager dedicate to Haskell this kind of um family OPEC city manager is often a hotel for utilizing open source project even if I don't know how to use cover package manager I was able to get the same result using duct the only thing I had to do was using the darker - three option to mount the directory will the shell script is located to be tested the last example is about doc wising or machine learning type project as you expected motion learning project will require complex libraries and hardware settings with GPU building and learning machine learning project using docker is easier because you don't have to think too much about hardware dependency taco or supports special hardware dependent development environments such as nvidia GPU support [Music] last year we hosted the open resource hackathon in Seoul 2000 1933 open source developers were gathered in this event and introduced their projects with each other after talk raising and production izing the solution according to the preliminary survey 15% of the participants had no experience in using talker he took around 1 to 2 hours to go through the docker tutorial which is a reasonable time for experienced developers to learn new concepts with our help most to Hecate some park participants including chakra newbies who had never used to talk her before were able to talk wise open source projects and deploy open source projects as a Live service and share them with each other in less than 5 hours it was very encouraging to see how easily open source projects can become live service using docker we found a few common issues while helping developers stock-raising first some developers had an unknown fear to learn on new thing even if it is simple enough to learn second installing talker on their laptop took a significant amount of time although it didn't cause much trouble third pulling darker images from that / hub took a bit of time especially for large images which is quite common for machine learning projects we also experienced the trouble from broken images in Tucker hub and developers were confused when the app cannot have anything in a container but required external fire dependencies such as loading external email models we wanted to make process easier and developed a develop the deployment solution for an open-source project I nights I night simplifies the journey from source code to live service it wraps the process of cloning dark rising and deploying in into one button let's take a look at a quick intro video [Music] [Music] [Music] just like earlier here we prepared three demos for I nights first one is you got it a very interesting motion learning project that changes your selfie to enemy style stanza of Python and LP open-source project lastly coffee the 19-4 demo let's watch the overview of you got it do you like animation the animation industry is always dominated by two countries but imagine what would Disney characters look like if they were drawn like Japanese anime characters and what would dismiss real live action characters look like a third trend into anime deities well now we can find out if using ionized and the open sir project and - which lets you turn people into anime characters let's get started [Music] someone will explain how to ionize you got it now I will show you how to ionize the you got it open source project first copy the you got ticket of URL and paste into the ionized in perform press the just start button you will need go through till low in process this is the page to enter additional information for the coinage fill the form and press the deploy but it takes about 5 to 10 minutes to finish deployment after deployment is successful you will be able to access the URL if I open this URL I can see a simple interface to translate the cell P to enemy if I could my picture here you can see my profile picture has changed to enemy's tag let's take a deeper look at what's happening when the deploy button is pressed when the user enters on open source project URL and click the deploy button first the i9 API server will check whether the repository has a proper Tucker file then API server requests build docker image action to the build server before deployment docker images checked whether it has GPS signal with the tapper inspect command you gotta Tucker image has Nvidia flag so API server wickety to be deployed to GPU cluster the kubernetes master of the GPU cluster generates a part in the GPU node frontally GPU node has poor GPUs when all GPUs are full of path and can no longer be deployed auto scaling settings are set to add on uShip you note the path that you are deploying towards the pre train the model that you created in the persistence volume so you don't need to create a pre trend border each time when the deployment is complete and points are credits so that you can easily access the paths you can use you got a service through the endpoint shown through the demo the second exam is touch temple and happy project with pre-trained the newer models supporting six to plus languages the deployment process is not so different from the previous or you gotta case check to abuse tucker image with the tucker inspect command and in this case there's no nvidia flag the stanza docker image is deployed in the non GPU cluster lastly let me introduce the co bead 19 presents token 19 is now spreading around the world today in China the reported number of cases rose to nearly 1000 total infecting people in the country in Korea we have over seven thousand people infected with : 19 so now the whole world was starting to face this crisis situation with this virus stat meters ask the question what can we do to solve this problem as software developers we decided to use open source projects to try and develop the Meccan health and mitigate against this crisis [Music] let's take a look at copied 19 dashboard project interestingly there are three different open-source projects involved in this project first Johns Hopkins data is regularly collected and pushed to get top and second the backend project deployed by an open-source developed layer provides a restful api lastly front-end is deployed by another open source developer so pull of provides dashboard as you can see from the copied 90 examples it is totally possible to connect different open source projects once it can be successfully deployed using docker we are rising and ionizing 130 open source project so far and want to invite more open source projects once we have enough solutions connected with each other we can call this s on open micro service architecture and expects community collaboration increases dramatically in conclusion we recommend open-source developers to depress their projects and make them more useful top core file can be a friendly guide for those who do not have much knowledge in runtime environments you are using we also want to promote developers to have a run on a nice button in their repository so that other developers can easily integrate the service with yours to build a greater collaborative network [Music] 