 Hi. Welcome to our demo. I am Don Wake. I am a Technical Marketing Engineer with Hewlett Packard Enterprise, and today we are going to talk about Kubernetes and how you can utilize that, and also manage a multi-cloud environment. With me today is Terry Chiang, Data Scientist and also Sandeep Deshmukh, Platform Product Manager. He is going to talk to us about Kubernetes and our KubeDirector application. All right, so let's jump right in here. Let's set the stage. What are we talking about with regard to containers and Kubernetes? With containers, it's really the key to the hybrid cloud. And we are going to be talking about that concept throughout this presentation that container infrastructure is really fueling the software development of the next decade. And put that in the context of on-premises and also a public cloud. You can see, from the nineties, we have all experienced the client server, everything over the network, lots of high bandwidth communications within virtualized servers, to take more advantage of the hardware we were using. The cloud started to emerge in the 2010s. So you had a lot of public cloud vendors coming out and making it easier to go in and sort of rent to own or just rent your own hardware over the cloud. But then we started to see just a growth in management complexity. So virtual machines are fairly heavy in terms of a management. You may have one physical server, and now you virtualized it. Hundreds of servers that you still have to manage as if they are real servers. So in the 2015 to now timeframe, containers are a way, a much lighter weight way, to focus on the aplication itself as a virtual entity and reuse a lot of the operating system pieces. You could have multi-tenant, multiple different applications, containerized in the same physical resource or virtual resource. You can see that has grown substantially, and by 2021 1.8 billion different enterprises will be using containers in some way and by 2020, just right around the corner, 75% of enterprises are going to be using and deploying containers and just over half of those enterprises will still be using On-Prem data centers. So there is some workloads that they still want to have some hybrid approach, something On-Prem and in the cloud. So talking about Kubernetes, it's really the de-facto standard. Open source is a very powerful way to orchestrate your containers. But how about also wrapping those up with that management in a hybrid or multi-cloud environment? And when you have many, many different applications and different requirements, how do you leverage Kubernetes in and make it as simple as possible to install, manage and scale those applications within that multi-cloud environment? And then there is other complex new types of data-hungry workloads, such as machine-learning, requiring model building, training and deployment. And how do you work all that in as well, on top of all this infrastructure? So Terry, why don't you walk us through how HPE is trying to utilize the Kubernetes open source and help people manage their containers? Sure, Don. So this is a very high level overview of the HPE Ezmeral Container Platform. As you can see, this satisfies a lot of different personas, different team members. Your IT can actually pull together resources from On-Prem, bare metal or even public cloud, or even VMs, and pull them into a single pane of glass, as you see here. They can then create different clusters with different applications such as Spark or Kafka. And they could hand them off to different users, such as the data engineers or data scientists or even app developers and DevOps engineers. And all of this is wrapped in enterprise-grade security. As of late, we were just certified as a gold member of the CNCF, certified Kubernetes. So we have that, which pretty much shows that HPE is pretty active in providing open source Kubernetes solutions and the entire platform is actually sitting on top of the HPE Ezmeral Data Fabric, which was formerly known as MapR. Okay, fantastic. So there is really a lot to dig into about how you can utilize Kubernetes and in this open source environment. So I am going to go ahead and jump into a demo environment we have. In fact, this is one that you can check out for yourself. I am going to show you a link to a demo portal. So you can go in here and experience the Kubernetes interface that we have created in our Container Platform yourself. So you also have access to a video that you can play to get a little more information about that. But let's dive into creating a Kubernetes cluster in a multi-cloud environment. So we have in this demo the possibility to jump into an interactive demo. So, Terry, I guess this would now be the container platform. So in order to create my cluster, I guess the first thing I have to do is log in. So, we are going to log into the platform as our site administrator role, and here you will see the global settings and today we are going to focus mainly on the Kubernetes section. We do have a legacy epic section, but here we are going to see our creation of a Kubernetes cluster within the Container Platform. So it looks like… just to interrupt you for a second, that I have seen a few other clusters as well. So it looks like it's not just one cluster you are managing. You can manage multiple clusters within this environment. Correct, so you can create your own cluster here and you could specify the name, whatever the name you want to give it to your Cluster. And most importantly, you can specify what compute resources you want to allocate for either the master or worker. Here, we only have VMs, but you could add cloud hosts, bare metal hosts. And you can mix and match in a hybrid deployment of your Kubernetes cluster. And once you are ready, you click Submit and you go into the next section where you can then select the Kubernetes version that you want, as well as include some storage as well. So that's an important aspect as well as we don't only unfortunately use one version of Kubernetes. A lot of organizations may need to use multiple versions, depending on dependencies they may have on certain legacy workloads. So that's good to see that you can change versions. Okay, so I hit Next. Now it looks like this is a summary of my Kubernetes cluster. Yep. So we are at the final stage, and then you could click Submit, and within a few minutes, your Kubernetes cluster will be up and running. All right, so that's fantastic. So we have got a new Kubernetes cluster. We are going to go ahead and return home. So now, tenants. So, Sandeep, I am going to bring you in here. I am going to the interactive demo on tenants. So what is… Can you explain to me what it is I am doing here as a tenant, within that Kubernetes cluster that I just created? Yeah, sure. So tenants is synonymous in Kubernetes to the namespaces and a tenant is a way of isolating a project or a team that needs to work on a certain set of data and core and all that, and needs to be separated out from the other tenants of projects or other things. And, in Kubernetes, that's synonymous to a namespace in which the user projects does all its work. Okay, Yeah. So I think you're gonna give… and at the bottom of the screen, you will see some of the quotas and stuff like that. And that's one way that admins would restrict a tenant from taking over an entire cluster. So a Kubernetes cluster would have tens or hundreds of tenants, but we don't want one or two users, or one or two tenants, to take over the entire resources of the Kubernetes cluster. This is one way of allocating the right quotas based on priorities in the work that users have to do. Okay, so we are leveraging really a Kubernetes auto-scaling approach. I guess the kubelet would then enforce those limits that we put on there. Okay, So we created a tenant, we have created a cluster, we have divided up the resources, we have sets quotas, and then we will go ahead and talk about creating and deploying Kubernetes apps. So you now have this potentially multi-cloud hybrid cloud Kubernetes cluster with a tenant that we have created, we are going to log back in and now going to that tenant, so now, let's say we have hired some developers or a new team and they are going to use our new tenant, and now we are going to give them applications. So this is where another product that's also open source comes in. So why don't you walk me through this, Sandeep? What am I doing here in the tenant? Looks like I have got a dashboard of all of the the multi-cloud resources I am using for this particular tenant. And then I can connect actually here to the terminal. So I am in now for the tenant? Yeah, this is a very important feature from the Container Platform, which is called a Web Terminal, and the Web Terminal is essentially a pod that's running in Kubernetes. And for a user, it's very convenient because it sets all the context. So you are already within your namespace and all of the Kubernetes context is set up ahead of time when you open this Web Terminal. and now you can… here you can do your kubectl commands or you can do Helm or anything else to develop and deploy apps. Okay, so it looks like I am doing a kubectl apply, I have a JSON file here and that simply imported it into my existing Kubernetes cluster, so now I can go into applications, I guess. So I run standard JSONs, so there is nothing [inaudible] here. This is something … maybe I should spend just a minute on KubeDirector. So this application that you are trying to do is being deployed as a KubeDirector app and KubeDirector as part of Ezmeral Container Platform is essentially a custom controller of Kubernetes, which provides an easy way to create, register and deploy stateful applications, as a web service, and when altering these apps using KubeDirector, any tenant user, here you are doing this as admin, but any tenant user could create a JSON file with the image and other metadata information, and then just apply that YAML to deploy that application, which I think you are going to show next. Okay, so that's great. So we are using standard processes within our environment here, where we have defined an application that we are going to launch. Now we are in our KubeDirector running app, and we are going to launch that. It looks like I now have a YAML file to further configure the launch of this app that we have imported with KubeDirector so I can adjust the memory, looks like, set limits. So I am saying the memory can only do five. CPU, I can say, well,  this particular one needs 4 in CPU limits. Okay, so I guess the last step here is just submit it. So, what we see down here is just a list of all of the running applications that are in our KubeDirector Kubernetes cluster. Okay. And the convenience of this is now that this is deployed running, there is an as-a-service endpoint that users can use to connect to this application. Okay, so one stop shop, really? Okay, So I exit full screen here on our demo. And so coming back to really just reiterate what we just talked about. So the Container Platform is a way that you can use Kubernetes and create clusters, and as Terry showed when we were allocating the resources, we were choosing virtual machines, we could choose bare metal within our On-Prem data center, we could be using your favorite public cloud. So it's truly a multi-cloud hybrid  environment. Kubernetes provides an excellent platform that we can then overlay these other tools on using the HPE's Ezmeral Container Platform, for example, to create this multi-tenant management, as we showed with creating the tenants and carving down the resources for a given group, synonymous with the namespace in Kubernetes. And finally we talked about KubeDirector, an open source project that allows you to use Kubernetes, K8S for short, to enable these stateful and scale-out application clusters, very transparently and simply so you could see we use standard kubectl  commands to make that happen. So I hope that this information was interesting to you and helpful. As always, there is more that you can find out. Just go to our hpe.com. Ezmeral platform, the hpe.com Container Platform and learn more about KubeDirector, download it and use it yourself in your own Kubernetes environment. We give you the link here to the GitHub account. So fully open source. The Container Platform email and also the demo I walked you through, you can just use yourself as well at hpedemoportal.ext.hpe.com on the web. You can also follow us on Twitter @HPE_Ezmeral or @HPE_AI. That will get you lots of great feeds of information relevant to Kubernetes and container management. So thank you again for your time. We appreciate it. And I hope you learned something and come back for more. Thank you. Thank you. 