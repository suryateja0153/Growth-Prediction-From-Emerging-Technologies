 [Music] hello it's Emily here with the flutter team so you decide to include an animation in your footer app how exciting the thing is there are a lot of different animation we did so figuring out which one is most appropriate can feel a little overwhelming fortunately this video is here to help I'll walk through a series of questions you can ask yourself about the animation you have in mind to help you determine how you should create it the other thing to remember is the animation which is provided in the core flutter library are pretty low level this means if you have a complex animation I recommend you check out some of the animation packages available on pub that provide higher level interfaces broadly speaking there are two main types of animations that you might want to include in your flutter app drawing based animations and code based animations code based animations are widget focused and are rooted in standard layout and style primitives like rows columns colors or textiles that's not to say they're boring or simple but if their heart they intend to enhance a particular existing widgets appearance or transition rather than acting as a standalone widget in their own right drawing based animations in contrast look like someone drew them they're often standalone sprites like game characters or involve transformations that would be challenging to express purely in code so the first question ask yourself is is my animation more like a drawing or does it look more like something you can build out of flutter widget primitives if your animations is more like a drawing or if you're working with a design team who will provide vector or raster image assets then I recommend use the third-party tools such as rive or Lottie to build your animation graphically and then export it to flutter there are several packages that can help you include these assets in your footer app otherwise if your animations involve mutating widgets such as changing colors shapes or positions stay tuned and will write some flutter code oh hey so you want to write some code flutter code based animations come in two flavors implicit animations and explicit animations the next step is figuring out which you need implicit animations rely on you simply setting a new value for some widget property and thunder will take care of animating from the current value to the new value this widgets are really easy to use and amazingly powerful all the animations you see right now are done with implicitly animated widgets and plus the animations are a good place to start we're looking to animate something explicit animations require an animation controller they're called explicit because they only start animating when explicitly asked to you can use explicit animations to do everything you can with implicit animations plus a little more the annoying thing is you have to manage the life cycle of that animation controller since it's not a widget which means putting it inside of a stateful widget for that reason your code is generally simpler if you can get away with using an implicit widget there are three questions you can ask yourself to determine which type of widget you need doesn't animation repeat forever and when I say forever I mean while on a certain screen or as long as a certain condition is true such as music playing the second question to ask yourself is whether the values in your animation are discontinuous example of what I mean by discontinuous is this growing circle animation the circle repeatedly grows small large small large it never grows small large and then shrinks back down again in this case the circle size is discontinuous the last question to ask yourself is whether multiple widgets are animating in a coordinated fashion together if you answered yes to any of those three questions you'll need an explicit widget otherwise you can use an implicit widget once you've decided whether you need an implicit or explicit widget the last question will lead you to finding the specific widget you need ask yourself is there a built in widget for my needs if you're looking for a built in implicit animation widget look for widgets named animated foo where foo is the property you want to animate also check out animated container as it's extremely powerful and versatile as a widget for many different implicit animations but if you can't find the built in implicit animation you need you can use tween animation builder to create a custom implicit animation conversely if you're looking for a built-in explicit widget they're usually called food transition where foo is the property you're animating if you can't find the built in explicit animation you want there's one last question you need to ask yourself do I want my animation to be a standalone widget or part of another surrounding widget the answer to this one is more of a matter of taste if you want a standalone custom explicit animation you should extend animated widget otherwise you can use animated builder there's one last thing to consider if you're seeing performance problems and that is animating with custom pager you can use them much like animated widget but custom painter paints directly to the canvas without the standard widget build paradigm when used well you can create some neat extremely custom effects or save on performance but when misused your animation could cause even more performance issues so take care and much like manual memory management make sure you know what you're doing before sprinkling shared pointers everywhere in the summary there are series of high-level questions you can ask yourself to create your animation the sequence of questions creates a decision tree for determining which widget or package is right for your needs if you collapse those endpoints they fall into a line approximately indicating difficulty from left to right that's all you need to know go create great flutter animations through a third-party framework packages explicitly or implicitly thanks for watching [Music] 