 [MUSIC PLAYING] Hello. My name is Stephanie Lewellen, and I'm product manager for SAP HANA. Welcome to DAT 102, safeguarding data and accessibility for SAP HANA and SAP HANA Cloud. So I'd like to start out the session today with an overview of SAP HANA and SAP HANA Cloud, and the common security approach for both of those products. And then we'll take a look at the core functionality around securing data and applications. And here I'll touch on the newest security features we've delivered in the last year. And then we'll go into our data privacy option, which contains data anonymization and data masking. And here I'll show a brief demo of data anonymization. And as we near the end of the agenda, I'll show you some information about secure setup, and this includes our tooling and integration. And then we'll wrap up with secure software. And this has to do with our secure software development process that we follow at SAP. So now I'd like to get into the security approach. But before I talk about security in more detail, I'd like to tell you a few brief things about SAP HANA. So, SAP HANA is designed to help businesses reliably run core business processes and create real time data driven applications, both in the cloud and on-premise. At its core, HANA is an SQL database with all the capabilities required for enterprise applications, such as high availability and disaster recovery. It also supports a wide range of use cases, and can combine transactional processing with analytical workloads on one copy of data. So there's no need for data duplication, and it's in memory first. But HANA is also much more than just a database. It's a business data platform that allows developers to create new applications in a wide variety of programming languages. It has advanced analytics processing such as predictive, machine learning, and support for graph and spatial data, and it comes with federation and data integration capabilities to make a wide variety of data sources available. So, we have different deployment options for SAP HANA. You have your on-premise deployment options, where you can use HANA as an appliance, and you also have the choice to leverage existing or preferred components as part of our tailored datacenter integration program. For cloud deployment options, you can either bring your own license and deploy HANA on any of our infrastructure as a service partners, or you can also go for a managed cloud database. And here we have two choices. You can either use SAP HANA Enterprise Cloud as a private hosted managed cloud, or you can use SAP HANA Cloud, which is accessible over SAP Cloud Platform. And this is our newest offering which was released in March of this year. And so today, I'll be talking about HANA security in the context of on-premise, and also in the context of HANA Cloud. And I would really encourage you, if you're interested in HANA Cloud, to take a look at the session I'm pointing to here, DAT 161. This is a dedicated session for SAP HANA Cloud. So, HANA has a comprehensive security approach. And this is important, because providing software that customers can trust is one of the cornerstones of the software development process at SAP. And as I just mentioned, HANA can be used in a variety of different use cases. And it has a security framework to meet security and compliance requirements for these different use cases. So, the security framework rests on a foundation of three pillars. And the first pillar is secure data and applications. And this encompasses a comprehensive security model. So, unified access to all functionality, including federated data sources like Hadoop Data Lakes. It also includes seamless integration with business applications to ensure consistent end to end security across the whole stack. And our middle pillar is secure setup. So, this is simplified security configuration and streamlined operations so customers can stay on top of costs. And our third pillar is secure software. So we want to ensure that SAP HANA is resilient against attacks. And this provides the foundation for you to innovate with confidence. So you can confidently use innovative and advanced security features like real time data anonymization which removes the hurdles for innovation, and it allows you to use new data centric use cases. So you might be asking yourself, what is the difference between SAP HANA on-premise and SAP HANA in the cloud? And from an operations perspective, you can see that when you're running SAP HANA on-premise, you are in control of the entire stack, you have the responsibility of operating the entire stack. So all the way from hardware, purchasing, up to the operating system, we have to configure it and update it. And then the full database administration responsibilities for HANA, installing the software, updating and patching it, backup et cetera. In HANA Cloud, we take over some of this burden for you. So, we manage the hardware, we manage the operating system, and we also take over part of the administration responsibilities for HANA. And so a typical operations model for SAP HANA Cloud includes shared responsibilities between you the customer and SAP. And if you're familiar with our tenancy model on-premise, also called MDC, where we have a system database which controls the landscape configuration, and we have individual tenant databases which store the customer data. We're using this same model for SAP HANA Cloud. So, SAP is operating the system database, and the customer is responsible for their tenant essentially. And so in this context, if you are using security and SAP HANA Cloud, then you have the full use of the security features like you would in the tenant situation. And SAP is then responsible for provisioning the system and doing the initial security configuration. SAP is responsible for the secured default setup, so configuring encryption at rest and in motion, infrastructure security logging, and disabling the capabilities which you wouldn't use in the cloud. And then we're taking over the secure operations, so access control for our SAP operators, security monitoring and logging, and then automatic backups. So, now I'd like to get into the topic of secure data and applications. And here we're going to go into a little bit more detail to the functions and functionality for HANA security. So, I'd like to start here with a view of the SAP HANA holistic security framework. This encompasses all aspects of the HANA security portfolio, but I'm starting out here with user management and authentication and authorization. So, in terms of user management authentication, we have GRC and IDM integration. We also support a broad range of single sign on capabilities. So, you can integrate with a preferred method in your landscape -- for HANA on-premise -- we support a number of different options. For HANA Cloud, currently, we only support SAML and JWT, but we're looking at increasing this offering in the future. We do update-- we do offer updates for SAP HANA Cloud quarterly. So, this is something that we're considering going into one of the quarterly releases next year. Also on-premise, you can make use of LDAP integration, both from the authorization as well as from the authentication perspective. And again, this isn't something we support yet for HANA Cloud, but it's something that we're considering for the future. And for both offerings, you can make use of password policies for user groups. So, you can configure different password policies, configure a restricted password list, we have fine granular password control. And in terms of authorization, we have a role management framework. We offer privileges for all user types, we offer a fine granular access control at row level with our analytic privileges. And we support integrated application authorizations. So, now I'd like to look at one of the new features that we've offered in the last year. This is a configuration wizard for user groups in the SAP HANA cockpit. This is available for HANA on-premise and HANA Cloud. So instead of manually configuring user groups, now you can use a wizard to apply SAP recommended configuration settings. User groups can be used to manage related users together, and to assign security policies like password policies. But user groups don't control data access. Data access control is enforced with roles and privileges, and not user groups. The HANA cockpit shows you a notification if the user group configuration was not completed using the base setup wizard. And it provides the option to open the wizards to complete the configuration. And this allows you an easier and quicker way to get started with user groups. So, to change the configuration, you need the system privilege USER ADMIN, and then the wizard allows you to create three different types of user groups. One for administrator users, one for technical users, and one for normal users. And you can also create password policies for each of these user groups. So, when you use a wizard, you need to make sure and check the recommended values of these settings, and then maybe adapt it for your particular use case because the base setup doesn't guarantee that the configuration is optimized for your particular system. And if you don't want to use the wizard, that's OK; you have the option to disable the notification and then you won't see that information anymore. So, if we come back to our holistic security framework again, now you can see we've added encryption to the picture. Encryption provides an additional safety net against unauthorized access. And in HANA, we support a broad range of encryption capabilities. So, we can encrypt data at rest or in motion. We have TLS/SSL encryption for communication encryption, and we support backup encryption on-premise, either natively in HANA, but you can also use third party backup tools. And we do have key management capabilities built directly into the HANA cockpit, so that simplifies the process for you there. These three that I just mentioned are in blue, and that's just signify the fact that if you're using SAP on-premise, you're the one managing these encryption capabilities. But if you're using SAP HANA Cloud, these are taken over as part of the operations performed by SAP. All of these encryption methods are supported by a FIPS-certified cryptographic library. And if you're using on-premise HANA, then you have the option for application encryption. We also offer column level encryption. So with this feature you can achieve in-memory encryption, so that certain columns are permanently encrypted in the database and they'll never be in plain text. And that's something, again, we don't yet offer in the cloud. It's something we're considering. So, what's new in the area of encryption? We have an on on-premise feature here, it's something new that we delivered with SAP SPS 05, and it's customer controlled encryption keys for HANA using the SAP data custodian key management service. So with SPS 05, the HANA local secure store, which is also called LSS for short, can be leveraged to connect with SAP data custodian key management service. And LSS is a separate lightweight utility for storing and securely managing the SAP HANA encryption root keys, and it's part of the SAP HANA installation. And this allows a stronger separation between system administration and encryption key management, because it runs under a separate operating system user. So SAP data custodian key management service is a cloud product. It's available as a software as a service monthly, or annual subscription, and it supports customer controlled keys, and uses a FIPS 140-2 Level 3 compliant key vault. And it's possible to import a key from your already used HSM into that data custodian KMS so that you can bring your own key. But you also have the option to generate a key in the data custodian product. So when you use data custodian KMS, you can even revoke the keys stored in data custodian if you want to. So that then the HANA database doesn't have access to keys anymore, because they're needed to decrypt the data and lock volumes. So without the keys, those cannot be accessed. They can't be read anymore. And data custodian KMS is the first supported key server right now for HANA, but we're also considering other third party key servers and hardware security modules to support in the future. So this is an area actually where we would really appreciate your feedback. If you require integration with a particular KMS or HSM, please reach out to me or my colleague Melanie Handreck. Our contact information is in the last slide at the end of this presentation. We would really love to hear from you. OK. So now if we come back to our holistic security framework. Again, we've added that section for auditing. Audit logging records critical system events. For example, changes to roles and users, or the database configuration. It also can record access to sensitive data, and read access to objects, such as tables or views, as well as the execution of procedures. For situations where a highly privileged user needs temporary access to a critical system, you can enable firefighter logging, and this tracks all the actions of a specific user. And then the recorded events can be written either into a Linux syslog or into a secure database table in SAP HANA or both. The Linux syslog enables easy integration into existing monitoring and auditing infrastructures, and it can be configured to write the audit trail to remote servers. And this enables a physical segregation of database administration and audit log analysis. Or you can also use the secure database table option as the target for the audit trail, and this makes it possible to query and analyze auditing information quickly, and it also provides a secure and tamper proof storage location. So, in the area of new features for auditing, similar to the user group wizards, we've-- for HANA on-premise and HANA Cloud, you can now use configuration wizard for audit policies. And it's very similar. So, a notification is displayed in the cockpit if the audit policy configuration hasn't been completed in the base setup wizard, and it allows you to open the wizard to do the configuration. So, to use the wizard and to change the audit configuration, you need the system privilege AUDIT ADMIN, and then you can configure the following settings for auditing: the auditing status, audit trail targets, and the recommended audit policies. And you can choose which of the recommended audit policies will be created for your system. Similar to the user group wizard, notifications about the base setup are no longer displayed when the wizard has been completed, or just like the other wizard, you can also disable these notifications if you don't want to use them at all. And again, the settings are a base set of settings, but you need to check if that's optimized for your particular system. So there's no guarantee that they're the perfect settings for you, but they're at least a place to start. So, now I would like to go into the topic of anonymization and masking. So both anonymization and masking are available for both HANA on-premise and HANA Cloud. And sometimes people use masking and a anonymization interchangeably, but they're actually two very different features that have different use cases. So masking can help protect the data at row level. For example, maybe you just want to show the last few digits of the credit card number versus exposing the entire credit card number, or maybe you have a power DBA and you want to mask a whole bunch of different data so they don't have access to it. But masking, at least when you look at data and aggregate and use analytics, can strip a lot of the value from the data. And it also doesn't provide a lot of guarantees in terms of protecting the data when you have an analytics use case. With anonymization, you can actually do a lot more analytics on the data because you can preserve the value of the data much better than if you're just doing masking. And you can also provide more guarantees in terms of protections on personal information when you're doing analytics on data and aggregate. So, if we look at dynamic data masking, and I've also pointed here to DAT 162, this is a dedicated session for masking and anonymization. What you'll see in this example, though, is a table with credit card numbers, names, and balance information. So, you can create custom mask expressions to display or hide a certain number of characters in the credit card number. Maybe you want your call center employee to still be able to reference a credit card number, but not see the whole thing. So, you would be able to achieve that with masking. Alternatively, you could mask the whole column. And if you look at the balance on the right, then the whole thing is masked. So it's very customizable. And there's a lot of supporting documentation. The dynamic data masking capabilities are also integrated into our authentication framework. So whether or not someone can see masked versus unmasked data is just dependent on whether or not they've been assigned the unmasked privilege. So if someone has that privilege, then they can see the plaintext data. But if they don't have that privilege, then they can't. And they'll only see the masked values. So this is also dynamically applied during access, and the original data stays unchanged. That's also very important to note. So, now if we jump into the topic of data anonymization, there are two methods that we currently support. The first one is k-anonymity. And the concept behind this one is hiding individuals in groups. So, with k-anonymity, if you have a table like this one, it only has four rows, but it helps to illustrate the concept. You can define a k value, which is the number of individuals in a specific group. And the anonymization method then enforces that there will always be that number of individuals in the group. So in this example, we're dealing with medical data, which includes name, birth, city, weight, illness. So this is relatively sensitive data and you wouldn't just want anybody knowing this information about you -- maybe your personal physician. But let's say that this medical researcher wants to research the link between weight and cancer on this data. So maybe the first thing that you do when you're using k-anonymity is to get rid of the name column, because this is a directly identifying column. But masking the name column isn't enough to anonymize the data, because someone with enough knowledge could use the quasi identifying variables and potentially be able to put together to whom this information refers. With k-anonymity, you define generalization hierarchies. In this example, we see that the birth dates have been generalized to a year, and the city has been generalized to the next hierarchical level, which is the country in this case. So with k-anonymity, you ensure at view level, that you always have a certain number of people in the same group, so it's not possible to determine who is who. And now even if we know Martin in real life, with a k equal to 2, we can't determine who Martin is based on the data alone. So even though in this example, we only have four rows, you can imagine on a larger data set that you wouldn't be able to single out one person. The other method that we support is differential privacy. And the concept here is to apply noise to hide sensitive data. So for this method, we have a similar type of example data set, but this time the sensitive information pertains to salary. So if you take a look at the salary data, then you can see it's the standard information, someone has a salary of 75,000, someone has a salary of 105,000, but when you apply differential privacy, it adds noise to the data. So at the individual row level, the data looks useless. A salary of negative 30,000, or 140,000, which are very far off from the original values. But when you do analytics on this data in aggregate, you can still get statistically significant insights to a known degree of error while protecting the privacy of individuals. And this is because the individual row level information is safeguarded, so no one will be able to know exactly how much they make, but they can analyze, let's say, everyone in Walldorf on average of this amount of money. But you can't actually pinpoint the salary of any one person. So I'd like to talk about the anonymization workflow in HANA. But to set the scene, I'd like to introduce you to three personas who are typically involved in the data anonymization workflow. So the first one is a data controller, and they hold the data, and they define the anonymization parameters. The second person is a data protection officer who approves the parameters and the data consumers, and also receives the anonymization report. And the third one is a data consumer. And they only have a limited view of the data, because they're only seeing the anonymized representation of the data. So typically, the workflow starts out with a data consumer requesting access to the anonymized data for analytical purposes, like machine learning. And the data controller defines the anonymization parameters which would fulfill the request. And then the data protection officer reviews the request from the data consumer and suggests an implementation for the data controller and approves it. And then the data controller creates a privacy view. You can see here it would be D prime. And this is created on the original data, which is called D here in the example. And this only stores the metadata. So, the original data still exists as a sensitive table on the database, which can continue to be used for regular transaction processing. When the data consumer queries the data, the computation is triggered in the data privacy option on the fly. The anonymized privacy view D prime is created. So, the data consumer never has access to D, they only have access to D prime. And while all of this happens, D stays untouched, and the data protection officer has access to the anonymization report, where they can see the metadata and review how the parameters have been used. So, even though I mentioned anonymization is available for on-premise and in the cloud, I wanted to look at a cloud specific scenario here. So, here we have a scenario where a data consumer wants to access the data from a remote source -- cloud. And for performance reasons, they want to replicate the data into the cloud. But it's important to them that no sensitive information is exposed to the replicated version of the data in the cloud. Therefore they want it to be anonymized. So, anonymization can be used to anonymize just the replicated version of the data in HANA Cloud, and to achieve this, a privileged user would create the virtual table which will be used for the anonymized view. So, only that user, that privileged user would have access to the original data in the cloud. In this case, the privileged user is called DBADMIN. That's also the most powerful predefined user in SAP HANA Cloud as a side note. So, now that we've talked a little bit about data anonymization, I'd like to show you a short demo. I'd like to show you how SAP HANA and SAP HANA cloud can help you protect sensitive human resources data with the data and anonymization capabilities. In this example, I will use HR employee data with personal information such as names, salaries, and addresses. I'm calling this table salaries. Let's say that a data scientist working for the finance department of a company wants to understand how the salaries are distributed depending on people's start year. Because this data scientist is not in the HR department, and should not have access to private data of any employee, we want to enable this person to see only the data they require for analysis, while still keeping the employee's sensitive data private and protected. We also need to make sure that our HR data set is kept intact in the database for users who have permission to see all of it. The answer is data anonymization. In the SAP HANA Database Explorer, which in SAP HANA Cloud is accessed using the SAP Cloud platform cockpit, I will open the SQL console to query my database. My first thought is that if I remove the first name, last name, and account number of columns, my data set should be anonymous. However, it could be when I search using several criteria, the list of results may only return one user. Let's test this. I will query employees who are male, started in 1993, live at the zip code 7203, have a bachelor's degree, and are in the career level, in this case called T level, T5. As you can see, I only get one result. So, even if I were to remove the first name, last name, and account number, this person would still be easily identifiable. Even though we can't see this person's name directly, it is possible to determine what the name would be by using the other attributes that we refer to as quasi identifiers. That would mean that we will be exposing this person's salary data. This is not an isolated situation. If I changed my query to show me which attributes would allow me to find just one person in the results set, then you can see here how many of the employees would potentially be at risk of being identified again. To prevent this issue, we will use the anonymized views. As you can see in the SQL statement on the screen now, the first part of creating this view is standard. I'm calling my view "salary anon", and including a few key attributes. Please keep in mind that this view only persists metadata, and no data from its source table is duplicated on this view. Before we get into the details of what I included in my view to anonymize the data, let's preview the results. Right from the first view, you can see that the start year is transformed into a five year period, rather than a specific year. Same for the zip code. It is partially transformed to keep it anonymous. The T level is also transformed into a range. You can see how impactful this anonymization is by running the query again. Previously, we found a lot of employees who were at risk of being identified. Now, the result set is empty. We can also look at the number of people behind these ranges I set up to anonymize the data. Now we find at least nine people for each row of combined attributes. This means that it has become nearly impossible to re-identify each of these people. Now let's go back to the original statement with which I created the view. Under the usual statement to create a view, you can see the line in which I defined that I will use the k-anonymity method. The idea behind k-anonymity is that you hide individuals in a crowd. It does this by transforming columns that are quasi identifiers into anonymous ranges of data. Quasi identifiers are attributes that could lead to identifying a single person, but not explicitly like a person's name. An example of quasi identifiers is the person's start date. With k-anonymity, I have to define the lowest number of people I want to have in a group of individuals with similar characteristics. You can see that for this example, I have defined eight as the lowest number. The next step I performed was to name the columns I previously recognized as quasi identifiers. After that, I also created hierarchies to be able to generalize parts of the data. A good example of how this is done can be seen on the T level column, where I define how each specific T level will fall into a range of available T levels. I also created a sequence column called ID, that is needed for the anonymized view to detect data changes, like inserts or updates within the data source. You may notice that this way of building embedded hierarchies can become long and cumbersome. So, there are a few other ways to do it, which I'll explain now. One of those methods is to use a SQL script code function to replace the embedded hierarchy. An example is a zip code hierarchy you see here, where I created I function that defines rules about how many characters of the zip code are displayed in the anonymized view. With that, I've shown you the key points for K-anonymity. Next, I want to show you differential privacy. Differential privacy is a bit different. The approach here is to hide specific information in the data set by using random numbers. So, I will drop my current view and create a new one with differential privacy. Here, I'm defining the parameters to hide the salary information. You can see when I select the view. Now the salary column looks like random numbers. So that even if you could identify a person from these results, the information would be useless. If I start grouping people by certain attributes, like for example, salary, by start year in the company, even though I don't see exact salary numbers, I can still see the trends that people who have been with the company longer earn considerably more than those who joined recently. You could increase the epsilon value in the statement in order to get more precise results, but this would lead to a higher probability of individuals being identified, and therefore lower security. So, keep in mind that a lower epsilon value results in higher privacy. My next step now would be to grant select privileges to this anonymized view, so that the data scientists from the company can have access to the anonymized view and continue their work. Now we've reached the end of the demo, let's jump back to the slides. Welcome back. So, now we'll talk about secure setup. So, SAP HANA is designed to run securely in different environments. However, it can happen that incorrect security settings are configured, and it can lead to security problems. So, we want to help you so that doesn't occur. We offer different types of tools and information to help you run SAP HANA securely. And a good place to start is the SAP HANA security guide in the official documentation set. You can also check out the technical white paper, which is accessible on SAP HANA security website, and that's linked at the end of the presentation. We also offer a security checklist. And those are even integrated into the HANA cockpit for HANA on-premise. SAP HANA is also integrated with SAP security tools and services like SAP Early Watch Alerts, SAP Security Optimization Service. You'll also find HANA in the system recommendations which support the selection and implementation of SAP security notes, the configuration validation on security which verifies SAP landscapes for compliance, and in the monitoring and alerting infrastructure. So with that, I'd like to go on to our last topic for today, which is secure software. So at SAP, we take our secure software development lifecycle very seriously. We have a risk based approach where we incorporate mandatory threat modeling and data protection assessments. We especially focus on threat modeling before we release a new feature or function in HANA, so that we can address threats early on and while the feature is still in development. We also have comprehensive testing. With automated testing, we work with external researchers, and we work with people internally to SAP to do penetration testing. And this is a larger topic than what we can get into today. But if you're more interested in this topic, I really encourage you to check out the website linked on this slide below, where you can learn more about how we at SAP ensure that SAP software is as secure as possible. So, patching is also an important topic. And the recommendation is that you stay up to date on the latest patches, and that you ensure you're always running a supported version of HANA so that you will continue to receive patches for the version of HANA that you're running. The security patches are released as part of the monthly SAP security patch day. And they're not shipped as individual patches. So they're included in the revision themselves. That means that to get the patch software, you have to upgrade on smaller revisions. And so to do this, we've tried to make it easier for you, where you can use capture and replay functionality which reduces the effort of testing a new revision, or you could also use the reduced downtime features. Also a side note, operating system patches are provided by SUSE or Red Hat directly, not from SAP. So if you would like to get more information, there are loads of great sessions at this year's TechEd. I already mentioned the first two listed here as the anonymization masking session and the HANA Cloud intro session. But I'd also encourage you to check out the database administration session. And we have two road map sessions; one for HANA on-premise and one for HANA Cloud. And also please feel free to visit us at the websites listed here. They're all about HANA security, and they're up to date. So please check them out. So I'd like to thank you for attending this session and encourage you to continue your learning experience using the SAP Learning Hub, where you have access to tons of educational content of all types. And there's even a link here to activate free access for you as a TechEd participant. So with that, we've reached the end of the session. Thank you so much for attending. If you have any questions, please feel free to reach out to me, my name is Stephanie Lewellen, or to my colleague, Melanie Handreck, and we're happy to help you with that. [MUSIC PLAYING] 