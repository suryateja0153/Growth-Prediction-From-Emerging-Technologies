 How do we overcome the limitations of deep learning to solve multi-step problems? Reinforcement learning is a type of machine learning that learns to solve problems by trial and error. It starts with an agent interacting with an environment. The agent is trying to achieve a multi-step goal within the environment. For example, a self-driving car might be trying to drive on the roads in the real world. It's goal is to get you from your home to your office while avoiding obstacles in it's path. The environment has state, which the agent can observe. For example, the state includes the car's location, the conditions of the road, the location of other vehicles. The agent senses the state of the environment through what it sees, hears, feels, or senses via other means. The agent has actions that it can take, which modify the state of the environment. For example, an agent can drive forward, drive backward, turn left or turn right. All of these actions change the car's position on the road within the environment. In addition, these actions can effect other vehicles and obstacles if they collide. Finally, the agent receives reward signals as it moves closer to it's goal. The agent uses these reward signals to determine which actions were successful and which actions were not. For example, we might give the agent a point for each unit of distance it drives you closer to your destination. We might subtract points for breaking traffic laws, going off course, or colliding with obstacles. We repeat this state, action, and reward loop over and over until the agent learns by trial and error, how to operate effectively within the environment. The objective for the agent, is to learn how to always choose the right action, given any state of the environment, that leads it closer to it's goal. To learn more, please click the link in the description. For more content like this, please be sure to like, share, and subscribe. 