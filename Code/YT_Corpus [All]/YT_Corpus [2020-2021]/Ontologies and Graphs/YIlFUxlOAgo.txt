 The presentation you're about to see is true. The names have been changed to protect the innocent. Hello and welcome back to FIB-DM. Today I'm speaking about Semantics for eXtra Large Banks, the Configurable Ontology to Data model Transformation, CODT. It's an overview into Semantic Enterprise Information Architecture and Model-driven Development with the ontology at the apex of the hierarchy. One word here, this XLB, eXtra Large Bank - it's a placeholder. You are welcome to modify the slides and replace it with your bank's logo and name. You already embrace RDF/OWL and the FIBO. You have a semantic technology Center of Excellence, Triple-stores in production, you use and support the development of the industry-standard ontology, and you downloaded and evaluated the FIBO Data Model. The CODT patent filing enables full disclosure of the transformation technology. What are the challenges for Semantic Centers of Excellence? We already have implemented extended and customized the industry-standard ontology,  however; 95% of your bank still runs on relational databases using data models. XLB has highly qualified ontologists and data scientists. Data architects have the FIBO data model, but they cannot leverage the work of their semantic COE colleagues, and with that comes the risk that semantic implementations become yet another data silo, using a different language than the rest of the organization, and with that, impeding the data integration.  The vision is Semantic Enterprise Information Architecture, SEIA. When we look at the architecture, we can look at the use, the type, and the level where it applies. Traditionally, we have conceptual, logical, and physical data models They deploy on relational database management systems. What's new is we have the FIBO, with our own extensions, and that gets instantiated on RDF-Stores. Now, with CODT we can transform our ontologies into data models and already into object models, and in the future also to message and process models. That is SEIA: The ontology at the apex and derived models for data, object, message, and process. The way to get there is Semantic Model-Driven Development. Model-Driven Development has been around for sometime. We convert logical into physical data models; we can convert between data and object models. So, we have the RDF/OWL, the ontology on the triple store. We have data models - out of it we generate database schemata, and now with the Configurable Ontology to Data model Transformation, we can transform ontologies into data models, and reverse-engineer data models into ontologies. That is FIB-DM. One word, the deck is called Semantic for extra-large banks. Asset size is a poor proxy for semantic sophistication. Semantics for Data Architects was the name of the first FIB-DM education resource and it became a catchphrase. After that followed Semantic for Mid-sized banks, for Large banks, and so on. However, some Financial Institutions like Hedge Funds are very advanced, and many mid-sized banks on FIB-DM are now building out ontology capabilities. They are now just starting out using the FIBO ontology besides the data model. So, CODT is for Financial Institutions who are using and extending the FIBO, many but not all of them are "extra-large banks." The intended audience for this webinar is the same as the designated Proof of Concept team: The Finance Management side would have someone who has a working knowledge of E/R and ontology diagrams. You have to be authorized to sign non-disclosure and license agreements. The Ontologist with an in-depth understanding of the FIBO and your in-house ontologies, and you are the one who wants to spread the adaptation across your enterprise. You are well versed in RDF/OWL and SPARQL. The data architect with experience in enterprise reference models; you evaluate and you want the industry-standard FIB-DM. You are an expert in your data modeling tool and its import functionality. Finally, developers, MS-Excel power users with experience in Visual Basic for Applications, Power Query and M-language. About myself, well I have 20 years industry experience as a data architect and ontologist at leading Financial Institutions and service providers. In particular, for seven years at the IBM Software Group, I was a Banking and Financial Markets Data Warehouse consultant. I had to deploy and customize the IBM data model at 45 banks in North America, Europe, and Asia. Then, for four more years, I directly consulted Citibank and Deutsche Bank on BFMDW implementations. At Deutsche, actually, someone pointed me to the FIBO seven years ago, and since I became a contributor, reviewer, and speaker at FIBO conferences. Well, my company, Jayzed Data Models, is a US consulting company, incorporated in 1999. Jayzed holds FIB-DM copyrights and is the designated assignee of the CODT patent. Here are the origins of CODT and FIB-DM: A few years ago, at a New York bank, they needed a new schema for a Security Master System. Of course as a FIBO advocate, I tried to leverage the industry-standard ontology for the logical data model. Now, the challenge was that data architects are not familiar with RDF/OWL; they have never used Protégé or TopBraid. The workaround was for the ontologist, for me, to write SPARQL queries to extract metadata into MS-Excel spreadsheets, so that the architects could review the FIBO design and definitions. At a Connecticut Alternative Investment Manager, they had the Hedge Fund Ontology, and the task was converting my 200 FIBO and hedge fund specific ontology classes into a logical data model so they could put the data on an RDBMS, in addition to the Triple-store. Here the workaround then was a manual transcription, in other words, typing in graphs into ERWin and some metadata extract and import. Both cases really were tedious work, manual work. I tried out existing tooling, but it chokes on very large ontologies, and it does not derive a useful data model. In other words, ontologist, and data architects have to copy and paste it manually. That's why I developed a better transformation and the FIBO data model. "Atlantic," the latest version is a way to Enterprise Information Architecture and Model-Driven Development with the ontology. The 2020/Q2 release, it has 4500 entities. It is the World's Largest Data Model. We have the Configurable Ontology to Data Model Transformation, CODT. The FIBO is more than a Knowledge Graph. The Enterprise Data Management Council, on their website, they say "The Financial Industry Business Ontology, FIBO, is a business conceptual model developed by our members of how financial insurance business entities and processes work in the financial industry." The council and its members correctly decided to define their business conceptual model in Ontology Web Language, in OWL, because it has superior semantics in the notation. FIBO conceptualization and relations are fully applicable for lower semantic taxonomies, concept maps, object-, and data models. FIB-DM is a perfect conceptual model. The links here -  when you have the deck you can follow up to read more about these statements in depth. The FIBO is superior to vendor data models. Almost 600 years ago, Robert II of d'Uzes proclaimed Charles the seventh king of France. Yet the Involved Party is still an ultimate supertype in numerous reference models and databases. The fibo breaks up that commingled entity into two Fundamental Concepts, the Autonomous Agent, person, legal entity, and the Thing in Role, the customer, employee, broker, whatsoever. There is conceptually no common supertype above Autonomous Agent and Thing in Role - period. Instead of eight data concepts, the FIBO has 15 Fundamental Business Concepts. They are all ultimate supertypes in the FIBO Data Model, and 80% of FIB-DM entities are subtypes of these 15 concepts. The EDMC support and 800 data model downloads: At the beginning of the year the EDMC offered to promote the FIBO Data Model on their website. It says, many mid-sized EDMC members want to leverage the industry-standard but don't have ontology tooling, databases, and human expertise  in-house yet. With FIB-DM data architects no longer manually transcribing ontology graphs, copy and paste definitions. 800 users downloaded the open-source version of the FIBO Data Model. However for larger EDMC members, even with FIB-DM, architects still have to copy and paste their FIBO customizations and extensions manual. Here is what CODT provides: An ontology- derived data model. On the left-hand side, we have an ontology graph. It has a bank which is a Depository Institution, the bank provides a bank account, and the bank account has a bank account identifier. On the right-hand side, we have the conceptual data model with the same entities, Depository Institution, Bank, Provides, Bank Account, Identifies, Bank Account Identifier. CODT transforms classes into data model entities. The subclass becomes an inheritance, also known as a generalization or subtype, Object properties transform into associative entities, and finally class restrictions, domain/range determine relationships and cardinalities. The current tooling imports are not fit for the purpose. Data modeling tools like Sparx EA and IBM IDA have a rudimentary input for RDF/OWL files, but the imports are a one click black box. There are no options to configure the import and no diagnostics. Then challenges are where URIs transform into entity names, datatype properties become classes on their own, and class restrictions become an anonymous pseudo-classes. There's no import of the FIBO annotation properties. The problem is that the parsing-approach is not scalable. Traditional transformation parses ontology files. What basically happens is they open the RDF/OWL file, encounter elements of the ontology, and create elements of the data model, as they go through the source file. The parsing-approach reaches its limits with very large ontologies like the FIBO. Per default, ontology object properties transform into data model relationships. This transformation loses metadata for object properties with particular design patterns. XLB and other large Financial Institutions developed the rudimentary transformations. Everyone reinvents the wheel on their own. I invite you to compare FIB-DM to a vendor model or in-house transformation of the FIBO to see the difference. License the transformation that created  the industry-standard model rather than to do it yourself. Here's the outcome of the transformation: Let's start with package properties derived from ontology modules. The package name is the rightmost string in the ontology namespace. Code transforms into the ontology prefix. A logical as a unique code of the package and all ontology classes properties with the prefix. For example, fibo-fnd-agr-agr become model objects in the agreements package. The URI, the Uniform Resource Identifier of the ontology is traceability link to the source of the model object. The second part of this overview shows how CODT extracts properties, transforms, and adds them to the model. Packages have extended attributes, and these are all FIBO annotation properties. They are carried over transformed, and preserved in the data model. Looking at entities, the Entity Name is the ontology Class Localname, converted from the Camel Case notation to LDM naming standard, basically capitalized with a space between the words. The Code transforms from the ontology class. It's defined as Prefix, the colon, and the Localname. The Comment populates from the class annotations, RDFS comment and SKOS definition. There are two particular tabs here,  annotations and lineage. Entity annotations are the extensive FIBO documentation. Here's the chart of the usage of common annotation attributes. Very important, the Entity Lineage, these are these are ontology object properties that we carry over. It helps up to trace back to the original, in this case, is the class in the FIBO or other ontology. We preserve the Resource Name, the Localname, the prefix, the URI, and restrictions and equivalent class axioms. This is basically what we see here the restriction, this is semantic beyond the capabilities of the entity-relationship model. We cannot model it in the data model but preserve it as a documentation item. Another thing is complex FIBO patterns or generally ontology patterns, for example sub-properties. Here's a graph of amounts in the FIBO. When we transform it, the simple proposition that that object property transforms into a relationship goes wrong. On the left-hand side here we see a fund portfolio, certificate of deposit, loan; they say they all are simple relationships. The correct transformation transforms them into Associative Entities. We preserve the object property hierarchy What the FIBO defines that the Principal amount is a subtype of the Notional amount, which is, in turn, a Monetary amount. We want to preserve the hierarchy of our associative entities in the data model. To look at this deeper and that more cases of the wrong transformation check out the article why ontology object properties should transform into data model associative entities. There's a FIB-DM data model it's actually two data model files, the Normative, and the Informative. The Normative model that is the basic FIBO modules, Foundation Business entities, Finance Business and Commerce, and from the upper ontologies, Language Countries & Currencies. This is also what you have in your Open Source core model, the FIBO 2018/ Q4. FIBO/ FIB-DM 2020 Q1 production added Derivatives, Indicators, and Securities. Finally, FIBO/FIB-DM 2020 Development, these are further Informative model packages for Loans, Business Processes, Collective Investment Vehicles, Market Data, and Corporate Actions and Events. This is how it works basically: New FIBO modules enter FIBO Development, they become part of the Informative FIB-DM model. After a while, once they're all vetted, Informative modules become normative. That is a development cycle and the recommendation is that you do the same with your FIBO extensions. Let's say you do a module for Cards, for credit cards. You would start out with it in your Development ontology version, you would generate it into the Informative module. When you have finalized your Card module, it moves over to your Normative Enterprise Ontology and to the Normative Data Model. What we do is: We open both models the normative and informative added to our PowerDesigner workspace. With other modeling tools, we import both data models that ship with the commercial version. We can expand the normative model. We see 14 base packages and the main model diagram. It actually is a package diagram and it shows the major dependencies, references from one package to another. At the top, we have the Upper Ontology content, the ISO-codes for language, currencies, and countries, and SKOS and Specification Metadata for annotations. Importing it is FIBO core with Foundation, FBC, and BE modules, and then the Full Normative content in green, Securities Derivatives Indicators. Of course, the full normative content depends on FIBO core. Finally, in the FIBO Development Version are the informative packages, Mortgages & Loans, CIV, Market Data, Corporate Actions, and Business Process. How does it all fit together, FIBO, Vendor models, In-house models for semantic information architecture? Our goal is to leverage. At the end of the day, we want to create databases, java code, UML, and data models. Our method is to derive. We adhere to the industry-standard with the Normative models for FIBO Production. For the Enterprise Data Model, we consult FIBO Development, other Industry Standards, our in-house models, and vendor models. Out of these, we move informative content over to the normative side. We generate implementation models from both Normative and Informative. For data architects, Robert dUzès advice to merge your Vendor models and your In-house models into FIB-DM. The vendor models  have excellent value. Keep it and harvest the content! On the left-hand side, we see the FIB-DM entity hierarchy for Agreements. We want to adhere to the industry-standards, the 15 Concepts and the subtype hierarchies. We adopt the FIBO/FIB-DM names and definitions. Now what we do is, looking at our In-house model, at our Vendor model, we identify indirect entity matches and synonyms. Now for example in FIBO it's called an Agreement and that is just a synonym for what the IBM model called an Arrangement, hence they are direct matches. Security is also in other models, it's in your in-house models. Just be careful to beware of homonyms where you have the same name, but it means something different in the FIBO versus the other model. We merge entities that are not already in FIB-DM into the model. We identify the appropriate supertype. If you have an entity that is not already in FIB-DM you figure out where in the hierarchy would it fit in. Finally number four, we merge attributes from the vendor/in-house model and attribute with that the FIB-DM enterprise model. Note another thing, the FIBO Data Model correctly defines Financial Instruments as a subtype of the Contract, that's an Agreement and it's not a Product as seen in some vendor models. Concept maps, the FIB-CM, directly linked to the data model. On the left-hand side we see a concept map of the 15 Concepts we see a Depository Institution, which has an Identity as a Stock Corporation. It has a Legal Entity Identifier. It has an address, and so on. It also has for U.S. institutions, an FDIC certificate number. It's registered by a registration authority and it is within the registry. We have a direct correspondence from the concept map to the data model. To learn more about scoping a data model, the 15 Concepts, see the link to "Semantics for Finance Users." This table compares the General Public 3.0 License to the Commercial License. It goes by topic, details, the current license GPL 3.0 and the Jayzed customer license: Release, Domain, Distribution, number of entities, and Normative and Informative packages and the resources. In a nutshell, the open-source license requires you to copyleft, that is to license your derived models to the public. With a commercial license, you keep FIB-DM extensions private, however, you are not allowed to publish your derived models because they contain the content from the Full Data Model. Likewise, all education materials are subject to copyright you're welcome to download them from the website and distribute them,. but you're not allowed to change them. With a commercial license, you're free to modify, translate, edit, and you can even lift off diagrams and images, as long as they remain within your organization. In summary: The Financial Industry Business Data Model is the most comprehensive enterprise reference model with 1968 Normative and 4563 Informative entities. It has the superior design of a semantic data model. It has extensive documentation of the industry-standard ontologies. It has a full lineage from the data model into the ontologies including links. Semantic Enterprise Information Architecture has the same names, definitions, design patterns, across the enterprise. The ontology at the apex with business- friendly Concept Maps and derived data and object models. It unifies semantic and conventional data management. You should have full transparency for your FIB-DM evaluation. Explore the PowerDesigner model. Download the FIB-DM core Open-Source version. Study the extensive education resources Examine the full 2020/Q2 content; it has listings of all 4 500 entities and the definitions. Review the license maintenance agreements and pricing. This concludes the first part of the video. The the second part the transformation will be in a separate video. 