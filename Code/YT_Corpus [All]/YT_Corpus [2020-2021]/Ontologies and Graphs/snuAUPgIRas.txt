 Hi, my name is Giselle Zeno and I will be presenting our paper on Dynamic Network Modeling from Motif Activity Graph generative models are a tool for studying networks. Previous work has focused mainly on static graphs. However, most real networks are actually dynamic in nature with their connections changing over time. These connections can be modeled using higher order motifs as building blocks for networks. There are some motif based models for temporal graphs, but they do not consider link deletions. We propose a dynamic graph generative model using these building blocks. The overview of this presentation: First, I'll go over our empirical study of motif evolution in dynamic networks. Then, I'll go over our proposed model including the sampling of synthetic dynamic graphs and the learning of the model parameters. The evaluation methodology, the results, and discussion and future work Motifs have been shown to evolve in aggregate temporal graphs, where the graph just keeps growing. We investigated if such motif transitions occur in dynamic networks when we're looking at subsequent time windows. We consider all 3-node motifs to transform or remain the same configuration, and we assume that the structure at the next time step depends only on the current time step. We looked at three different data sets:  the Enron emails network, which consists of emails sent between Enron employees;  EU emails network, which are from a large undisclosed European institution; and Wikipedia links between articles, which shows the evolution of the hyperlinks between these articles. These are the transition probability matrices  for the different motif configurations. As we can see, the motifs in both email datasets, they appear and stay, which can be observed in the diagonal probabilities, or they disappear, which can be seen in the first column. The Wikipedia dataset, the links between articles  keep being added and are rarely removed, so the motifs appear and then they stay. What we observed is that motifs did not transform, but rather, they kept reappearing  after they first showed up. Now, I'll go into the details of our proposed model. There are two underlying processes going on:  First, the nodes in the graph become active and then they remain that way; and then motifs are born in some configuration,  which we call motif type, and they reappear according to some rate. The task here is to sample a synthetic dynamic graph G, consisting of graph snapshots, with similar structure and behavior  as the observed graph. We begin by sampling the nodes arrival time,  which is when they will become active, using the same rate for all of the nodes. In this example, I'm going to show  the active nodes at time step 1. Next, we calculate what triplets can now be sampled as motifs, using these active nodes. We assume as input some initial motif type assignments and we assign these triplets into buckets. There is a distribution of the motif types, and  we want to sample the expected count for each. In this example, there should be 1 triangle,  3 wedges, and zero 1-edge motifs. So now, we need to reassign triplets to get these expected counts. These are the resulting motif type assignments. Since we don't need the empty motif types,  we can just discard this bucket. We also have as input initial edge placements. However, we will have to sample  any additional edges needed. These are the motifs sampled at time step 1;  and triangle {a,b,c} needs an additional edge and the wedge {b,c,d} also needs an additional edge. Now, for each motif we will sample  an inter-arrival rate from a distribution that depends on its motif type. So for the motif {a,b,c}, its rate depends on the rate for triangles. Then, for the other motifs, their rates  depend on the rate for wedges. We can then begin sampling time steps  for each of these motifs. Now we can construct our dynamic graph. We annotate the active nodes at each time step. and then, we add the edges at the time steps that they will appear in. I will now go over on how we learn our model parameters. Given an observed dynamic graph G,  we first estimate the node arrival rate using the time that dataset begins  until the nodes have their first edge. Then, we calculate the proportions for the motif types that are used to sample the expected counts  for each of these types. I will now give a toy example. In this graph, with 9 nodes and 8 edges there are 84 combinations of 3-node triplets,  since we consider overlapping motifs too. We only have 1 triangle, so the  proportion of triangles is 0.012 We have 8 possible wedges, so the proportion of wedges is 0.095 We have 37 possible 1-edge motifs, so the proportion of 1-edge motifs is 0.44 Finally, we calculate the proportion of empty triplets as one minus the others, which gives us 0.453 We calculate the rate of interval rates  for each motif type i from the motifs of that type and their rates,  which are calculated using edge-weighted motif counts since edges can be shared by more than one motif. The Poisson count for a motif is  the average of its edge weights and its edge weights at time t  are dependent on its motif type. Here's the previous example graph. For the triangle {a,b,c}, the weight of each edge is 1 so it's count at time T would be 1. For the wedge {b,c,e}, its weight for (b,c) is zero since that edge is shared with the previous triangle and its weight for the edge (c,e) is 1/5 since the edge is shared with four other wedges. So the motif count at time t would be 0.1 For the 1-edge motif {b,c,e} there are six other nodes that could form a 1-edge motif with the edge (h,i) so then the edge weight would be 1/7 and the motif count at time t would be 0.14 We evaluate on a subset of the Enron email dataset during February 2000 and we use daily time steps. We estimate initial motif configurations and all parameters of our Dynamic Motif Activity model and the parameters of the baselines. Then, we compare the synthetic graphs generated to the Enron graph using various graph structure metrics. These are some of the metrics that we use  and what they measure. Density measures the ratio of edges in the graph versus how many edges it could potentially have  if it were a complete graph. The local clustering coefficient of a node measures how close its neighbors are to becoming a clique. Whereas the global clustering coefficient measures the ratio of closed triplets (triangles) to open and closed triplets  (wedges and triangles) The betweenness centrality of a node measures the number of shortest paths that pass through that node. and I want to highlight the s-metric,  which is less known, and it measures the extent to which a graph has hub-like structure. We compare our model to these two baselines. The first baseline,  Static Networks with Link Dynamics model, generates a static graph by sampling  degrees from a probability distribution and connecting the nodes. Then, it assigns a time-series to each link  from an inter-event distribution. The second baseline, Activity Driven Network model creates an empty graph at each time step, marks each node i as active with probability a_i and connects each active node i to: a neighbor j a neighbor of a neighbor or a random node. We generated 1,000 time steps with each model. The first baseline (SNLD) generates high local clustering but low global clustering. The second baseline (ADN) generates almost no global clustering. and our DMA model generates local and global  clustering similar to the Enron dataset. The second figure plots the diameter and average path length of the graph snapshots and our model is the one that most closely matches those of the Enron dataset. For the Enron graph, these are the average values of each metric. On the right, you can see visualization of the network structure at a given time step. There are multiple hubs  connected by long chains and there are some isolated wedges and edge pairs. The high s-metric is due to  some snapshots with very large hubs. The SNLD baseline has low clustering  and s-metric due to long chains and many isolated edge pairs. The second baseline ADN has high local clustering and s-metric  due to the large hubs. The path length and the diameter of the graphs is also much lower than what we see in the Enron graphs. Our DMA model creates  multiple hubs connected by long chains similar to the Enron graph snapshots and the average diameter and path length  are also close to Enron. We sampled 20 time steps of the synthetic graphs to compare the aggregate structure with the Enron graph. Similar to the previous results, SNLD has low local clustering and s-metric  due to the long chains The ADN baseline has  low global clustering and s-metric due to huge hubs it generates and small diameter an average betweenness for the same reasons. In dynamic graphs, we showed that motifs with edges do not change configurations. for example, wedges becoming triangles and vice versa and that motifs once they appear they will stay during the next time window or they will disappear. Although the second baseline (ADN) adds memory effects and triadic closure it does not create the amount of global clustering seen in the Enron graphs. Our DMA model generates synthetic graphs with overall structure close to the graph used for parameter estimation and our edge-weighted method for  motif inter-arrival rate estimation learns rates close to the ground truth when we're estimating from  a synthetic dynamic network. Our current model assumes as input initial motif type assignments  for some of the triplets. We're currently working on a method to sample motif types based on node roles. For example, the probability of sampling a wedge would depend on the probability of one of the nodes being a hub and the others being spokes. This concludes the presentation. Thank you for watching. You can contact me by email or on Twitter. 