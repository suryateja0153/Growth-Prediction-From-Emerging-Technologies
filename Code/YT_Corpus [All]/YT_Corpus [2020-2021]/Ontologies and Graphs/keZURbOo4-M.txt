 hello everybody and thank you for joining me today I'm lil Azhar Richard develop and add developer advocate here at nifA J in this session we'll have a brief reminder as to what a graph is we will look into why graphs are important and why we need them following on we will look at examples that will help us to start thinking beyond more traditional questions we may ask of our data but also thinking about graph shaped questions that lie there we will then move into exploring for scenarios that can help us spot and identify graphed shape problems so for those of you who perhaps have not come across specifically groffle graph theory when you think of a graph maybe what triggers in your mind are visions of bar or pies or other chart based visualization and whilst these may be referred to as graphs in this context the context that we're going to be looking at today in these slides and when we talk about graph databases we'd refer to these visualizations visualizations as charts so what is a graph a graph is a memory when we think about graphs and water graph is what we're doing is we're defining a graph as a way to represent a set of discrete objects or entities and then we want to think about how they're connected to each other we want to understand how they're connected to each other based on their relationship and this concept of graphs arose from a mathematician called Leonard wheeler who came across this problem that was published in a newspaper and effectively what he did was he took this problem which was understanding how somebody may visit these four land masses and how they would access these land masses via bridges and he simplified that down to identify the land masses as these discrete objects and the bridges between these discrete objects as the relationships the connections between them so absolutely anything can be a graph and let's look at a couple of examples so the Internet is an example of a graph and there's many ways that we can look at how an Internet is or how the internet is being represented with the graph so perhaps we're interested in the different things that constitute the internet so maybe we are interested in the what pages maybe we're interested in how emails are being sent maybe were interested in the other ways such as messaging systems and so forth are sending data around maybe we want to look at how the internet is represented by the components that put it together so maybe we're interested in the Reuters the switches the firewalls everything down to the bare wire and the boxes that connect it together for example a Waterman who can also be represented as a graph so we if we think about the discrete entities that we have in the water molecule we have an oxygen element and we have hydrogen elements to hydrogen elements and it's what tells us its water it's not just those elements on its own but how they're connected to each other and there was a specific way that these elements are connected together that tell us that this is a water molecule so you can get a flavor that anything can be represented as a graph and it's all about understanding how different discrete entities are connected to each other so why do we need graphs why don't you know why are they important to us so what I want to do is walk through a snapshot of a situation and we get a flavor for how graphs can be very useful so let's say we've got a certain situation here so here we have a person drinking a coffee and maybe the reason why we're interested in this is because they're not having a coffee just anywhere they're Sattar to Cafe so maybe we're wanting to keep an eye on that behavior about how people are using and what we want to do is we we want to find a way of being able to represent this reality in the best possible way so inevitably if we're thinking about how we want to go about describing this situation modeling this situation so that we can think about how we're going to ask questions off the back of this theta once we've loaded it into our data source we would probably start off with having some kind of representation for a person we'd have some representation for the coffee and inevitably we're going to draw some kind of a line or an arrow between the two to say that they're connected and we can further describe that in some way to sort of effectively provide some kind of pictorial representation of what's going on in a snapshot and what will happen so once we've gone away and we've described the connections between our data we're probably going to go and take that data and put it into a data store and you're more sort of traditional data sources your relational data sources what we will do is we'll take this data and we want to go away and normalize date that data and we do that for good reason you want to reduce the duplication your data for example but the challenge that you have here so you end up with taking each of those entities and we've put them in separate tables these discreet tables and then we need some kind of a mapping table to be able to reconstitute that data back again and the challenge that we have here is that doesn't really describe what's going on what was going on in in this of seeing that we were trying to describe another challenge that we can face as well is maybe the data that we interested the entities that are living in different domains so we've got different data domains so they're being stored in separate systems and we have that challenge about how do we represent this reality of what's going on and we want to think of a way how do we connect these things together and what we find and we come back to this sort of thinking around what Groff is and what it does and the fact that a graph a representation of discrete entities and how they relate to each other by using graphs we can create something that provides a better approximation of the reality of our data and the questions that we're looking to answer so we've talked about what a graph is and why we need them and what I'd like to do now is explore an example to help us generate some ideas about what might and might not be a graph showing a problem before we step in to having a look at some scenarios to help us categorize rough shape problems so let's imagine the coffee chain so we are interested a coffee chain this chain has many stores across the country we have a mix of things that we're selling so we've got products that we directly source from our suppliers maybe there certain products that we sell in-store that we create in stock so for example the coffee or maybe there some things such as any baked goods or things that we sell in there and those have been kept in our regional distribution centers so that's the way we efficiently distribute our goods around and also we'll be sourcing ingredients from our supplies to those distribution centers as well so if we wanted to understand the overall health of this company what was popular with the customers what was the footfall and so forth we may think about asking certain questions such as what's the turnover what's the profit margin maybe we will have a look at what are the most popular selling products well maybe we want to have a look at when you know what number of orders were being placed in a certain period of time and what we could ask these questions of the graph database these aren't graph shape problems these are typically going to be some form of data summation or data windowing or it running some kind of an average over the data and it's going to be data associated to a single type of entity but if we look a little bit deeper what if we could look further into what drives rapid and revenue your profitability or is there something that we can due to perhaps influence or push those what if there is something we could do to understand the connections behind why some products are more popular than others or not is there some kind of interaction where a product on its own doesn't sell well but if that product goes with up another product then it does very well or maybe there's some kind of a pattern behind the football over certain periods so thinking about these where we we might start looking at about so where do we find these these graphs in coffee so what I'm going to do is have a look at some conceptual examples of graph problems that we might want to explore perhaps we have many pastries left over after breakfast Ron we could improve our profitability if we can sell them outside of the most popular time so perhaps what we can do is investigate relationships between products or how things have sold better in the past and examine that relationship between products and products or products and customer to perhaps tailor some kinds of special offer to help us and better sell those products outside of the peak times maybe we can have a look at how our customers interacts with us both in person maybe over social media channels can we have a look at our customers and have a look what kind of networks do they have been in these social media channels and if we can identify those influential people in the networks can we do something or can we encourage them or do we ensure that they've got a good experience so that they provide positive feedback about our thoughts to their networks well we've looked at sort of positive size what we can do but how do we look at things where we might need to do some mitigating behavior if a challenge comes up so for example what happens if something happens to a product that we sell so maybe there's a product or an ingredient that we use and our supplier no longer provides that so what we can do we can do several things we can the relationship between that product and the store we can look at the relationship between that product and others that are purchased with it so is this a product that you know is influential in promoting other things to be sold we can have a look if there's a relationship between that product and region so maybe certain region is going to be more impact in others so we can think about mitigation can we explore if that products being provided in other parts of our supply chain so that we can do with that or another example I will look further down the supply chain so what happens if the supplier supplier supplier has a poor harvest so we could perhaps be looking at say coffee beans or flour for example if we're making the pastries and what what's the impact if they have a poor harvest and what we can do is we can go down the chain and we can explore what products are going to be impacted perhaps we can look as well as in the area where there's been a poor harvest because if there's been poor weather maybe before we get information about that we can start to make predictions about if it's going to impact other parts other products within the supply chain as a result of this that we don't yet know about I what about if something happens to the distribution center do we need to be thinking about re-routing livery trucks to the ones that on earth that are not affected do we need to think about rationing project products to certain stores which are less popular to the ones where it where that product is more in demand so all of these examples are provided here these are all thinking about not just the discrete entities that we've got here so things such as the product or the customer or a location but we're also exploring how those entities are connected to each other so these are some highlights of some conceptual ideas we might think about so what I want to do now is we're going to start looking at some scenarios that help trying group and identify ways to spot graph shape problems so the first scenario I want to look at is does our problem involve understanding relationships between entities so this is very much the definition that we've been using for graphs and let's look at an example here and we've got an example where we've got three different types of entities so we've got customer entity so customer buys product and that products part of a category and the example that we've got here we've got two different customers and whilst they're buying two different t-shirts we've got different stop keeping units units for those t-shirts they all fit into the same category of t-shirt and the example I'm trying to show here from a graph shape problem is maybe there's things we want to understand what's going on so we may want to understand what combination a t-shirt specific t-shirt is being bought with other goods may be the thing that we care about is not necessarily the specific t-shirts or example a red t-shirt blue t-shirt but actually what we're interested in and that is the purchasing behavior of products that are of category type t-shirt and where this becomes interesting is we want to have a look at what else is the customer buying at the same time or very close proximity to when they purchase a t-shirt so just as an example here so you've got Lisa who buys a t-shirt but maybe Lisa also buys a pair of flip-flops maybe she'll survive some shorts and you buy some sunglasses and if we've got a situation as well and we examine the relationship between those components for Jane as well and Jane also buys the t-shirt she also buys some flip-flops and she buy some shorts then maybe we can suggest to her to also buy sunglasses because those would be the same sort of graph structures going on and we can infer that maybe they're both going to be doing a similar activity by maybe going on holiday or it's summer times coming and they're preparing accordingly and this kind of feeling this sort of trying to understand the relationship between the entities and what's going on these are kinds of things you'll see if you're looking at recommendations so the example I just described here would be an example of the kind of things you do for a recommendation system next best best next best action is another example of this so that to some extent is a kind of recommendation system and the idea here being is if a set of actions always happen and produce a desired outcome historically maybe you're going to go away and take that and when you see these patterns happening where you see those connections being made in a certain way you can go around start to recommend what should happen next fraud detection is a another great example of where we want to understand the relationship between entities so specifically if we think about third-party third-party fraud where you have a group of individuals and maybe they're sharing personal details so for example maybe they are going to be cycling home address maybe they're cycling an email address phone number and other personal details as an example and if you think about that data being stored in a in a table it's not obvious that there's a connection there but if we pull that out and we draw the connections between individuals and these elements of personal fate sir and we can start to observe in these fraud circles we see these rings going on because I have a long connection to each other and that's a really really powerful way of applying a graph to be able to ask that question to try and spot those patterns identity resolution is another example of this so again this same theme of being able to identify if for whatever reason because we've been combining systems or that two companies have merged and so forth and you have different customers with different names maybe the names been spelled differently maybe you have initials for one and the full spelling for the other and so forth what you can do is have a look what's connected and if they've got shared email address and address and so forth then you can use that those graph structures understanding those connections to be able to help you do the identity resolution and data lineage is another great example of this so if you think about if you've created some kind of the data report or you have some kind of business intelligence dashboards to be able to describe where your metrics have been sourced from and what transformations have been placed on that is really important and this is a great example of a graph shape problem that you can sort when you're trying to determine the data provenance and you're working with so let's move on to the next scenario and that is does the problem involve a lot of stuff referencing to the same type of entity so this is a mouthful so I'm going to bring up the diagram example here and what I mean by this is yes we're using the same entity and I mentioned before how potentially if we're just using the same entity and the data associated with it it's not it's not necessarily a graph shaped problem this definitely is and the way you can spot this is whilst the data in this example here we're looking at all of the direct and indirect reports for Jane wifes that data may well reside in one table the thing that we find ourselves doing is we keep referring over and over again into the same table because we have to keep doing these ID lookups to keep moving through it sweet so this is this self referencing that I refer to and the thing with a graph is again this is about understanding the relationship between entities and it's a lot easier to be able to describe this where we can say well we've got our employee entities and now we're talking about how they're connected to each other and you'll spot this kind of thing in organized organizational hierarchies so this is an example that we've covered here and social influences so this is an example of where we may want to understand how people are connected to each other and some people will have a greater number of connection others and if we want to understand who are the social influences Network so if we think again about our coffee shop example where perhaps do you want to find out who are the social influences who are a customer of ours so we can target office to them and this is a great example of where we're looking at how people are connected to other people so again it's that self referencing at the same type of entities that that entity is person but obviously those are going to be different people they're our friends of friends that is another great example so if we wanted to try and predict who may know somebody else again we're looking at the connections between different people and just as an example if you've got myself and maybe there's another person called Bob and it turns out that I'm friends with Ann and Dan and Bob is also friends with Ann and dad then it's probably unlikely hood that Bob and I know each other because of those common friends again the relationships between people that we know and you see this in got this kind of thing in Facebook or LinkedIn when it suggests contacts that you might know and churn detection so again using this idea of influences so if you can understand if you can understand in your network who are the influential points and let's say you know that they are likely to leave your service or your network then to try and reduce the number of people that they take with them or influence them to have a negative thought maybe there's things you can do to target them to make sure they have a better experience okay so scenario number three there's the problem explore relationships very not unknown depth so let's bring up our example an example we've got here is a supply chain type example and on the left you can see we have an organization called pencils R Us and pencils R Us sales pencils and those pencils are bought by an organization called we lost stationery so they're especially provider and they sell all sorts of stationery and pencils R Us buyers would say pies are all products of wood we sell wood which it uses to manufacture the pencils that it then goes on self - we live stationary an interesting relationship between we love stationary and we sell wood if that we love station sells pens - we love wood so what would happen if we sell good which is a small family-run organization they've decided you know we're going to retire now we're going to close out the business what impact does that have and this is a very simple supply chain maybe there could be many links and we can see straight away that it has an impact on impact on pencils or us because they're no longer able to source that raw material that they process so they are not going to be able to sell pencils to real-life stationery but the interesting thing here is that you can see we love stationery gets the double hits so no longer are they able to sell a product to resell wood but they're no longer able to source pencils from pencils or us and you can think about this as an example that we covered with our coffee shop where what happens if our supply supply supplier has a bad harvest so what is a knock-on impact of that and as mentioned this is the kind of thing you would see in supply chain visibility you would see this in Bill of Materials so for example when you're building out say a car or a computer or something like that where you're putting in the different components you can have a look at any impact with regards to running out of certain parts and you can see this in network management as well so the idea that you know what happens if a certain you know route or a firewall goes out you can we can touch with us down the network and predict what impact that would have and the last scenario that we're going to look at is does our problem involve discovering lots of different routes or parts so I've got the last example here and listening this is over a UK based example so if you were getting the train to Edinburgh from London there are a couple of pot there will be more but there are a couple of paths that you can take so you can either go up the west side of the country and you'll go past rugby crew and Lancaster to get to an American Scotland all the other route you could take is up the east side of the United Kingdom and you will stop at York and Newcastle and obviously many other stops to get to Edinburgh and this is an example where we're interested in seeing is there more than one way that connects two entities to get the two discrete entities together is there more than one path and this is relevant for example if we think about logistics and routing so coming back to our coffee shop example where if something happened to our fulfillment center if we wanted to create new routes for our trucks to go to new performance centers if they now need to change the routes that they go down to get to stores because are now coming from a different fulfillment center see you get an example of the graph the problem we're looking at the connections between their infrastructure management is another example so we kind of touched on this previously in the Lawson are aware we were talking about the dependency on a certain item but this also fits in as well about trying to identify whether you have enough contingency so as an example if you've got you will to make sure that if you've got an important component you have enough redundancy in your system so if that component goes down you're going to have mass disruption within your infrastructure or the dependency tracing is another one so as an example if you have several applications that are running and they go down you can go through and trace if there's a single point of failure that is causing massive let's say for example a virtual machine that was hosting those applications went down so I've gone through these four scenarios and we're just going to quickly recap those so scenario one those are problem involve understanding relationships between entities so this is the kind of thing we would see in recommendations next best actions and so forth scenario two does the problem involve a lot of self referencing it's the same type of entity so this was the example where we're looking at an organizational hierarchy and this is as well you can incorporate things like dotted lines and so forth if we're looking at friends of friends and so forth it's an ro3 does the problem explore relationships of varying on loan debt so this is all about trying to sort of discover the unknown where you know where your start point is you know what you're likely endpoint is and the different roots of what your difficulty endpoint looks like and then being able to dig down those and we see that kind of thing in supply chain visibility and the last scenario does not probably involve discovering lots of different routes or paths so this is all about trying to identify all of the paths between two points and we see this in logistics planning and so forth so I think it's really important to think about what can you learn also how can you learn more about graphs and how can you in turn learn more about graphic problems so what I'm going to do is I'm going to go through some resources and this is by no mean note by no means this is not an exhaustive list these are some that might be helpful starting point for you to look at so one thing I would recommend is the graph databases book so it's um it was released a few years ago but I still think it's very relevant and in there it talks about why you would want to use graphs and it explains in detail some of the examples where you would find graph shaped problems and how you'd apply graph to them there is a chapter in there about how to model for graphs and so forth so that's really good you can download this book for free so as a PDF you can download it and you've got the link over there on the right if you prefer a physical copy that is also available for purchase so you can find that on your favorite online bookstore so next one that I find a really for and the emphasis I want to put on this as well is to be able to be better and get better spotting drop shape problems you have to practice graphing and the best way to do that is to go 'we read about them learn about them have a go at working with them as well and a really great way to get started if you're not familiar with working with rods would be the growth Academy that I have and again this is high-quality free online training that you can do we have a large number of modules from getting started with near 4j 2 how do you go about doing growth data modeling we have stuff on their own growth data science if that's something you want to move on into the future so you've got a lot of great content there and what you can do as well is if you want to get some kind of recognition for the time that you've invested you can also take part in our certification so you can become a certified near forging professional if that's something I'm interested that's a free thing that you can go away and do the exam is free you can retake it if you don't quite make it through so I would heartily recommend that you have a look at the graph Academy online training and if you're interested to check out the certification as well and last but not least and again we have many other things we have blog post and so forth and if you're interested in finding out more about those let me know and we have our neo4j YouTube channel and this is a great place we have a lot of content in there we have online conference content so all of it sorry we have online computers obviously at the moment but for example for conferences and paths like growth connect which is our big annual conference we have regional growth to events we have meetups we've many different places where we generate content and these get placed onto our near 4j YouTube channel and here you will find things like how to do things you'll find information on best practices and the thing that I really point to as well is there are many customer stories about how they've gone away and been able to identify and solve their graph shaped problems so there is a lot of talk on that so that is a really good place as well to go away if you prefer to watch videos so with that I hope you have found this talk helpful if you have any questions I'm going to be looking at those shortly I think so being able be asking those if you want to get in contact with me you do have my details there as well so with that thank you very much thank you little very interesting so now let's take some of the questions we have here the first one is about the example of the coffee shop and the question is see I would how the coffee is purchased be represented as another relationship or an attribute of the drinks relationship great question so I've given a very conceptual representation of what's going on there and I think with this it's going to be driven by what kind of question are we looking to answer so let's just say for this example I want to the key question I want to know is customers interaction with a coffee as an example and I'm not too worried about what the interaction was I just want to know that that interaction happens then maybe I would just capture at the fact that customer has a relationship to coffee and then what the interaction looks like I probably captures a relationship type now if for example I really wanted to know about all the different types of interactions that somebody can have with that coffee so let's say I want to understand how somebody is you know how are they using my premises so I want to know do they come in and pre-order their coffee do they come and buy the coffee in store do they then take that coffee and sit in store or do they take it away as an example and then what I might do depending on what kind of volumes they were and things like that then what I might decide to do is I might create a separate note for the action and just because I that that's becomes more prominent than something else research so I hope sans that question Thanks so another question is is a graph database the best place to do collaborative filtering yeah so that's that's a real interesting question because effectively you're describing there about building recommendations and tonight I guess and one of the approaches you may use is collaborative filtering so they're really interesting things with graph databases so I've not yet and one project I really want to test out is the compare comparing graph database to other processes collaborative filtering but the really powerful thing about a graph database and collaborative filtering is you can do that real time so if you think about certain teams of machine learning pipelines that used to do that is you have to do some kind of a build up that you have to run that process and that can be a time intensive process and you potentially run into that problem that that data depending on how long it takes and how often you can refresh that data might be stale really really cool thing about using OAuth databases for collaborative filtering is you're effectively checking you'll be effectively checking that that cross over checking the intersection checking and real-time when you run that query and that's really great if you want to change what you recommend because maybe something's going low in stock so you don't want everybody suddenly putting that in their basket so you have that degree of dynamic Nestico and we certainly have many clients who for that exact reason are using graph databases for this thanks Lee another question which might say which several people might have is if we have a specific use case that we'd like to build on neo4j can we talk to you who you are someone like yourself to build out a graphical model so what I would say for that so by all means you've got a number of ways of how you can do this so but I will definitely plug so it wouldn't to be me but we do have a professional services arm with the organization and what they can do is if this is a specific project that you're working on at work and what have you and you want some sort of detailed help with that - they can come in and help you build up the model and it can advise you with that kind of thing if you're more of will actually know I'm doing this as a hobby and I will to understand more you know there's something I'm really passionate about and I want to spend more time then what I would suggest you do is I'd certainly sort of contact us in the community so we have a very vibrant developer community so that's community got neo4j calm and what you can do is of POTUS they what kind of project you're working on what you're musing is and then we've got a very active and strong community who can come along and help you with that Thanks another question we have is could you give an example of a relational problem that cannot be modeled that cannot be modeled as a graphic problem oh so that's an interesting one so what I would normally say is I would always argue you can you can pretty much do anything in any tool so if just as an example if we had a highly connected highly connected basis set and we had that growth problem I mean you you could maybe be able to run that on a relational database you probably have to throw lots of memory at it maybe you ends up doing normalizing your data model sorry yes denormalizing your data model so you kind of lose that benefit of it being in that normalized state it becomes expensive if you need to update it but conversely I'll say you could go off and do what I would say a traditional sort of tabular tone your traditional table type questions so things like a slice and dice my profitability figures for the past ten years or something like that or do some kind of you know run an average across down the column in my table to give me some values so you could theoretically go and do that in the graph database but the reason why you wouldn't want to pick for example your highly connected basic relational database because that's really expensive on memory if it will complete and it's the same way again if you think about how data has been structured in say within neo4j or in graph database where because we're focusing on missile type and normalized view of how entities are related to each other you have to visit each of those entities to pull that data out whereas if you think about it being stored in a table you're literally just going to straight down that column and running some so anything where you're looking at like and this is where we're talking about you you've got soar millions and you know millions of rows and things like that in transformation then you know that is a great example of something you wouldn't want to do in a graph you could theoretically make it work but I'm always one for picking the right tool for the job so it fits that tradition or like I'm going to be summing large number of numbers down single column that is a true that is a traditional sort of tabular type database job if you're saying I want to explore how things are connected and I and I care about how they're connected then that is sort of going to phase a traditional graph database route to go down Thanks another question is what do you recommend to visualize graphs oh so there are many many ways you can do this and I think the best way to answer so there are many tools so some people if you're just doing some sort of ad hoc visualization of your graph maybe two example we've got nifty browser which is like arms or the developer aid so when you're testing out queries you can get sample data's back on that we also have a visualization tool called bloom so that allows you to do types of near natural language exploration of your data so the idea is it familiar with your domain you don't have to write a query to explore your data you just basically type things such as like the property names of your entities and so and what the relationships are so that's an option as well and these are really great sort of basic discovery tools our partners have also produced tools as well so then curious have a data exploration tools that's a great um that's a visualization tool that you can use but then Allen Steere we're going to have there's lots of libraries night I apologize if we miss some of our partners as well but you have these or these are the kind of like tools that sits on the database and you know you may need to do a bit of configuring or setup but effectively that's the day choices you also have a large number of visualization libraries so you will have some posh ones like against or thinking in our labs project we've got neo viz you've got you've got other sort of like growth specific visualization library so these are ones where they kind of take the knowledge of like your node entity set up and then you just say how you want to display it right down to people using things like d3 libraries to go away and they home build their visualization tools so you've got a huge plethora of options one thing I would suggest you do if that's something that is of interest if you go to our developer guides so if you go too near forge a calm slash developer and what you will find is there's a link there for developer guides so if you click on that you'll find a link in there for visualization and now you find information about the different things that are available and there will be many more besides that as well thank you so looking at the time this is the last question we can answer life here the question is do you need normalization steps with the graph database so that's a great question and I think the best way to think about this so those of you have come across it you know how when you approach data modeling you have your conceptual data model you have your logical data model and then you've got the physical base model and conceptual data model is sort of thinking about you know the scope of your problem and you're probably going to have you're you know you're gonna describe your entity so let's come back to customer and coffee is an example so we're going to say probably we've got a customer and you know customer Y is a customer buys a product or something like that so that's kind of like a conceptual view and if we think about when we start stepping down into the logical data model and this is when we start to think about adding properties so for a customer node maybe we're going to add properties such as a name maybe we're going to add like the loyalty card ID maybe going for their email address or the beverage maybe we're going to put something like maybe it's got a stop keeping unit it's maybe we want to attach something to it now the really interesting thing when it comes to thinking about growth databases and how we put stuff in there and I won't caveat this a little bit but a lot of the time when you then go away and start building your prototype where you start going away and loading your data into a broth database you typically tend to sit at that logical data model step right if you think about traditionally if you're doing something for a relational database you're going to be stepping into the you're going to be stepping into the physical base model where you're then thinking about well I've described low I've described the scope of my project a problem I've now kind of sort of annotated with it better so the logical requirements and also I've annotated a bit more about what kinds of properties I want to be associated with that and then when you go into that physical data model then you're starting to think about well what do I need to do to model my data so that it is stored in the best way for my physical database and the interesting thing with graph databases is generally the logical requirements model stage that's the that's usually a you know a starting point and if not the finish point for many graph based products now there may be certain conditions where you need to go down that route of where we also think about the physical base model for a graph so there will be some iteration so not necessarily how you think of normalization relational database but you may talk example pull out certain notes so I don't want to go into huge detail without there's some there's some situations we go but that's a later down the route but a lot of the time most of the time just stopping at that stage where you've annotated what you what property you want me knows what property do you want in your relationship is that point so the thing I want to touch on as well with sort of thinking about normalization in a relational database versus when you put data off know anything data in a graph is due to the nature of how we store the data in there so if you think about let's pick I'm gonna pick an example so let's pick two people and they live at the same address so I'm gonna have one node person nodes they called Ann I'm going to have another person node called fan and let's say I've got an address node of twenty North Road so if Ann lives at twenty North Road when I'm loading my data then I create a relationship between Ann and 20 Mill Road if I want to also say that Dan lives at twenty North Road I don't create another twenty North Road database a North Road node how I effectively recognize that cardinality the fact that there's more than one person living at twenty North Road is I create a relationship between Dan and twenty North Road so I'm hoping this kind of shows so you don't have that repetition of Vater because of the nature of if there's more than one more than that if this if the node has more than one connection to something then what we do is we represent that through just creating those connections so I hope that's answered that question Thanks thanks again Lou and thank you to our audience for joining us today bye bye and stay safe thank you bye 