  CHRIS REPLOGLE: Welcome to Getting From Governance Practice to Data Awareness. I'm Chris Replogle. I've been with SAS Institute for 19 years doing software development in areas of data management and metadata lineage. I'm a maintainer and contributor to the open-source Egeria project. It's under ODPi management. ODPi is a Linux Foundation organization-- active participant in the Open Governance work through ODPi/Egeria. I'm on their weekly call. And nice to meet you. So today we'll cover this. So where's your data from? Is it internal? Is it external? Do you lease your data? Is it user-provided data? Data you use in your organization comes from many sources, typically-- internally-generated or collected, other organizations, external entities, users, consumers, customers, et cetera. These latter ones are usually shared data, so data that's shared with your organization. How do you manage the sharing of data? How do we agree on what should be shared with one another, a person, process, or organization? How do we agree on that? Typically, we have a data use agreement. A data use agreement's a contract we used for the exchange and transfer of non-public data that's used-- that's subject to some kind of restriction on the use. A data use agreement dictates what we should share and how we should share it-- so the data lifecycle, onboarding the data, when and how do we receive or store this data, how often do we get the new version of the data? Maintenance-- how do we keep it secure and validate the data? Along with maintenance, we have retention. How long should we keep the data? And then we deal with disposal-- archiving, and destruction, and transfer of the data. How long should we keep it on request, and then how long should we keep information about that data on request-- the metadata about that data? We also need to deal with data compliance standards or regulations that govern the data-- data protection, data management, and security safeguards that also go along with that data. Data sharing implies a need for governance. Shared data is informative to an organization therefore most valuable to/within the organization is sharing from some internal / external source. Typically, you will share the data because you want one authoritative source of the data. You want to make sure you have the right data and the data you get is quality data. Typically, that's why you share data with other organizations. If you're the one that collected or organized the data, then typically, you're the expert or the verified correct source for the data. Along with data, we need to know, what is governance? Since you talked about sharing we talk about the people and processes that act upon information or data. So really, governance is about the people and processes we use to manage the data-- how we onboard it, how we organize it, how we maintain it, how we archive, destroy, or transfer that data. What is governance practice? Governance practice defines how data's accessed, organized, categorized, and secured. That's how the users interact, and what procedures, and policies, and things we enable and act upon. What influences do we have for governance practice? Typically, data has influences, such as regulations, policies, compliance, profit for your organization or company, and company secrets. We want to keep those secrets, so maintaining a company secret is a good governance practice, because you don't want to give that away because you may be giving away your profit. These, in turn, define and influence the standard we abide by right. Those dictate the standards. Oops-- I'm hitting the up button. Now-- sorry-- back into it-- data-- what are the rules and policies, and who are the stewards of the data? What enforcement should we apply from those use agreements? The policies-- we need to document-- have documents that describe and define how it should be secured, consumed, validated, and the thresholds or limits that apply to that data-- how much it can be shared, how it can be shared, how it should be managed-- all those things. Those rules are processes that validate the data within those thresholds and make sure we're within the compliance standards that have been defined. Stewards are the persons or teams who ensure the standards, compliance, quality of the data. Assets are any object, element, or structure that gives value to the organization. It could be anything, such as data sources, databases, file systems-- those type of things-- infrastructure, and applications, APIs, and services that interact or provide information, analytical models, processes, and intellectual knowledge within the organization-- buildings and natural resources, physical resources that have a unique identity. Asset management-- what information should be maintained for an asset? What do we maintain on an asset? We need to manage the details of the asset. That basically entails the metadata around that asset-- the who, what, when, where, and how of that asset-- and then related events or change in status of that asset. When was it updated? When was it changed? When was it created? When was it archived and took out of service? All those things are information we need to collect about our assets. Asset lifecycle, as we talked about earlier about data-- asset lifecycle-- we need to manage it throughout its use in the organization. We onboard an asset-- we make it active. We protect that asset, we start using asset, and we maintain that asset, and then we decommissioned that asset. That doesn't mean we lose knowledge of the asset. That means we are no longer consuming that asset. Descriptive information is about the physical, the design time, the operation and semantic information around an asset or piece of information. Who? What's the responsible party for that? What's their role-- the what. It's related to the policies, rules, decisions, thresholds, and metrics of that. When was it created updated or validated last? Where is its location-- both physical location, cyber location, or even global location? How is it accessed, secured, and managed, and why was it created to change? This seems exactly like metadata, doesn't it? I believe that's what this is, business metadata. Business metadata's usually contained in the glossary. It's a vocabulary common language used to communicate about or relate to information or data. Oops-- I hit the wrong button again. What makes a good glossary? Common data definitions are used to define the meaning for assets. We want to basically assign a meaning to an asset. The owner, the organizational content, and then the components of a good glossary-- we need to know those things. Who owns this glossary, how's it organized, and then what components are in there? The terms-- they're used to describe a concept or idea. The categories organize those terms and put them into logical folders or organization. Classifications define how it's used, whether it's term or glossary. In relationships, as far as that comes, semantics asigned to assets and semantic hierarchies they're used to give terminology meaning. Terms are the building blocks of a glossary. They describe a single concept or idea. Concepts form a hierarchy. They allow businesses to define or refine concepts. They narrow a concept to define meaning or apply organization to information. For example, transportation may be broke down into rail, air, water, and automotive. Automotive may be broken further down into trucks, bus, car. And I might break cars down even further to electric vehicles, gas vehicles, and diesel vehicles. Semantic assignment is basically assigning a term to information in order to refine the meaning or understand that information. Assigning a term to information enables the business user to even understand IT infrastructure, to understand what the table or column means. To be able to find relevant information, I can actually use the glossary to find something that's relevant to what I need. Once I understand what the meanings are, I'd be able to find the data related to that meaning. And then lastly, understand the meaning of information related to the term. And that's basically what that is. So the information or data related to that term-- I now can understand those things. So if we look at glossary categories, glossary categories-- they organize the terms. They can contain a category or term, so you build a hierarchy of those-- categories that contain terms. Term can be in more than one category that allows you to organize a term into multiple categories, yet not have a duplicate of the term. Classifications add information to further describe how something is used. We talked about it earlier. They had descriptive information when they are assigned. They can be used to describe how items relate also-- for example, classification simple can be applied to information that implies the access should be controlled, or it's sensitive information. Ontologies and taxonomies defined how we organize those terms. You've heard those a couple of times. An ontology identifies and distinguishes concepts in their relationships. A taxonomy formalizes relationship hierarchies among concepts and specifies the term. This prescribes a structure in terminology. Term relationships-- term relationships can be semantic or structural. Terms have relationships to each other or define how they are related or linked together. Example relationship types is isA, hasA, synonym, antonym, and seeAlso. An apple is a fruit. An address has a postal code. Postal code can be a synonym for ZIP code. Rural can be an antonym for city. Social Security Number, SSN, may also be relevant to government identification, so you may want to see also government identification. Glossary classifications applied to the glossary itself-- it means I can classify the glossary. So what that does is denotes the organization or structure of the content within a glossary. So if I had more than one glossary, I could have a taxonomy in one. Another one's categorized-- or classified as a canonical vocabulary. Taxonomy means the same term is not present in more than one of its categories. Canonical vocabulary means the glossary only contains-- only includes terms that have a unique name. Therefore, there is only one definition for any single concept. Category classifications-- a category can be classified to elaborate on the type of contents within that category. For example, subject area means a category describes an important topic area for the organization. Typically, subject area owners-- have owners and are managed carefully. Basically, that means that you can assign owners and management responsibilities with that classification. Term classifications define how the term is used. Activity description, abstract concept, data value, context definitions, spine object, spine attribute, object identifier-- they allow you to classify and organize your terms into what they're doing or how they're being used. Common information models-- basically, it's a standard way that we represent information. For example, we'll cover common information in our files next with the cloud information model. Common information models are covered in the book by Mandy Chessell. I recommend reading this if you get time. The cloud information model is an open model a standards-based solution. Cloudinformationmodel.org-- it's open, and anyone can contribute or collaborate. Go to GitHub, cloud information model. There's multiple output formats available-- AML, JSON-LD-- examples. Egeria has native import for cloud information model. I recommend looking at that if you get a chance. Common data definitions allow us to understand how to reference and represent our data-- everything from the glossaries all the way to the database. So data classes-- these provide features to organize your data into logical types. They define or relate information for data type detection, such as rules, passing, detecting expressions, regular expressions for validation-- denoting the preferred implementation types by technology, indicating what's expected in each representation, then documents how it should be used, and thus allows for easy data validation and rule creation. Use of data classes for defining things such as a Social Security number and how you want to organize that, a-- address information and how you want to organize that, how it should be stored in different types of databases-- whether it's in a database, or in a CSV file, or in big data. What's the preferred data format of those? That's where you use a data class. Schemas are used to document the structure of the data. Between schema type and schema attributes, you have two elements that allow you to organize some things. Schema type defines elements and how-- and allow reuse-- means you can use the schema type for multiple assets. Schema attributes define elements of the schema type. For example, a relational table will be a schema type, whereas the columns of that table would each be a schema attribute. Assets and schemas basically are related. The schemas are used to describe the structure of the asset. Note, schema type can be assigned to multiple assets, so implying the shared structure with different data content. So I have the same data in three different assets. I had three different data locations that have the same schema, or same organizational structure. They may not have the same data, but they have the same schema. Connections-- they store the information necessary to connect an asset, like JDBC or ODBC connections. Connector type is what the actual JDBC or ODBC is it describes the connection method, or technology used to make that connection. In a SAS example, you could use access engines or TKTS connections. Those are also examples of connector types. A connection may have connector type of ODBC or JDBC to a database server, for example. And those are typical usages out in the real world. Discovery's a process that runs a set of actions to describe an asset. In the case of data, you want to run discovery and then catalog at least the following-- the metadata, the types, the ranges, the metrics, and the quality-- for metadata, the who, what, when, and where information of the asset. The types-- I want to know, what data class is it? Ranges-- the ranges of information. What's the range of the data or information present, the metrics and quality-- what's the state? Is it missing values? Incorrect values? What's the minimum, the mean, the max of the data? What's the quality score of the data? Those are kind of things we can discover, are the deep running metadata of that data. Governance landscape is fitting those practices together with the information. So I've defined all the data landscape on the right, but we have all the data-- the governance practices and processes that we also need to connect to that data. Connecting the landscape-- when you look at it top to bottom, information or data is connecting your assets to your catalog. So I've got a connection to an asset. The asset information is defined by a schema. A schema can be related to the data class for typing. Asset metadata is discovered, giving us data annotations to give us those metrics and get extra information about data. Schema can have semantic assignment, where a term is defined to a schema attribute. Terms can Have topology or ontology or data modeling term-to-term relationships. Terms are in glossaries. That's how we organize our terms. Governance and organizational relationships-- basically, we want to define how an organization relates to others. How we relate as an organization to our consumers or our customers? We provide goods or services. They give us feedback or reward. Same thing for regulators and stakeholders-- they typically want to look at the governance to see if we have a healthy culture, to see if we're managing our assets correctly. And then business partners want to exchange goods or services with our organizations, and they will also want to recieve reward or feedback. Maturity models-- where do we put our governance focus? The levels of maturity in your governance practice can break down into one of these categories. And this is kind of where your focus is. Data awareness-- where is the organization's data, and what does it contain? Governance awareness-- how should data be governed? Embedded governance-- how can governance be automated? I want to automatically govern the data as it comes in. Business-driven governance-- how can the business leaders take ownership of data governance? And then data citizenship-- how can every employee system and server get the data they need every day? A catalog enables the collection in management of asset data. So basically, we allow those levels of though of maturity along with your catalog, because a catalog enables you to add information, relate assets, assign responsibilities, and find relevant information. These capabilities of the catalog allow you to uphold and implement the policies you designate for your governance practices. In summary, the knowledge of your assets leads to more insight in how relevant a collection of information is, which gives you data awareness. Please visit opengovernance.odpi.org for a lot of more information and more detailed information about the topics covered here today-- egeria.odpi.org for information on the Egeria project, and SAS's data governance website for more information about data governance through SAS. Thank you. 