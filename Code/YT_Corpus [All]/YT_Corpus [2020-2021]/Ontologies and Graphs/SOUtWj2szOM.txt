 I'm here with Bob from semi and today we're talking all about knowledge traps [Music] Bob thank you so much for joining us first things first what is a knowledge graph so aknowledge graph tries to store real world entities in a data object and what we try to do with knowledge graphs is to actually try to understand how the real world works and drive knowledge rather than just data from the way that we store the information right now that's different from a traditional database which just stores information yes so for example let's say that you would store information about a movie then there's all these relations that you might have in your head about the movie maybe actors or locations or things that come to mind but if you store that in a traditional database a lot of context just gets lost the it's just a database you could argue that a database is just dumb it says it's a dumb way of storing information what you try to do with the knowledge graph is to actually keep that information and keep that context so that you get a 360-degree overview of what you're actually storing and that people can query for the knowledge rather than the raw data or information so it sounds a lot like a traditional graph database but you're also adding in this knowledge or learning aspect yes that's a good point so the graph part is one could argue that everything that we store has a relation to something else so for example and back to the movies if you would look at a movie a movie has certain actors and they're born somewhere and etcetera etc so that is there's always a relation so that's that's the graph part what the knowledge part adds on top of that is that can we actually try to derive knowledge from that information so let's say that you would have an actor who is born in Paris but you know query for which actors come from France that'd actually under said oh wait now I need to show this actor who's born in Paris because there's related between Paris and France so we v8 is the product that you built that is a knowledge graph what makes we v8 special among knowledge graphs yeah so I would argue that there are there are three things there so the first thing is is that we don't store data objects in a in a traditional way so in a in a table or in a traditional graph we start in this space and this is a semantic space so every time when you add a new data object we try to determine what does this data object mean what does it represent in the real world and we place that in a space so for example with the actor example if you would have an actor who is born in Paris then it would be closely related to France so that's how we store this one the second thing that we do is that we are completely API based and that is also where we where we stop if you will so we try to enable others to build these semantic systems and thirdly that is something that we learned through the semantic aspect is that we can now also do automatic classification which basically means that to stay in the with the example of France that if you would have a country with the name France and a city with the name Paris the knowledge graph can actually automatically drive hey wait a second Paris is the capital of France right so that learning aspect comes back in how does it actually do the learning I mean you're inserting the data by using data objects but then it's got to figure out how these are related yeah that's a great question actually so the interesting thing is like how do we define learning so we have the the data science aspect of learning but we also have the the engineering aspect of learning and one of the problems that we wanted to solve is that every time when you add a new that object we didn't want to retrain the machine learning model because you know it now takes about 48 hours to train so just imagine if you want to add a thousand data objects that's what that's under one so what we learned was that the machine model that we use has all these vector positions so those are representations of concepts in that space and what we do is that the moment that you add data we try to algorithmically determine where to place it in this space so our learning if you will is not necessarily retraining it's just trying to understand where do we need to place this data object in the space which makes it very fast from an engineering perspective which results in a better UX so a user doesn't really notice that they are with a database also add a solution that incorporates both the machine learning model and a and a storage mechanism yeah so how does it actually do I mean you you have the data you're able to add it in at figures of the new things but without retraining it seems very hard that it would be able to learn these new properties yeah so there there are three ways how we can do it so we have the out-of-the-box knowledge which we like to call the common knowledge so we train it on open datasets so in English for example think about Wikipedia a dictionary but also scientific articles etc so that's what we like to call the common knowledge now you can do two things so there might be a situation where you have a very specific domain knowledge that you want to add sort of think about use cases in banking oil and gas industry healthcare etc so what you can do through the restful api you can literally add it in natural language so you can say I'm gonna now teach you a concept these are the words of the concepts and this is the description in common knowledge because if you think how au9 learn new words that's how we do it we were two children we explain in common language new concepts so what happens under the hood is that we take that concept in the description we calculate a new position in that vector space and that's right that new concept lives so if you know start to add data objects that talk about that concept that's how we give it its semantic understanding so you're able to kind of teach it the new concepts and then it makes those new associations without having to do this new layer of retraining basically exactly because we wanted to have this this this UX aspect is number one for us and then speed plays a role so how fast can we do this and that's the beautiful thing again of that vectorization of concepts and words because we can calculate with it which means it's fast so what's the case where a knowledge graph might not be a good solution so for example if you have a lot of streaming data or if you have a lot of logs for example that you need to search through fast what we see in practices that's often you have a traditional database and in a knowledge graph and they they live you know together and you solve problems together so or for example transactions at a bank then you you know you want to store them in it transactional fashion but if you don't want to search through them or find specific things then that's where the knowledge graph comes in and takes that information and stores it in a different way right so this isn't supposed to replace databases out there as a whole but it's a new layer of looking at your data yes that's indeed what I would argue it's just a completely different way of looking at data however I would like to say though if people would like to change their data infrastructure with vv8 I'll go for it well it's really exciting to hear about the space so thank you very much for coming in Bob thank you 