 welcome to google cloud drawing board where we doodle our way through the cloud today's topic what is cloud load balancing this video is divided into chapters watch the full video or skip ahead to any section of your choice sam's new application has been a hit users are growing across the world but sam is worried how would she scale optimize and secure the app while keeping the users happy that's where cloud load balancing comes in it is a fully distributed software defined solution that balances user traffic to multiple backends to avoid congestion and ensure low latency there are different types of load balancing depending on the type of traffic you are dealing with global or regional let's understand these options with a use case say you have user shen in california you deploy your backend instances in that region and configure a load balancing virtual ip when your users grow to another region all you need to do is to create instances in the additional regions there's no change in the virtual ip or the dns service settings as your app grows global the same pattern can follow you see that maya from india is routed to the instances in india now if the instances in india are overloaded and are auto scaling to handle the load that user will seamlessly be redirected to the other instance in the meantime and route back to india when instances have scaled sufficiently to handle that load we just saw that cloud load balancing uses anycast virtual ips giving you a single global front-end virtual ip address it also provides cross-regional failover fast auto scaling and scales to millions of queries per second that is external load balancing at layer 7 but in any 3-tier app after the front end you have the middleware and the data sources to interact with in order to fulfill a user's request that's where you need layer 4 internal load balancing between the front end and the other internal tiers layer 4 internal load balancing is really for tcp udp traffic behind rfc 1918 whip where the client ip is preserved you get the automatic health checks and there's really no middle proxy it leverages the software defined networking controls and data plane for load balancing now let's see how the data model for cloud load balancing actually works for global https load balancing you have the global anycast virtual ips ipv4 or ipv6 associated with the forwarding rule which directs traffic to a target proxy the target proxy terminates the client session and for https you deploy your certificates here this is not a single device but distributed logic throughout the infrastructure the url map configured provides layer 7 routing and directs the client request to the appropriate back-end service the back-end services can be managed instance groups or network endpoint groups for your containerized workloads this is also where service capacity and health is determined and cloud cdn is enabled to cache content for improved performance you can set up firewall rules to control traffic to and from your back in here internal load balancing setup works the same way we still have a forwarding rule but here it points directly to a back-end service the forwarding rule has the virtual ip address protocol and up to five ports now security as a best practice we encourage you to run ssl everywhere with https and ssl proxy load balancing you can use google managed certs where google takes care of the provisioning and managing the ssl certificate lifecycle for you and cloud load balancing supports multiple ssl certificates as well if you wanted to serve multiple domains using the same load balancing ip address and port global load balancing absorbs and dissipates layer 3 for volumetric attacks across google's global load balancing infrastructure additionally by using cloud armor you can protect against layer 3 to 7 application level attacks and by using identity of our proxy and firewalls you can authenticate and authorize access to your backends now how to choose the right load balancing option for deciding which load balancing option is right for you consider factors such as internal versus external global versus regional type of traffic https tls udp and based on these factors decide which one is right for you if you are looking to reduce latency improve performance security and optimize cost for your backend systems then check out cloud load balancing it is easy to deploy in just a few clicks set up the front end and back-ends associated with the global whips and you're good to go want to learn more check out cloud.google.com load balancing 