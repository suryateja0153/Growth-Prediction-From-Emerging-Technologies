 OK, so I recently received a package from The Future was 8-Bit. I always like getting things from them. They sent me an SD card reader for the PET. This makes it super easy to try out programs from the internet. They also sent me a couple of mouse pads, one is the Commodore PET startup screen. Pretty cool, and then a Cheese and Onion mouse pad. I will definitely make use of these! And of course, we all know what is inside this package because you probably read the title to this video. So the question is, what does the mini-pet kit actually look like. OK, well here’s the keyboard. It appears to be already assembled. But I’m pretty skeptical about typing on this thing. I’ll give it a try, though. In here is where the real goodies are. Here’s all of the chips. And, oh look, they’ve already soldered the sockets on there for me. Or have they… OK, nope, they are just sitting in there, so it looks like I will have to solder them. It looks like thy’ve arranged the chips on here more or less like they go onto the board. That’s clever. And it looks like these 3 small bags contain all of the smaller bits needed for the build. I wanted to see if I could be real clever and flip this over to solder the sockets without them falling out. And yeah… looks like I totally failed on that one. Oh well. I’ll just do them one at a time. When assembling things like this, I do always like to start with the lowest-profile things first. And there’s a good reason for that. Because when you flip the board over, you want the item to stay in place while you solder it. If I had a big capacitor on there or something, the board would no longer lay flat, and thus would complicate that. I also like to solder one leg at each end of the socket. This way I can flip the board over and check that the socket is completely flat against the board. If not, its easy to fix at this stage, but impossible to fix after you’ve soldered all of the legs. One interesting note. I was getting ready to solder the socket for the video chip. And I noticed it says CRTC, which is the name of the video chip in the PET, but then right next to it it has a symbol saying not to put a 6545 in there, which is the actual chip number for the PET. So, just keep this in mind. I’ll come back to this in a little bit. OK, all of the sockets are in place and I’ve double checked that each one is facing the right direction and they are level. Now to solder literally hundreds of legs. This stage is one of the most time-consuming parts of the build. After finishing these, I inspected each solder joint with a magnifying glass to look for any legs I missed, any solder bridges, and just anything that didn’t look right. I did actually find a couple of pins I failed to solder, and one that looked like a cold solder joint. So I fixed those. Then it was time to move on to the capacitors. Again, these are very low profile. And here’s a 16 mhz crystal, which I assume gets divided up for timing on everything from the video signal to the CPU. And now I get to do these power regulators. First, I just want to get the pins in the correct shape. Then I’ll lay out some fresh solder on the big pad. And likewise, I will do the same on the back of the regulator itself. Then I can lay this thing down and heat it up real good, and it should become soldered right to the board. This is, of course, to help it transfer heat to the board. Next I’ll do the resistor packs. And some dip switches. And we’ll definitely need a video output jack. Most of the solder on this thing is structural, to keep the jack from moving or breaking off. And here’s something clever. This board can take either polarity of power from the DC barrel jack. You just flip the orientation of the jumpers. Since my supply is center negative, I will set the jumpers accordingly. And the last piece to solder is this keyboard connector, which actually goes on the bottom of the board. OK, so I’ve been working on this for hours. I know it probably doesn’t seem that way in the video, because I’ve just shown the highlights. Anyway, I’m just a few minutes away from testing this thing. I just need to install all of these ICs. And let’s have a look at a few of them. The first one here is the 65c21, which is a peripheral interface adapter. Basically, it gives you 16 lines of general purpose input/output, among other things. And here’s the 65c02. By the way, this is the same chip you’ll find in the Commander X16 when it is released. Next we have a 32K SRAM chip, this covers all of the base memory of the PET. This single chip replaces all of the smaller DRAM and refresh circuitry on the original PET. Here’s the ROM chip, which contains both KERNAL and BASIC. And here’s one of the more surprising parts. This one HUGE chip is just 1 kilobyte of RAM, used for the video RAM. The reason it is so large is because it is a dual port RAM chip. The original PET, and in fact all of the Commodore computers share video RAM between the CPU and video chip by alternating access cycles. That means the bus was usually running at 2 mhz, and the CPU and RAM each ran at 1 mhz. This is how they were able to share the same RAM, by taking turns accessing it. But this chip here sort of removes that complexity by offering two sets of IO and data lines, essentially operating as two independent RAM chips as far as the board is concerned, but is able to asynchronously access the same 1K of RAM on each side. And of course here is the character ROM. This should be 1K of ROM containing the original PETSCII screen font. And here of course, is the mysterious PET video chip that is somehow not a 6545. Remember what I mentioned earlier about the silkscreen on the board? Well, I want to see what this really is, so I’m going to peel off this label. And well, I have to say I’m a little disappointed. They are using an Atmel 8-bit micro controller for this. I mean, I get why they did it. It probably made the board smaller and cheaper by consolidating a lot of functions here. But, this micro controller is probably quite a bit more powerful than the PET itself. So I feel it is sort of out of place here. Anyway, the board is now finished. Well, with all of the electronics anyway. There are still these little nylon standoffs I need to screw in there. These just basically keep the board elevated from the surface so the solder joints aren’t touching anything. And of course, there’s this keyboard. I actually thought these were already soldered on, but then realized they are just popped into the holes, but aren’t actually soldered. So I spent the next half hour soldering all of those joints. And finally, it is time to pull out the TV and test this thing. We’ll need a composite video cable. Then we’ll connect the keyboard. And there’s no power switch on this thing, so it should just power on when I plug it in. And nothing. Even the power LED doesn’t light up. Of course, this sort of thing is to be expected when building a kit like this. I would have actually been surprised if it worked first time. One thing I noticed was that there seemed to be a short somewhere because I couldn’t measure any power on the board anywhere. I started by removing all of the ICs, just to make sure it wasn’t any of them causing the short. So, it’s still not working, but I have narrowed the problem down to this area where the 9 volts is converted to 5 volts. And I’ll show you an example of part of the problem. So, if I test here, that goes to ground. That’s supposed to be a connection there, but here that’s not supposed to be a connection. And I can also, if I go straight across this capacitor, there’s a dead short somewhere in this area. Haven’t been able to find it yet, I’m going to keep looking. OK, so after going over this thing AGAIN with a magnifier, I think I found the culprit. If you look closely here, you can see a tiny solder bridge. It’s just a tiny splattering of solder that has bridged these two pins together. So, I’m going to hit it with a screw driver here. And now it is gone. So, let’s try powering it on again. And lookie there! We’ve got a power LED. That’s a good sign. So, I’ll start putting the chips back in place. OK, time for a second try. Let’s see what we get. Uh, well. OK. I mean, I guess that’s an improvement over before, but still not quite working. However, after a bit more scrutiny with a magnifying glass, I discovered another problem. There was like 6 legs here I totally missed. They never got soldered. You know, it is things like this that make me very concerned about selling the Commander X16 as a DYI kit. And here we go again. Finger’s crossed! Woo hoo! 3rd time’s a charm! Look at that! Commodore PET startup screen on my TV, what a beautiful sight to see! Unfortunately, I can’t type anything because I didn’t connect the keyboard. So let’s try again! Excellent! Everything appears to be working now! I can’t say I love the keyboard, but it works well enough to test a few things. Now that we’re done assembling this thing, let’s take a look at some details on this. First of all, this kit is not particularly cheap. It costs 200 pounds, which works out to about $261 dollars at the current exchange rate. Or if you want a fully assembled version, it is 300 pounds, or $391 US dollars. The reason it is called a mini-pet is because if you compare the board with the one inside the original PET, you can see it is quite small by comparison. In fact, this board can actually drive the CRT in a real PET, it has solder pads here where you could put a header and attach the original CRT up to it. These DIP switches allow you to change the video output type. The larger CRTs use a different refresh rate from the smaller ones. And, of course, there is a PAL and NTSC settings as well. However, the version of the board I have is really meant more for stand-alone use. As you can see, there are two versions available, and the larger board is really better suited for using inside of a real PET. The idea here would be if the original board was missing or just not repairable, then this makes a great substitute. It is also gets its power from the original PET power supply and has the extra cassette port on the side. OK, so a couple of things I wanted to mention about the screen here. First of all, it’s actually sharper than this in person. It just looks blurry on camera for some reason. I tried messing with the brightness on the TV and focus on the camera, but this is the best I could get. So, it actually looks fine. But the thing I DON’T like is that the screen is not centered. I mean, at boot up it does look centered, but that’s because the PET startup screen is actually not centered like the later Commodore machines. So, to better illustrate this, I am writing the famous random maze program here so that you can better see where the edges of the screen are. So, it actually looks like it’s going right off the edge, but fortunately the very last character is actually shown completely. But now I want to try this other monitor. I found this recently and thought this would be the perfect monitor for the Mini-PET. It’s an old Tandy monitor, it is actually really small. The specs say it is a 12 inch monitor, but viewable is only 11 inches. And it’s a monochrome monitor with green phosphor. So this is really close to the size and look of the monitor you would have found inside a real PET. And it just has a regular composite port on the back. So, let’s try it out. Oh wow! I love the look of this! Unfortunately, it is also off-center as well. And this monitor has no controls on the back for horizontal position. Maybe there is an internal control, I’ll look for that later. But seriously, look at the text here. I love it! It’s so sharp and clear. And I definitely feel like I’m back in 1979 or something. This may be the perfect monitor for this. In order for a computer like this to be half-way useful, you need to have some way to load and save your work. That’s where a lot of the other hobby computers seem to fail. Fortunately, this one offers multiple options, just like a real PET. We’ll start by trying out an authentic Commodore Datasette. It has the port here, so let’s try it out. So here’s a good old-fashioned Radio Shack cassette. I’ll put this in a rewind it. OK, there we go. Of course, since this is the beginning of the tape, I’ll need to spool past the leader. Anyone remember doing this? OK, so I have a little program here and I’m going to try to save. “Press Play and Record on Tape #1. “ And well, I think it’s working. OK, now it’s done. So, I guess the next thing to do is reset the PET and try loading it back. So here we go, we’re going to load. “Press Play on Tape.” OK. It’s searching. And what do you know. It found TEST and loaded it. And there’s my program. So, yeah, looks like cassette drives work fine. So, What about disk drives? This MSD dual drive is the only drive I have that should work. The reason this one will work is because if you look on the rear, it has both the IEC serial port used for the later Commodore machines, and it also has the IEEE-488 port used by PET and CBM machines. So, let’s connect it up. And I just need any sort of disk to see if I can read it. Let’s try reading the directory. And yep, looks like it’s working. Obviously this game isn’t going to work on the PET, but I don’t currently have any PET software on disk. But, it does appear disk drive support works fine. But since PET compatible disk drives are hard to find and expensive, might as well use an SD-2-PET cartridge instead. You can stick an SD card in here and it just plugs into the disk drive port to emulate a disk drive. The little extra cable plugs into the cassette port and it’s just grabbing the 5 volts power from there. But if you wanted you could power it from somewhere else on the board with a little modification. So, let’s list the directory. Yep, there’s a bunch of stuff on there, mostly Commodore 64 and VIC-20 stuff. And we can’t really use any of that. But I’ll just put some PET stuff on the card, and there we go. Notice that the loading times are very quick, since the PET never suffered from the slow loading problem of the later Commodore machines. And there we go! Seems to work great! As far as kit computers go, the big problem with every one I’ve messed with in the past, such as the Gigaton for example, is that they either have no compatibility with anything, or like the PE6502, they are Apple-1 compatible, which is to be honest a terrible computer with little to no interesting software to run. So, I’ve always been asking for a kit computer like this that can run off-the-shelf software, or at least run Microsoft BASIC. And this one certainly achieves both, as there is a bit of software available for the PET and definitely loads of development tools you can use to make even more. With the addition of the SD-2-PET adapter, it is easy to write code on a modern computer and test it on the mini-PET. So, how does this compare with the original list of 6 things I wanted in my dream computer, which is now called the Commander X16. Well, they are both made from brand new off the shelf parts. And, it doesn’t have VGA output, but It does run on a real 6502 CPU. Originally I said no FPGA or micro controllers, but to be fair the X16 doesn’t achieve that goal either as we’re using an FPGA for video. Both machines do run Commodore BASIC. And neither one managed the price range I was hoping for. Although the X16 may yet get there in a later version. This computer kit, at least for me, is the coolest things to come along in a long time. And, It has sort of re-invigorated my desire for 6502 coding. In fact, I have a little surprise for you at the end of the episode about that, but for the moment, you know, as cool as this thing is, I do have some complaints about the design. For one, as already mentioned, I wish it didn’t have to use a micro controller for the video circuit. I also wish the video was more centered on the screen. I’m not sure what the reason for this is, but it’s a little annoying. Since it is using a microcontroller for video, maybe a firmware update could fix that? The other thing I really wish it had was a power switch. It’s nice that it has a reset switch. But when I’m done using the computer, I have to unplug it. It sort of reminds me of a Timex Sinclair 1000 in that regard. Now, I realize there would be no need of a switch for the other version that mounts inside of a PET case. But for the stand-alone version, a switch would be nice. Also, it has no expansion slots to get access to the system bus. Even a pin-header or something would be nice. That way if somebody wanted to hack in a sound chip or some banked RAM or something, they could do that. Of course, there’s this problem with this keyboard. I mean, the original PET 2001 had this horrible cash-register style keyboard. I’ve complained about it before. It isn’t just the size of the keys that’s the problem, it’s also the general arrangement is bizarre. I didn’t think it was possible to make a keyboard worse than that. But, here we are. This one actually succeeds in being worse. You might think, why not just grab a keyboard from an old PET. You know, one of the later models with the larger keyboard? Well, the trouble with that is, the keyboards on the PETs have issues as they age and, as you might have seen in my PET restoration video, they take a lot of work to get them fixed up. There are probably more PETs out there in the wild than there are working keyboards to go with them. So, for the purposes of a PET clone like this, taking a keyboard from an old PET is really not an option. So, I asked my friend Kevin from Texelec, who lives here in town and is also the one doing the Commander X16. I asked him if he could design a PCB that was designed to the same matrix as the PET keyboard, but could use like off-the-shelf-keys like Cherry MX switches. And, that’s exactly what he did. However, I didn’t really think there was any way we would be able to get it here in time for me to, before I finished the episode. But, let me be clear about this, my channel is not sponsored by PCBWAY or anything like that, but they’ve always told me that if I needed anything for the channel, that they’d be happy to make it for me for free. So, we called them up and checked to see if they could possibly rush us some of these PCBs and that’s exactly what they did. And sure enough, we had them in 48 hours. So, that’s surprising. Kevin assembled the first board. And tried it on his real PET. And by the way, this board is designed so that it will actually fit in a real PET, so if you have a PET with a broken or missing keyboard, this might be an option for you. Anyway, so the next thing to do is take this pile of cherry MX switches and start soldering them to the board. They only have two conductors, but it may look like more than that because of the weird footprint these things have. Anyway, the nice thing is, you can just snap them in like this, and they will hold themselves in place while you solder. And there we go, one switch successfully soldered. Now we just have 74 left to go. OK, so you might notice that the shift-lock is just slightly different from the other keys. It’s because there really isn’t a locking key out there that we can get from cherry that I know of, so what Kevin did was he designed it with an LED. So, you can see there’s two extra little holes for an LED to go. And, if you look around on the back side, you’ll notice a little bit of extra circuitry over here. And this is to actually operate the shift-lock electronically, since there’s not a mechanical switch to do it. So, the way this works is you just install the switch like normal. But cherry switches have a little area right in front for the LED to slide down in like so. Then you can just solder all 4 connections. And of course, chop off the extra. Easy peasy. OK, so I’ve got all of the keys on now, but there’s a couple of things I wanted to mention to you. The space bar actually has 3 separate switches. And, in Kevin’s prototype, he actually used all 3 and it worked. But, it was just a little bit stiff to use. So, I’m just going to populate two of them and try that out. I mean, really, you only need one but the space bar would wobble so you don’t want that. The other thing I was going to mention was that we’ve got this key on the sides here. There’s two of them. One here and and one here. And you’ll notice he has them labelled as space or extra key 2. The reason for this is because there don’t seem to be any off-the-shelf space bars as long as the one on the PET. So if you want this to fit in a regular PET case, you need something to fill the gap to make it look nice. And if you look on the bottom, he’s got like a little jumper area here where you could essentially tap in and wire these keys to be anything you wanted them to be. I can’t really think of anything particularly to use them for in this design. So, I’ll talk more about that later. But for the moment, let’s go ahead and do the space bar. OK, let’s talk about keycaps. I had ordered some blank white keycaps like this. And I had planned to print my own top labels for them. However, as you can see, I ordered these and they were shipped on August 3rd. But for some reason on August 7th they just got stuck saying “in transit, arriving late.” And that’s still the case here on August 16th while I’m putting this together. So, realizing the problem, I jumped on amazon and just found a generic set of keycaps and as expected, they showed up the next day. So, I guess I’ll have to make due with this. Now, this poses a different set of challenges. I can certainly install all of the keys that match, but I’m going to have to mix and match keys here the best I can so that keys of the proper size go in the proper place. I’m going to put custom labels on these, so it doesn’t really matter that much if what the keys says on top is what the key actually does. And here’s the space bar. So, I guess we’ll see how it works out with 2 switches. Yeah, I think that’s going to work fine. The big problem is, you can’t really swap in keys from different rows. For example, if I just snap on any old key in a place like this, you might notice it just doesn’t match at all. So, it’s really a challenge to figure out which key caps to use. Now I get to print out and test these labels. I actually designed these a week ago in anticipation for this project. So, time to print and hope they fit this set of keycaps. I am not sure exactly what these labels are made of. Maybe some sort of mylar. Anyway, they are very resilient. These things even seem to hold up to outdoors environments, the hot sun, wet conditions, etc. And here’s the full keyset. So, I have to cut these out, right down the lines. Ideally, I wish I didn’t have the lines, but without them I wouldn’t know where to cut them to the right shape. And then just apply to the keys like so. Now, I’m sure somebody will say that there are better ways to do this, like getting custom keys printed. But again, to be clear, this whole thing was conceived of just a few days ago and so this is all just spur of the moment. As I made my way across the keyboard, I later found it easier to line up the labels like this and then just press down. And here we go, all done. If it weren’t for the black lines on either side of the labels, the average person might not even notice there were labels on these keys. This is probably the most unusual looking PET keyboard to date. Anyway, next I needed to connect this to the mini-pet. And again, this is one of those things done spur of the moment, so this was just the quickest way I could find to attach it. I’m just using a pin header here that will eventually plug into the mini-PET and soldering the wires straight to it. Then I’ll solder the other ends right to the new PETSKEY keyboard. And now, I’ll turn it over, and try attaching it to the computer. OK, moment of truth. Hey, it works! And you know what, it is actually really nice to type on. Well, I say that. The touch of the keys is nice, but it still suffers from the bizarre layout of the Commodore PET. For those unfamiliar, let me explain. There are several annoying placements here. I’ll start with my number one gripe, which is the backspace key being all the way over here. My number two gripe is the cursor keys being up here. And yes, it’s the same basic concept of the cursor keys on a Commodore VIC-20 or 64, which is already unusual. But the thing is, I’ve been using these cursor keys since I was 6. So my brain is pretty well established using these 3 fingers to operate them. But on the PET, it requires using my thumb and these two fingers, which is totally different. And my last gripe is that the top row of keys aren’t numbers at all. They just produce these various symbols here. If you want to type a number, you must use the number pad. So, Kevin designed this keyboard as a potential replacement for the actual PET. But I’ve asked him if he would consider making a custom board just for use on the Mini-PET, and my thinking is, to re-arrange the keyboard some. Now, there’s nothing you can do about this weird row of keys, at least without modifying the kernel. All you can do is move them to a different place. But still, I came up with this design. This is about as close to a C64 keyboard layout as I can get without doing some sort of kernel modification to the PET. The keys in yellow here are ones that I moved. As you can see, the cursor keys are down at the bottom like a C64, and the placement of things like the home key, backspace, and run-stop are all in the usual place. This would really make life better for me. So, what do you guys think? OK, so now that we have a decent keyboard, let’s try out some PET software. Normally I’d show you this sort of thing through a capture device or an emulator, but I want you to see that this is running on the real hardware, so I won’t be doing any of that this time. I’ve already tested space invaders, so now let’s try Defender. You know, the graphics are a bit chunky of course, but it actually plays remarkably well. OK, here’s another classic, PET Tetris. Now, I’ve got to tell you, playing Tetris when looking at the screen from an extreme angle is actually quite difficult. It’s hard to line the pieces up. People don’t often consider I have to have the camera looking straight at the monitor in cases like this. Anyway, it runs fine. Next I’ll try PET Panic. And this is one game that just doesn’t work right. It gets this far and locks up. So, obviously the Mini-PET isn’t 100% compatible. But to be fair, when it comes to the PET there is no such thing as 100% compatible because not even all PETs are compatible with each other, as there were several changes over the years. Fortunately, Robin Harbron’s PET Minimae runs just fine. And here’s another game for you. This is called Ladybug. It is sort of a Pac-Man clone, but introduces some fancy rotating doors and things like that. Anyway, no problems here. So moving on. OK, this is The Hitchhiker’s Guide to the Galaxy. It’s one of many Infocom games available for the PET. However, this one clearly doesn’t work right. At first glance it may seem to be working. But, I believe it is trying to format the screen for 80 columns, and so it’s just not working right since this is a 40 column machine. Like I said, not even all PETs are compatible with each other. And why not try out the ultimate PET demo by ORB called No Pets Allowed. And yep, that’s as far as it gets. It just totally locks up. OK, so I said I had a surprise for you. I spent the last couple of weeks developing this. It’s a tile and map editor for a possible real-time strategy game similar to Planet X3. As you can see, it allows you to create a tile-set of 256 tiles each composed of 9 PET characters. And you can reverse the characters as well. And here’s the map editor. Let me just load in the map I’ve been working on. This is all just proof of concept of course. In fact, I bet somebody else could probably design some much better looking tiles than I did. But you get the idea. Now, the great thing about coding for the PET is that you can run the same code with only minor changes on basically any Commodore machine. So, here’s a C64 version. All I had to do to make this happen was change a few memory addresses and stuff in the code. So this was like 99% all the same code that ran on the PET. But, I did go ahead and add color to it for the C64 version. This would also run on a Plus/4, and to some degree a VIC-20. And of course, while I had a real-time strategy game in mind. Technically speaking, this editor could be adapted to any sort of tile-based game. So for example, going back to the PET version for a moment, here’s a little proof of concept I did for a super-mario style game. This is the same tile editor as earlier, I just loaded in a different tile set. I think the PET could absolutely do a game like this. I’m not entirely sure if I’m going to go anywhere with this or not, but I just wanted to have something to play around with to experiment with the possibilities. I’m hoping the existence of the Mini-PET will encourage more software to be written for it. I did want to mention that Kevin got several of these boards made and he is selling them on his website. I’ll put a link to that down in the description. I think over time I might try to come up with some sort of small case that I could mount this board in and the keyboard. That way it would make some kind of all-in-one little computer. But that’ll have to wait for another time because this video has been in the works for over two weeks and I think it’s time to finish it on up. But, if you’ve made it this far, I appreciate it. Thanks for watching, and I’ll see you next time! 