 Hello! My name is Robert Terakedis, and I'm on the EUC Technical Marketing team focusing on Apple Device Management with Workspace ONE. Today, I'd like to introduce you to a useful app for your macOS management toolset: hubcli. I'll break down this video into three parts. First, a quick overview of hubcli: What it is, what it does, and more. Then, I'll show you how you can use hubcli to discover capabilities and get help. Finally, I'll walk you through a few simple use cases for hubcli and how you can leverage the tool in Workspace ONE. First up, let's dive into an overview of hubcli. So, what is hubcli? Hubcli is a command-line tool packaged with the Workspace ONE Intelligent Hub for macOS. You can find it in /usr/local/bin/hubcli. The app is a client-side automation app that gives you an easy way to perform a limited configuration, API, and notification actions. The app also constrains those configurations and actions to affect ONLY the device where hubcli runs. Now, let's talk about how to use hubcli. For admins new to the tool, hubcli helps you discover and learn the other options using a built-in help menu. Let's quickly take a look at the different options. To start, simply enter hubcli (or /usr/local/bin/hubcli) at the command line. You can see hubcli outputs help text showing you the available commands to gain additional help. Getting the detail about each command requires typing hubcli, the command, and then the dash-dash help flag. Let's look at each command individually. The config command in hubcli allows you to get (and in a few cases, set) some fundamental configuration values within the Intelligent Hub for macOS. This functionality could be useful if you're troubleshooting and need to speed up sample intervals, or you need to know which UEM environment or AWCM server to which the device communicates. The notify command allows you to create custom, persistent cocoa notifications to the User. These notifications show up in the notification center within macOS and persist until the User dismisses them. The great thing about these notifications is the degree to which you can customize them. Notifications can be a simple informative notice with a "Close" button, or you can get sophisticated by including action buttons and additional text. The sync command triggers the Intelligent Hub to sync status and samples related to Intelligent Hub functionality. The samples include Internal Apps, Products, and device state (compliance). Note that this command does NOT trigger the Apple-defined MDM queries (such as deviceinformation, SecurityInfo, and more). Next up, the logs command. This command allows you to collect hub diagnostics and send them to the UEM console. If sent to the UEM console, they appear the Device Details view, in the Attachments Documents tab. The logs command is a useful troubleshooting tool, mainly since on-site tech can trigger the diagnostic and upload it for later review or escalation to the next support tier. Finally, our last command is for profiles. This command allows you to return a list of all assigned profiles for use in client-side automation, or you can use the command to install specific profiles on the device. You'll see this often used to install "optional" profiles as part of a software installation event. Before wrapping up, let's look at a couple of command lines to illustrate some examples of how you might use hubcli in your environment. On the left here, you'll see a rather long command line using the notify command. What this first command does is inform the User about a completed BBEdit Install. This example might be something you would use in a post-install script for the BBEdit Internal Application, which also gives the User the ability to launch the app using a customized "open" button. In the middle, we see the installation of a profile. This profile (with id #34) may be set to optional and contain Custom Settings specific to a software title. As Workspace ONE performs the software installation, you may run a script, including this command to perform some post-install scripting for app configuration. The last typical example I've included removes the menu bar icon for the Workspace ONE Intelligent Hub. While a small thing, different people have different menubar preferences. If your organization tends towards the clean, uncluttered look, you can send this hubcli command to hide that icon. I encourage you to experiment with using hubcli in any scripts or workflows you may be creating. If you have any type of feature request related to hubcli, please submit feedback and ideas at the Workspace ONE UEM Aha page. Thank you for your time, and I hope you've found this quick video about hubcli useful. 