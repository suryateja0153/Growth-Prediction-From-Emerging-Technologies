 - Hello. Hello and welcome to the second annual Tech Skills Day. It's a day to celebrate the power of technology skills, the power that they can create in the world and in your individual careers. I am Hank Green. I am luckily one of the people who managed to get a haircut right before this all began, so I'm still looking fairly fresh and sharp. I've just been looking at the chat. We've got people tuning in from all over the world. So thanks to everybody. From Ireland. Two people from Ireland. From Peru, from India, all over the place. So it might be the evening where you are. In that case, hello, kick back and relax. If it's the morning where you are, just tell your boss that this is more important than whatever it is that they thought you should be doing today. 'Cause technology skills are very important. Everyone knows on-the-job learning is key. I'm Hank Green. I am the CEO of Complexly. We're a production company and we make a bunch of different kinds of things on YouTube. Educational mostly. CrashCourse and SciShow are our two biggest shows. And so I am a bit of a geek. I've been interacting with technology for my whole adult life. And I will say, starting out here, we're going to talk to a lot of experts who know a ton about this stuff and I will not be one of them. I wrote my last line of code probably in 2007. So, yeah, I don't know a lot about Angular because of how iPhones didn't exist. I guess they did. Did they? Oh man. It's been a long road. So, my expertise has waned a long time ago. But I'm really excited to talk to some people who really do know what they're talking about and get to geek out about science and technology today. Two things that you should know. At TechSkillsDay.com there's an agenda under this video so that you can see what's going on, make sure that you tune in for the stuff that you're most excited about. Second, we've got a chat going and you can use that chat to submit questions and we will do our best to include some of those questions. I've got some that I want to ask, but we want to ask your questions as well. So, Mike D says, "But Angular knows about you." Thanks. That's not creepy at all. Thanks, Mike. So, checking out the chat always and we'll appreciate your questions and comments there. So let's be part of this community together. And I guess, let's just get started, 'cause it's a packed day. So we should do what we can while we can. And our first 11 a.m. interview, depending on where you are, Eastern Time, that is, we've got Rachel Higham, the Managing Director of IT for BT Technology. If you're thinking, what's BT Technology? It used to British Telecom. But then we were like, we're not just British. We're everywhere. So Rachel, hi and hello. It's so lovely to see you. Thank you for joining me today. - Thanks for having me. Really excited to start this global audience. Hello to everyone in the UK, where it's currently a sunny four p.m. - Oh, wow, sunny. I forgot what that's like. It's very rainy in Montana here where it is nine in the morning. - Oh, bless you. - So, this day is all about celebrating technology skills. So can you talk a little bit about your introduction to technology? What made you decide to pursue a career here? - Well I think it started with my family. My dad, my grandad, and my uncle were all engineers and I spent my childhood sort of fixing cars, washing machines, taking things apart. My mom was an accountant and my grandma ran a serious of businesses and was the sort of main bookkeeper for that. So, the pair of them used to send us all kinds of crazy math puzzles to solve and I fell in love with maths. And then we had this amazing chemistry set that we used to blow up my parents' kitchen with every Saturday afternoon. So, that is a real broad introduction to science. We also lived in the Lake District, which is a national part in the north of England. And we spent time as a family exploring. That really ignited my curiosity about the natural world. Then when I went to school, I remember building a school register on our school's first Apricot computer. And then a little bit later, coding some games on a Commodore VIC 20 that we had as a family. - Wow. - And then I was just inspired by a huge range of fabulous maths and science school teachers. I actually studied accountancy and law at university and found there were so many transferrable skills around strategy and commercial acumen and negotiation, and understanding the mechanics of different businesses. And then my interest in pursuing technology as a career happened when I got my first accountancy job in the mid-1990s, when most of our clients were kind of figuring out what they wanted to use a website for. And I realized then that technology was going to transform business models and create whole new businesses. I wanted to be a part of that. So I moved into the IT consultancy arm at that practice. And 23 years later, I get to design and deliver solutions for millions of people around the UK and the world. Some of which even improve and save lives, which is really rewarding. - That's awesome. That's a great and long story. And it seems like you were made for it. - I feel like it, yeah. - And the thing I hear over and over again is people who have had careers in sort of both tech and non-tech spaces is how much those non-tech skills turn out to be really applicable in their tech careers. - Absolutely. - Yeah, so it's great. We now live in a world where we very rarely will have one career our whole lives. But I think that that's huge advantage personally and can add a lot to society as well. - Completely. - So you've also lived all over the place. It said on my list, four of the five continents. But in America, we have seven. I don't know what's? So, how has that shaped your understanding of technology? How has it shaped your understanding of your work and also of, like, diversity and inclusion in the technology industry? - Yeah, I think it started, again, with my parents. We were lucky that they took us abroad two to three times a year when we were children, and that formed my love of travel and turned me into the explorer I think I am today. Yeah, I've always been fascinated by different cultures and histories and religions, languages, art forms, music, et cetera. And I guess from a very young age, I was exposed to so much difference that I didn't see it as difference, but just a rich set of influences and characteristics that made up a whole ecosystem. And I think that gave me a curiosity and an empathy and an appreciation, that it's when that richness comes together and intersects that magical things happen. Whether that's the fusion of flavor in fusion food or whether it's rock music and classical music coming together or interdisciplinary approaches to solving problems or true diversity in a team. And I think about what we do at BT. We design products and services that are used by millions of customers. And if our technology teams aren't representative of the diversity of those customers, we're gonna make mistakes, then we'll fail in serving them. So, but alongside that diversity, you have to build the right safe, inclusive environment that makes sure everyone in a diverse team feels supported, feels like they can bring their whole self to the table and make the contribution that will take our organization beyond limits. - Yeah. So digital transformation is a buzzword that to me just describes the entire last 30 years of the world. But you have led digital transformation teams. So I am curious how you define that, specifically for your IT teams. - I define it first and foremost is that it's a cultural, behavioral, and mindset change. Yes, it's about using digital technologies such as cloud, data, AIML, robotics to solve problems. But it's so much more than just digitizing the business. It's got to be rooted in a radical re-imagining of processes, the way we collect and organize data and the way we deliver user experiences. And to do that well, we have to be curious and empathetic. We have to be intrinsically human-centered in everything we do. And to be honest, we should only ever digitize something if it adds value to or improves the experience of our customers or our colleagues. We've been embracing human-centered design, or design thinking as it's sometimes called, for three years now at BT. And it's really built that empathy and curiosity into my engineering teams. It's made sure we actually go out and do the research with our customers to deeply understand their problems and empathize with them. It helps us think in a divergent way so we're not limited by previous beliefs. And then we test and deliver solutions iteratively. So we know from the very beginning that we're going to add value as we do that. - Yeah. So you've also been fundamental in BT migrating, their cloud migration. That's something that other organizations might be in the early stages of. Is there insight that you have for people who are in those early stages of that transformation? And also, like, their re-skilling in that world? - Yeah, we're also actually fairly early in our journey in BT. I've been further ahead than here in previous organizations. And from that experience, I say that, don't think about this as a technology change. Shifting to cloud is as much a whole business transformation as it is a technology transformation. And you're gonna have to go on an education campaign with your colleagues across security and legal, compliance, data governance, procurement, HR, finance. Even business operations and marketing teams. They all need to understand this. And I think secondly you have to get really clear on the actual business problems you're gonna solve by shifting to cloud. Are you going to be able to scale services to cope with unexpected peak demands? Are you going to provide evergreening SAS capabilities to keep your business processes and practices current? Speak about it like that. And then you need to create your really strong relationship with your finance teams who are gonna have to work with you to model the shift from CapEx to OpEx, put new governance and approval processes in place to manage and control spend as it's consumed in the moment. And you have to take a pan-organizational approach to this. So I'd really recommend adopting a tribe and squad structure. Bringing the skills you need in from across the organization to create all of the guardrails, all of the practices and policies, and the hardened platform engineering you need to do. And that will help you completely reimagine all of the operational processes around cloud, rather than just trying to evolve them slowly from your old on premise thinking. I think that's the mistake a lot of companies make. They stay in the old world and try to do forward rather than reimagine a completely new cloud native landscape. - Yeah. Yeah, I mean, are there any, like, I don't know, to the internal teams that you're talking to there, are there any, like, specific insights? Like if you're talking directly to, I don't know, if you're talking directly to, like, obviously you have a really big picture look at this and I feel like I want some more granularity. - Okay, go for it. - But I don't know how to ask for it. - Okay. Well your engineering team, your software engineering teams for example, they're gonna have to acquire some core skills to be able to re-architect and re-engineer their applications for the cloud. So that's one sort of granular insight. Your infrastructure teams are going to have to learn to let go along with a lot of their manual activities they used to do to upgrade, patch, scale infrastructure. That all goes away. And they may feel that their whole role is under threat. So to take them on the journey where they come out with a meaningful role, you're gonna have to invest in a lot of re-skilling. Have them on board. Certifications. You'll go through a level of training and learn the skills they need in the new world as opposed to having to leave the organization. - Yeah, that makes a ton of sense. Thank you. So you've led a number of initiative to encourage more girls and young women to study technology. But as, like all of us, what can we be doing to help the industry be more diverse and inclusive and friendly of all perspectives and kinds of people? - Yeah, it's one of my passion topics and something I can talk for hours about. - Well you have one minute. - Okay. Thank you. And I think schools are struggling to keep up with all the possibilities available to young people who are interested in pursuing a STEM career. And they really do struggle. So I think it's down to companies like us to lean in. I think it's whole industries need to work together to rebrand themselves and make them an exciting place to have a STEM career. And take the lid off. Really reveal what a day in the life for some of our technology roles are. And how technology is actually pervasive in every role these days. We bring children into our BT TV studio and we show them all the roles in a TV studio to produce a sports show. But just how technology is a core part of that. The charity that I'm a chair of, we run makers camps where we bring young people into the building and we bring technology into the physical domain by using 3D printers, immersive sound rigs, virtual reality headsets. So they can actually interact and feel and pluck at and poke the products of technology. Because so much of technology today is shrink-wrapped. You can't take your iPhone apart. You have to have a specialized tool. You can't explore. And it's that craft and that making that we grew up with as kids that built that curiosity and that problem-solving muscle that isn't there anymore. So we've got to find creative ways to go and do that. At BT we've got a scheme Barefoot where we go into schools help teachers better teach the computing curriculum by giving them robots and activities and lesson plans that bring it to life and make it exciting. I think the more we do that as organizations, the more we can inspire kids to follow in our footsteps. - Yeah. Yeah, I mean, there's that area of it where we're trying to figure out how to get kids and young people excited. There's also, do you feel like we do a good enough job in general of making it a space that is open and friendly to all kinds of people? - I don't think it is generally an inclusive space. I think technology as an industry needs to massively improve that. And telecoms is right up there. I think if you look at many of the images that are used for our industry, they're generally male and white. And so I think imagery in the media is so pervasive and into people's consciousness that we've got to fix that. And I'm pleased to see that BT has really started to balance our imagery, where all of the beautiful diversity of all our people that work with us is represented more fairly. But yeah, industry has really got to step up and start showing that we're inclusive, not just saying we are. - Great. Well, thank you so much for chatting with us, Rachel. And I know it was brief. I wish we could talk longer and more, but we have a packed day today. So, enjoy your evening there in sunny England. - Well enjoy the rest of Tech Skills Day. - Thanks very much, bye. - Have a great one, bye. - And now we're gonna move directly on to Wendy Warham, who is the VP of Digital Transformation and Innovation at Fujitsu. So that's no small task and job. Hello, Wendy. How are you doing? - Hi. I'm good, thank you. - Oh, perfect. That transition happened like as if we've done this before, which we literally have not. So that's great. I'm really excited to talk to you. And I first am excited to learn a little bit about your background and how you got to be in this role at Fujitsu, - Okay, so I've been with Fujitsu for quite a number of years, a large number of years, and have probably never stayed in one role for more than a couple of years. So I guess I'm quite curious and keen to learn and get onto the next thing that looks more interesting than the one I've got. - Yeah, that's awesome. And they let you. You're just like, I'm done with this, move me somewhere else. - So, yeah, time to do something else. So I guess what that gives is I've had lots of experience in different parts of the business. Which then after an amount of time, it's very useful for the organization. So yes, I feel really lucky to have progressed through the company and done lots of various roles at lots of levels until I've got to this point. - Can you talk a little bit about which of those roles are most valuable to your work right now? - So I love working with the customers and people. So I like working on business challenges and bringing people together and taking them on a journey where the impossible gets achieved and we all learn and grow and probably have a few challenges along the way. Lots of laughs and lots of fun, and delivery real value back for our customers and the organization. - Yeah. So it's a big company. It's a company that's been around for a long time. - Yeah. - What does innovation look like at a company that sort of has such a history, but also, like, really relies on a lot of forward thinking? - Yeah, so for me and for Fujitsu, then bringing people, technology, and the business together where you can really deliver tangible change back to that business is absolutely huge. Because I guess most businesses are trying to grow their market share, keep compliance, keep the best people, and make money. Then actually making sure that whatever we deliver and we agree we're gonna deliver, we can do well and keep those people with us on that journey. Because if we're not improving one of those areas and we're not improving the customer experience, then that's a lot of money spent for not a lot of value. - Right, right. So, we're here talking about tech skills today. And I imagine they remain a pretty key advantage for people coming into work. Do you find that? And, like, what are the key strategic advantages of that background right now? - So I think the most important word for me is relevance. So it's making sure that the people we've got can continue to learn and grow and remain relevant. And the people coming in, we can learn from, and then try not to morph them into something that we already are, but learn from them so we all evolve and grow. And that's massively challenging, because the environment and the culture needs to be aligned and people need to be generally motivated and curious to keep the learning going. - Yeah. Yeah, I mean, right now a lot of people are staying home. Maybe taking that time to skill up, using Free April here at Pluralsight so that they can get some free education and skills. Do you think that it's possible that this weird moment that we are in right now might lead to maybe a more diverse pool of tech talent after, like, on the other side of this mess? - So I think it's a couple of things, isn't there, that organizations and individuals have got to consider. So at Fujitsu, we're pushing that any free time, we should spend learning and looking after our mental health and wellbeing. There might be organizations who can't do that right now. And I guess as individuals who are wrestling with huge challenges. Caring for children, learning future roles. So I don't think it's an easy throwaway comment, but we're trying to balance those challenges. And it's, yeah, it's certainly meeting everyone's children and getting used to what's going on in the day is certainly a very interesting way of working that's become our norm, really. - Yeah, yeah. I mean, yeah, a lot of my friends are in their 20s and don't have kids. And they just have so much free time to learn and do stuff and try out new things and I'm just like, I have one child and I can't do this and I can't imagine how anybody with a bunch of kids. - It's fantastic for me, because I've learned all about my people. - That's great. - Because the children have told me exactly what the parents are like. So it's been really entertaining. - Yeah. So you've done a lot of work trying to empower women at Fujitsu. Like, how does that play out? What does that work look like, and how do you do it without coming across as sort of a curmudgeon? - So, it looks like dealing with real challenging topics at the board table and bringing fact and truth. So it looks like activities around the gender pay and equal pay, and really naming things and getting behind data to find out what's the real truth. - Right, yeah. - It looks like providing development for women to grow confidence and get them to be the best version of them. And it looks like working with the guys around being allies, to just respect, really, and try and get each person to be themselves. So we've got a better balance in the workplace. And it's, yeah, I mean, it's a subject I guess we didn't really talk about a few years ago. But we're much more open to, what do we need to make our women succeed and what do we need to keep people balanced and willing to see each other's perspectives? And, yeah, just be a little bit more open. - Yeah. Do you find that you can tell a story that gets people open to that message? - Yeah, it's got better in the last couple of years. It's gotten much, much better. If you are sat around a board table, and at times I've been the only female and I'm in a room full of guys, then it's not deliberate, that they don't see another perspective to one of the crew that's worked together for many years. So it's really challenging. But I'm really lucky that we've got some really great people. And even changing behaviors around childcare and working hours and being able to balance family and work is hugely important. - Yeah. We have very little time, but Christine Coleman has asked a question. "Do you think just telling everybody's "salaries would decrease gender pay discrimination?" Boom. - Thanks Christine. I think-- - As a giant company, let's just publicize how much money everyone makes. That's not a privacy violation. - I think it's been challenging. But the data work that we've done at Fujitsu is really encouraging. - Good. - Because we're now digging into detail that it becomes really transparent where we've got issues and we're tackling those issues and we're making good headway. So, yeah, that is obviously a hot topic. - Yeah, I mean, well obviously, like, there are issues about telling people other people's, like, telling people, saying, like, what an employee's salary is. But you have that data internally. You can use that data internally. - Exactly. - And you can learn from that. Well that's great. Thank you for joining us for this very brief chat. Sorry that it's so brief, but I want to learn more from you, and yet we can't. This is Tech Skills Day. It's very fast. - Thank you so much. It's good to be here. Thank you. - Yeah, have a lovely evening. - You too. - All right. Ah, and this is the part where I sit here and we haven't actually tested exactly what this looks like and the part where I have, I think, five minutes between now and when that happens. So I think, oh. I will be muted by the host and the screen will come up and everybody can take a little break. - Hello everyone. And we're back here at Tech Skills Day. Thanks so much to our first guests, Rachel and Wendy. Great conversations so far. And now we're going to be talking to one of our premier chats today. I'm very excited about it personally. We're gonna be talking with Andrew Yang, who is an entrepreneur. He's the founder of Venture for America. You know, former presidential candidate, change maker, maker of all kinds of new thoughts in America. So, excited to meet with Andrew today. And I think that we will introduce him into the thing any second now. Oh, there, ah, hello. I don't have audio yet. He's connecting the audio. It says it right there on the bottom. And now you're muted. - Oh, sorry about that. - Yeah, you got it. Hello, how's it going? - Has been turned to our will. - You're the technology candidate, so I'm glad that you could push all the right buttons in the right order to make it happen. How ya doin'? - Yes, I'm doing well. I love your bookshelf. It makes you seem so erudite. - Yeah, well this is all, this is like the comics shelf. So, it's not that erudite. - Still counts. - It does. - Comics are literature. - Absolutely. So, the first question I have on my list here is just, is whatcha been up to? - I've been really busy. I'm part of several campaigns trying to get money into people's hands. My organization, Humanity Forward, has distributed 1.4 million in economic relief. Still going. So if you want to help someone, donate at movehumanityforward.com. I'm also part of Project 100, which is putting $100 million into 100,000 struggling Americans' hands. You know Andrew Yang is the free money guy. You've got to give people money. - Got to fill that brand. - Yeah. I'm working with policymakers and members of Congress trying to put universal basic income through, at least for the duration of this crisis. I'm in touch with the Biden campaign trying to help him defeat Trump. Yeah, I mean, there's a lot of stuff going on. This is a really, really tough time for the country. So we all have to do everything we can. - Right, right. And I mean, UBI isn't the only thing, or you had a freedom dividend, isn't the only thing you championed. So I wanted to talk a little bit about your campaign's technology plan for things like artificial intelligence. Why is that a thing that government needs to be taking stock of and how do we need to be doing that right now? - Well there were at least three major issues around artificial intelligence that I was deeply concerned about. Number one is that it's going to replace a lot of people's jobs. And it's already happening in some contexts in big companies where AI is replacing back office clerical workers, a lot of financial firms, and it's just going to accelerate. So that was concern number one. Concern number two is the one that's shared by some of the senior-most technologists, which is that if you have AI development that goes awry, you could break something very, very big. And you might not know what had happened until a little bit too late. So I had some very, very famous technologists, including Elon Musk, tell me, look, on this one, you kind of need some guardrails because the competitive dynamics are that you go as fast as possible. And then if everyone's going as fast as possible, then someone's gonna do something regrettable. The third thing is that China is positioned to potentially leapfrog us in AI because they have more access to more data than we do. They have very few compunctions about using that data. Very little privacy. And they have equivalent or superior computing infrastructure than we do, because the China government potentially just writes a blank check and supplies billions of dollars worth of servers and infrastructure to its private firms in a way that even our biggest private companies can't. So those are three of my big concerns around AI. - Those are big ones. - All that said, AI could be awesome. It could help us cure cancer, address climate change, solve some very, very big problems. But there are some things to be concerned about. - Yeah, I mean, so the concern that we're looking at the future and saying, like, okay, well, the only incentive is to go as fast as you can and break as much as you can along the way because, like, we've seen the last 15 years of Silicon Valley and the people who move the fastest are the ones who come out on top. That is true of every industry right now. Why is it particularly concerning with AI? - It is true. And we're having problems not just in tech. I mean, you have industrial firms that have, like, pushed the envelope in various ways. But in AI, it's particularly concerning because if you were to unleash AI in a way that was not properly controlled, it could wreak havoc on an existing system. It could shut down your infrastructure. It could be used. Someone compared it to a highly efficient weapon. Like, if it was in the wrong hands. And so the destructive potential is just higher for AI than it is for many other technologies. - Yeah. - Again, not to scare people. Because I am pro-progress and AI is potentially an awesome, awesome technology. - Game changing, yeah. Yeah. I agree with you. So I make content for young people. Like, I've been doing it for a long time. It's something that I, like, I've seen a lot of the power of technology to make really positive impacts in people's lives, particularly young people, but also really negative impacts. How do we-- - Are you a parent, Hank? - Sorry, what? - Are you a parent yourself? - I am. I have a three year old son. He's great. He's great. - I've got a seven and a four year old, so we're right there with you. - Oh, yeah. - Both boys, both boys. - Yeah, he doesn't interface with technology too much yet. - Good for you. That's good parenting. Listen to Hank. - So, yeah. I'm just curious how we in this field can be more aware of our responsibility and take that responsibility more seriously. Sort of our impact on society in general, but also particularly on young people. - This is such an important topic, Hank. I love parents. And the research shows that we've seen a surge in anxiety and depression and mental health problems. Teenagers, particularly teenage girls, that's coincident with smartphone adoption and screen time and social media use. And the people that are most vigilant about technology are people like you know a lot about it. But if you're a time strapped parent, it's the easiest thing in the world just to give the kid a screen when you're trying to eat a meal or you're trying to do anything that's going to just, essentially, calm your child. And that's the reality. And one thing I'm very passionate about is it's ridiculous to say, like, oh, it's on the parents. It's like, are you kidding me? You have these multi-billion or even trillion dollar companies with the smartest people in the country trying to turn these supercomputers into dopamine delivery devices for kids. And the kids, when we're not all trapped in our homes, are, like, out on their own for, like, hours and hours and they need the phone to socially function. We're outgunned. And so this has to be something where the government just has some role to say, look, your financial incentives are all in this direction. The health of our kids, unfortunately, cuts the other direction. So we're gonna have to cut back a little bit on the some of the extremes. And so there's a design emphasis. Tristan Harris, you probably know him, Time Well Spent. I think that needs to be the guidepost for intelligent policy. - Yeah. Yeah, I mean, and is there ways that we internally inside of the industry, so obviously government has a role to play here and I'm definitely in favor of that. But, like, from the inside, what can we do? How can we put pressure on the leaders of these companies, whether we work there or whether we interface with them? And I think that a lot of them do want to do the sort of right thing as long as it doesn't affect the bottom line too much. - Well, this is really the, what you just said at the end was, like, the key thing. And this is one of the thing I made on, like, the case I made on the campaign trail. - Yeah. - Is that people are going to do what their incentives suggest. And so if you're a company, I think that most people in most companies are just like anyone else. Where if you say, hey, like, do you want to poison a lake? You'll be like, no. The problem is that we have very extreme financial incentives that cut in a particular direction. So, inside the industry, here's this potentially controversial point of view I have, is that if you are in the industry, you have to come clean and say, look, all my incentives are going in this direction. So, like, we should probably, like, have some kind of counterweight, and come clean and say my organizations' incentives are all to go as fast as possible or to make my apps as engaging as possible or to sell as much advertising over it as possible. And so, collectively, it's almost like your child who comes to you and says, hey, like, I'm not gonna be able to control myself, so do me a favor and take this thing. So, that to me is actually more honest, productive approach, than saying, like, we're going to be able to moderate ourselves despite the fact that all of our incentives are all in one direction. - Yeah. I mean, that's great because you never get, they never say that and they will never say that. But I think that, like, what I've seen is internally at some of these companies when the employees get sort of all up in arms. Like, they do really care about preserving their workforce because it's expensive to replace employees. So employees do have some pressure that they can place over their CEOs. I don't necessarily see that it always is being organized in the right way. But like, I think that there's some, maybe some space for us to have a conversation about what labor looks like in the technology landscape and how that labor can organize not just to help the employees, because they actually are pretty well taken care of, but to help society. - That's a very great point, Hank. Because the truth is, most tech firms really do listen to their employees, 'cause their employees are the big value drivers in many cases. Like, if you have this army of talented people, that's really your product in many, many firms. And so if you have a critical mass of your employees who say, hey, we disagree with this practice, they will listen. I think that's a great point. The key really is to focus on the right battles. And say, like, look, like this is something we can really make a difference on. - Yeah, absolutely. So what's Venture for America up to right now? What's it doing? - Venture for America, I am so proud of it. And it is, like many other organizations right now, we're trying to figure out this environment. Because it's difficult to, for example, convene hundreds of new recruits in one place, traditionally Detroit, if everyone's stuck at home. It's hard to have dozens or hundreds of firms around the country onboard people and recruit if we're all stuck at home and many firms don't have clear visibility into what the future holds. This is actually something I'm deeply concerned about. It's why I started Venture for America, is that we need to cultivate entrepreneurship in this country. The statistics are staggering bleak, where young people aren't starting businesses at the same rates as prior generations. And one of my great fears is that this coronavirus crisis is going to stifle entrepreneurship for a generation. Because if you look out and you see some of the small businesses that are getting pummeled right now, it's like, that person who was, like, taking a risk, like, trying to start their restaurant or bar or a food truck or whatever it is, like, now he's just getting blasted out of existence. If you're a young person, the lesson you're getting from this is that maybe we should play it safe. I mean, I'm worried about my own kids. My kids are introverts generally. And so, like, I feel like this is, not to say there's something wrong with introverts. I mean, I love introverts. I'm an introvert. - Good save. - But like, this environment is not exactly, like, good for kids to learning how to, like, take risks, stumble, and potentially go out on their own. - Yeah, I mean, at the same time, we've seen in previous economic crises that when people are sort of, don't have any other way, that they start to figure out new ways of making money. And that's not gonna be something that, you need to be looking at things that have really low barriers to entry where you make money from the first sale kind of businesses. And those are more available now. Those are things that exist more now. But like, you are right that anybody who started an ice cream shop in the last five years is pretty in trouble. And, like, that is a lot of American business is small businesses like that. So it is sobering. - Yeah, hopefully, it's one of my visions, Hank, is that we can rewrite the economy in our hurry on the way out to, like, give us a chance to rebuild. Not to say, like, oh, if we can just go back to normal. There is no going back to normal. We need a massive society-wide initiative like the Marshall Plan to help rebuild an economy so that people have a real path forward. - Yeah, and I mean, I've got a question from the audience here that is in this vein. So, given that COVID will push automation even faster now, that many people are out of work. So that probably makes UBI even more relevant. How do you get the tech industry as a whole to be a champion of UBI now more than ever? - Oh, I love this question, obviously. And I'm happy to say that there are many people in the tech industry that supported my campaign and supported universal basic income. And now I think that support is close to a consensus, where I saw that the majority of Americans now believe that we should have cash in people's hands ongoing. And that was the population at large. I have a feeling that it's even higher among the tech industry. So we'd certainly love for people in the industry to come out and say we should have universal basic income. And I think that perspective is very powerful, because I cannot tell you, when I was campaigning, I must have had hundreds of people come up to me and say, my job has been to automate away other people's jobs for quite some time and I am supporting your campaign because I know what I'm doing, I know what we're doing. Like, so, you should just, like, yeah, it's a little bit like what we said before. It's like, as long as you own what you're doing, then we have a chance to make progress. And I think that if your job is to automate other people's jobs away, like, that's not intrinsically a negative thing. Like, somebody's job-- - Yeah, it's how people add value. It's like one of the main, like, throughout history. Like, agriculture automated people's jobs away. - Yeah, and it made the industry more, grew more food. So, one of the things that I've said, and this is just a, like, just a sign of how messed up our thinking is, like, it's not the innovator's responsibility to figure out, like, the downstream impact six states away. Like, of what they're working on. Like, that's impossible. Like they have their hands full just trying to make their own thing work. Like, it's theoretically our society's or our government's role to figure out what the downstream impacts are and then, like, help people have paths forward. Make it so that we'd actually be excited about autonomous vehicles instead of having people freaking out that their livelihood's about to disappear. I mean, so, the techies that I've talked to, what's great, Hank, is that they usually just say to me, like, in private being like, hey, yeah, FYI, like, this is what we're doing or this is what I'm doing. But now they say it publicly. Because they're just like, look, at this point it's pretty clear. - Yeah, and I mean, also this is, like, even without an actual freedom dividend or UBI kind of system, we're gonna do a little bit of a test of that right now where a lot of people are gonna have unemployment that is comparable with the amount of money that they would be making if they were employed. And hopefully this first $1000 payment will not be the only one. So, maybe we get some data on what an, 'cause I think that culturally, like, we're not entirely sure, like, what impact this has. But, like, we get a chance to test it. - Well, yeah. Tens of millions of Americans are getting $1200 in their bank accounts right now. And one thing I'm confident of, they're going to like it. But they're also going to see. It's like, hey, it didn't change my personality. It didn't make my neighbor into a layabout. Like, it's just helping me pay for groceries. - Exactly. - And, like, paying last month's rent. - Yeah. So another thing that we're thinking about right now a lot is gonna be telehealth. Like, it's already happening and has to be happening right now. I have done a telehealth appointment for the first time in my life during this. What do you think is needed in the telehealth sector to make us better at healthcare, to make us better at serving our communities? - I worked in healthcare technology for four years. Most people don't know that. I have stories to tell. But I used to joke that healthcare is where good ideas go to die. - Yeah, I hear that. - So why do I say that? Like, the problem really lies around, like, the structure of incentives. It's that, if I'm delivering healthcare in a particular way, then I'm making money. Then my incentives to change my practices are not really clear. And so because right now the measurements aren't built around keeping you healthy, Hank, to keeping me healthy. Like, keeping us out of the hospital. Like, the system's revenue is essentially correlated to activity. And so if I go in and, like, you do more to me, then you made more money. And theoretically that helped me, but maybe there was a way to help me that involved less activity. Maybe there was a way to help me that involved my never going to a hospital in the first place. The big catalyst for telehealth aside from this pandemic is going to be if we actually have structural incentives around effective delivery of healthcare services and guidance that is not tied right now to revenue generating activity. And this is, like, the problem in healthcare. 'Cause we're already spending 18, 20% of GDP on healthcare to worse results than other countries because of this set of incentives I'm describing. Like, if you do more, you get paid more. So let's do more and get paid more and do more. And then unfortunately, what does that also mean? That also means that if you're, like, a poor black community in Mississippi right now, like, struggling, we're not getting services to you, like, your health does not actually go into our measurements. It's like, I didn't make money off of you, fine. You didn't have any money to begin with. And so, like, I mean, it's very dark. But that's just-- - Yeah, no, it is dark. And like, you say that we spend more money to worse results, but that's not true if you're in the top quintile. Like, those people, the average 50-year old woman in America in the top quintile is probably gonna live to be longer than the average person in Japan. Like, the healthcare system works very well if you have money. A lot of money. But that does not-- - Yeah, yeah, you're right. Like, we spend more money to worse results society-wide. But certainly if you are in a particular socioeconomic band, then you're getting what you need. - Yeah. And that is something for us all to grapple with and look at. And I think that the healthcare industry needs to look at that as well, because they're first do no harm. Like, that's what they do. And if that's not what the system is doing right now, the system does need to deeply change. - Making this a little bit more on that end. It's like, why do we have a constant under supply of doctors? Like, do we have a shortage of young people that want to be doctors? No. - No, no. I know exactly why. I'm in the education industry. So this is my fight. This is the thing I'm mad about. You know why? Organic chemistry. You know why? Because we don't start new medical schools in America. You know why? Because, like, it's too expensive and it's designed to be exclusive and it's designed to create scarcity, which is not what you want to do with healthcare. Sorry, now I'm being the person that's scary. - Yeah, this is exactly right. And this is the way it works, cutting in the opposite direction of telehealth. You know what I mean? Like, this is something where technology could make a big difference. Where if you have telehealth for existing doctors, but also you could have, like, AI diagnosticians doing triage. And like, if you have a routine condition, and you never actually needed to talk to a human. But can you imagine the medical lobby looking at that? They'd be like, no, it must be a human. And you're like, does it really? - Yeah. And like, these problems are problems that technology could help solve. But like, we, as you say, that's a great thing. Like, healthcare is where technology solutions, like, good ideas come to die. But I do want to get back onto a more tech skills radar. I've got a question that I really love. Somebody asks, "Where do you find user experience "designers fitting into roles in government? "And would you utilize design thinking sessions "in your administration, if and when you have one?" And I think this is so important that we think about UX in government, that we think about how, as technologists, we can provide services for government. Because government is the place that actually serves all people, not just customers. - I love this question so much. And I would utilize design thinking and user interface design in every point in government. Because this is what's missing, really. It's like, if you have a difficult experience trying to navigate the IRS or the DMV or whatever it is, like, it's not like you have an alternate IRS or DMV to go to. And so that there's like this, well, you don't have a choice and we're just behind the times. The other thing is, like, we just make everything so complex at that. And, like, I hear this from people who interact with government at every level. Right now we're struggling because the state unemployment offices can't process our claims. Like, I just saw they said they have 1000 people answering phones in New York trying to process claims. And then part of me was like, well, that's better than having fewer than 1000 people answering the phone. But like, why is it that people necessarily need to, like, call? They're gonna be like, what information do you need precisely that, like, we can't get from? So, the principles of design thinking would be front and center in my administration. My legacy would be that government is easier to use. Actually, I hope to have lots of legacy. One will be giving everyone money. Two will be organizing the economy around how we and our families are doing. But somewhere on that list would be ease of use of government. Because I am a frustrated citizen just like the rest of you. And working in technology, you know that things could be designed much, much more efficiently, elegantly, simply, and be more user friendly than they are. - Yeah. Yeah. And Code for America is doing great work on that front. There are organizations working on this. So you should check them out if you're interested in that. - I love Code for America. They have been working on this for years. I'm a big fan of Jen's and the whole squad. - Yeah, yeah, they're wonderful people. I love that we have a mutual friend. Oh, that's great. So I'm also curious about the future of politics in America, how that intersects with artificial intelligence and technology generally. Like, whether that's this election or whether that's the next 20. - Well, I'm very much focused on the intermediate future of politics, which is what the heck happens in the fall? And technology is going to play a role in that. One, I mean, we're gonna use this awesome technology called the mail, hopefully forward. - We'd better. Yeah. - I mean, this is like a big deal. 'Cause can you imagine trying to run an election under the current circumstances? So we need to make sure people can vote remotely. And right now, you imagine it might be on your smartphone, but that's not realistic. Like, vote by mail is going to be the best thing we could pull off in this timeframe. The other big element is technology is going to be how the heck are we messaging? Because a lot of the traditional ways of convening large rallies and having giant crowds and getting together and doing traditional media, a lot of that's out the window, obviously. And so right now, the Democratic Party is trying to figure out how we can hit its message in a current environment. And so that's going to be podcasts, Facebook, Instagram, everything else. Pretty much any way to reach people right now, you're going to see significant investments in. - I completely agree. And I'm also worried about the role that technology plays in sort of information and misinformation more now than ever. - Yeah, it's a major problem. You had some foreign misinformation in the last election almost certainly. And then because-- - And it worked. So they're not gonna stop. - Like, oh, they're gonna stop now? I mean, of course not. The other thing I want to just take this opportunity to say is like, how the heck has Congress not authorized itself to vote remotely? Like, the whole thing is insane. It's like every organization. Can you imagine the organization, if they were like, hey, you have to come into the office for us to do anything? It would be like, are you out of your mind? So anyway, like, that to me is just mind-blowing. - Well we've got you for negative minutes now, but I want to ask you one more question, which is just-- - Come to my headquarters. I could talk to you all day. - Okay, well then I'm up for it some other time. Can you tell me, just a quick personal aside, what your first sort of experience or engagement was with technology? - My major early memories of technology are the Atari 2600. My dad bought it. And then we came downstairs and my dad was playing Asteroids, like, in the middle of the night. I'd never seen my dad, like, in this state. It was like three in the morning. I was like, what the hell is going on? But certainly from that point on, then it seemed like we could just do whatever with this Atari 2600. So it was Asteroids, Defender, Space Invaders. And I was a gamer for years after that. - That's great. Wonderful. Well, Andrew Yang, thank you so much for taking a little bit of time with us today and letting me rant a little bit, but mostly I get to let you politely engage with the difficulties and injustices of the world right now. - Oh, thank you. It was a pleasure. Thank you, Hank. Thank you everyone. Stay safe out there. And technology has to be a key part of the-- - We're the problem solvers, yeah. - We want to try and build for ourselves. Thank you all. Appreciate you all. - Thank you, Andrew. Well, that was great, wasn't it, everybody? Thank you to everybody in the chat. Thank you to everybody for sending in your questions. We've got another guest on the way. So this noon Eastern Time interview. What time is it where you are? Who knows. So thank you for joining from all around the world. But our noon interview is with Asim Hussain, who is the Green Computing Advocate at Microsoft. And he's a speaker, he's an author, he's a teacher. He's done tons of stuff. He's worked with the European Space Agency. Now he's at Microsoft, where he's the Green Cloud Advocacy lead. Asim has, I think, just joined me here in the chat if all the correct buttons are being pushed in the right order. I think I can even hear you. - And hey, I can see you. - All right, great. You're live, man. - Awesome, fantastic. Thanks so much, Hank. - Yeah, absolutely. Thank you for joining us today. I know that you have a pretty cool job title. So I'm just gonna first ask, like, how does one just go about becoming a green computing advocate? Specifically one that's getting paid by one of the largest technology companies in the world. - Oh yeah. So, okay, interesting journey. I don't know. I've had an interesting career. I suppose I started in European Space Agency. Robotics, investment banking. Then got into web. Contracted at Google for a little bit, started my own agency, then this whole online teaching thing appeared. I know this is a Pluralsight event. Yeah, exactly. So the online teaching then came along, and that wasn't on Pluralsight. It was on another platform. I started teaching online. And then I realized, even though I had a lot of students who were quite loyal to me, no one really knew who I was. I had like 20,000 or 30,000 students who liked everything I did. So, I then realized, why don't I just start speaking at these conferences? People seem to get a good name from that. So I started speaking at conferences, and that's when I got introduced to John Papa, actually, who I think you're speaking to him later on today. Yeah. So, John. Microsoft at the time was just launching this new called Cloud Advocacy, and John was hiring for his team. So I was kind of very lucky enough to join John in kind of the early days of Cloud Advocacy. And we're kind of tasked with connecting with developer communities. That's what we're focused on. So, education, speaking, lots of open source. But really just being the conduit between developers and Microsoft. I watched the team grow, and then I led what's called Regional Cloud Advocacy for EuMEA, Europe, Middle East, and Africa. Then late last year we restructured. And honestly, I proposed the role. I proposed Green Cloud Advocacy, which is, really what that's about is being a conduit between the green developer community, which I'm part of, which is a large growing community of developers in the world, and basically Microsoft. And that's kind of the journey of how that happened. - That's great. Yeah, I mean, when you're talking about, like, cloud computing, I think that a big part, like you're mostly talking about power consumption, right? And so that's at some point gonna be valuable to the company in any case to be thinking about how to, 'cause your power bill's gonna be a big bill at a server farm. So, how is that different from just sort of, like, championing efficiency to save power to save money? - So, I think that's really interesting you say that. Because this is one of the conversations I have with a lot of people, which is, the word "green" means different things to different people. And I first have to qualify what green means to me, right? And so when I say green, okay, the problem that we're solving, the core problem that we're solving, is there's too much carbon in the atmosphere. All right? There's too much carbon in the atmosphere and that's causing our climate to warm. And so we need to do the thing of stopping emitting all carbon, which we haven't done, which we're not even close to doing. But once we achieve that goal, we then need to suck out one trillion tons of carbon that we have already emitted and put it back into the ground. So that's kind of, when I say green, my challenge and focus, it's all about carbon. When I say green, I'm talking about, from a software perspective, building carbon efficient applications. And so which actually, once you, and I speak to a lot of people, when they talk about green, it's about power. And it is. Power is a big chunk of that. But when you take a step back and start asking yourself, well hang on, it's about being carbon efficient. Like, what are the other things that we can do? And when you take that step back, you realize there's actually quite a lot of other things to focus on which allow you to be more carbon efficient with your applications. Like, Microsoft is, like, we're a carbon neutral company. We're going to be carbon negative by 2030. We're buying, like, a lot of renewables right now to power our data centers. So that's 65% of our data centers and our goal is to get to 100% by 2025. - And then your goal isn't just Microsoft to be producing no carbon now, but like, to try and reach back into the past, right? - Yeah, yeah. - And look at, like, how much carbon have we produced through the entire course of the company? And, like, not just when we made an Xbox, but when the Xbox got used for five years. Which is wild. Like, that's not, like, saving anybody money. - Well, you'd be surprised, actually. But one of the things, and I think what that speaks to is this thing I mentioned, which is there's this thing called offsetting and there's this thing called, like, essentially sequestration and taking carbon out of the atmosphere. So offsetting is like, I'm gonna do something which stops carbon from being emitted. But as I said before, we don't just need to do that. We need to do the next thing, which is sucking carbon from the atmosphere and putting it right back into the ground. So that's why, when we say carbon negative, we really mean we're gonna do things and invest in technology which sucks carbon from the atmosphere. Because we actually all need to do that to get to the state that we need to get to. A lot of that stuff is, I mean, it's all fantastic and it's great. And it's great that Microsoft's doing this. But from a software, from an engineer's perspective, from a software engineering perspective, well what would you do? Like, what's your story? What can you do as an engineer to have an impact in the environment, right? It's not just enough to say, I can't go on this talk and say, like, use Microsoft, we're carbon negative. And I mean, there's other things that you can do to get there. And that's really what my job is, really to figure out what are the things that engineers can do to be more carbon efficient with their applications. Yeah. - Yeah, so this isn't a hardware problem. You're not sort of approaching it from a hardware angle only. - No. - But also from a software angle. Like, what does that look like? How does an engineer think about what is, like, the ultimate carbon impact of their software? - That's a really, I'm really glad you asked that question. - A big question. - Yeah, I really like it. I'm really glad you asked it. 'Cause that's basically what I'm all about here right now. So, it's been a really interesting journey. When I first started this thing off, when I first kind of proposed this role and then I said oh, hang on, let me figure this out, how am I actually gonna do this? Google search, what are the ways software engineers can be more green? Couldn't find the book. Thought the query string was just wrong. Kept on searching. Couldn't still find anything. Ends up there isn't much out there. There's a lot of stuff written about hardware. Very, very little written about software. - Interesting. - And so, I had to start basically, there are a couple of books. There's a lot of academic journals, a lot of academic papers. So I started speaking to a lot of people. And what we basically did was create something called the principles of sustainable software engineering. So if you actually go to our website, which is my plug for the website, if you actually go to the website, principles.green. Principles.green. Yeah, so you'll actually find it's, we've basically got it together. Essentially, absorbed like six months worth of investigation and just really got it together into a digestible chunk of information. So somebody, the next person doesn't have to read six months of dry academic papers. But the sustainable software engineering, we're describing as is an emerging discipline at the intersection of climate science, software practices and architectures, electricity markets, so related to what you said, and hardware and data center design. And I used to think, I joke about this, I used to think that full stack was front end to database. And now we realize full stack is user behavior to how electricity is bought and sold to even like, how is concrete made? Like, what is this stuff? Like, so now it's like, it's been a really fascinating journey to kind of broaden that out. But what the principles are are a core set of competencies that you need to know. Like eight. I've got them down to eight competencies. But if you understand these competencies, you an then look at your architecture, look at your solution, whatever it may be, a piece of code or an entire application stack, and really look at it crticially and come up with recommendations for how to make this more carbon efficient, and more importantly, come up with the recommendations and solutions which have a real significant, meaningful impact. There's a couple of them. I can go through three that really give me goosebumps. - Okay, give me the hot ones. - There's some really good stuff. Yeah, I can talk about this stuff for days. It's like, it's incredible. So the first one, the first principle is quite simple. It's what I essentially just said. It's carbon. Which is build applications that are carbon efficient. Which sounds like it shouldn't be revolutionary. - Right, and that it shouldn't be that different from energy efficiency. - Yeah, it shouldn't be. But you'd be surprised. Based on the number of people who disagree with me, it kind of feels that it is revolutionary. But yeah, so build applications that are carbon efficient. Because at the end of the day, my philosophy, and it's my personal philosophy with a lot of other things that I do, which, we live in a society today which makes it very, very hard not to emit carbon. We're going to emit carbon. So as responsible people, our goal should be for every gram of carbon that we emit, make sure we get the most value out of that as possible. So I do that with all things I do in life. I'm going to drive. What are the value I'm gonna get from driving? I'm gonna fly. What is the value I'm gonna get from flying? It's the same with software. So when you build and run software, it emits carbon. Make sure you get the most value out of it. The second principle is electricity. Ah, and that's to build applications that are electricity efficient. Which is, for me, was like really fascinating. I remember when I first started in on this journey. I asked who should I speak to, and they said speak to a guy called Conor Kelly at Microsoft. And I called this guy up and, like, five minutes into the conversation, I was thinking, why is this guy talking to me about electricity? All right, 10 minutes in, I was like, why is this guy talking to me about electricity? Like, 30 minutes, why is this guy talking? And now, like, six months in, if you speak to me, all I talk to you about is electricity. So electricity is key, right? So it really surprised me to find out that electricity, the production of electricity is the cause of 49% of all the carbon emissions, all the carbon pollution that gets emitted. When we look at electricity, we don't think of it as dirty. We think we're so clean. When you use electricity, your hands don't get dirty. It doesn't smell. But it's actually a really dirty thing. - Yeah, it's funny you say that, because I have a master's in environmental studies. So I'm like, no. No, it does not sound clean to me. - It's not clean at all. And that's because, as you know, like most electricity is actually still coal as well, which is one of the dirtiest things you can burn. - And what we're converting to is also carbon. We're converting away from coal, but we're converting to natural gas. Which is cleaner in terms of, like, your hands not being dirty. But it's still carbon intensive. - It's still carbon. Well like, and that's the kind of, and when you start looking in this area, when I started talking to engineers about this and I started talking about electricity and I started mentioning electricity is dirty, then the gears start rolling in our mind. Because then you're like, oh, oh, I understand that. I can have an impact. I can have an impact. And that's kind of the second thing. The third one is what I can talk for days and days about, which is carbon intensity. Which is a fascinating topic. And I think is fascinating, anyway. My wife doesn't think it's fascinating, six months in. But like, basically, like electricity, as I said, like, you burn coal. So electricity has, like, this number called carbon intensity, which is the amount of carbon that you release per kilowatt hour of the electricity. And so different regions can have different carbon intensity. So for instance, the US on average has more carbon intensity of electricity than Europe. We have more renewable sources. So that's kind of interesting. Because then maybe if I run my workflows in different regions, I can have an impact. But then at different times it changes also, doesn't it? - Yeah. - 'Cause sometimes, yeah. Like, when the wind blows more and when there's more sunshine, there's more renewable energy, which means that if you were to just run your workflow or just wait. Maybe if you just waited five hours or eight hours, or if you've got a batch workload, a lot of people have batch workloads, and they just choose some arbitrary track time. Three in the morning and whatever. I just need it done by nine in the morning. If you actually, like, chose the moment with the least carbon intensity, you can have a meaningful impact without writing a line of code, right? - Right. I mean, this is also, so the way that coal power works is different from almost every other power in that coal creates power all the time. So at night, coal fired power plants are creating power that isn't getting used. - Yes. - So it's this base load power, is what it's called. Whereas, and some natural gas plants are this way as well. Some natural gas plants turn on and off. Hydropower you can turn on and off at will. Nuclear power you can turn on and off at will. So this is a sort of very different, like, just understanding the way that power works and carbon intensity and, like, when is there just sort of, like, and also what can you say to a power company to say, like, okay, well you're not using that electricity, so what can you do to incentivize us to use that electricity then instead of when you might be needing to turn on a peaker plant to match demand? - Oh, man. We are going to get down in the weeds with some energy nerd stuff here. And there's marginal carbon intensity as well, which we haven't even gone into, which is super-- - Oh, I don't know what that is. - Oh, so that's like, that's related to what you're talking about. So basically, we can get into these really perverse scenarios where, because of what you said, like, base load power, like if you think about it, if you're getting electricity from solar and wind, that's like free. Like, why wouldn't you take that electricity? But we can into scenarios where gas plants and coal power plants can say, oh, we're not going to go below 30% capacity. We don't care. We're gonna keep to that. So then you're making more renewable energy than you need. And there's no storage, there's no battery, so you just throw it away. And so that's called, like, the marginal carbon intensity. Which is if you were to add something there, that's the electricity that would be matched. So there can be moments in time when your electricity is guilt free. Zero carbon. Yeah, so there's that as well. - It's like dumpster diving for electricity. - Oh. That's brilliant. I love that. Yeah, dumpster diving for electricity. Yeah, great. - So I got a question from the audience here, and I have no idea what it means. So I'm gonna read it as is written. 'Cause I have a master's in environmental studies, not anything useful. How is using cloud over on-prem reducing carbon footprint? - Okay. So this is, okay, I can answer this question. It's not a question that is particularly related to software and engineering, 'cause it's more like a hardware question. So, definitely, so there's this big number that people use called PUE, power utilized, oh, I've forgotten the definition. There's a number called PUE. Power utilization efficiency, I think it is. And so it's a number, which from a data center perspective, you use to signal how much electricity that's coming in is actually being used for the service and how much is being used for cooling and other things. So let's say a PUE of two means for every two kilowatt hours the data center is sucking in, only one is going to servers. So 1.5 means for every 1.5, only one is going to the servers. The average, so on premise is other people's. Not Microsoft. We're hypercloud. So we have, like, we're big. So we put so much effort into making sure the PUE is efficient. Because it makes sense for us to do so. So our PUE, I actually don't know exactly what it is. I think it's like 1.2 or something like that. But your average on premise data center, like not at hyper scale, I read a number from the Uptime Institute. It was at 2.5. So, just moving to any of the hyper scale clouds, this is kind of a Microsoft pitch, any of the hyper scale clouds from an on-prem is actually positive for the environment because you are using less electricity to do the same problem. Yeah. - Can you tell me what your PUE is, or is that secret? - Actually, I don't even know if it's secret. So if I accidentally got the right one of 1.2, it was accidental. But it's around that. Kind of 1.1, 1.2. It's around those things. And I know that, like, certain countries are now setting in stone that any new data centers have to be at least kind of 1.5 or something like that. I think the Netherlands has that and China has it as well. - 'Cause I mean, data centers are a big, they are a big piece of energy use. They're also a fast growing one and one that we all expect to grow very fast. So it's not so much that, like, this is more important than, like, not eating meat right now. I saw something that was like, your Netflix watching is, and I'm like, shut up, you have no idea what you're talking about. Yeah. That, like, we do expect this to be growing very fast in the future and so it's going to have more of an impact every year, whereas some things are gonna have less of an impact every year. And so, like, things are gonna get more efficient. And like, data centers are gonna get more efficient, but there are gonna be more of them. I forgot what I was gonna ask you, so I'll just turn. Oh, I was gonna ask you, just generally right now, is a moment where we are transitioning to more, like this for example is running on a server farm somewhere. - Oh, yeah. - So like, we're transitioning to a more digital world right now. Is that impacting your work, how you're thinking about your work? And also, is it impacting Azure and Microsoft? I imagine it is. - Yeah, I think that everybody, everybody's moving online. And it's obviously like, we're under a lot of load. There's a lot of demand for our services. There's a lot of demand for teams and other things as well. So we've definitely noticed, like, a big uptick in things like that. And I've also seen, like, the interesting thing, I was actually chatting to somebody the other day. She really made me realize something. She was in the energy industry, and she was saying that it's really easy for them to work from home because they have laptops. And I remember thinking, yeah, so what? And she goes, yeah, well, they've got desktops. And I suddenly remembered, like, a lot of it. And I forgot. Like, I haven't worked on a desktop in years. And a large number of companies are actually, for the first time ever, like, having that transition away to home work. And I think that's really interesting. So we've seen a lot of stuff there. There's actually a lot of open questions. I'll be honest with you. I've been seeing reports on both sides as to whether or not, what the real impact this is having from a carbon perspective. Because we're not going to work, we're not traveling to work. But then we're heating and cooling our homes, which are not as efficient as, so there's some questions which people need to, which we need to figure out. But I definitely think that, the way I like to think about it is, don't worry about the path. You just have to imagine in your mind, like, what does the future world look like? This perfect green sustainable world. And I imagine it's a world where we work from home, where we have the freedom to work from where we want to work from. And this is something that gets us there. I'm really excited. I think what COVID, I was thinking the other day. I think what COVID has interestingly taught us is what we've lost. I was thinking about it the other day, is that it's what we've lost. Because, like for the first time, people are breathing in air that's cleaner than anybody's breathed in for generations. All right? So it's like, this is, in an instant, we've got back to what we lost 20, 30, 40 years ago. And people can see that now. And I think that's a really, I know there's a lot of terrible stuff happening with COVID as well. But, like a really interesting. I think people are gonna be studying this for a long time. - Right, I think that it is an amazing opportunity for science of all sorts. Certainly social science. We'll have a lot of new data to work with. But also, just not having planes in the sky in any significant amount for a month. Like, what does that mean? What does that do to climate? What does, like, I don't know. It's fascinating. We're gonna be studying this for a long time. So we've got a question here. Where do you see, oh, no, that's not the one I asked. I already had asked that one. Should educational institutions that teach technology be putting more of an emphasis on designing software that runs more efficiently from an energy consumption perspective? Like, should that be being taught? How should that be being taught? - That is a fascin, I haven't even, yeah. - Boom, take it. - That's great question. Boom, yeah, that's fantastic. That's an angle I go with. And yeah, true. I mean, look, the younger generation. The younger generation. People who, yeah, the younger generation, like people in studying, students and academia and things like that, they're the ones that care about this the most because they've got the rest of their lives. They're gonna be the first generation that really sees the impact of this in their lives and it's really important to them. I can't believe I haven't thought of this already. That's actually a really great idea. I should be, once we get the principles in a good shape, yeah, I will be going into contact with academic institutions. If there are any that are listening right now, please give me a shout. I mean, I'm happy to talk to you. - Nice, nice. Can you give me, like, one concrete example of how software, how like, you can write software differently to have a smaller carbon impact? - Yeah. So, what I always kind of encourage people to avoid, because when I start talking about electricity, everybody's mind starts going away. Oh, maybe I'll rewrite everything in C or Rust or kind of like going in that direction. And I want to kind of caution against that, because there's lower hanging fruit out there. The one that I recommend, I talked before about kind of carbon intensity. I think that's a really interesting direction to go in. There are kind of various companies out there. Watt time and electricity maps that kind of give you that data in real time, and I think that's some interesting stuff you can do. In terms of actual writing, one of the biggest, the lowest hanging fruit there is right now is actually making sure, from a server side perspective, making sure your servers are used. A large number of servers are not actually being used. And one of the principles we talk about is something called energy proportionality and to another one called embodied carbons. So energy proportionality is a really interesting concept. I don't know, but I assume that when I maxed out my CPU, it was taking the maximum power. When I was kind of half maxing out my CPU, it was taking half the power. And when it was idle, it was idle. It wasn't taking any power. But the reality is is it's a lot more flatter than that. When your computer, when the server is idle, it's still drawing a significant amount of power. And so making sure your servers are actually being used is again one of the most impactful things you can get. And that's why I think it's important to have the breadth of knowledge. 'Cause then you can realize where in your architecture you can have the best impact. So that's one of the biggest things, is just looking at your utilization of your servers, making sure they're much higher. Yeah, that's like, if it's one thing that you do, it's probably that thing. - Yeah, well I mean, you say at the same time, like, if that's all of our servers, then if there's new demand that comes online. Like, I don't know, if there's a global pandemic, then you have the space. Like, I think that we're headed into a world that might be more interested in resiliency than efficiency after watching how this has gone down. Like, has Microsoft been able to handle that? Like, if you guys are really optimized for efficiency, you're like at 1.2 PUE, like, are you able to handle a whole lot of new load hitting hard? - Well, I won't lie to you. There are plenty of people who haven't had much sleep during the pandemic and have been working very, very hard to make sure that we've got the capacity. And what's been really interesting about the pandemic also is it's allowed us to start having those conversations with people. Which is, look, you've got all this. And internally as well. 'Cause we use our own services also. We've got Office 365. We've got all this other stuff. We use our own services. So it allows you to have these conversations with people, which is like, look, you've got a lot of services there, that you're not really using your utilization to your maximum capacity. Let's have that conversation. Let's be more efficient. - That's great. - And I think also, I think there's some really interesting ways that people need to start architecting their applications. Which is, everybody treats everything as the most important thing that they have. Like, look at your architecture. Let's take Netflix for example. Sometimes when you use Netflix and there's a slow connection, some features don't appear. Okay? So let's start looking at your architecture and saying, well hang on, on a high load, what can we shut down? What's important? Is it designed in a way so you can say this isn't that important? Maybe if the carbon intensity right now is super high, shut that down and only do the essentials. There's lots of things we could do in that space. - So, designing for resiliency and designing for efficiency can actually in some ways be the same thing if you're prioritizing them effectively. Well, awesome. Thank you for this chat. It was really, really fun to talk with you. And I've, like, we are kindred spirits. So thanks for the good chat. We're gonna take a quick break. Very quick, because we went a little bit over. And then we'll be back with Deborah Kurata for our next interview. Thank you, Asim. - Thank you very much. Cheers. - Hello. We are back here at Tech Skills Day. A reminder for the things going on right now. You can find the agenda for the day at techskillsday.com underneath this video, everything that's going on, and make sure you're here for the things that you're most interested in. Second, we've got a chat going. You can leave your questions and we are doing our best to answer them as we go. We can't get to all of them. There have been lots of great ones that I haven't gotten to. But they've been wonderful and informing my thoughts as I go through this. Now we're gonna be chatting with Deborah Kurata, who's a developer, a consultant, and Pluralsight Angular author. Deborah has done all kinds of amazing stuff for this community and helping people learn, and also being a champion for Angular. Hello, Deborah. How's it going? - I am doing well. How are you? - I'm good. I'm having a wild day talking to person after person and it's been really fun. Can you tell me a little bit about your background? How you ended up where you're at now? - Well, as a child I wanted to be a teacher. - Here you are. But I ended up with a degree in math and physics. There's not a whole lot you can do with an undergraduate physics degree, sort of surprisingly. (faint speaking) - Uh-oh. You've got one of your tabs open. - Oh, I still have you up over here. Sorry. - It's okay. You reminded me to mute my phone. - Anyway, luckily I had gotten a job at the computer lab at school, and so I had gotten some computer skills. At the computer lab we not only helped other students, but we also developed computer-based training software. And so that was really fun. The woman who I worked for there, Judy Young, taught me structured coding. And that was just the most exciting thing, because it allowed us to follow some consistent patterns. So I learned that I could solve puzzles all day and do it in an organized way. And I was just hooked. It was like, programming was the coolest thing. So, luckily for me, the industry were short on developers at the time. And so with just that little experience I was able to get my first programming job. And I know this doesn't translate well internationally, but in my first programming job, I was making $13,000 a year. Several years later I had the opportunity to move to the San Francisco Bay Area, and so got to work in Silicon Valley and that was pretty exciting too, being kind of in the heart of things. But I had been working on digital equipment VAX machines. I don't know if anyone's familiar with those. And my new job required programming in C++ on a PC. So, luckily I was working with a guy named Carl Quinn. Some of you may know him from Java Posse. I don't know if you've heard of that. It's a relatively well known podcast that was going on for awhile. So, some of the viewers might know him. But with Carl's help, I learned C++ on the job, which was quite challenging. But very, very sadly, Carl just died of coronavirus. - Oh my. - So that's very tragic. But after several years working with Carl at that company, the company was bought out by a company in Los Angeles and we had the option to move to LA or lose our job. So, there I was, six months pregnant trying to find my next opportunity. And every interview I went into, the question would be, so, what's your plan exactly? So I didn't end up getting a job. No one wanted to take a risk. So I started my own consulting company. And that was the best decision I had ever made, I guess. And I was able to grow the company and write books and start speaking. Then Pluralsight came along and I was finally able to fulfill my childhood dream and become a teacher. So that's pretty exciting. - Some of the people in the chat are saying you're a Pluralsight celebrity and they're all very excited to see you. I am also. So, you've been around for awhile, it seems to me, from your bio there. Can you tell me a little bit about how the programming world has changed since you started out in the industry? I mean, a little bit. I don't know how you, there's probably a lot. - Well, for one thing, the salary rates have gone up a little bit. - That's nice, that's nice. 13K is not great. - I don't know too many developers right now making $13,000 a year. But anyway, one of the really big changes that I've seen is how we're teaching programming to kids. I think that that's amazing. I would have loved to have taught my kids programming. My kids are both adults now. But I sort of tried to with the tools that we had at the time. I voltunarily did a JavaScript after school course for the high school that my kids were going to. But it was really difficult to kind of get kids engaged in JavaScript, especially at the time. You could barely do video, let alone anything real fun. But today they're teaching seven year olds. You've got Minecraft and Scratchy. And it'll be really interesting to see what programming is going to be like when these kids all move into their jobs and to see how that lifelong experience with software changes how they approach everything. So, I think that that's looking both at how things have changed and how things may continue to change, hopefully for the better. - Yeah, that's really interesting to sort of see it from an education angle. And it's super true that, when I look back at the sort of formative video games that sort of gave me an opportunity to play and create rather than just sort of like, exist inside of a straight line. And it is true that those things still exist. They are different now. But Minecraft is certainly a great example of it. So, this is a question that is important to me as a non-programmer, and also important to developers and engineers as well, so I want to ask. So, sometimes developers are asked to work on things that they sense are not going to work. Has that ever happened to you, and what should developers say when their leaders propose ideas that they're like, I don't think that's gonna be a thing. Especially if that person is me who's asking that of some kind of engineer or architect. How do you deal with that? - Well, as a consultant, I've worked on a lot of projects. And that puts you in a little bit of a different position, because you have more options. For example, I was approached by a client that wanted to build an application. That's kind of typical. And then they wanted all sorts of supporting features. In addition to their main line of business app, they wanted all the supporting stuff and a complete social platform. So they wanted it to have kind of, like, Twitter features and this whole thing. And it was just this huge app and they had a really small timeframe. Got to get to market 'cause we only have so much funding. And I recommended them going with a MVP, a minimal viable product, so that they could get money coming in. 'Cause if they put out the main thing, they could be starting to make money and then they could leverage that into adding the more complicated social features and all the additional add-ons and all of that kind of stuff. And they said no, it had to be the whole thing and we ended up kind of parting ways. They came back a year later. They had nothing working. They were running out of money, and could we then help them put together an MVP. Disappointingly, or maybe luckily, I'm not sure, we didn't have any availability at that time to help them. I don't think it ever came together. But I think one of the key things that developers are frequently asked to do is to do something that there isn't the time given to do adequately. So in general, requirements versus time is a key conflict between developers and the product people. We could possibly make the software work, but not in the two week timeframe that you're giving us. And a lot of times the dynamic is such that the developers don't feel like they have a say in what that timeframe is or can't go to the manager and say there's no way we're gonna finish this in two weeks. It'll be interesting with the recent unplanned very quick move to remote work how this is changing. Because I'm sure anything that was supposed to be done in two weeks can't possibly, in a normal situation, be done in two weeks, and now with people dealing with so many things right now, and it's a major effort just to try to go to the grocery store and come home and take off the mask and the gloves and take a shower and wash all of your clothes that you were wearing. And I mean, just everything is hard. - Take care of your family and your situation and, like, different people. I have, like, 35 employees. And so, like, it's very different from person to person. Some people are, like, set up for it psychologically and also physically. Some people live in small homes with small children, and it's just like, where am I supposed to sit to edit this video? And it's like, that's part of, we don't think about a workplace as being democratizing, but in some ways it is because it allows people who have different at home situations to sort of have the same work situation. - Right. - And that is not the case right now. So, totally agree. And really what it should be is that employees should feel empowered or contractors should feel empowered to say the things they need to say to the client or to their boss and to report reality. And that is something that I strive for at our company, to be in a place where if somebody says that that's not possible, I believe them. And I either devote more resources to the problem or we change the timeline. And like, and sometimes that happens when the idea is pitched and sometimes it happens two weeks down the road. But like, it is better for everybody to have that information as we're doing it rather than to have it sort of happen on the day that the deadline happens and the store has to go live today or else people are gonna lose $2 million or something, which is not something that definitely happened to me. But a similar story did occur. So, I want to talk a little bit about actual tech stuff. So I will be not an expert. So I will smile and nod and do my best to understand. But, so you are known for your Angular expertise. Tell me what you like most about that framework. - Well, as I mentioned at the beginning, one of the things that I learned very early on was structured programming and good patterns. And it was really great to be able to pick up any piece of code and recognize that it had a similar way to look. (chiming) And I'm sorry, I thought I had turned off all of my little noisy things. But I guess I missed one. But anyway, so, the patterns that Angular has are also very consistent. So you pick up a piece of Angular code, and you know immediately where to start looking. So if somebody sends me their code or posts it on GitHub or whatever, any Angular developer can go up to that code and know where it starts. What is the first file you should go look at? What are the next files? Because it has a very consistent pattern that it uses. I also really like the MVVM, model-view-viewmodel, architecture that it follows for getting the templates, the visual part of the UI and the code part of the UI to work together. So you've got the template as the view and then your code behind is responsible for making that view work. It gives it the data. It handles its events. And I really like that architecture. It's clean and it can be very powerful. I also lately, the last several years, have been really into RxJS, which is Reactive Extensions. It's built into Angular. And you can use it just a little bit or you can really dive into it. And recently I've been really diving into it and talking a lot about the power that it gives you. You can do, because the web is so reactive, using Reactive Extensions lets you be more reactive in the code as well to react to what's going on in the UI, to reactively process data in multiple ways, to easily get data from multiple sources and merge them in a logical way for displaying in the view. And lastly, one of my favorite things is the Angular community. The Angular community is just an amazing bunch of people. They are kind and they're welcoming and they're easy to talk to. I really miss seeing them at the many Angular meetups and conferences that they have. They have zillions of conferences all over the globe. Last year I was in one in Malaysia and one in Copenhagen. And I mean, they literally are all over. Of course, not this year. But hopefully sometime, maybe next year, we'll be able to get the community physically together again. But I really like Angular for all of those things. - So, React and Vue have come out fairly recently as kind of competitors to Angular. What do you, do you think that Angular has an edge over them and what do you think that is? And I'm not gonna let you get away with saying the community, because we all know you love the community. - Community, community, community. Well, I'm frequently asked this question, and one of the things I like to kind of compare it to is, maybe like a restaurant. There are some people that like to go sit down and have a meal where it gives you everything. So it's got the right potato that goes, or rice or whatever, that goes with whatever your main protein is and the vegetable that complements it and it all comes as one kind of unit. And there are other people that much prefer the buffet where you go and you pick your own bits of salad that you want and your own protein and your own starch or whatever. It's kind of the same way with Angular and React. With Angular, when you use Angular, you are getting everything. You get the router, you get the forms package, you get the HTTP package. There is kind of a prescribed way to code with Angular. Products like React are much more pick and choose. So you can pick which router you want. You can pick which HTTP package you want to use and so on. So it depends on your preference of whether you like the kind of pick and choose kind of thing or if you'd rather have, when you hire an Angular person, you know that they probably know the forms package, the HTTP package. When you hire a React developer, it's like, okay, well, we're using this HTTP technique. You don't know that. So there's a lot more variables, I guess, in that equation. But in the end, they all meet the same goals. They all satisfy your hunger or satisfy the ability to develop your client side web application. So in terms of results, they'll all get you there. - Cool. - It's the same reason why some of us drive a Tesla and others prefer an F-150. So it's just kind of a personal preference. - Cool. That made sense to me. Great. Is there anything you remember from your earlier days developing you think has gotten lost in current platforms and methods and approaches? Like anything that feels, you know, you feel nostalgic for VAX ever? That was a community question from the chat, by the way. So thank you to whoever put that one in. - Yeah, no, that's a good question. One of the things that, well, I'm actually only thinking of things the other way. I mean, back in the day we didn't really have testing tools. And now they've got testing tools. And I worked at a power company. I won't mention which one it was. And their idea was, we don't need testing because we have users. And this was a power company. It was kind of scary. So I can't think of anything. - Problem solved. Yeah. - Also at said power company, if you wanted to print something, you had to write a script. Literally. You couldn't just-- - Every time? - Print, yes, exactly. It was the most insane thing. I'm like, really? You have to? Every time you have to write? Yeah, because you have to put the name of what you want to print. It was absurd. So I don't, I can't think of a single thing. - Nice. - That seemed better. I mean, nothing has, it wasn't simpler back then. I mean, I guess in some respects, 'cause we didn't have to know how to do testing. But. - Yeah, that's great. Like, I have nothing in my life that I'm not nostalgic for, so that sounds wonderful. - I wish my kids were little again, if that counts at all. - Yeah, oh God, yeah. My son is three right now and I'm like, get no larger. You're perfect. Have fewer tantrums though. Thank you. - Oh, yeah, yeah. - Do not freak out just 'cause I don't have the right underwear right now for you. That was the fight we had this morning. Speaking of children, somebody asks, "My son is using CodeCombat in the sixth grade "and is learning Python. "What do you think is the benefit "of these kinds of coding games "and do you recommend any other tools for kids?" - I think that it's absolutely fabulous that kids are learning to code. And some of it is questionably, really, code. It depends, I guess, on your definition. But it's really helping you to, or them to think through logical problem solving. And that's really what software is. And learning a specific language, to me it's not necessarily helpful for a seven year old to learn C Sharp, because by the time that seven year old gets a job, it will be something completely different than what C Sharp is now. At least I presume so. So I think teaching them some of the basics of thinking through logic puzzles, and if kinds of concepts and making things move based on action and reaction kind of things I think is very helpful to develop that way of thinking. I don't know. Honestly, my kids are way into their 20s. So I don't have any experience with current tools for younger kids. That might be a good Twitter question. But I think that they can only be helping. And I know that people have complained in the past about schools not providing enough programming incentives. And so it's kind of exciting right now with so much schooling from home, that more of that is seemed to be fitting into some of the homeschooling. And that's pretty exciting as well. - Yeah, absolutely. I want to hit you with one more techie question here. So you teach courses on C Sharp, .NET, and on Angular. Do you think there's a lot of overlap when it comes to those things? Can one master both of those things? - Absolutely. I think that one of the things that I liked about Angular is that it really leveraged my C Sharp skills. The Angular team decided really early on to leverage TypeScript. TypeScript is a superset of JavaScript, and it was designed by the same guy who did C Sharp and who did Delphi. And so the familiarity, I mean, you start using TypeScript and it looks so much like C Sharp. You're creating classes. And so you use the word export instead of public. We can all deal with that. We're software developers. You still import stuff just like you do in C Sharp. You do classes with properties and methods. And so the whole way of coding and syncing is pretty much the same going from C Sharp to Angular. It's really great to use C Sharp on your backend because Angular is really only for the front end. So the part that the user sees, the web front end. But it still needs to hit a backend to request data, to maybe execute backend business processes. And you can do that in C Sharp. So, any kind of full stack developer would do well to be very comfortable with both, to be able to do the backend web API and then to do the front end Angular piece that can communicate with that web API. - Great. Well Deborah, thank you for sharing your insight, your expertise, and your skills, both with us here now and also with the communities that you work with and the teaching that you do. It's wonderful that you've seen so much success and celebrity in this community just by fulfilling your childhood dream, but also making people's, helping people be more effective in their careers, solve problems all over the world. So thank you so much for doing that work and for joining us here today. - Thank you very much for having me. And for everyone out there, stay safe. Thanks. - Yeah, thank you. All right. Thank you, Deborah. We are gonna take a short break now, and I'm gonna go away and eat a sandwich. But Pluralsight CEO Aaron Skonnard is gonna be interviewing Dr. Maliha Khan and Haroon Yasin from the Malala Fund about their amazing work. So you can stick around and watch that. That will start in about five minutes. And after that, at 1:30 Eastern Time, I'll be back with AI and robotics expert, Eric Daimler. You can find the agenda at techskillsday.com, and we are looking at your questions in the chat and including those. So keep leaving them. So thanks for joining me for this first half of Tech Skills Day. I'll see you all in a half hour, and looking forward to seeing Aaron Skonnard. - All right. Welcome everyone to our second annual Tech Skills Day. I'm Pluralsight CEO, Aaron Skonnard, and it's great to be with all of you today. Hank Green is doing a fantastic job and I look forward to this next bit of time that we have to share with two incredible people from one of our close partners, the Malala Fund. We are joined today by Dr. Maliha Khan and Haroon Yasin from the Malala Fund. And we're gonna invite them into the chat here with us right now. Let's go ahead and bring them in. And we're gonna talk a little bit about the incredible work they're doing to improve girls' education outcomes around the globe. I mean, it's such an important topic, such important work, and we are just so proud to partner with both of you. So we have Maliha here and we also have Haroon. Welcome. It's good to have both of you with us today. - Very happy to be here. - Thank you. - Good, good. Well why don't we start with just some quick intros? Maliha, why don't you go first and just provide a quick intro on yourself and what you're up to, and then we'll hand over to Haroon to do the same thing. - Great. Thank you so much, Aaron. Thank you for inviting us too. So my name is Maliha Khan, and I'm the Chief Programs Officer at the Malala Fund. Malala Fund's an NGO that was founded by Malala Yousafzai and her father. And our mission is to provide free, safe education for every girl up for 12 years. - Awesome. Haroon. - My name Haroon. I'm the CEO of a ed tech company called Orenda. We've digitized the national curriculum of Pakistan into an animated format. It's called Taleemabad, which is Urdu for the city of education. And through this animated format, we've been teaching children for the past four years and we're simply, in light of the COVID-19 crisis, scaling up our work across Pakistan. - Yeah, I mean, thank you both. And again, thank you for being here. This is such important work, and during a very difficult time with the coronavirus, this pandemic. So I want to talk about that. I want to talk about how that, the crisis, the current crisis is impacting and changing your focus in the work that you're both doing. But let's start with you, Maliha. And why don't you just tell us a little bit about the Malala Fund in general. Give us a high level overview of the mission, what you're focused on, and then we'll dive into the current issues around the pandemic. - Yeah, happy to do that. So the Malala Fund, like I said, was founded about six years ago by Malala Yousafzai and her father. And being a young organization, obviously we're still at the start of what we're trying to do. But our mission is very simply to make sure every girl has access to free and safe education and quality education. In order to do that, we've figured out that our best offer in this area is to support local activists and advocates. The ones who on the ground at the local level are trying to make a eal difference in terms of different aspects of girls' education. So some of them are working on, like Haroon, working on being able to provide girls who don't have access to quality education different alternative ways of being able to catch up on their educational attainment. We have others who are doing things like selecting and providing skills to female teachers in contexts like Afghanistan, where female teachers are a very important element of keeping girls in education. Each of our champions that we fund and support and give grants to has an element of advocacy and strategic change. So Haroon, for instance, works on this app, but is also working very closely with the government to get them to take it on and spread it further. And each one of our champions tries to do this in different ways. We have champions currently in eight countries. Almost 40 of them who are working, mostly in the countries where girls are the least likely to be able to complete secondary education. So that's places like Afghanistan, Pakistan, India, Nigeria, which have large populations of girls who are out of school. And then we'd like to keep them in school and get them a quality education. - Very helpful. So Haroon is one of your many champions. And we're gonna come to you, Haroon, in a second to talk about your work. How many champions do you have in total today? - At the moment we have almost 40 in these eight countries. We hope that very soon we'll be able to expand to additional countries and select and have another cohort of about 25 to 30 champions. And as you mentioned already, Aaron, but I'd like to also emphasize in case other people didn't quite catch it, also with the help of organizations like Pluralsight One, who have been very generous contributors to our work. - Well we're happy to support it. And we'll provide more info at the end on how other people can also jump in and support if they're so inclined. But Maliha, talk to us a little bit about the pandemic, COVID-19. How is it impacting the work and your focus? What's changing and what's top of mind at the moment? - I mean, I think it's affected almost everyone in the world. And like everyone else, we are both personally being affected, but our work is also being affected. So personally of course, and our champions are facing the same issues, that we are almost all of us on lockdown. We're trying to work from home. A lot of our champions' work is dependent on them being able to go out into the communities and reach out to the girls. So that is being severely curtailed at the moment. And we're scrambling like everybody else to try to figure out how do we make this happen in this COVID context? We have been trying to provide support to our grantees and champions who are out there suspending their requirements of deliverables, giving them general support, because we want them and their organizations to stay viable in this world and come out on the other end ready and willing and able to really work on this issue of girls' education. In addition to that, once we got, raised our head up a little bit above, oh my gosh, we're all locked down, what do we do? We've been working very quickly and just so in the last couple of weeks been able to identify initiatives like Haroon's, which is particularly suitable to a context like COVID because it provides an alternative remote education. So we were able to make additional grants to him to allow him to expand his work, which he'll talk about in just a minute. We have a handful of other initiatives like that around the world in Lebanon and Nigeria, and one in Afghanistan that we're working on, to get those grants out there. And that's for the short term of when the kids are out of school. Our main concern though, Aaron, is when after the emergency lifts and the lockdown lifts, what is the impact of this tremendous shock going to be? And we've done a little bit of research based on our previous experience with working on the Ebola crisis in West Africa, where there was a smaller scale, but similar sort of shock that hit that region where kids were out of school for five to eight months in different countries. And our research there showed, and we are fearful that we're going to have the same impact here, that many girls were never able to go back to school for a variety of reasons. They had to help with their family. They had to go into menial labor and employment. They got married, they got pregnant. They couldn't go back to school in this interim. And so we are hoping it won't happen, but we fear that there might be an additional 10 million girls that, coming out of this COVID crisis, will not be able to go back to school. - Wow. - Or will miss substantial amounts of their education. And that's adding to the 129 million girls who were already out of school in the world. And that just means that we have to work so much harder just to make sure that we're able to overcome these barriers. Because we've made tremendous progress over the last 10 years on girls' education. We don't want to have a huge setback because of this shock. - Wow. So an additional 10 million girls could be displaced from school just from COVID-19. - Correct. That is our fear. - Yeah. Well this is a good segue then to Haroon. Haroon, you're building a digital learning platform. Please tell us more about the important work that you're doing. As one of the Malala Fund champions, give us, maybe even just tell us a little bit about where the idea came from and then how the app works, and then we'll go from there. - Yeah. So, I've been a teacher all of my life. I started my career about nine years ago, teaching in the slums of Islamabad. From there onwards, my team and I, we started to travel across rural Pakistan. And we chose to stay in villages for very long periods of time because we used to go on harvests with the people living over there. We used to teach in the public schools over there. And once we stepped out of Islamabad, we started to see how things looked like in two or three cities. And more importantly, in villages where a substantial number of children were simply dropping out school in the first year of their education. And even if they stayed in school, after getting beyond primary grades, only about 48% could even read a single sentence. At the same time though, we started about five years ago. And it's paradoxical that in the same country where about 50% of the children are chronically malnourished, this year we are expected to hit about 51% smartphone penetration by the end of this year. And we saw that as a definite opportunity. And as teachers have talked to us, this was, is there a way that we can make children fall in love with learning? They were losing their interest pretty fast. Is there a way that we could do this and prevent children from dropping out of school? So when we started our work, Taleemabad was an animated cartoon series. That's all there was to it. And it was used inside government schools for children who were already in school to prevent them from dropping out and having them keep a sustained interest in their academics. But I think soon we started to see that even if children were dropping out, there was a small likelihood that their parents would also have access to a smartphone. So after our initial trials were successful, we just packaged Taleemabad, the learning series, along with assessments and along with a few other things added into the platform. We tracked their performance and we uploaded the platform onto Google Play Store. And just within the last two years, we've seen it go up to 200,000 children who are using it. Every child who opens the platform every single day, they're spending at least 10 minutes on the platform. And these numbers are only going up. But one of the surprising things that has happened in the past few weeks is that all of a sudden, everybody's out of school, so to speak. They can't be in school, and as a result of that, almost in the blink of an eye, I think, we saw an insane amount of children who were looking for online options or were looking for some options to continue their academics. And actually we saw a rise of about 300% in the number of people that were showing up to the platform. About 60% rise in how long they were spending within the platform itself. But the real breakthrough came when the government and the World Bank and a couple of other initiatives got together and said, sure, we can still reach people who have smartphones. But there's also a big chunk of students, about 51% of the population that still don't have access to a smartphone and might not for a conceivable part of time. But the state broadcaster and television has access to over 92% of the territory. And so they said, if you're going to build a free to air to a still channel that anybody can catch and tune into, would you be interested in taking part in that? And of course we did. It was a perfect opportunity. And since then, Taleemabad has now gone, I mean, before the pandemic started, it was about 176,000 children. But the platform has grown to about 210,000 students. But more importantly, through the broadcast, it's going out to about 51 million students across the state broadcaster's network. - Wow. - And every day at seven o'clock in the morning, we get a very sharp spike in users who have seen Taleemabad who want to see it again who are coming back onto the internet who are looking for it. And we've seen a lot of users who are going and telling their relatives about it as well. So the number of people who are tuning into Taleemabad every day is still growing. The growth hasn't stopped. So it is a terrific opportunity, because I think everybody's realizing. We've been talking to parents throughout the day, and I think everybody's realizing that the importance that is being underscored for additional education will last beyond the pandemic. And I think with the broadcast, the prime minister saying that the broadcast is going to stay beyond the pandemic, I think it gives us a terrific opportunity to reach out to other schoolchildren in a way that we couldn't before. And that is some silver lining that we see. - Yeah, it's really incredible. I mean, the timing is perfect. The solution to meet the need. So you're a tech entrepreneur. Malala Fund is supporting your work, funding your work. The app is called Taleemabad, correct? - Yes. - Taleemabad, for those who want to go check it out. And basically what you've done is you've digitized the Pakistani national curriculum in a cartoon series. Is that right? Like, that's sort of the nature of it? And now they're broadcasting your content on national TV? - Yes. That is correct. - Yeah, that's incredible. And so now, and what I heard you say is, your initial intention was to get girls more engaged in school. But now with the displacement of girls increasing because of COVID-19 and what's happening with all children who are being forced out of their schools, you're actually seeing an increase in usage and possible engagement for all kids who are now not able to go to school. Did I get all that right? - Yes, you got that right. And I think one of the things that we saw when we were working with the Malala Fund, I think one of the projects that we were doing is that the Malala Fund grant enabled us for the first time to reach out to out of school children. Before that, it was all about in school children and keeping them engaged. But with the Malala Fund grant, we were able to reach out to out of school girls living in one of the most remote parts of Pakistan. What we saw was there was really interesting. Because when students started to learn through the platform, the likelihood of them coming back to school was increased. But more importantly, the likelihood of them dropping out had come down substantially. And so what we see as a result of the series is not only does it really just stir an interest in learning for out of school children, but it allows them to see learning for what it really is. And so one of the things that we do expect, and we've now got a sales team of about 10 people who are calling parents all the time trying to just lock in the fact that if it's an out of school child, or a girl who has seen the broadcast, has registered an interest in learning, then we make sure that when the schools do open, that we've got a terrific opportunity to get these children who were out of school back into school because we've got their interest now. And I think these are the discussions that are happening within our team these days. That there might be an opportunity to do great good over here, because we've just registered ourselves in the minds of a lot of children. And we might just convince them to go back to school if they've dropped out. - Yeah, that's fantastic. I hope that is the case. Dr. Khan, you must be very excited about what you're seeing happening here and just the role of technology in general. Can you speak more to how you see the role of technology continuing to play out in Malala Fund's ongoing efforts? - Yeah, definitely. So I think technology is really, really exciting. Both in terms of the populations we can reach, the ways in which we can reach them in terms of quality education and attainment. But also how it enables us as an organization and our grantees and our champions to engage with each other. I mean, this is one of the key things, particularly with this lockdown. And then in the foreseeable future, the lack of being able to travel. We don't know when we will be able to go back into and meet with our champions face-to-face and have meetings with them and our work with them in that way. So we're really looking forward to it. One, in terms of our own work, but two, how we can engage with children broadly, how we can use it as an additional enhancement of school engagement. We don't think it's an alternative to school engagement. We think it can help enhance the quality of education, reach out to students who otherwise are not getting good quality education and really increase their interest in education. I think it can be a really interesting tool, particularly for girls who don't have a lot of mobility and access outside the home. particularly in a lot of the contexts in which we work in where their mobility is limited, their ability to go outside and meet with others is limited. Where you can get groups of them together and be able to use technology. But our use of technology, and even Haroon's, is very sort of mediation heavy. We need to have people like him and his team there all the time working on how it works. So it is scalable, but it is a heavy investment scalable, and because it has to be tailored to each of the contexts. There has to be a lot of followup with it. You can't just give a child a tablet and think suddenly they're going to get an education, right? We know that. We've known that for awhile. So we're working on different ways to be able to contextualize that and be able to use that in different ways. One of the things that we're really quite excited about and really thinking hard about is this immediate post-COVID, immediate emergency response. After that ends, what do we do? How do we make sure that the girls don't drop out of school? How do we make sure the kids actually have quality education and attainment? And we're working on trying to figure out some of those ways with people like Haroon and others, our 40 other champions around the world. And we're hopefully coming up with some exciting new ways of being able to do that in the near future. - That's awesome. I was just gonna go there and ask you, what's next? That sounds like an awesome place to focus. Haroon, we're almost out of time here, but just final thoughts from you. What's next for you? And can you tell us how many girls have signed onto the platform since COVID hit? - So, I mean, right now we're seeing about 51% of the students who are on the platform are girls. So that's about more than 100,000. And more importantly, I think one of the things that is happening now which is really exciting, and I think Maliha is spot on in that, is that it's not about the student. In fact, 80% of our time these days is spent on the parent. On programming, on messaging, on training for parents. - Interesting. - And so every morning there will be a session with parents to say, here's what you got to do. Here's what you've got to do with the child. Here's what they will watch and then here's what you've got to do after their session is over. So, I think that the role of the technology is to facilitate a teacher, whoever that may be. If that's a parent or if that's a teacher in school. And I think the exciting thing here is that Pakistani parents all of a sudden have shown a lot of resolve, patience, and capability to teach their children. And so we're really happy to see that, because they're up at seven a.m. in the morning and they are engaging with all of the material we're presenting them as well. - Awesome. Well, the same thing is happening here. All of us have instantly become teachers at home and are having to learn those same skills. And so it sounds like the focus on helping parents teach and continue their children's education is where you're going, and that's such a great place to be focused. Look, thank you both for joining us today. Dr. Khan, Haroon, really grateful for our partnership and for all the good work you're doing in the world. And just really happy that we had the chance to talk today. Thank you both. Any final comments from either of you? - If you need any more information on Malala Fund, go to malala.org or malalafund.org. - And how, oh just quickly, I meant to ask you this. How can people, we've got a lot of tech professionals listening today. If they want to get more involved in Malala Fund, what could they do? Because Pluralsight One, for example, is sponsoring Haroon as a champion. Like, tell us what that would look like for other organizations. - Well, direct support in that way that you're doing is of course very, very welcome. But I think also just reaching out to your representatives and other political leadership to emphasize the need for education and international support for that around the world. We're a connected world. We have to support everyone there for education. And you can learn more and follow more. Go to our website, Twitter, Instagram. We're on every conceivable platform. Just, you can find us everywhere and reach out. And we'll figure out a way of engaging with anyone who wants to support us in whichever way they can. - Wonderful, thank you. Haroon, final comments. - Nope. I think we are, I think one of the things that I'd recommend to everyone is that you've seen a lot of news. Everyday when you open the television, there's a lot of material on the pandemic and the death rate and how many people have been infected. But I think we've forgotten how to talk to children about this as well. Or we haven't had the time to talk to children in a unique way about this as well. Taleemabad has made special material just to talk to children about what this pandemic means, and we work with child psychologists just to make sure that we get it right and we can talk to children about the unique issues that they face. And I think it should be good learning material not just for kids in Pakistan, but for kids across the world as well. So I would recommend that everybody watch that. It will come up soon on Taleemabad.com. - Wonderful, thank you. Thank you both again. Everyone, Hank Green will be joining us again shortly for another Tech Skills Day interview with Eric Daimler, former White House AI and robotics expert. He's also the CEO of Conexus. So please stay tuned, and we'll continue the coverage here shortly. Thanks everyone. - Hello. We've returned. It's me, Hank Green, back with more of Tech Skills Day. What's going on right now? We've got Eric Daimler, former White House AI and robotics expert coming up. Also the CEO of Conexus. Eric has done just about everything. He's already in the room here with me. He has been in academia, he's been an investor, an entrepreneur, and a policymaker. So he's been up to a lot. Eric, hello. How are you doing? - Hi there, Hank. Good to see you. - Good to see you too. Excellent, excellent set you've got. I love that people are taking their webcam background seriously. This is the world we are in now and we must do that. Though I don't know that you got that together in the last month. When did you get your little lighting setup back there? - I am at home like everybody else, and I just happened to have a good library setup. - Nice, nice. So tell us a little bit about yourself and your background. - Yeah, yeah. So, I guess I'll first say, yeah, it's good to be with you and good to be talking about this subject. It's a fantastically important topic. Tech skills and Pluralsight has a great role to play there. And I do have to say also that you and your brother have a great video series. You guys really get the job done with being entertaining. - Thanks. Oh, thanks very much. - Yeah, a little bit about myself. I've been fortunate to spend my whole career in and around artificial intelligence in various capacities. 20 plus years. Starting as an academic researcher, developing, learning algorithms. I've been a venture capitalist on Sand Hill Road. I even worked in the federal government as a sort of policy expert in artificial intelligence during the Obama administration. And most recently I've been really fortunate to be continuing my entrepreneurial journey by working with a fantastic group of people in a firm called Conexus. And Conexus, what they do is we guarantee data integrity in the integration of very, very large datasets. Therefore, it empowers better analytics and empowers better business decisions. To give you an example of what Conexus does, I guess I can talk about one customer. It's a taxi company, a ride sharing company. I can't say their name or can't give any of the four letters of their name, but what they do is they're a very sophisticated company with a lot of resources from very smart people. And they want to do analytics on pricing relative to demand in Seattle. - Sure, that sounds pretty important. - And they may want to also do it in Dallas. But what they actually can't do, despite those resources, despite very smart people, is do it for the whole of Texas or the whole United States or the world, for that matter. The integration of data is very, very difficult. And the outcomes for that is what Conexus enables. We enable the modeling of these very large datasets so you can make better analytics and better decisions. - How long as Conexus been going and just how long you been doing it? - We're relatively new. We spun out of MIT just a few years ago out of a discovery in mathematics. - Interesting, wow. One discovery in mathematics and then we're bye-bye MIT. It's time for a new company. Not your first go around though. - Not my first go around. - So, AI and robotics have a lot of potential and really exciting potential. And this is something that you have a lot of expertise and interest in. We talked earlier today with Andrew Yang, who has also been discussing that a lot. Can you hit me with some predictions for disruptions we might expect soon? - The disruption is gonna come from category theory. It's something I hadn't heard of and probably many in the audience hadn't heard of for a long time. - I don't know what that is. - Yeah, it's this new branch of mathematics. If we think about the math we've known that underpins everything around us, we think of algebra, geometry, trigonometry, calculus. But when was the last time you used calculus in your day-to-day work? - No, no. - It's been awhile, right? The mathematics of calculus, geometry, trig, those are the mathematics of our ancestors. It's a little bit like knowing Latin today. It's just no longer applicable outside some increasingly narrow specializations. Category theory, probability, are the math of the digital age. They're the math of the future. It's the math of relationships. It's the math of equivalents. It's where everything is going to be going and it's gonna wipe clean everything in information technology over the next decade or two. - All right, so teach me that. Where's your course so that I can know everything about this new mathematics that is the only relevant mathematics? - There are some fantastic online resources, to use Pluralsight's station in the world. One of our co-founders, David Spivak, is a faculty in the MIT math department. And he is a fantastic teacher. He has a couple of books on category theory. There's a multiple of YouTube videos. And I would expect Pluralsight to be teaching this sort of theory increasingly over the coming years. - What are the industries that are gonna get disrupted fastest and hardest, do you think? - Yeah, I think when we talk about disruption, we'll often talk, thinking about some telegenic disruptions. Autonomous cars are often the ones brought about as being the most disruptive. But I'm gonna say what's disruptive is gonna be anything around what we're experiencing right now in the COVID response, and maybe even in the post-COVID world. We're living right now with something that nobody expected to have happened. This pandemic wasn't something that we could have responded to. So this disruption is in category theory, to be sure, but what this is, what this allows is it allows massively more data to be brought together. And that is itself the disruption. And it's not that AI will disrupt, it is that AI will be disrupted. And it will be disrupted with this new fundamental level of mathematics. Why that matters is because you make better decisions with more data. And there's this old story, who knows whether it's true, about whether, that we use 10% our brain. Well, we right now use 10% of the available data or far less. - Oh, less, yeah. - We use a fraction of the amount of data available to us. How much better would our business, our analytics be? How much better therefore would our businesses decisions be if we just had more data available that we could trust? - Mm-hmm. That last part is an important piece of this equation. Not all data is trustable. So, you talked a little bit about the mess we are in right now. Are they ways, like, tangible ways you can imagine that AI can help us prevent or prepare for crises, this kind of crisis or other kinds of crises in the future? - Yeah, what I've talked to about with some of my colleagues is that preparing for this is gonna be a little difficult if all we think about is inventory or extra capacity. Because this was a surprise. That's something we can all agree on. And as a surprise, if you plan for every eventuality, your business is gonna be too slow. The future is really held by those that are going to invest in agility and rapid response. I can give an example of a large customer we have out in the Midwest. It's a very large logistics company. I had actually no idea how big some of these companies could be when I heard one of their clients had tens of thousands of employees. And they themselves had hundreds of ships around the world, each one of which had tens of thousands of containers. - It's a big industry, yeah. - So the presenting question to them was, where's the personal protective equipment in our ships? In the boxes within the containers within our ships within our fleet within this one customer. You'd think this is actually a pretty simple question to answer. You'd think a large company should be able to answer the question, where's all my stuff? Or where's all my customer's stuff? It's actually shockingly difficult. And especially if I think back to the February world where I could go on Amazon and have a chrome dumbbell shipped to my house in 48 hours, right? - Yeah. - But for these large companies, the answer to these questions actually often involves people looking at Excel spreadsheets and then comparing them. It's not paper. It's not a fast process. And these questions can be answered in sometimes days if not weeks. They're long, hard questions, surprisingly. So what we were able to do with the deployment of our software, what Conexus allows is Conexus allows for this data integrity, this proven data providence from the top all the way to the bottom so you can trust where your things are in the world. This has applicability in every industry that ever just wants to bring more data to bear and make faster decisions. - So, something a lot of people are thinking about is how we navigate artificial intelligence ethically and, like, consider the responsibility we have to society generally. So without, like, doing more harm than good, can you explain what you think are the most important considerations for policymakers? So people in government, but also people in companies. And what policies would you like to see enacted? - Yeah, I mean, this is a rich set of conversations, set of questions to be having. We could talk actually for a week around AI ethics. Maybe I'll take one. The way we often think of data privacy or data security is pretty crudely regarded as giving access either by entity, I'm gonna let the state of New York have access to my doctor visits. Or by dataset, I'm gonna let access be had to all my healthcare records. Those are rather crude metrics, and that can make people understandably uneasy. What Conexus provides is this third dimension, kind of an overlay that's a much more sophisticated level of data privacy that I expect to be adopted more widely in the future. And I'll give you an example. So I just heard about Facebook offering loans to small businesses. And that sounded strange. And then looking into the details, I find, well, to do that, Facebook's gonna have to have access to all a small business's data. And that makes people understandably uneasy. All their data. But really, I don't want to give access to the unit of Facebook and I don't want to give access to all this dataset, all my business data. But there is a question to which I might be able to grant access. And this question, this type of question could apply to a lot of different industries and a lot of different applications. And the question is this. Is my business solvent for the duration of the loan? That's all they care about. And that's a fair question. They're gonna give me money. I'll answer that question. - Well, yeah, it's all a traditional loaner cares about. It's not all Facebook cares about. Facebook does want more data. For clarity. - But that's the only thing I want to give them, right? - Right, yeah. - To the state of New York, I'll give them access to the answer to a question. The question might be, did my attendance at the Yankees game correlate to a doctor's visit? Fair question. Not all my healthcare data. Not all my location data. But just that question. That's the way I think ethics can get represented in this type of question-based data access. - That doesn't seem simple. That doesn't seem like you can, like, draw one line anywhere. It seems like a line that sort of goes like this. And it's like, okay, we drew the line around, like, where the problem is, but then it looks like the congressional district in, like a gerrymandered congressional district. Like, how do you actually establish that, lock it in, have it be something that we are, that is explainable to people? Or is it really it just has to be case by case? - This actually gets into the what's beyond the how is the why. The old chestnut of, the person that knows how is managed by the person that knows why. And I can say there's some fantastic courses that Pluralsight offers that teach some terrific skills. But what was touched on in the last session from the, about the Malala Foundation, was the idea of contextualizing work. And this is very, very important. After you come to the decisions out of Tableau or any of the code that's taught by Pluralsight, what is the reason for the question? What's the context under which the problem's being solved? And this is an excellent path down which this goes. The way this is solved is not in computer science. The way this is solved actually is in math. It's actually the underlying theory behind these applications. We can't argue just better code, better code. It is fantastically complicated, Hank, and actually impossible to do what I just described, what we're talking about, with traditional mathematics and with traditional computer science. It's fundamentally different, and that's what Conexus does. - Okay, well you've piqued my insight enough that I'm gonna ask a question from the chat here. Justin asks, in two minutes, okay, what is category theory? - So category theory is, it's an extension of graph theory. And it is the mathematics of relationships. It is the mathematics of equivalence. It's a sort of meta mathematics that connects everything else. The insight for Conexus is that we apply that to databases. So we're not the only ones that are gonna be applying category theory. We're just the only ones to be doing it in databases. - Okay. That was less than two minutes, and it wasn't enough for me. Tell me more about what category theory is. - Well, yeah, I would encourage you to look at our co-foudner, Professor Spivak's multiple YouTube videos and his couple of books that he's written. He's a fantastic teacher. Also, another one of my co-founders, Dr. Wisnesky, also a fantastic teacher, talks a lot about category theory. There's some other fantastic books and fantastic courses about this that can give you more detail. This really gets, I love the question, because it really gets into the underlying plumbing that's gonna wipe everything clean over the next 10 to 20 years. - Yeah, I mean, so you're talking a lot about data, but also verifiable, verified data. Is there a point at, like, is it always better to have more information that's going into these sort of, like, okay, I'm asking you one question, I'm gonna give you one answer. But like, the system underneath that is looking at a lot of information. Is there a point at which there, like, we have so much data. And you are right. We are utilizing a tiny amount of it. Is there a point at which there's just too much? - So the distinction here is the data on which I do an analysis or the data that I consider for analysis. Generally what you want to be doing is you want to be considering the biggest possible dataset that's available to you. The majority of work done by these companies to collect data isn't used because the integration is just so difficult. This happens all day, every day in commercial banks that have to reconcile the legacy data systems from banks they've acquired since the 60s. It happens every day, all day in every other company that's acquired. Like when Virgin America got purchased by Alaska Airlines. That's an integration of data. So it's not actually just is your analytics going to be better. It's actually a business imperative that your client data, your customer data, and your flight attendant and pilot information all get integrated. The point that I would make is in the current COVID world, us responding has been limited by our ability to integrate data. Collect, integrate, and be able to use data. So who would say, oh, I'd just like to consider for analysis less data? No, I want to consider as much as possible. - That's great. That is a great distinction. So for people who are or organizations who are looking to leverage artificial intelligence more, like, what skill are the most critical skills, do you think? - Yeah, I think the skills are gonna be in just contextualizing the work, understanding the work that's being done. 80% of data integration projects fail. And it fails because we have these limited sets of data that then get molded to change the question being asked. And then the integration often takes so long and it's so hard and complicated that you have scope creep. And often the projects are just failed late and then failed expensive. It's hugely valuable for the smart people taking the Pluralsight courses and actually taking the initiative to complete them, remind themselves and their team that how these projects can fail and how they can be successful. Which is keeping the question to be asked, the business question to be asked foremost in their mind and then bringing as much integratable data as possible to the question. - And then if that question starts to creep around because the data you have is better at answering a different question than the one you originally wanted to ask, you've got to use your judgment and decide, well, maybe this project should fail early. Like, if we're not gonna get to the right question, maybe this project isn't the project to be doing right now. - These are the fantastic set of questions that contextualize these technical questions. And it's a place that everybody can play with a certain level of technical understanding about what these tools can or cannot do. It's here that it's probably worth remembering that all of these companies are becoming data companies. Delta Airlines flies planes, but really what they do, really their advantage is customer data, weather data, pricing data. These taxi companies, they may be in the taxi business, but their competitive advantage is around the data and how they manage it. These are data companies. Everything is gonna become a data company. In that sense, everything's gonna become an AI company. And understanding the context about what's hard and what's easy comes from learning these sort of technology skills that Pluralsight offers. - Yeah, awesome. Thanks for keeping calling out Pluralsight. - It's real. - Yeah, absolutely. So are there some, like, concrete skills that you think people should be developing right now to live in this world that you and others are starting to define as our, figure out will be our future? - Certainly I could mention our open source tool ourselves, CQL, that allows people to be integrating data. - Oh, cool. - And experimenting with integrating larger sets of data with integrity. For us, we're the only solution to be able to guarantee the integrity of data with maintaining data providence, maintaining data lineage. I can offer other fantastic techniques that would be built on top of that data integration and would be things like Petuum that offer AI technology to do better data analytics and to be doing operations, more complex business operations. And then there's fantastic business visualization tools, and certainly like Tableau. - Well, we've now gotten the ultimate "you're doing a great job" question from Bug Queen who says, who asks, are you hiring? - We certainly, we are hiring. Yeah. I'm grateful that our business is able to really help in responding to many of our clients during this pandemic. And all indications are that we're going to be growing out of this and helping more and more companies keep their people and better deploy their resources to survive through this and grow. - So, I have a feeling I know what the answer to this question is gonna be, but I would like to ask what the most exciting, so you've done a lot of different stuff, what's the most exciting thing you've done in your career so far? - Yeah, I'm very grateful that I've done a lot of exciting things. And I have to say, among all of those, I'm really grateful for what I'm doing right now. - I knew it. - I'm working with a fantastic group of people. - I knew you'd say that. You've got to say that. - But it's really true. Because what would be better than to be at a place where we are helping to make better business decisions and better decisions for government. We have a lot of these very interesting conversations to bring more data to bear. You never say that you want less data. You never say you want to trust your data less. What better way, what better place to play than with a fantastic group of people solving these world-changing problems with new dimensions of security and privacy. - From your perspective inside this new organization, are there industries that you're most excited to be working with? The most excited to see how your skillset can bring them sort of into the next level? - There's opportunities all around. So there's really, I would say there's not an industry that is not touched by the problems arising here. I would say the short term wins that we're having are in logistics and around bringing some efficiency to supply chains. That is an urgent need. To maintain the life and death issues around where are my personal protective equipment in the world and how do I redeploy them is a big deal right now. And that actually applies to a lot of industries. The near future, I think we are excited about manufacturing, energy, transportation. But pharmaceuticals are a fantastic place that we think we can be making a difference. Because the integration of old drug databases can help. - There's a lot of data there. - Not only in creating new drugs, but it can help speed the development and speed the application of customized drugs per person or be by group. - Yeah, I mean, healthcare is a place where there's a lot of data now, but there's gonna be a lot more data in the next 10 or 20 years as we, people are very excited about personalized medicine right now and that data is not easy to figure out or to crunch. I've got one final question before we head out. Thank you so much for spending your time here. So this is from the chat. Somebody asks a great question. What was it like from the technological perspective working with the Obama administration? There's a stigma that government is old-fashioned. How true waws that from your standpoint? I think old-fashioned is a kind way of saying what people say about government. - The level at which I was working, these people were fantastic. Actually, shockingly fantastic. 'Cause I had the same conception going into that job as it sounds like the person asking the question does. But I was really impressed with the people with whom I was working. And it actually gave me a bigger perspective about the power of AI and the power of technology. Because what's different about government, different than in industry, is you can't choose your customers. - Everybody's your customer. Every single person, yeah. - You have to figure out the way to serve everyone. And what President Obama was doing, and should be really credited with doing, was he was bringing in technology experts like myself to augment policy experts like an Andrew Yang, lawyers and economists. So there's a lot of lawyers, a lot of economists, and not so many technologists. And Obama really led the effort. He put into law programs to bring in more technologists. I had sat in rooms where 30 people were around the room and I was the only one with an undergraduate degree, let alone a graduate degree in technology. People like Andrew Yang, who spoke earlier, it is actually very rare to be a lawyer that then took on the mantle of somebody advocating for technology, advocating for math. That's very rare. I had a good fortune to spend time with Justice Breyer. And that guy is smart. I mean, we were at a cocktail party where we just happened to be talking about conditional probability. I did not expect that from a lawyer of any breed, let alone a Supreme Court Justice. That man's impressive. - Well, they tend to be pretty impressive, the Supreme Court Justices. I think that is, as politicized as things have gotten, you don't get to that level in any amount without a lot of expertise. Eric, gosh, thank you for this chat. I would like to keep going, but as I keep saying throughout this day, we've just got, we're packed with great people. So we're gonna keep on moving. Thank you for the chat. Thank you for your insight. I really appreciate it. - It has been great, Hank. And I hope with your brother, who gave this fantastic birthday video where he was looking for this little animal that was, what, an "All Star" Sing-a-ma-jig? - Yeah. - So I'm hoping that perhaps this larger audience might be able to help you locate, for your birthday, an "All Star" Sing-a-ma-jig. - Look, we don't need them. You have all the data. You, if anyone in the world knows where the "All Star" Sing-a-ma-jig is, it must be you, right? Just look. It's out there. Someone knows. - In the future, Hank, we'll be able to integrate more data and we'll be able to solve your brother's birthday problem with more alacrity. - Just one question. Where is the "All Star" Sing-a-ma-jig? I don't need to know any data. Just tell me the answer. - Integrate more data. Better decision outcomes, Hank. - Thanks very much, Eric. - That's the future. Buh-bye. - Yeah. All right, everybody. If you want to check out techskillsday.com, you can find the agenda for the rest of our day. Here we're gonna be talking to Scott Hanselman soon and then Chloe Condon, and then Troy Hunt and John Papa for the rest of the day. And we've got our chat going on, so we'll be pulling questions from there for our future conversations. But we're gonna go for a quick break now, and I'll see you guys back on the hour. Hello, I am back. And I will soon be back with Scott Hanselman, who is a programmer, a teacher, a speaker, a podcaster, a blogger, and an open source program manager at Microsoft. Scott has been around on the internet for a long time doing lots of interesting and cool things. And of course, of course his video just looks fantastic. I love it. I love it. You look stellar. - How are you, sir? - You've even got a Lav mic. You've got a backup mic on you. You've got two mics. - Well, this one's vestigial. I mean, I can use it if I need to. - It's there in case. - I wanted to bling the place out for you to make sure that I respected the work that you do. - Oh, wow, oh, the colors. The colors are changing. - You like that? - So, Scott, thank you for coming and talking with me. It's a pleasure. I've listened to your podcast. It's fantastic. One of your podcasts anyway. You've had a pretty impressive tech career. Can you give us a quick background on your, the last 30 years of your life? - Somebody was asking me, like, they wanted a bio at some point. And I was like, eh. And they were like, evangelist. And I'm like, evangelist? Evangelist evokes the Crusades. I'm trying to convince you. Like, I don't want to be wandering around the tech landscape like, have you heard the news? - Yeah, that's what you're doing. - Have you heard the news about .NET and switching? I have decided after 30 years in technology, I'm a teacher. - Nice. - I taught at Portland Community College. I taught at Oregon Institute of Technology. Yes, I've been working in tech for 20 or 30 years and I've had a bunch of jobs and have had titles and made a bunch of websites and stuff like that, but I'm a teacher. You know what I am? I'm a professional enthusiast, much like yourself. - Yes. One of the best jobs a person can manage to get their self into. - I was actually, I was talking to someone about a TV show that I watched recently. And I said, I would like to watch you watch this show. And they're like, that's creepy. I'm like, no it's not. What I want to do, like, they had never seen, like, "The Wire" or "Breaking Bad." So it's like, Hank, have you ever seen "Breaking Bad"? No, I haven't. Ooh, okay. So you're gonna watch "Breaking Bad." You look here. I'm gonna look at you. I'm gonna just wait until you say ah, and then you're gonna look at me. And I'm like, I know, I know. I'm that for tech. So if there's a thing that people are excited about, I want to be the one that they turn to, and I go, look, yes, yes, it's so fun to make stuff. - Right, right. And I mean, that's a good job to have. And I feel like you, I don't know if you were intentional about getting it, but you seemed to have taken a lot of steps as if you were going to be intentional about getting in that position. So, was it just a lot of accidents along the way that led you there or was there some intentionality to it? - It's easy to retcon your entire life. - Yeah, I know, I hear that. - And imply that it was a plan. I know that your master plan was to have a Wikipedia page. And your brother and you planned the whole thing out. Like, yeah, clearly a plan, right? Now if it was, don't tell me, because it'll spoil the mystery. Like, I want to believe that you were an overnight success and in 15 years. Right? - Yeah, right. - But at the same time, I think it's a lot of luck, it's a lot of paying attention. - Of course. - There's hard work, there's privilege, there's a lot of intersectionality in how one succeeds. But being consistently kind, producing, showing up on time. If you do that for a very long time, you too can be a mid-level mediocre tech blogger. - So you've been at Microsoft for 14 years now. Is that right? - It'll be 14 in September. - Oh, wow. So that's a long time. Can you tell me, like, maybe the coolest thing you've worked on there? - I have a patent. I don't like patents. - I don't like other people's patents, but I do like my patent. - Exactly. That's the great thing about patents, right? I hate them all, except the one I have, because I'm a genius. For the Microsoft Band. We'll pour a little out for the homies. Remember the Microsoft Band? It was the Fitbit that we had. - Oh, okay, yeah. - Yeah, it's just one of the many great things that we did poorly that then someone else did better later, right? When we invented the iPad and then everyone else was like, nah. The Tablet PC wasn't a good name. And then they did it better. No, but yeah. That would be a fun thing. - That's awesome. - I would say bootstrapping open source. Like, really being one of the early people getting people excited about free software and open source software would be my most proud thing. - Awesome. Yeah, absolutely. You also do a lot of things in your spare time. A lot of side projects, which-- - Yeah, I do. - Yeah, well tell me about that face that you're making right now. - Well, so, every time I, like, I'm excited about life and things, right? So, like, literally a couple of days ago, like I think it was the day before yesterday, I posted some pictures of these little Gundams that I'm building. They're like little Japanese robot men, and they're exquisitely complicated and they take forever. And then someone was like, "when do you find the time to do this?" And I'm like, I don't know. Like, the children do eventually sleep. Like, when they collapse in a heap, I can make stuff. And then someone was making me feel bad for, like, when do you find stuff to do side projects? And I was like, well, I mean, you try to find time for important stuff. Family is important. Sleeping is important. Building little tiny Japanese robots is important. Like, so you prioritize. I've got my podcast. I've got some books that I've written that I'm not very proud of. I've got my little robots and my tiny, my big arcades and my tiny arcades and various arcades of various sizes. Those are all fun side things that I do just because I'd rather not sleep. - Yeah. Yeah, I mean, that does seem to be a bit of the trick. During this last month or so, I've had to do more with the same amount of time. And so the only thing that was really available for up for offer was the sleeping time. And there was probably some screwing around time that I've also carved out. But definitely the sleeping time has gone down. - We definitely need to make sure though that we don't get caught up in the, like, productivity BS of it all, right? - Absolutely. Well I mean, yeah, it's a pandemic, man. Like, this is a serious situation. And like, I run businesses and, like, I need to do a bunch of stuff. So like, this is not like a, like, I'm so happy that I figured out how to save two hours a night. It's by not sleeping during them. - No, no. - Like, there are short term times where you have to grind and you have to push hard. And I think that's really important. - Yes. Like, there's this dichotomy in productivity culture where it's like, you got to grind. And then there's people like, no, you have to work only eight hours a day. And I'm like, well, sometimes you're gonna work 14 hour days. - Exactly. - Like, and that'll happen for a week and then you'll turn it off. And because, like, sometimes you'll want to. And you should do what you, yeah, you should do what you want to do. - So let's parse that apart for a second. The productivity culture. Like, the bros that are like, oh, if you didn't use this pandemic to learn Chinese then you, really? So, I just said that I don't want to sleep. I don't want to sleep because it's frickin' depressing to sleep right now. Why am I building tiny robots? Because it feeds my spirit. You know what I mean? 'Cause it's freakin' self-care. So, program hard, build tiny robots hard. You know what I mean? Like, hire Julie Andrews impersonator if you have to. Like, whatever it takes to move you forward in your life right now. - Yeah, yeah, absolutely. And I really do like finding the priorities that I want to invest in and consciously deciding on them. And actually doing it, which I think is, that's the really hard part of trying to steer your subconscious, which is not super steerable. - Actually doing it. - But to the extent that we can do it, to figure out what we want to invest in and really convince ourselves that we should is the thing that we should be doing. So let's talk a little bit more about working at home right now. Because you've been doing that for a decade or more. - Yeah, too long, too long. Remote work is not quarantine work. - It's different. - I have gotten calls from, like, TV shows and newspapers, like, Hanselman, we googled for remote work and you can tell us the secrets, right? And like, yeah, the secret is don't do it during a quarantine. Like, call me when things are normal. I'll tell you all about remote work and all my great tips, right? - Yeah, call me when-- - But you want to see that there's a blog post that's gonna make you feel better about how things suck right now? - Yeah, yeah, absolutely. - No, I don't got that. - Have you seen any tips that you really, really, really deeply disagree with? - Disagree with. Ooh, that's a good question. No, I've had a podcast for 14 years, 700 episodes, and the only reason I do it is because every five or six episodes, somebody says, "oh, good question." And you just gave me that in reverse, and it feels really good. Because I was all ready. I have, like, a dozen tips that I totally agree with. Ones that I don't. Yeah, like, make yourself feel bad. Set up systems of guilt. Set up systems that make you feel crappy about yourself. Feel bad. If you are 60% productive right now and your kids are alive, you're killin' it. You're crushing it. So I would say lower your-- - I think that feels really good. Can you call me every morning and say that? That'd be great. - I will absolutely text you animojis. You're doing great, Hank. I don't know I have an animoji voice. I've been actually sending my wife animojis lately. And it's like, she was watching, I don't know what she was watching. Like, Hallmark or whatever. And I was like, sending my little, like, come to sleep. - It's too late for this. - Like, why does my guy sound like a Russian Adam Sandler? Come to bed, sweetie. Yeah, I will send you positive vibes at all times, my friend. - Yeah, okay. So you want to do this. And I think part of what you do is you connect with this community and you, like, not gonna use the word evangelist, but you are an enthusiast for technology. And you do this in community ways, and you connect with people in the real world. Like, how should we be doing that right now? Because we shouldn't stop doing it. - Life is squishy and complicated, and we're just big meat bags under pressure. And when you're slapping the keyboard and being mean on Twitter, it's hard to remember that. So I try to do the exact opposite. And I want people to be okay. So, like last week, I just put a Teams link out on, and I was like, let's just have lunch. Like, who's in? And like 100 people show on Teams and we just sit around and we talk about our offices. And we had a guy from Iran and a guy from Zimbabwe. And they just told their stories. Like, what we need to do is connect with each other and not overwhelm each other with pivot tables of why things suck right now. So I'm trying to stay positive for my own sanity, and also remember that even though I'm a technologist that can build anything, I am not a medical expert and I don't know what's going on and I'm not gonna solve it with PHP. - Yeah, don't need your hot takes. - So I'm just trying to spread the love and let people know that it's okay and that it's okay to be sad. - Yeah, I think that's totally, I think a lot of people are trying to figure out how to turn their skills to this task. And there are certainly technologists who are doing that in very real ways. But there's a lot to be said for the fact that I don't need to be the one who solves any particular part of this, but I do want to be supportive of the communities that I am in. - I love that you said that because I'm like, people are like, what are you doing, Scott, to help? I'm letting the experts do that. I'm supporting the experts. I'm donating to the experts. But you know what I am doing? Setting up a website for my local bagel shop. I'm helping my local barber. Like, I'm trying to figure out how to get the local Uber Eats that's not an Uber Eats. It's actually a local veteran with a Honda who goes and drives us around food. Like, I'm supporting local businesses and making sure that they're still there when this is over. That's something that I can do. So I'm focusing hyper-locally. Like, 10 miles around me to make sure that they're okay. And I would encourage everyone out there who has the ability to make a website for your church. Or I set up my Taekwondo dojo with remotes. So we're doing Taekwondo over Zoom. I sent them webcams and the setup. Gave them a remote control. So he's got pan, tilt, zoom. And we've got 30 people for Taekwondo twice a week. - Nice, that's awesome. - That's a small thing that we can all do. You have the skills to do that. You have the webcams in your pile of USB cable drawer, right? Pull out your old Logitech 920 and give it to someone. That's a great thing you can do. - So let's talk a little bit about tech skills, because that's what we're supposed to be talking about. - Oh wait, are we though? - So, you work a lot in .NET and talk a lot about .NET. What would you say to, like, a college grad to convince them to start working with .NET? - What I have been telling college grads or boot camp people or Pluralsight enthusiasts, people who are techies getting started, is I think you should know two languages. I think you should know JavaScript and something that's a systems language. And a systems language could also be JavaScript, right? But could be Go, could be PHP, could be C Sharp, could be something that feeds your spirit. I use that word, that term a lot. It could be something that makes you happy. I like .NET because once you've learned C Sharp, which is a friendly, curly brace type language, it'll feel familiar to JavaScript. You can go and write stuff on anything. So you could write .NET on Windows, on an Apple Watch, on an iPhone, on Android, on a Raspberry Pi. This Raspberry Pi runs C Sharp. So I like the idea of being able to learn a language. So think about it in terms of the world. If you were gonna learn a couple of languages right now, if your goal is to communicate with the most number of people, English, Chinese, Spanish, Arabic. Four languages would get you, like, 60%, 80% of the planet, right? So if you learn JavaScript and .NET, you've covered basically anything you would ever want to build. So that's why and what I would tell people getting started. Learn those two languages. - Are there any common misconceptions about .NET? - Yeah. That it's like COBOL, that it only runs on Windows, that it's the old person's language. It's your grandmother's language. It's, like, big and scary and boring. Like, there was a time. Actually, true story. My dad's a firefighter. He calls me. And he doesn't know what I do, right? He knows I do the Microsoft. He calls me and he says, "I want to install .NET." And I was like (gasping). He cares. He wants to be involved. Like, I would love to help you. And he's like, "Yeah, I need to install Paint.NET." And I don't know. So he needed to install the .NET framework to get Paint.NET. He didn't care. He doesn't love me as much as my brother. But what he wants is, so that was a thing. Like I've got to install it and it's two gigs and I've got to reboot. But those days are over. .NET is tiny. You can install it in five minutes. You can run it in a Docker container. You can actually go to D-O-T .net. So, dot.net. We spelled out the word dot, 'cause it's kind of cool. And try it out in the browser. You're not even gonna need to install anything. So you can be practicing .NET on a Chromebook. So the misconception is that it's old and crusty and something that you would install in a big bank. You can, but it's not as tight and small right now. - We have a question from the chat from Maverick, who asks, "what are the prospects for a .NET freelance developer?" - I think the prospects, I wouldn't say that the prospects are excellent, but I would also say when you self identify with a particular language, you are limiting yourself, right? If you're saying I'm a programmer, full stop, pause for effect, with experience in C Sharp and da da da da da, that's one thing. But if you go and say, "I'm a ASP.NET programmer" up front, well, you know. "I'm a PHP programmer. "All other things suck. "I am an English speaker. "I have no interest in other languages." You're limiting yourself. So I would encourage you to kind of remember that and phrase it as such. But I think that the prospects are excellent. I think that .NET is a little weak in the startup space right now, and we're getting people excited about startups. But there's a lot of enthusiasm around enterprise and people who are doing, like, big companies where they have a reliable job that's gonna stick around for awhile. If you wanted something a little safer, you could go with .NET. But I'm trying to get people excited about .NET in startups because it's free, it's open source. Like, I don't want any of your money. All my stuff is free. - Yeah. Yeah, you're still getting paid though. - I'm getting paid? I'm getting paid. Yeah, I am getting paid. But what I'm saying is that, well, let's talk about that. So what's Microsoft's evil plan? Right? - Well I mean, depends on who you ask these days. - Well yeah. I mean, well there's evil Microsoft of the past. I don't know what they wanted. They just want all your stuff, right? I figured out that Microsoft wants your for loop. They just don't care what your for loop is written in. Right? They want your compute. You can write it in Python. They want Azure. Microsoft, I think, this is my opinion, not my employer, blah, blah, blah, blah, blah. - You're right, yeah. - Microsoft wants you to buy an Xbox, maybe get Office 365, and put your stuff in the cloud. That's where your for loops run. And if you use it in .NET, that would be great. I think the theory is that if you do something cool in .NET, built it, and run it in Azure, Microsoft gets paid on the back end. But it's really significant to point out, you can download Visual Studio for free, download .NET for free, put the whole thing in Amazon, not pay Microsoft a dime. And if that happens, well then we failed to spark your enthusiasm for Microsoft products and we'll try harder. - Right. Yeah, yeah, yeah, I hear that. - That's what I think. - So Louise has a question that I like. What blog post that you have written, 'cause there are plenty, do you refer to back the most? - Oh man, that's a good question. - Yeah, I know. I hate asking questions like that, because I know that it's very hard to answer a question like that. - What blog post? - He's just gonna go, he's gonna Google himself right now, you guys. - You know what I'll do? The way that I figure this out, it's a fantastic question, Louise. I went to Google and I typed Hanselman space to see what it popped up. And it turns out that the one that I refer to the most, according to my Google history is, if you go and Google for Hanselman, "Good, Better, Best." It's creating the ultimate remote worker webcam setup on a budget. That's the one I refer to the most, of August of 2019. And it's how I set up my mics and my cameras and my lighting and my stuff. So yeah, that's the one I refer to the most. That's funny. - Sweet. Sweet, I love that. I love that. Actually, I'm going to refer to that page now because I have people asking me constantly. - Oh, I would love it if you would tell people about that. - And I think, like, it's-- - Oh, to point something out though. - What? - I apologize. I would like to point something out. Because here we are, two people in nice offices talking on microphones. This isn't even plugged in. And we look decent. Why? Is it because we spent a lot of money on cameras? - No. - Eh, no. - This is a Logitech little boy. - It's lighting. - It's lights. - It's lighting. - Yeah. - Look, it's lighting. It's lighting and a little bit of base. No. Right? It's so important. Like, you don't need to spend any money if you have a kitchen and sunlight. Webcams love. See, let's do that. Let's normalize dark lighting. Here, I'll make it even worse. - This is studio light. - Hank, I'm doing this for you. You ready for this? - Uh-huh. Oh. - Right? - Yeah. - Get your lighting right, my friends. It's all that matters. All you've got to do. So yeah, you don't need to spend a bunch of money on a fancy webcam. Just give it the natural light. Go and sit on your porch and look like a million bucks. - Yeah. Yeah, I mean, I just have a lot of people, people who have Pilates studios or teachers or, like, all these people are trying to figure out how to look good on camera right now, and it's really important. And, like, it is important. Like, it's not nothing. And it's a skill that we are all going to develop. Like, nobody knew how to use an iPhone 10 years ago and we all figured it out and nobody knows how to light their in-home offices yet, but we'll all figure it out. Another question from the audience. What's your advice for how technologists can survive in the changing world? We also got a similar question. Do you have suggestions for people who might be forced to become freelancers right now? - Wow. You can still hear me, right? - Yep. - Okay. I'm being told my someone that my audio was cut. - You're okay. - How to become a freelancer right now? I believe very strongly in the idea of the small business. If I had better healthcare, I would work for myself. If I knew how even healthcare in America worked, I would work for myself. I'm diabetic, so I need group healthcare. I think as a technologist, there's nothing more fun than enabling people to do stuff that they were right on the edge of being able to do that they didn't even know. Like, and this is not a sales pitch, but as an example, they have Google Docs or Office 365 and they've paid for it. And they maybe only use Gmail. And you go, oh, you know you have docs and you could, like, build a flow and drop PDFs into that and then take orders and like, what, what? And you don't have to pay anything. I love that. I think as a technologist, teaching people how to register their own domain, set up an SSL certificate, have a PNG on the homepage that's not nine megabytes. Like, an attractive brochureware website and the ability to take Stripe orders. I could spend the next 10 years doing that and it would just bring me joy. Like, your Pilates studio or my Taekwondo, right? Enabling people to be on the internet. We think everyone's on the internet and now what's the next big thing? Is it VR? No, it's not. It's getting everyone else on the internet. - Yeah, yeah. And I think more than ever right now, like, a lot of people are gonna need, if they're gonna make any money right now, it's suddenly being able to take some orders online is a thing that is not super, it might seem really intuitive for us to be like, oh, you just go to the Shopify or there's a thousand different tools you can use for this. - They don't know that. - But people have no idea. And so there's a lot of space, I think, right now for freelance. And people might be out of work more right now. I've done a lot of, I was a freelance web developer back in the early aughts. So it's been awhile since then. But yeah, I mean, like, the main thing is, that it took me awhile to learn, is that it's really about being able to effectively communicate what's possible and what the scope of the job is and to not let your client tell you what that is. They can tell you what they want, but then you have to tell them what the actual scope of the work is. And not getting away from that and communicating it very clearly because they're not gonna speak all the same jargon as you. The majority of bad freelance situations I've seen is when there's just not great communication between the client and the freelancer. - That right there. They don't speak the same jargon as you. Pop it off the stack to the very beginning where we talked about what do I do and being a teacher. Coming up with a really good metaphor or a really good analogy explaining to a person in a non-condescending way why a thing is important, putting it into a framing, whether it be a language or cultural framing for them to understand and go, oh, it's like da, da, da, da, da. And then they feel like you're not a gatekeeper. You're welcoming them at the gate. And you're like, no, come in. Come in, you can do internet too. Like, just because I was born here doesn't mean you can't join us. You too can be a digital native. And introducing them to the joyous parts of internet culture and the empowering parts of it as opposed to the hater parts. - Yeah. Okay. - Are the children beating on the door? - No, I don't know what that was. - No, that was my children literally beating on the door. - Oh, that was your child. I thought it was my child. - It was my child, throwing the other child up against the door. - Oh, nice. - Because I've set up my lighting with my Microsoft Teams, whether I'm online or not. So it's supposed to be red right now, but I was goofing around with the lights. So they think that I'm not busy. So I have to set the light outside to red so that they won't bother me. - Nice, I love it. - It's the daddy light. - Man, I love your setup. So, yeah, we are technically out of time, but I will just ask this last question from somebody in the chat. How many times is your own blog post the top result to a search that you do? - That actually happens a lot. - It happens to me too with YouTube videos. - You know that, right? Like, you're in it. You blog for yourself, you blog. I blogged quietly alone for three or four years before anyone cared. And lot of people think, oh, well how do I start a YouTube? Hank's got all the viewers. And how do I start a blog? Hanselman's done it. No. If more than you reads your blog, if two people read your blog, you just doubled your viewership. If you come back, you have an online diary. So don't put your keystrokes into email or anywhere that keystrokes go to die. Put them into a blog. Because if I find my result, I'm like, well I didn't have to remember it and I just solved my problem. So, own your words, register your domain, blog the heck out of it. And if two people read it, you have an amazing readership. - Yeah, the thing I've always said is if people are spending more time consuming my content than I am creating it, then that is a huge win. Like, then I'm done. I did it. - And that's so easy. Because if two people read it, then you've just doubled your keystrokes. And then exactly what you said is true. - Yeah. Well Scott, thank you so much for this great, fun chat we had. You got rave reviews from the people listening. - Aww, I very much, I have always wanted to talk to you and I feel like we could be friends. And I appreciate you, sir. - Okay. I'm so glad we're following each other on Twitter now. Scott, thank you. We're gonna take a quick break. In the meantime, go take care of yourselves. And we've got the rest of the day's agenda just below this video on techskillsday.com and we'll be back shortly, I think, with Chloe Condon from Microsoft. Welcome back, everyone. It's Hank here at Tech Skills Day, where we are about to talk with Chloe Condon, who is the Senior Cloud Advocate at Microsoft. Chloe has also done a bunch of other things in her career, including the fact that she's been in Hairspray and Xanadu, Carrie: The Musical, and Jerry Springer: The Opera. Hello Chloe. Hi, how ya doin'? I love Xanadu so much. Is that okay for me to say? Just as a human being. Are you muted? I can't hear you. Can you hear me? No. Hello? Oh no, oh no. In the meantime, I will just read Chloe's entire biography so that we can get it out of the way for when she's here. Chloe is a San Francisco-based Senior Cloud Advocate for Microsoft. For the past two years, she's been working on educating developers on error logging, reporting tools, open source, and has been a developer community at sentry.io, where she created the DevRel Award-winning Sentry Scouts program, a camp-themed meetup featuring patches and s'mores and giant squirrel costumes. If you couldn't pick up on the theatricality of Chloe's meetup, pre-engineering she was a professional musical theater performer for 20 years and has a BA in theatrical performance from San Francisco State University. She's passionate about bringing people with nontraditional backgrounds into the world of tech. And since her graduation from Hackbright Academy in December 2016, she's worked with a wide variety of developers and loves to help developers' lives get easier. And we still can't hear her. I can't unmute you. Can they? I don't have control. I don't have that level of access. I can mute myself, but that's just about it. Oh, you also can't hear me? Oh, well that's just, that's just the whole problem. I'm not gonna go anywhere. Okay. I think she's figured it out. She looks confident. - We got it. - Hey. - Technology. I just wanted to make a dramatic entrance. - You did. Yeah, fashionably late. How are you? - I'm doing okay, everything, all things considered. I've had a lovely morning in my home. Not leaving my home, as everyone else should be doing. I played some Animal Crossing this morning. So I'm doing good. - Good. Well thank you for being here today. So have you been occupying your Animal Crossing time? No more eggs, thank God. - No more eggs, yeah. Although I am feeling a little bad that I didn't hoard some eggs. - Oh no. - Very similar to real life, 'cause it's hard to get eggs in Oakland right now. But I built a little section of my Animal Crossing island that's just Easter themed, and I'm running out of eggs. So if people want to hit me up with eggs to make more egg fences, come to my island. But I've mostly been focusing on making a good life for my son. If you follow me on Twitter, I have this skeleton son that I usually bring out in October. But since we're quarantined, this is Jon Bone Jovi. And I got a skeleton in Animal Crossing, so I am now building an island for Jon Bone Jovi in Animal Crossing. - Oh wow. Just have your own island. I have never played Animal Crossing because I can't get a Switch. - Oh, yeah. - But I am playing Stardew Valley with my son right now and it's lovely. - Stardew Valley is great. - That's where I'm at right now. So, we've all gone virtual now. How are you seeing, like, virtual work and play spaces impacting us right now, how we're trying to get work done? - Yeah. It's really interesting, because in my particular role, so I'm on the same team as Asim, who we talked to earlier. I'm a Cloud Advocate at Microsoft. And we're all regional all over the world. Although usually our jobs are spent in a variety of different ways. And that can come in a lot of forms of traveling, going to different places and giving talks. I used to do a lot of local meetups here. Obviously I'm not having people gather in San Francisco these days at the Microsoft Reactor, but that was a big hub for us. So what's been interesting for me with this switch to kind of online community is, in a weird way, I had already been sort of doing that in my life. I know a lot of people are like, oh, Chloe's on Twitter a lot or Chloe seems to use Instagram a lot. But I'm finding that those communities, especially as someone, I work specifically with the academic team at Microsoft, so I'm working with a lot of students. That's actually where the students are, especially now that school is either not in session or is sort of TBD. So I have been personally pivoting a lot of my content to video content, which I love to do. And I'm putting it on different platforms. I'm 30 years old and used TikTok for the first time this week. It made me feel very 30. But just kind of going where the developers are, which I don't know about you, but personally, I'm finding that I'm using a lot of social apps a lot more. So I've been experimenting a lot with kind of using those. Which is kind of funny, 'cause I know a lot of folks are like, oh, social media isn't work. But it's sort of turned into my work in an interesting way. Like, online communities are really the only communities we have right now. - Yep. Yeah, and our real world communities can be online. Yeah, I mean, social networking apps have long been my job. So that's not new for me. And it's always weird to realize that other people do this just for fun, whereas I certainly find it to be fun, but also it is definitely part of my job. Do you have any good tips for how to, like, spice up virtual meetings? Like, how to make them, if not as good as in person, better than just the way that we may do our average Zoom call these days? - Yeah, so I think most tips that I've heard from people lately have been more, like, technical tips and stuff. But mine are a little bit more physical. Which I guess relates a lot to my performing arts background. But I love a good cameo. I love that we're seeing more kids, babies, dogs. Like, love seeing sets. So like, I have my moon pod here covered in a dinosaur blanket. But it's been kind of fun to see not only people's homes in the background or their offices, but the fun, interesting Teams or Zoom green screened backgrounds in. I'm always a fan of props. I love a good prop. Obviously, as we saw from Jon making a cameo earlier here. And I think just, yeah, being candid and upfront. I mean, we're not fooling anybody. We're all working from home. And it's been really wonderful to see televisions hosts like Jimmy Kimmel and Jimmy Fallon doing these streams from their homes 'cause that's the reality that we're in. - Yeah, they're not fooling anyone either. Yeah. - So I think there's sort of, I mean, even when we just started the video, having the technical difficulty. It's like, yeah, this is the world in which we live in. So I've been trying to make an effort to just kind of lean into that and very much have a sense of humor about it, because the reality is I'm sitting on the floor of my bedroom right now doing this while my boyfriend is working at his job downstairs. So it's an interesting adjustment. But I think a lot of my tips are, I love cameos. I love, like, featuring. I'm trying to get my own desk set up right now and feature things that I really like, that finding that sort of blend between distracting and showing off your personality. So it's been an interesting new thing to kind of get used to, but I love a prop, I love a cameo. - It's gonna be fun to watch it evolve as it does. Already I am sick of a virtual background. So, let's talk a little bit about your work work. You, according to my notes here, met 16 Docker Captains in three days. - I did. - What did you learn from that experience? - Yeah, so it's interesting, because my very, very first role in tech was at a company called Codefresh, and it was a Docker CI/CD company. And I was completely new. Not to tech. I had dabbled in a lot of different tech roles here and there. Never in the engineering side of things though. So I was relatively junior, and I kind of set it upon myself to, A, make a goal that I wanted to become a Docker Captain someday. I didn't really stay in the Docker space long enough to do that, unfortunately. But I thought, okay, who can I talk to to kind of, like, get a sense of what Docker is, how I can kind of get to this level. And in retrospect, I of course probably looked like a crazy person to these Docker Captains, because I messaged all of them. And I'm like, hey, I'm this green new person on the scene. I'd love to talk to you. I'm sure they thought I was some spammy marketing person. But out of the folks who did contact me back, I had some of the most pivotal kind of conversations that I had early on in my career. Not just about Docker, but about how to be a good contributing community member and what kind of content to write. Specifically what comes to mind is I remember talking to Tom, who is tomwillfixit on Twitter. And we've kept in touch over the years. And he said something to me which I still think of it to this day when I'm making content, which is, don't ever be afraid to make beginner content. It never makes you look stupid. And there's more beginners than experts. So like, also, UI changes all the time. Different interfaces change. So you may think this is really mundane and stupid, but your beginning tutorial on Docker could help someone who is now looking at an old blog post that was from five years ago. So that was really, really cool. And also, that was a huge kind of meeting of folks for me 'cause I still work with a lot of those Docker Captains that I met in those days at DockerCon and we've crossed paths and spoken at the same conferences and worked on content together. So, it really just kind of taught me the power of, A, kindness. Like, of those who did, of course there's people are busy and don't reach back out. But just the long-lasting impact of relationships from these community members that, I think now that I sit in a similar seat as a Cloud Advocate at Microsoft, I kind of feel like, well, what do I have to contribute? I'm just a normal person. But you really can have an impact to those who maybe are looking up to you in an interesting way. - Yeah. I mean, that's so cool, because as a person who has sort of a public facing life, I get people emailing me pretty frequently who are like, "Hey, I'd like to talk to you about X, Y, or Z." And usually I do not write back to that. But there are lots of people who have very influential, powerful roles who, they're not in that space. And, like, they might be really interested in talking. And the fact that you got so many people to engage with you on that and that it became a part of your work, also a part of your community, and like, it's still important to you now, that's kind of huge. And also that you were able to sort of, like, pack it in that fast and get a lot of insight really quickly. That's super valuable. - Yeah, I feel like a lot of my, like, it's really hard to kind of explain what a developer evangelist or developer advocate or developer relations person does. I think to kind of the outside eye, a lot of people are like, oh, the glamorous life. They fly around and give talks. The reality is, I'm like, eating Flaming Hot Cheetos in my hotel room at two a.m. preparing a talk. - Oh yeah, uh-huh, I know that life. - But what's kind of interesting is I've found elements of my role that have sort of appeared in interests ways. So it's part sort of, like, content creation on the side of blog posts and videos and interviews and things like that. But there's also this piece that's sort of like a casting director, which is a job that I had kind of almost envisioned myself doing when I was in the performing arts world, where you meet a lot of really interesting people and you're able to work with those people and connect them and not only do content with them, but sort of say, oh, I have a good person for this. So I kind of get to see myself use these different pieces of my brain from a previous life on, my boyfriend makes fun of all the time. On Instagram of course there's these bots that go, like, "Hey girl, want to collab? "DM us for a collab." And my boyfriend always loves to tease me. Like, you do understand that your full time job, as much as you, 'cause I always tease them. I say, oh yeah, send 25,000 chicken nuggets to me. I'm happy to collab. But my boyfriend has pointed out many times. Your job is to be a collaborator. And I was like, oh, yeah, I guess maybe in a very different way. But it's true. Like, working with other people, I've found if I just make content and I just make a blog post or I just make a video, it's just me talking to myself about myself to my followers. But when I'm able to include other voices of other people, I just get such a bigger reach. - Right. Can you tell me about any cool things that are happening in the container world right now? - Yeah, I mean, I think the most exciting thing, I just got from Microsoft Ignite The Tour, when we were still touring that thing around. And what's really interesting is to see, I think we're very spoiled, especially as people who work in the cloud and container industry, that a lot of problems that we solve are efficiency problems or making people be more efficient with how they write their code. But what's really interesting problems that I see on container solving are these huge monolithic applications that have existed for years and years and years and they're finally looking to kind of upgrade and use different resources and containerize their applications and just make it a lot more lightweight. Almost similar to what Asim was talking earlier on a carbon footprint perspective, but also just more manageable. We're finding that a lot of sys admins now are kind of moving into this, like, dev opsy containery space, and there's more transparency and openness. And we truly kind of stand on the shoulders of giants in this industry. We don't have to build everything from scratch anymore, which is really wonderful. So, yeah. I think just seeing how these gigantic kind of beast of a legacy application are being transformed into these little shoe boxes within shoe boxes. - Yeah, absolutely. Do you think that that sort of opens this up to a broader group of people instead of having to, like, learn absolutely everything about one framework or one language, that you can sort of have an expertise in a couple of shoe boxes and build from there? - Yeah. And I think also, we live in this industry, or at least something that I've had to learn coming into this industry is you don't have to, you don't go to your computer science program or your boot camp or do your Pluralsight course online and learn JavaScript and you only do JavaScript for the rest of your life. I think what's been really cool about this industry is I can do this stuff now and then in three years I might be doing VR stuff. Like, you kind of just learn how to learn a language, really, and then from there the possibilities are really endless. So I think what makes me most excited is just to see these people who maybe have gotten really almost used to their day-to-day working on this specific app for the last however many years. And now we're not only seeing those people kind of be forced and pushed out of their comfort zone, but we're seeing some really cool light bulbs go off and problems being solved that maybe myself, who's only been exposed to kind of the lighter side of things is like, oh, yeah, like, let's fix this. So I always get really excited when we kind of see the old and the new combine. - Cool. Nice, nice. So I mean, part of this is, like, bringing people with nontraditional backgrounds into tech. That's your own experience to some extent. Why do you think that that is important? - Yeah. Well, so I grew up in a family. I'm an only child and I have two parents who are artists. I had a costume designer, visual graphic designer mother and a playwright and director father. So, I grew up around computers. My father taught at a university and we got what is now considered, 'cause I just looked on eBay the other day, vintage Macintosh. Kind of a word processor. So my very early days were, oh cool, a computer. Computers have always been sort of this reoccurring character in my life. But there was no one really around to, A, tell me, or B, even let me know that these were being programmed and made by people. It was just sort of this magical box that showed up. So a lot of the education that I do now, especially that I work in the academic space, is not only is it super important to me to bring my full, authentic self to this industry. As you can tell, I very much love pink and dinosaurs and my aesthetic is very Ms. Frizzle and chillin' at a Coachella kind of thing. But when I think back to, like, okay, who, I didn't really learn about computer science until maybe five years ago. And it was all very much by chance. I happened to see a talk at Google about getting young women interested in programming and adding Disney Channel, Nickelodeon characters that would kind of inspire them and show them they could do this. That people who look and act and sound like them can do this. And I've been racking my brain for the last five years thinking, who was that for me? Like, what did we have? We had "Bill Nye the Science Guy." Of course, that is the male identifying person. But the only one I could find, I've got a prop, is Gadget from "Chip 'n Dale Rescue Rangers." And she is a chipmunk. So, we're halfway there. We have a female identifying kind of engineer. But it's not at human. So I don't think I really saw myself in anybody in this industry, nor was I really exposed to it at all. So I find it to be really, really important to not only share my story and really not fall into the norm and stereotype of the Patagonia vest and the kind of tech vibes that I very much as an admin and as a recruiter saw in my previous jobs. I think also it's really important to, as I said before, highlight voices that don't look like the traditional engineer. Drag queens in tech, artists in tech. People who are doing really cool, interesting stuff, 'cause gosh, if I had known that was the case, maybe I wouldn't have gotten my theater degree. - There's nothing wrong with a theater degree. Like, I work a little bit in community theater and I imagine that there's plenty from that that has carried over. - Oh yes. - Knowing some about both of those spaces. - In the most surprising of ways, yes. - Oh yeah? Like, give me an example. - Well, I think the most obvious one is I'm fearless when it comes to public speaking. This is something I've been doing my whole life. I've been an ogre on stage in "Shrek The Musical" and had my dress rip down the front. Like, there's really not anything that scares me from that element of things. But I would also just say rejecting has been a really big one. I think the coolest thing about coming into tech from theater has been, you can be an actress your whole life and give 110%. But if you're not the right height or hair color or ethnicity or whatever it is, you're out of a job. Whereas here, really 100% you give, 100% you give back. So, rejection not based on my height has been really, or my voice or things like that has been really wonderful. I think also just the variety of personalities that I had to deal with. Like, that's such a classic interview question, right? Like, tell us about a person you've dealt with. And I'm like, well, have you worked with actors before? - Worked with every kind of, yeah. I haven't worked with every kind of person, but I've worked with every kind of dysfunctional person. - Yes, exactly. But I think that kind of the coolest thing is seeing all these parallels in the performing arts and tech. Specifically, I encourage all my stage manager friends, I'm like, yo, PM work is being a stage manager for an act. Like, you're basically kind of running and organizing and making sure everything's going smoothly and strategizing. So there's these, when I first kind of got into tech, especially when I was going to my boot camp, I was like, gosh, why did I, like, I meet these kids at hackathons and stuff who are so much smarter than me. They have, of course, been doing it a lot longer than I have. But I thought I'd wasted all this time getting this theater degree. I would talk to my boyfriend, who has a CS degree from UTD and he'd tell me about these advanced calculus classes he'd taken. I was like, one time I had to pretend I was a cat for an hour in another class. But there's been these moments where my theater degree has made these odd appearances. Like doing community meetups and just adding the most, I used to have to do theater at a college where we did not have a budget. So I can make a set costume, everything in a $20 budget if I need to. So coming to the startup world and then saying, okay, here's a $1000 budget. It's not enough, but go for it. I'm like, oh my gosh, I can do like 10 shows with this. Like, what kind of fun, creative elements can we add? But I think most of all just, I use the creative side of my brain in a very different way than I think a lot of folks in the tech industry do, which has allowed me to kind of think up different demos and apps and examples that a lot of my coworker are like, how did you think of this? And I'm just like, I don't know. Like, years of musical theater, I guess. Yeah, and I'm very crafty. So I'm always, there's kind of that interesting blend of, like, costumery and IOT and cosplay that has that nice intersection for me that I'm finding. - I've got a question from the chat. What are your thoughts on Kubernetes? Is that how that's pronounced? - Oh, Kubernetes. - Yeah, okay. - Well, I know. It's like, K-etes, Kubernetes. First of all, it made me want to bang my head against the wall when I was first starting it. It was very, very difficult. But there's some amazing, amazing courses out there, I think some of them on Pluralsight actually, that really helped me get through that time. And I made a video with a friend of mine that I an also share on Twitter where we kind of talk about getting started with Kubernetes. And specifically we have a fun little joke in there that if you say Kubernetes three times, Kelsey Hightower appears. So I need to be careful that I don't say it a third time. But yeah, it's great. Kubernetes is great. I'm probably not the expert on that these days. But if you're calling Ian Coldwater, they really are amazing and doing some really great Kubernetes stuff. But it's a very useful tool once you get up and running with it. - Awesome. Do you have, another question from the chat. Do you have a favorite book that has helped you in your career? - Oh my goodness. Yes. Ooh, I'm reading a couple really good ones right now. But in particular, there is a book called "Just the Funny Parts" by Nell Scovell. She is a hilarious, wonderful, interesting comedy writer who is a female comedy writer, who also has done some writing with Obama and Charles Sandburg. But the majority of her book that I found really interesting, especially being a woman in tech who looks and acts and sounds like I do, which is kind of not this cookie cutter mold of an engineer, is hearing about her story as a woman in comedy writing and how there are so many parallels to being in an industry where maybe you don't feel that you belong or maybe aren't being included in the conversation. But specifically, it really, I of course combat a lot difficult situations with humor. Maybe that's the musical theater in me coming out. But she does such an interesting job of finding the lighthearted comedic moments of what can be kind of really dark situations. But specifically for me in my work, I always bring a sense of humor to everything that I do. And I've built a lot of my online brand around that. I apologize to everybody on Twitter who hates all my tech puns. But I do enjoy making people groan quite a bit over the other end of the phone. - You're a great follow. I followed everybody that I was gonna, as soon as I found out I was doing this, I followed everybody and you've been a joy. So, you're doing well. - Yeah, I think, like, what's really funny to me, specifically on social media and Twitter and on some of these, TikTok specifically, and these platforms, is people respond the most to comedy or nostaliga. And I say this from the perspective of, if I ever talk about Clippy, I can almost count on that tweet getting a lot of likes. 'Cause I'm a Clippy, as the kids say, a Ciippy stan. But I think also if there's anything sort of colorful or reminiscent of, like, Nickelodeon, or things that really inspired me. I did some Furby hacking back in the day that got really popular. And I think that really pulling on those nostalgia ties and those comedy ties really kind of, especially now that we're stuck at home, speaks to that sense of community and strength that we have. So it's always been fun to kind of talk about Clippy from my perspective and do content with other people who love Clippy because it's very, it's interesting to see what people respond to. - Yeah, oh man. Have you met the people responsible for Clippy? - I actually, there is a wonderful video that I would recommend. It's an hour long, but Steve Sinofsky and Frank Chen did-- - That's not a video, that's a film. - But they go through the complete history of Clippy, from like the original videos of them being like, oh, look, here's a little guy popping, to its retirement. Which Clippy, fun fact, when Clippy went through his official retirement, Gilbert Gottfried voiced a bunch of Flash animation videos talking about Clippy's retirement. - I think I remember that. I think I remember that. - But they have a whole unauthorized autobiography of Clippy that I highly recommend checking out from Steve Sinofsky that was inspired by some business cards I made. Because I ordered my own that said, "It looks like you're trying to get in contact with Chloe" and it had Clippy on the back. And it's really interesting, 'cause I'm 30 and I grew up with Clippy and I was not in tech until relatively recently. So to me, I was like, oh, Clippy's cute. This is this fun, nostalgic thing. - I love Clippy. - And you talk to other people and they're like, it was a failure and we try not to talk about it. I'm like, what? - It was great when I was 10. - Yeah, yeah. And so it's interesting now. And the video actually kind of goes into that on, you build this product and it's given all this negative feedback and time goes on and it becomes this cultural icon. And I just think the more we can kind of celebrate these successful failures, I just love a good successful failure story. - Absolutely. Well thanks so much, Chloe, for coming by and chatting with me here at Tech Skills Day. It was really wonderful. And keep it up. Keep up all of your amazing work, and also your great tweets. - Thanks. I will do some extra puns just for you this week. - Oh, excellent. Looking forward to it. Next up on Tech Skills Day on the hour, so a few minutes from now, we're going to be talking to Troy Hunt, the creator of Have I Been Pwned, which has saved my own skin and I reference constantly. He's also a web security expert and a Pluralsight author. I'm really excited to talk to Troy. So that will be happening shortly, right after this short break. Hello everybody. We're back. Thanks for hanging out there for a second while I laid on the floor and twisted around a little bit. 'Cause I've been sitting in this chair for such a long time. We're gonna be talking now to Troy Hunt, who is a web security expert and Pluralsight author. He's done tons of stuff to help make the world a more secure place, which we need desperately right now. Troy is joining us from Australia, where it is five o'clock in the morning. So, we are all tremendously grateful that you are awake right now, and that you don't just look awake, you look fantastic. - You know why? It's coffee, all right? It's sacred. - Where are you in Australia? - What's that? What time is it? - No, where are you? - Oh, where am I? I'm in my office. No, seriously, I'm on the Gold Coast. So I'm on the sunny part of Australia. Well, it will be soon when it's not five a.m. - Yeah, when the whole sun comes up and stuff. First I have to say thank you so much for creating the tools that you have created, because I think that they have saved a lot of people from exploits and from hackers. And I, in my times of attack, they have been very helpful. - Awesome. - I have been pwned, it turns out. So, I really appreciate that. But to start off, during these times, we're staying home and staying safe and also staying sane. I have heard that you are helping your family do that by building a Nerf gun wall. So first, tell me how you got your kids involved in that, and second, tell me how on earth you have to do anything right now. - Yeah, so my son has been asking for ages for a Nerf gun wall 'cause he sort of saw a few online, and we had a bit of a look around. And I was like, oh, some of them are nice. I think we can have, like, more neon. And more impact. And then I think we can internet connect it. Oh, and you know what? We could actually plug it into Alexa as well. And I've got a spare Echo hanging around, so why don't we do that? And then we're looking around the room going, there's a spot there that doesn't have neon. Let's fix that. And then I asked on Twitter the other day, and I was sort of saying, what are people doing IoT project-wise that's cool? And someone started talking about Nanoleafs. And I googled it, and it's like, one hour later I have, like, a car load of Nanoleafs. And now we're doing the other side of the room. So I go outside now in the evening and he leaves his blinds open when he sleeps, and his rom just looks like a night club. He's so happy. He's 10, by the way. - That is awesome. So are you often up at five o'clock in the morning? Are you getting a lot done these days? Are they making it work? - Yeah, look, I'm a morning person anyway. So it's, I think just the environment here, partly because we don't have Daylight Saving, because apparently it confuses the cows. So, like the other sort of Southern states, places like Sydney and Melbourne, they're usually an hour later than us anyway. So that kind of realigns us a little bit. And secondly, it's just so nice here early in the morning. It's just crisp and clear, and that works for me. - That matters not at all to my physiology if it is nice outside. It is not on the list of things that's gonna get me out of bed. The only thing is my three year old son, who does come into my room every morning at seven o'clock telling me that I need to get up. - He's your alarm. - And he's a very effective alarm clock. So, you've done dozens of security courses on Pluralsight. If you had one that people might take during Free April, which only has about a week left in it, what would you suggest? - I would go for Hack Yourself First, which I think is the second Pluralsight course I did. And it just covers a whole heap of different things that are relevant to the security landscape. It's technology agnostic, so it'll appeal to the greatest possible audience. And look, honestly, like that's the one that I just keep doing the same content on over and over and over again. Because it turns out all the stuff that we did terribly when I wrote that course a few years ago, we still do terribly today. - Yeah, yeah. Yeah, I mean, so there's no doubt about that. So you do consulting with businesses around the world. You talk about security plans with individuals. You see how, like, what these companies are doing. What is the most common vulnerability that we should be looking at right now? - So the number one top rated vulnerability is still SQL injection. Like, SQL injection just keeps on giving year after year after year. It's kind of funny. Like, every now and then someone pops up and they're like, hey, you know that thing we had, like, 10 years ago? We fixed this, right? It's like, no. It's still number one on the OWASP Top 10 Security List. And then the other one that we see a heap in more recent times as well, and I think this is partly due to the dominance of cloud, is just misconfiguration of security controls. So, that's literally like databases publicly facing, our first problem, not behind any sort of D and D or file or anything. And then no password. And for a long time there was MongoDB's publicly facing. And these days it's a lot of Elasticsearch publicly facing. Still Amazon S3 buckets publicly facing. And this isn't then even a case of, like SQL injection is exploiting a vulnerability in the designer's software. This is like, well, you published it to the internet and now here we are. - And those are both tantamount to you to just humans and their bad passwords? - Well, it's humans and no passwords. When it's like, literally public facing, this is what's happening time and time and time again. It's a database without a password. And it's on the publicly facing internet. And of course that's indexable. And then you get services like Shodan, which just crawl the internet and index everything. And then they have APIs to query that. And it's like, a hop, skip, and a jump, and suddenly here's a big list of everything that's publicly facing. - Yeah, yeah. So you've said that the industry has created a, quote, "perfect storm for data exposure." What are the most worrying parts of that storm? 'Cause that phrase usually means that there's several contributing factors. - There are. And look, I mean, we mentioned cloud. Cloud, I love cloud. Cloud's fantastic. I men, without cloud, there wouldn't be a Have I Been Pwned. And cloud enables you to screw up your security faster than ever before. It's fantastic. It's like, everything that is wonderful about cloud, like the ubiquity of the service, the low cost, the ease of deployment, all of those things are fantastic for building things and they're fantastic for messing it up and exposing all of your data. So there's that. I was just talking about all the IOT things I've connected. We're seeing a lot of security vulnerabilities in IOT that lead to data exposure. There are things like a couple of years ago, I put the cloud pit's data in Have I Been Pwned. I mean, this is teddy bears with microphones in them and then you put them in your kids' room and then all the voices are sitting in Amazon S3 buckets and exposed MongoDB indexing it all. So now we've got this ecosystem where we're collecting more data than ever before. And then of course we're sharing more of it than ever before. Everything wants to integrate with everything else, because you want to amalgamate all of your data into single repositories. And the other thing which I think is really interesting as well is that the social tolerances around things like privacy are different. So when I look at my 10 year old son and his view of privacy, he's never known a time without YouTube and without smartphones, and he looks at it differently to what I do. Like, I managed to get to adulthood before I got internet. I got, like, a lot of my childhood shenanigans out of the way. Like, he will have that yet to come, and that will be on the internet and his view of privacy is different. And his concern when privacy goes wrong through things like data breaches will be different as well. - Right, right. So that, like that cultural part of it you see as a part of this perfect storm where there's just less concern overall upcoming? - Yeah. And I keep hearing this term from people called data breach fatigue, where they'll say, look, there's just so many data breaches, it's like, oh, it's another one. I mean, my email address has been in I think 18 different breaches that are in Have I Been Pwned. These days even for me it's like, oh well. It's happened again. Like I'm no longer surprised and shocked and outraged. I'm just like, oh, it's another day on the internet. So maybe that's part of it as well. It's not just sort of the different demographics and our comfort level with privacy, it's the fact that we just have been breached so many times over and over again that we become a bit apathetic to it. - Yeah. Mine is, by the way, as of now, 32. 32 breaches. - Wow, okay. Congratulations. - Thanks very much. I appreciate your efforts. And my old password, which I feel comfortable searching for in your site because of how I don't use it anywhere anymore, is also very out there. It's an old email address, but I don't want to get rid of it. I just, I feel a sentimental attachment. So, obviously these data breaches are ubiquitous at this point. Is there a kind of breach or a size of breach that might be on the horizon that we should be worrying about that is gonna still shock us, do you think? - Well, it's interesting, because we keep sort of getting this question in the industry about watershed moments, right? So will we have a watershed moment where there will be a breach which is so amazing that we will change our ways? And Ashley Madison was sort of one of these points, where we said, look, will this really change our ways? And it's not that it was particularly large, though like 35 million people or something in there, and it sounds terrible saying 35 million people isn't particularly large. But in an era where where we've got many that are in the hundreds of millions, then that's a different story. But it was impactful because people literally killed themselves over it as well. I mean, this had a really serious impact on human life. And clearly nothing has really changed. What I do see happening a lot now, and where I think there's a little bit more social outrage, is constant breaches of data aggregators. And these are organizations that, as best I can tell legally, I think there's probably some shades of gray in there somewhere, but legally consume a huge amount of our data and then they sell it in order to, and it's often called data enrichment. Like, I can't do it without air quotes. Data enrichment service. Take your data and help other companies market to you better because now they'll know what you eat for breakfast after they've got your email address. So we're seeing that happen a lot. And one of the crazy things about it, I mean, I've got one at the moment I've been trying for the last two months to attribute, and there's hundreds of millions of records in there, including my record, my data. And I just have no idea who this company is. It was an IP address on a cloud service. A cloud service isn't gonna tell you who it was. We literally just cannot figure out where the data came from. And that's just a crazy sign of the times. We can have hundreds of millions of records floating around, including mine, and I've got no idea where it came from. - That is wild and that does feel very 2020. It feels like where we're at right now where there are lots of people requesting our data and also lots of people who are, lots of different companies who might be sharing that or selling that, and how exactly that's working is just opaque. Like, and that's not so much a security problem as it is like a regulatory problem, as it is like a capitalism problem. Like, if there's ways to make money off of this stuff, then people are gonna sell it as long as it's legal. - Yeah, as long as it's legal. Also if it's not legal. - Right, of course. - This is the problem I've got. I agree. I think there are regulatory issues. Particularly because a lot of the large data aggregators we see are operating above board, mainstream, registered companies. Usually US-based. You don't see it as much out of Europe. There's a very different view of privacy there. So I'd love to see some regulatory pressure on that. It's not going to stop the trade of this data. It's just going to be traded in the more underground sense. And inevitably, to different organizations. But one of the things that stuns me, I mean, I was in one particular breach of a data aggregator. I'd never heard of them. And I was in there because I signed up to some application performance monitoring software somewhere else. And when I signed up and I agreed to the terms and conditions, which I read obviously, somewhere in there, it was like, okay, we can use your data to send it to someone else to enrich the services. And this is the thing. Like, we are opting into this and agreeing to it. It's just, it's not what I'd really call informed consent though because we-- - No, not at all. - We're not really. - It's not informed, but it is like, there is sort of this idea, this undercurrent that I'm trading my, like, knowledge about who I am for free services. I think that there's some understanding of that and, like, the people, like your son, my son are gonna grow up in a world where that's just how it is. And if you would like to have that not be the case, then you can pay for the services and you can use Apple, which has sort of a more secure system that is less about, they'll grab 100 data points instead of 1000 kind of thing. But like, but do we know what that means? I think we don't. And I don't, yeah. Like, also do we know how securely that information is being stored and how easy it will be to get? - So that's a really good question too. Like, do we know what it means? And further to that, do we actually understand what the impact is? Because we often feel outraged when these incidents happen. But it's also the case for a data aggregator. I don't like the fact that my data is out there and it's replicating, but I have a hard time actually tying down what the adverse impact on me is. And this is why I'm always a little bit, a little bit of me is a bit outraged when I see, like, class action brought against an organization who's had a data breach. And everyone's like, I can just see the pitchforks and the torches and they're angry. Now they're not entirely sure why they're angry, but they feel angry. It feels like a violation of privacy. But actually defining the impact of it, very often the impact is nothing more than a negative feeling of privacy violation. - Right. You testified in front of Congress about security breaches and you said, quote, "There's a lack of accountability "across many of the organizations that suffer breaches, "as they're not held strictly liable "for the consequences though." So, like, how do we know what those consequences are and how those organizations could be held more responsible, could be held accountable? - Well it really depends. Because if we go back to something like Ashley Madison, the consequences can be people die, which is obviously sort of your worst case scenario. But look, a lot of the sentiment behind that was that when data breaches happen, particularly due to egregious oversights, I mean, we just mentioned things like leaving databases publicly facing, problem one, without a password, problem two. When that sort of thing happens, my feeling about this is that there needs to be greater accountability such that other organizations go, hey, look, the next time we build an application, maybe we shouldn't do either of those thing. - Yeah, like let's spend a little bit of money hiring someone or doing our own internal security audits, hacking ourselves, because that's cheaper than the consequences. 'Cause that's the reason people do these things, is it's just cheaper in the consequences. - It is, and it's unfortunate too, because I don't necessarily like the idea of saying we just need a bigger stick. I'd like there to be a carrot to this as well, where organizations feel that there's a genuine incentive to keep data secure. And I feel that that's often a retrospective sense. I mean, I've often joked on Twitter, the number of times you see a data breach notification and the organization says, "we take your security very seriously." And I'm like, ah, you're about to tell us how not seriously you just took our security. Like, it's always after it happens it's really important. Before that, not so much. - Yeah. So, coronavirus is a thing right now. Have you been doing any thinking about the security implications of COVID contact tracing, tracking kind of things that people are doing? There's Bluetooth tracking, there's GPS tracking, all of these things. - Yeah. - Ultimately are creating more data about us and how we're moving around and who we're interacting with. That data might be interesting or useful to companies or governments. Have you been thinking about the security implications of that, or how to handle that in the right way? - I have, actually. And in fact, I pushed out a tweet thread probably about a week ago on this with a whole bunch of thoughts. And oh man, I gpt in trouble. People were not very happy with my views. Well, look, in fairness, I think most people are very happy, but it's normally those who aren't that make themselves the loudest heard. So my view on it, I think we've got to sort of segment it into several different areas. And first of all, I think the capabilities we have technology-wise to do this today are amazing. I mean, we're all walking around, right, with these little devices in our pockets with Bluetooth beaconing, with GPS, with cellular. They were already there. We can put things on them for free. It takes 10 seconds to install an app. And it is amazing technology. I mean, we'll come to the privacy sort of things in a moment, but isn't it cool that you can just be wandering around and every other person it sees, it's like, okay, I know I've just seen someone, I know how long we've seen them for. I think that is just amazing technology. The privacy side of things, I feel that we lose a little bit context here insofar as what I've often seen in the press and from people that are very upset about this is they say, "I don't want to give up my privacy." And so, well, that's a very absolute statement. Because you're sort of saying I have privacy, and then I might install this, and I no longer have privacy. By the way, you're posting this on Facebook. Have you made the unfortunate-- - I have terrible news for you. Yeah. - So there's that side of things. I think if people really understood just how much their privacy has eroded just by virtue of wandering around connecting to different cell towers, the narrative might be a bit different. - Right, and also, like, how exactly Bluetooth contact tracing works is actually, like, there are ways to do it where it's not so much that, like, oh, we're gonna protect your data. It's like, the data actually isn't connected to you unless you sort of get sick, and then we can let people know that they've been in the same place as you, if you want us to. And then they will know. And like, they will know, but we won't know, basically. There's no way for us to know who those people are, but they will know that they have been potentially exposed and can-- - A lot of these models, things like TraceTogether in Singapore, which the Australian government's now looking at rolling out and I suspect we will see that roll out next week. The entire premise of that is collect data, store it locally. If you test positive, that data can be uploaded and then anyone else who's been in the vicinity of you can download this and see if there's a positive match. So for argument's sake, if I never test positive, no one ever sees my data. If I do, then surely I've also got some sort of civic responsibility as well. And I just hear all these people saying, effectively, I don't want to make a sacrifice in order to potentially save lives here. And I sort of reply to a few people, I mean, are you tweeting this to me from home in isolation? You have made this sacrifice. And a lot of it comes down to distrust of government as well. And I really think this is sort of the key component here. And I'm sure this is the same way all over the world. But a lot of people here just don't trust the government around privacy and they don't trust the government to deliver an IT project. And it's sort of a really unfortunate situation to be in, particularly if we get good bipartisan support here and we collectively have the government and the experts saying, look, this is a useful thing. Please try and do this to help us, A, not die, and B, recover the economy as fast as we can. And that to me seems like a very good return with a very low risk. - Right. We've got a question from the chat. What info sec certifications would you recommend for someone starting their career in the field? - Well I don't have any myself, so it's a little bit hypocritical for me to recommend any. - Just go hack stuff, it's fine. Go find some publicly facing databases. White hat it. It's great. - This is the thing. Like, learn on the job, right? So this is a fascinating thing about this industry, and I think tech in general, in that we've all come from so many different backgrounds. I mean, I did about 80% of a computer science degree 20 years ago, more than 20 years ago, and then dropped out of it. These days, and just to sort of plug the Pluralsight side of things as well, I mean, things like certified ethical hacking. We've got a heap of content on Pluralsight for that. It will get you a certification which is recognized by a bunch of companies. And there are other certifications that go further, but this is like one great step in that direction. And then you can kind of decide where you want to go after that. - Right. Cool. We have time for maybe one or two more questions. What do you think the future is for cybersecurity jobs? Is there a particular area of security that has more opportunity? - I think info sec in general. The future is pretty bright. - Yeah, it's gonna grow. Yeah. - And look, we always see figures and stats and everyone can Google them about how much shortage there is in jobs. And even at the moment in this sort of pandemic time, I mean, we're seeing a massive uptick in things like phishing attacks. So, in dire times, it actually becomes more important. Everyone knows we're seeing more data breaches. Organizations are becoming more aware. We are getting better regulatory controls incentivizing organizations to do it better as well. So I think that sort of whole info sec space is really hot at the moment and it's a great time for it. - Cool. And then last question here, I think. This is more broadly. So for any technologist at an organization, what are the security skills that are most essential, regardless of your role? - Look, I guess if we say regardless of the role, so you might not necessarily be deeply technical, I think sort of having a big, broad picture understanding. Now there is a Pluralsight course on this about Security Big Picture, which you'll find in there somewhere. But I guess where I'm going with that is having an understanding of what the incentives are for people to want to break into your things, appreciating that anything you have is a target, regardless of how much value you think it has. Is it digital? Yes, it's a target. Like, that's end of story. And just being aware of how prevalent these incidents are. I would hate to see a situation, although I do see it all the time, where someone pops up and says, well, we never thought that might happen. Well, you should know that it does. - Yeah, yeah. Yeah, I mean, my own, earlier, I think this year, had a sort of coordinated credential stuffing attack on me. And they found some old stuff that had old passwords and found some ways through those things into other things. And it was weird, because oftentimes I think about these hacks as very, like, almost automated. But it was clear that they were, like, interfacing with customer support people at these companies and they were talking to them. And I was like, stop being actual people. That's super creepy. - Yeah, you're making it personal. - Yeah, you are actual people. And it's no fun. And also, I had said to myself and dozens of other people that you need to be using password managers and making sure that we don't overlap passwords, and I had not done it myself. So I finally took the time. And it's not, doesn't take no time. I have a lot of frickin' accounts, man. - Yeah, and you know what? Like, the longer you leave it, the more you'll have too. So, hop to it if you don't have a password manager. Jump on it. - It's absolutely true. Yeah. All right, thank you so much, Troy, for all of your work that you do and just for looking gorgeous there on the Gold Coast. And I just really appreciate the work that you do because I think that it, obviously the work you do daily for your clients is really impactful, but also that you think about how to create tools for everyone to use so that they can be more safe in this new world that we exist in. So thanks for spending some time with us, and also for all of the teaching you do at Pluralsight helping people grow their careers. Thanks so much. - Awesome. Thanks for having me, Hank. - Yeah, see ya. All right. I think that we just have one more talk left. It just goes so fast. So we're going to be talking to John Papa in five minutes from now. He is a, you know John is, Developer Relations at Microsoft and a Pluralsight author. Excited to talk to John. He will be here shortly. Let's take five minutes to jump around, stand up for a second, and we'll be right back. Hello. Welcome back, everybody. For our final interview of the day, our final conversation, I've been looking forward to this one, but also I've been looking forward to all of them. What a packed day of great conversations we have had. And the last one will be with prolific Pluralsight author, a teacher of many things, John Papa, who is also in Developer Relations at Microsoft and has done many things in the world of JavaScript. Hello. John Papa, how are you doing? - Good, how are you doing today? - Oh, I'm fantastic. I have had a lot of really fun conversations. So, thanks for joining me. First I want to ask a question that's not on my list, but it has occurred to me over the course of doing this whole day. A lot of people in the technology space, I don't know, more than other expertises, I just feel like are so passionate about sharing their skill and helping more people get into that. Really, like, being sort of just professional enthusiasts for their own work. And it's really inspiring and it means a lot and I wonder if you could talk a little bit about where you think that comes from. - Yeah, it's a good question. Something we think about a lot, especially in the area I work in today is in developer relations. But even in my past jobs, I formerly worked for Disney. And the thing that fulfills me the most is teaching, sharing, and helping others. I feel like it's, I read a book with my kids about filling your bucket. What fills your bucket? It's kind of like what fulfills you. And I feel like if that, when you find what that thing is and they can really tap into it, it really helps. And I find a lot of us who come to this industry and want to do this type of sharing in technology. It's a lot of fun to discover something. A better way of doing something or a faster way or a more unique way. And then to take that and then share it with other people and see all the light bulbs coming on. And to me, I think that's something we all have in common. - Yeah, I completely agree with you. It is. Education is one of the things I feel most lucky to be most involved with and that does really, like it always feels good. And whenever I get a chance to do it, like, I've done a lot of really interesting things in my career, but like, that, there's nothing that feels as good as somebody coming up to me on the street and saying, like, "You helped me get my nursing degree." So, I'm right with you there. So you used to work for Disney. I also know that you are a Disney fan. I see Mickey Mouse right there behind you. - Yes. - Can I ask you a Disney question? Which is the best Space Mountain? - Which is the best one? - Yes, do you have a, 'cause I have a strong opinion on this and I feel like I have to take the opportunity. - Well, I live five minutes from Disney World, which is kind of barren today, given our world crisis. - Not useful at the moment to live here, but yeah. - Yeah, we go all the time. And it depends who you ask. Like, I think my wife and kids would say that Thunder Mountain is the best mountain. Because they enjoy that one quite a bit. Space Mountain's the classic though. - I completely agree with you, yes. And I grew up in Orlando, so my Space Mountain of choice is Disney World. But I keep going to LA more than Orlando because, I mean, of obvious reasons. And everybody keeps saying how much they love the LA Space Mountain and I just, it's not as good. - It's a big difference 'cause Disney World versus Disneyland, Disney World to me is so spread out. - Yeah. - And Disneyland is so condensed. There's actually pros and cons to both of those. - Sure, absolutely. Absolutely. So, you are a super popular Pluralsight author. You speak at conferences. You've authored several books. You co-host a podcast. Oh, I already asked that question, it turns out. - Today was a long day for you, huh? - It turns out I did have that question. I just didn't realize it. So you've also shared tips for how to be a good presenter as well as all of those things. When you first started public speaking, what challenges did you face and how did you overcome those challenges? - Huh, wow. Well, one of my first challenges was in high school and college, I hated public speaking. Like, I was deathly terrified of this. To the point where it actually, it held me back. Like, I wanted to get into theater and it just never happened. And then one of my first jobs, I had the opportunity. I finally said I'm gonna take the plunge and started to do training seminars for people, and took the trainer type classes. And my first public speaking appearance was an absolute utter disaster. So, to put it short, and you can look at my course. I talk about this one in it. It was so bad that I felt like afterwards, people were happy and they were telling me they enjoyed it, that it's never going to get worse than this. So I might as well just look at it as an uphill thing from here. - Oh God. Bombing onstage is something I've done before, and it is the worst. It is really unpleasant. So, cheers to you for seeing that as an all uphill from here thing and not a this hill no longer exists and I will never look at it again thing. 'Cause that's probably, if that was my first experience, what would have happened to me. So let's talk tech. You're known for your expertise in JavaScript frameworks. So at a high level, how do the frameworks compare? - Well let's kind of frame the conversation, 'cause there's a new framework, as some people like to say, every minute. You click and there's a new one. But the three or four most popular ones out there that people are using in business are React, Angular, Vue, and Svelte. Svelte's probably the newest on the scene and it's, like its name says, it's the smallest and lightest of those four. In fact, they like to call themselves a compiler, not a framework. But the way they mostly compare to me is not so much in the technical features or the speed. We tend to look at that stuff too much in technology. But taking a step back, everything we do in technology is really about people and what is it about the people that the technology can help. We kind of think about those aspects. And if you look at the type of person who you are and the choice in your framework really reflects that. People who are very organized and want a structured path kind of laid out before them with everything available as they go through it, Angular really appeals to them. People who like to kind of craft their own adventure along the way and are very creative as far as, not that the other ones aren't creative, but they want to, like, substitute different pieces and really build their own thing and no two projects might look the same, React really appeals to that mindset. And Vue is kind of in the middle. It kind of takes a middle approach to those where it's got some structure, some replaceability. And then Svelte came along entirely, and that appeals to the people who are like, I don't want a framework. I just want to replace that one little thing on the screen without all this other overhead. And Svelte is great for that. - Cool. Good overview. Why would somebody choose Angular over some of those competing frameworks? You talked a little bit about that. But like, what's the details there? - Well there's always the easy choice, which is your boss told you to. - That's mostly it, yeah. - Let's get into reality, right? We don't always get to choose what we do. But Angular is a great tool if, again, if you like structured path. And one thing that's really nice about it is I was at a company where we built dozens of these Angular apps within a very short time. And people could jump from each project to another project and be plug and play. Because they're all built similar ways. So the skillsets are transferrable. So that's one of the things I really find Angular has more than the others, in my opinion. - Yeah. And you're teaching a lot of these frameworks. You're teaching Angular. Is there, like, a concept or a paradigm inside of these frameworks that you feel people are struggling with the most when they're learning it? - Yes. And each one might be a little different. Angular specifically, I feel like the hardest thing people have to get over with Angular is the concept of too many concepts. Angular throw you a very steep learning curve out of the gate because you have to learn things like TypeScript and RxJS and state management in this thing called NgRX. And I could throw out a bunch of other terms, but it feels like a mountain to climb on day one. But once you're there, it's great. Whereas the other ones, they slide in a little bit more smoothly. Especially things like Vue and Svelte, where it's really easy, like two hours into it. So it's just a different approach. - So, can you tell me a little bit more about your career up to this point? And I think you've also had some, have you had some non-tech jobs in that process? - I have before. So I've been in tech for the last 20 some years. But before then, I started out doing side jobs with my father and his family doing landscaping, construction, odds and ends jobs. My father and I even had a baseball card selling business. - Cool. - That was fascinating. - Yeah, those still exist. There's one down the street from me, weirdly enough. - I have tons of them still sitting in my house, so. - Cool. I mean, is that like, is there learnings from those? I always feel like when we have more than one career, there's always stuff that we pull out other things that are way more useful than we thought they would be. - Yeah, and this one is one you've probably heard before. But dealing with all of the building and framing of houses and stuff. Growing up through that, it's really important, you learn, to make sure you measure more than once when you're doing things. And I find in technology, that really applies. Before you just jump in and do something, yeah, we want to iterate and move fast, but it's okay to stop for a moment and think about what you're building and what the purpose of it is before you through it. So, I kind of take that out of there. - Yeah, absolutely. And I mean, have you ever been freelance, been on your own? Orr have you been inside of big organizations the whole time? - Yeah, about half my career has been freelance on my own and the other half has been for big companies like Disney and Microsoft. - How do those things compare with each other? - Very different. At risk of hurting my employer's feelings, when you're not working for your employer, when you're a freelance, it seems your opinion carries more weight. And then once you go to a company, you're no longer the customer. So being a freelancer has a lot of advantages in that sense. But being part of a large company, the real advantage is all the resources that they can put behind you to help really change the world. And that's one thing I really like about that. - It can feel more stable, but maybe right now it almost doesn't, and people might be looking right now and thinking, well, I might have to suddenly be a freelancer soon. Do you have any advice for people who might be looking at that shift? - Yeah, I've done it for a bit. And one of the reasons I got out was the stability. There were times where I have too much work. And that sounds like a great thing, and it is as far as the money goes, but you don't want to turn down work ever, because you might not get that customer again. And there were stretches where I was working 80 hour weeks for months, and then all of a sudden I had nothing for four months. - Yeah, and the money comes in not when you're, like, the money comes in weird. So you do the work and then you get paid for the work. So you're getting paid when you're not working and you're not getting paid when you are. It was not my favorite lifestyle, personally. - No. - But it is also, it is the small business lifestyle. So like, there are lots of people who start out freelance and then they build their own little firms so that they can create some more stability around that. And this might be a time where we're gonna need more of those skills in the world and we're gonna need small firms like that who can help small businesses who are gonna need more help than ever right now. So, do you have any bits of front end development that you're, like, super curious about right now? - Yeah, I'm always curious about what the new things are in front end development as far as connecting the user to the glass. To me, it's the touchpoint of the technology to the user that I'm always exploring to figure out, what's the right user experience to really drive this interaction? And then also, what's the right developer experience? What makes developers tick, so we can actually take advantage of the technology in more efficient ways? So I do a lot of experimenting and researching in the UX, user experience department, and the DX, developer experience department. - Yeah. Cool. We've got a lot of thank yous here in the chat for all of your content on Pluralsight. So, I'm just passing that onto you. We've got a question. When is the time right to publish my own articles? When am I ready? You write so much. - Right now. Right now is the time. The greatest thing about blogging, for example, and a lot of the platforms out there, like dev.to is a popular one these days, or Medium as well, is that you can put content out there and it's yours. It's your experience. So you don't have to be perfect. Nobody is. Put your content out there. It's your opinion. Phrase it in that way and share your knowledge, 'cause you have that unique experience. - Yeah, and one thing that Chloe Condon just said a couple hours ago was that she was told, and this really stuck with her, that it makes a lot of sense to be writing beginner content because there are more beginners than experts. - Yes. - And like, there are lots of people who learn lots of different ways. And even if there's something that sort of teaches this or discusses this thing, if it's from a couple years ago or if it's just from a different perspective, people might appreciate your perspective more. Or even if it's like a language difference, like if you speak a language that doesn't have any of this documentation around it, then that can be super useful. So, you, I can see, have set up a fairly nice office here. So like, obviously you do some public speaking generally, but you seem like you've set it up so that you can continue to do some public speaking now. Are there ways that that is different? And how, and this is for me as well, how should we be thinking about public speaking in a time when people aren't gathering in big rooms? - Yeah, it's definitely, this was total irony. My home office looked like a closet for a long time. And I recently redid it 'cause I just decided I was tired of every video turning off my background. - Yeah. - Like, you can't. Right before all this happened. - Wow. - But it worked out. And honestly, that's actually flooring on my wall. - Nice. Yeah, it looks like it. - Yeah, its kind of cool. It just gives you that blend. But what I like is just having a home office to work in is really nice. Some of you can't. I've done it from a closet. And honestly, one of the best things for sound is to have clothes around you in a barrier to soften it. It works great for podcasts. But the best thing is really good audio and good lighting. Those are the two things that I really try to focus on. - Yeah, yeah. I think that it's weird that how it sounds is more important than how it looks, and how it looks is much more about your lighting than your camera. - Yes. - But also, like, are there ways, like, have you found ways to sort of practice the craft of speaking? Because there's nothing like getting up on the stage and actually doing it. But for me, I have found that the five times I run through the talk before I give the talk are really where I'm learning how to do public speaking. And I, before I started doing that, was not as good at it as I am now. Do you have, like, are there tips, ways you imagine this? Like, actually getting your ideas across effectively and feeling comfortable in that space? Or feeling energized by it, if not comfortable. - Yeah, this is a topic that I could talk about for a day straight. I'll give you two angles on this. One is probably something you've heard before and one is where I'm probably a little more unique. And that's, the thing from before is, it's really different when you're sitting, like I am right now, to not take advantage of it. Because you think about the tools that you have when you speak. You've got your voice. You've got your body language. And your voice has many different aspects between the pitch, the speed, the pauses. Everything that you've got at your disposal. And you lose a lot of that when you're sitting down like this to do it. And too much body movement can be bad. So one of the things I really try to work on, and I have a speaking coach that I work with, is body language and stage presence. To make sure that you can engage with the people in the audience and really move them in some way. And I try to get across to folks that, as much as we like all the features and the things we talk about in technology and the shiny objects, it's really about what is the thing you want your audience to leave with? What do you want them to know and remember? And everyone says five minutes after your talk what they thought about it. But have them come back to you in two weeks. What did they remember? What stood out? And that's kind of the general getting your message across. The other side is, I don't practice as much as others do. And it's not because I don't need it. But I find that I am a very spontaneous, spur of the moment person. And the only thing I really practice is the opening sentence and then the closing sentence. - And getting that closing sentence in there is so important, because you do not want to leave the stage being like, "And uh, "uh, thanks." - Right. Or even, one of the worst things I don't like is, and now let's have a Q and A session right at the end where the whole point of the thing is lost. - Some other topic, yeah. - Because somebody asks me, "What theme are you using in your editor?" - Yeah, yeah, yeah. Absolutely. Well, we'll talk to the conference planners about that. That's not on you. - We can't always control it, yeah. - Yeah. So, but yeah, for me, I'm also a spontaneous talker. And so I don't, like when I do my run throughs, I do it without notes. And to me, that like, that helps me figure out the ways that might be better ways of talking, or also jokes that I will think of spontaneously while talking to my hotel room wall just before I get a call from security telling me I need to talk less loud. So, yeah. So we have that in common at least. I could talk to you about JavaScript, really, not at all. I can let you talk about JavaScript, but you and I can converse about public speaking. - That would be fun. - Yeah. So things change very fast in the world of technology and the world of engineering and development. Like, how are people supposed to keep up with this? And what are the best ways to do that? - My biggest tip is, and half tongue-in-cheek, is don't try. Because there's too much. The biggest question is not how do you keep up, it's what don't you pay attention to? There's so much flooding across your screen on Twitter and YouTube and everything else. Figure out what you should be paying attention to and what you shouldn't be so you can narrow it down. And just take it little bits at a time. That's what I try to do. - Yeah, I think that's absolutely true. And also, like, when we're doing work, like, you learn the thing you need for this job. And that is something that, like, is really important to me is that, like, all of the skills I have, I don't have because, well, not all, but like, since I got out of school, all the schools I have aren't because I, like, wanted to develop a skill. It's because I wanted to do a thing. - Yes. - So, figure out the things that you need, that you want to do. More questions from the chat. How can someone break into front end development? What would you recommend for beginners? - Well, don't break in. That's against the law. The cops don't generally like it. All right, bad cultural joke. There we go. So, but I think the best way is to just start with JavaScript, HTML, and CSS. Those are the three basic things. And probably the best course to start with, since we're on a Pluralsight sponsored thing, is a course by Craig Shoemaker on the beginnings of HTML. And I forget the title of it, but if you look for Craig Shoemaker, you'll find that. It's a fantastic front end course on HTML. And I gotta tell you, there's a lot of experienced web developers, like me even, who will once a week discover some new thing about HTML, even though it's been around for 25 years, that we didn't know. So I wish I took that course before I started all this. - Yeah, it's wild. Cool. You can use the blink tag in the early days of HTML. - Oh yeah, I remember that. - May be deprecated by now. Do you have any thoughts about what Angular is gonna look like in the future? Like a year from now. - I have thoughts about what I'd like it to look like. - Ah. - So, I definitely have my opinions. And using the four frameworks, one thing I like about it is it gives me a good perspective of what works in each one and what we could bring back to each other. And Angular, again, is a unique perspective. It's built for, we give you a roadmap to kind of build everything you need. But I find that, and I've taught thousands of people Angular, I find that teaching them, one of the biggest roadblocks is all the concepts right up front. So I'd like to see a huge focus on the developer experience change in Angular, because the developer experience is what affects the outcome of the product for the user experience. And if they would focus there, I think you're gonna see a big change in how Angular apps are used. - Interesting. Cool. Do you think that, like, it's important to have a sort of end-to-end understanding when you're doing front end development? Do you, like, is it good to have, to know the foundation that you're building upon in order to do it well? - You mean like backend development? - Yeah. - As Asim was saying, the user all the way back to the concrete. - Right. Yeah, exactly. - Asim's awesome. - Yeah. - So, I do think it helps. But I don't think it's needed. I think front end only development is a thing that, if that's what you really enjoy, it's okay to live in that world, 'cause there's plenty to deal with in there. And I had this conversation with my daughter recently, who is graduating high school and going into college. And she wants to major in software development. And one of the things I had her do was go to a one day free class on Vue, Vue JS. There's a group called Vue Vixens, where they host women to come in for free to learn technology. I said, you should learn from this group, first of all, because they're very welcoming, and second, so you learn the technology and see, do you like front end developments? Is this what you want to do? And I encourage people to do this kind of thing, because I think when you take that one day and you learn something, if you feel like you have a connection to it, you should live with it. So, front end only, I think it's a great thing to do. - Yeah. Are there, like, lessons? Is it good to transition? Like, is there a space there to transition from back end to front end and come to that with expertise that maybe not everybody in that field will have? - I think there's definitely value there. Like I heard Deb Kurata, a friend of mine, say earlier, she likes the MVVM pattern. Model-view-view-model. And a lot of that came out of some of the back end technologies that transferred to the front end technologies. So, I also like that pattern. And I think that helped shape my view of the front end frameworks. So, having those kind of back end patterns apply to the front end. Single responsibility is another thing. Don't build something that it does 20 things well, 'cause it won't do anything great. Build something that does one thing super well and then build other things that do it as well. So these kinds of concepts really apply back or front end. - Great. So you do a lot of teaching, and I think a lot of other people would like to do that. I think that it's really rewarding, as we were talking about. Do you have advice for people who are interested in getting started teaching technology? Whether that's on Pluralsight or a platform like it. Whether it's actually in a classroom. Like, how do we best teach these skills? How do we get people energized, excited, involved in developing these skills? - I'd say I like the rules of three. So, rules of three. I would start out with find something you're passionate about. If you're passionate about it, that will come through in whatever way that you teach it. Second is find your channel. Is it writing, is it video, is it in-person speaking? Where do you feel most energized and most in a way to get things across? And then three, when you choose the topic that you want to teach, choose one thing. One thing. And teach that one thing really well, as opposed to teaching 20 features. - Right, right. So finding a topic that can touch a bunch of different things, but all have sort of the centralized, like, goal or question that you're trying to answer. - Right. - Sort of like, like this is the context that we are understanding all of these things in. That's fantastic advice. That's something that I think a lot of teachers in a lot of subjects could use as like, what is our touchstone here? What are we trying to get at? - Yeah, 'cause how many times do you start going through a topic and then you end up talking about what you had for lunch? And you're way over on a tangent, and then like, where was I going? - There's too much, yeah. And so like, you need centralizing concept to contextualize the information that you're trying to get across. And that both, like, gives people a story that they're following. It also, that story helps them remember what's going on and, like, having it be part of the context builds it into a story that sticks in your brain. Because we are designed to listen to stories, not isolated bits of information. - I'm glad you mentioned storytelling. It's a thing that's near and dear to me. And my father is probably the world's most interesting storyteller. Because he talks like William Shatner. - Oh, my God. - When he's telling you the story. And it's just, it's fascinating to listen to. And he always has a really good ending, so you're always stuck with him and you just want to see what's gonna happen in the end. - I have to sit through this. Yep, exactly. Yeah, you've got to have it there. And I feel the same way, and we try to get to that with a lot of the work that we do. It's not always possible, but it's super useful. One last question about Blazor. And I don't know what it is, because I haven't written code since 2006. Do you see Blazor as a future replacement for React slash Vue slash Angular? - So as a-- - A replacement? Nothing's replacing anything these days. I know that. - As a yes no question, the easy answer is no. But I think where the real thing is going is, where does Blazor fit for people? My general rule is Blazor is built on WebAssembly, which is a technology that lets you write things like C Sharp, Java, et cetera in the browser. If people are coming from the back end, like you mentioned, and they have those backgrounds, Blazor is a great way for them to not have to learn JavaScript to get into the browser. But I don't think it's gonna replace any of the JavaScript stuff we're doing. - All right. Well, great. Thank you, John. And yeah. It's great to talk with you. Thank you for chatting with us now. Also, thank you for all the work that you do for your company, but mostly helping educate people, helping people develop their skills so that they can go on and do great problem solving as well in the future. - Thanks for having me. - I know the future looks good. So, I appreciate you hanging out. And that, it brings us to the end of our day, everybody. Thank you so much to everybody who hung out in the chat, shared your insight and your expertise, your skills, your questions with us. Super valuable. Made me feel like we were all, like, actually in a space together. Which isn't that what we all, oh, don't we want to, yeah. Why, yeah. We got to get Papa's Papa in here. So, yeah. Thank you everybody who submitted your questions. We had some really amazing conversations about the state of tech, about skills, about security, about the climate of this whole thing, about Animal Crossing a little bit. If you had to miss a few sessions, they are gonna be available on Pluralsight's YouTube channel. So don't worry about that. They'll be there. To all of you, stay safe, stay well, and we'll see you next year. 