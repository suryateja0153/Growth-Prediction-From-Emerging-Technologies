 now in the definition of what a network is we told that a computer network is used for sharing resources between nodes which are computing devices in other words we have devices that are sharing resources between each other and there are two main devices that you need to be aware of initially and that's a server and a client now what is a server so let's ask the robots once again alexa what is a computer server in computing a server is a computer program or a device that provides functionality for other programs or devices called clients this architecture is called the client server model and a single overall computation is distributed across multiple processes or devices so notice a server is providing a service or functionality to clients in what's called a client server model so servers provide functionality to clients and that begs the question what is a client alexa what is a client a client is a piece of computer hardware or software that accesses a service made available by a server the server is often on another computer system in which case the client accesses the service by way of a network now listen to that that's very important to remember a client accesses a service provided by a server typically the server is a different computer or different computing device to the client across a network so we're going to access a service hosted by a server across a network here's an example of a server big server right here inside here are a lot of drive bays here's a hard drive here's another one and another one and another one and i could continue the whole idea of a server is to provide resources or functionality to clients so this server is big because we want a lot of storage we want a lot of computing power and a lot of memory in a server especially if we want to scale it up if you've got thousands and thousands of queries from many many clients to a server you wanted to have the capacity so memory cpu storage to handle those queries so hence big device it needs to have the capacity to service the requests so if only one or two people are requesting a web page from the server that's not a problem but if we've got thousands and thousands of requests one server may not even be enough and then we have distributed services so we have a service such as a web page that's distributed across multiple servers google as an example will have thousands upon thousands upon thousands of servers to service the requests from millions of clients so they will have many many servers to service or provide a service to the clients when you go to the google website and you type in a request that's querying databases and retrieving information from databases to give you a answer about some query that you've made so the server is providing a service to a client now you don't need dedicated hardware like this to have a server a client device such as a laptop can act as a server so the role will determine how that device is acting a physical laptop such as this laptop could be a client requesting a service from a server but it could also be hosting a service so it may be running some kind of server and then sharing a file as an example with a another pc so it's hosting a file sharing service so clients access servers to make use of a service that the server is providing a website will serve a web page to a client which is then displayed on your computer as an example later in the course we're going to learn about network automation and network programmability that's becoming really important and in that kind of scenario you'll have one application or program providing a service to another program typically using what's called an api or application programming interface we're going to ignore that example for the moment we'll get to that later where we've got machine talking to machine basically application talking to application one application interacting with another application let's for the moment concentrate on physical devices now a server such as this server over here one physical computer will be listening on different port numbers for different protocols what is a protocol it's basically a set of rules used for communication between devices as an example i'm speaking english here hopefully you can hear what i'm saying and hopefully you can understand what i'm saying because i'm using a set of conventions in my speech so in english we speak a certain way as an example some languages will use numbers differently to english the protocol that we're speaking here is english so i will say 21 but in a different language like afrikaans i'll say ian antoinach which is basically saying 1-2 to denote 21. so the way that words are pronounced or the way that numbers are pronounced is reversed in a different language to english the point is you and i are using a specific protocol we are listening to english as the transmission and you can understand what i'm saying but if i switched my language or my protocol and started saying you might struggle to understand me unless you understand south africa or should i say afrikaans the point is is that a server doesn't just automatically switch like we do in our brains from one language to another it has to listen on specific port numbers your ears are listening on the same frequencies for both english and afrikaans and then your brain just switches from one language to another a server is not as clever as that it has to listen on specific port numbers for specific protocols as an analogy here's an analog radio old technology i know but notice here i'm not receiving anything because i'm not listening on a good port number but as i tune to a specific port number [Music] i can pick up a transmission i have to be careful because of copyright what i transmit here but that is a different radio station or a different protocol to say that radio station so different radio stations transmit on different frequencies think of that as an analogy to what a computer server is doing a computer server like this is listening on specific port numbers if you want to get a web page your browser is automatically configured or programmed to talk to port 80 or to port 443 if you're using an application like ftp the application is automatically going to talk to the server on port 21 and the server is listening on port 21. so a server can run multiple services and provide multiple services to clients client server model a client requests something from a server the server provides the file or the service to the [Music] client [Music] uh [Music] you 