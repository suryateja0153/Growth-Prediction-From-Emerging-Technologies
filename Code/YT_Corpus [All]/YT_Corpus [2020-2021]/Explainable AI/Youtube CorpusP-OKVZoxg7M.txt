  [MUSIC PLAYING] Hi, my name is Kai Richter. I'm Chief Designer SAP UX, and I'm working on SAP Fiori. The latest generation of SAP user experience. And I will walk you through the latest evolution, and things that we have in the kitchen. So let's continue. SAP Fiori is already a seven years old journey, and we started in 2013 with a mobile first experience. Over the years, we added additional platforms like Apple iOS and Android, and we extended the whole design system into a larger array of design ideas and components that you can use. Already mentioned, SAP Fiori has grown into a full-fledged design system with a lot of different aspects, and a lot of possibilities for you if you want to use them. We're celebrating seven years of SAP Fiori this year, and we have a lot to offer for you right now. So we have a product page where you can get additional information, related applications, and a lot of information on Fiori, and how you can use it in your own projects. We have our design guidelines for all different design platforms that we are supporting, starting with the web, iOS, Apple iOS, and Android, and also for conversational experiences. This guidelines is available publicly, and it's always to the latest available release. You can also switch between releases if you need to. And finally we have communities where you can engage, where you can get information, and where you can ask questions. And also to recommend our SDK documentation from UI5, and also from the mobile development teams, so very good source of information for you. All that has been built over 7 years, and a lot of knowledge and experience from the design and development teams has gone into those resources. First let's talk about the design system. What is the design system? A term that is being used quite a bit nowadays, what is our understanding of the design system? Many people think it's enough to list up a collection of assets and components that you can put together, and somehow build UIs with that. But this is not enough for us. A design system means that we have reusable components, that are complying to standards, that are powerful, that can be assembled together in a systematic way, and offer a lot of the capabilities that you need if you build your own applications. So it's not just a random array of controls and things. But we also offer higher level components, reuse components, floor plans, that you can make use of that already cover some of the major use cases. A design system obviously helps you to design in a systematic manner. Which results in higher quality and more consistent UIs, it also speeds up your design process because you can use blueprint solutions over and over again, which again adds to consistency. You can support different devices with the same design mindset behind. And it offers you also solutions for complex scenarios that otherwise would take a long time to evaluate, and build up good concepts for it. Overall it reduces your time to development. Quickly walking you through the Fiori design system. We built on the same values, which are our corporate values, make the world run better. We have our design principles that we used to have for seven years. Role based, adaptive, simple, coherent, and delightful. And we have established practices in our design and development organization that help us to improve the quality and the speech delivery. And then we also make available to our customers and partners. All started with the web experience, so Fiori for web. Which was initially built mainly on SAP [INAUDIBLE] which is still our reference technology. But which has also, going forward, been enabled in other technologies, like angular react, and also ported to our existing classic UIs. We also offer flavors for native mobile, as mentioned before. Conversational UX, and we are also working on new experiences including AR/VR or even brain computer interfaces. Looking at Fiori 3, which is the latest evolution step in Fiori, after the initial Fiori, Fiori 2 0, and now Fiori 3. The focus of this evolution step is on consistency, on integration, and on intelligence. Let's have a look at what that means in detail, starting with consistency. Looking at our product portfolio over time we have acquired a lot of different solutions. It all came with our own experience. To integrate those is not a technical challenge only, but also an experience challenge that we have addressed, and that we are working together with the different product teams to come to a good solution. That makes an integrated experience as part of the intelligent enterprise. One of the examples that we're working on, as you see, this is the collection of shell bars. So the top level, the top one centimeter of your screen, if you're using different of our products. They all come with a different shell bar, a different masthead, if you want. With the functionality that offer navigation, usually it's access to search, some information where you are, and so on. Settings and all those things. Functionality wise, we actually have quite an overlap, but due to historical reasons obviously they all come with their own design. So what did we do? We sat together, all the different product teams, and the designers from the different teams. And thought about what are the things that we want to show in each and every product. What is the solution that would fit for each and every product? And how can we provide a consistent solution for our shell bar? And you can imagine, coming from that many different angles this is quite a discussion. But luckily, and I think, also showing how much importance we have to this point is, we all came to the conclusion that the current solution that we have in Fiori 3, now as a result of this work, is the shell bar that we use in all of our products. Starting with an icon, that can be replaced by a customer icon, a title, some navigation capabilities, and on the right hand, navigation menu for cross product navigation, the user settings, notifications, other actions that might reside here, like for instance, help, and of course the search. Another aspect that we're working on to make the experience more seamless, is the consistency of the theme, and the theming support. Because we know that, as our customers, you often choose to implement your own CI to have the UIs for your employees look in alignment with your corporate identity. So theming is important, as well as a standard theme that we deliver on our side. So with that aspect we've been working with the different product teams to implement the quartz theme for all different products, and also enable theming wherever possible. This means that we have a common theming foundation, theme parameters on which our products build. Enablement of the theme designer wherever possible. This is by the way to go still. But also the access to user preferences that allow to switch to specific accessibility themes at the same time. So if you need high contrast wide, high contrast black, or the standard quartz theme, it should be available from the user settings for every user. And of course, what we have delivered with Fiori 3 is also the dark theme. So that either intentionally by the user, or automatically by the system, you can switch and have the UI switch between the daylight mode and the dark mode, which does not consume that much power, on the one hand, but also does not fatigue your eyes with the bright colors that are there normally. Also another aspect that we're working on to make the icons consistent. And this does not only include the icon style, but also the usage of the different metaphors that we deliver with our icons. And here specifically, for a set of standard icons, we want to make sure that all applications use those icons in the same way that uses it the same orientation, and learn the icons, and use them as we go. And one of the very important aspects, because this is something that really affects the efficiency of our users, is that we have a common scheme how we place actions on the screen. Specifically on the page level, this is the initial part that we've been working on, and where we've aligned across teams and products. That we have on the header level, to places where we place actions in the header toolbar, and in the footer toolbar bar. Header toolbar actions for more permanent actions that might affect aspects of the screen of the entity that is visible on the screen, without necessarily switching away the mode. And in the Footer toolbar bar, the finalizing action which usually are used for saving, submitting, or canceling a certain workflow, so usually they're finalizing a workflow that you're in. We have put all those aspects, and all that work into a product standard consistency that we're using internally to make sure that our products comply to that. This is not final, it's delivered, it's implemented, but we are still working in some areas to get this fully implemented. But all teams and all our products have committed to move into that direction to offer a more consistent experience to our users. Aspects we support are color theming, typography with the new 72 font, iconography, action placement, also terminology to use the same terms for the same actions. The shell bar as mentioned initially, and the settings. Another very powerful tool to accomplish a more consistent portfolio, of course, is also framework. Framework technology that enables development teams to create applications with less effort. And Fiori elements has become very instrumental, and this also implemented and following in this standard. Consistency is one of the basics of usability. It reduces error rate, it increases the speed of learning and working. It offers, obviously, a more consistent experience across products. And it's also more efficient if you want to adopt, if you want to build new applications, because you can build on things that you've already learned. Now let's have a look at the second aspect of Fiori 3, which is integration. Also here looking at our portfolio, we have a lot of different solutions that all need to learn to play together. We've been running multiple workshops internally, but also with a set of customers, to understand what are their requirements. And obviously the Fiori launchpad is one of the central pieces that all of our customers expect us to deliver. An integrated experience across our products, and this is what we're working on here to offer access to Fieldglass, S/4HANA, SuccessFactors, Ariba, Concur, SAC, SAP Analytics Cloud out of one place. This is Fiori launch pad, the one entry point, or more technically the central launch pad as you might have heard of already. From a design perspective, the integration it's also going beyond the tiles and links that we offer today. But we will offer also more flexibility in the way those applications are represented, because based on the feedback that we got from our customers, there is a wide range of possibilities required. Not only smaller tiles, but also larger cards, on anything between. So we will offer more possibilities for our customers to decide how they want to represent information there. Is it just a small click area to launch an application. Is there a bit more information like a KPIs, or is there even a list of the most important elements within the application needed, or some charts of KPIs visible on the homepage already. What Fiori launch pad offers, or will offer, is already the concept of spaces and pages. So that you can structure the content of the homepage along domains, and topic areas within that domain, and also we will increase the capabilities of the menus, so that you can navigate to the different pieces from the navigation menu, which we already have, which will still grow and become more powerful. The idea of the spaces and pages is to separate the different domains. And offer also the products to position and place the different applications and workflows in a certain environment, and a bit more modular than it is today on the one long page. This also means that we can offer more guidance to the user because, in the end, a page will offer aspects of a certain workflow that we can better arrange. And going forward also be able to offer more information like you have on cards. One more aspect that I will walk you through briefly is the aspect of cards. So cards is a concept that has been established some time ago, and it's similar to the tiles that we already know. A bit bigger and a bit more information. So we have successfully established a concept of cards in the overview pages where customers, and our users of course, also received that very well, but they liked that you get more and richer information. We have decided to offer our cards, not only as part of the homepage, but also as the implementation artifact that you can use in your own applications, or implement into free style applications that you build on your own. For that purpose you can access the card explorer out of the SAP UI5 SDK. Where if you look up cards you can navigate to the cards explorer, and here you will find all what I'm showing you to right now. Different types of cards, like the list card, like analytical cards with the possibility to show rich and multifaceted charts. A table card, even an optic card where you can see details of a single object, like an employee for instance, or business object. A timeline card which shows you what's happened in the recent past. And all this you can explore not only statically, but also by modifying the annotations as you see it here on the right, so that you can adjust the annotations on the right, and see how that results in the card on the left. So by that, we decouple the cards from the floor plans as we have them right now. Before that cards were only available as part of the overview page. Now you can implement your own cards, using annotations and embedding them either in your XML use, or into your HTML as you need it. The card explorer gives you a step by step instruction to that. So it shows you, for instance, how you can create the manifest skeleton, which in the end, are exactly the annotations we're talking about. Can define that you want to have a card, what type of card that is. Then you can define the content of that card, for instance here a header. You can define the navigation and the actions. And you can, of course, also define the content of that card. Usually you would bind that card to a data source in our data, and to the different attributes in that data source, and then you bind it to the items. The integration possibilities as you see them here, examples are that you embed it into regular HTML, or that you embed it into UI5 XML view which is used for freestyle application programming, and you are fine. Another aspect for integration that we offer with Fiori 3 is the product switcher. So that if you have different product areas that are not as tightly integrated as you want them to be, in terms of their starting from the same homepage and so on, you can use the product switcher to switch between those products, and still have an integrated experience. Because that product switcher you can implement in the different products, and use the same navigation targets in all of those implementations. So that the user has the same experience of, this is a navigation menu, and this is all part of one environment. Also these are things that are partly implemented, and that we are partly also working on. So not only the notifications that you already know, but also a list of tasks, and with that connected to my inbox on My Tasks. Integration obviously gives you a coherent navigation, and a possibility to have one entry point for all your products. It also helps the user to orient themselves to have all information in one place. And finally also, what we strive to accommodate the reality that not all products are as tightly integrated as they could be. That we have different options for different types of integration. Finally, now let's come to the maybe most exciting aspect of this presentation, which is intelligence. Because we've been investing a lot into exploring different design and variations that we can offer to implement AI within our Fiori applications in a consistent and useful manner. Maybe all of you have, or many of you might have, the feeling that it's really hard to grasp. And sometimes you think, maybe AI is something that is completely happening under the hood, and why should people even know. Other people have the opinion, hey there's AI in it, and I want to make sure that everyone sees it. So they put it front and center, and all the information that maybe the user is not even interested in. So in this range of possibilities we have evaluated with our users, what is the best balance between those two ways. And here I come with one scenario that we experience often. You're a designer, you have to offer recommendations in your application. So different options how to do things. Different options how to take action on a certain situation. So we have here, this is a case a certain thing happened in the business, and you want to offer the user different options how to resolve this. And there are different ways how you can offer that. So in one of the first Fiori applications offering this concept, we had recommendation cards, as you see them here, that was to [INAUDIBLE] at that time, and we highlighted these options with a star if they were really the favorite ones. There are other ways how you can offer those recommendations as we see it here. And further ways how you can highlight recommendations yet in another way. And in another way, and still in another way. And you might even offer the recommendations in a pop over with a direct action from here, and so on. Obviously, it's all the same use case, it's different ways how you can offer it, but in essence, it's all the same type of information, and the same way how you want to treat those recommendations. So we sat down we did user research, and we did a lot of explorations that we validated, and we came to the point, and we said, OK first of all, we already have a concept of cards, and we want to be consistent with that one. Because this is a concept that the user will know, and will be used to using in this environment. So we used the basic structure of the card to offer a solution. And here for instance, we have information about a ranking so we chose, best match, and it highlights that best match with a blue bar on the left. We chose a title, and a subtitle, giving you the right context. Additional information, what is the impact, for instance, or what are-- additional information that you need. And we designed different versions of this recommendation. So that you can, depending on the space available, and the options available, you can embed this recommendation in different ways. You can also arrange multiple options or recommendations next to each other, so that the user has an overview. What are the different options that I could do? And pick the one that he wants either using the recommendation by the system, or another recommendation that they find more favorable. And you can embed these recommendation blocks in many places just inside of your applications where ever you find it useful, that the user gets system supported decision support recommendations inside of the application. So instead of having many different ways to offer such recommendations you have one way how you offer that, and how the user can get the information that he needs to take the action on that recommendation or discard it. Another scenario, and here we have a UX designer who is designing an intelligent service. And one of the, I would say, most prominent and most frequent scenarios that we have is that we want to rank recommendations or items that have been calculated. And what is very important for users to understand, if they want, why the rank was applied like that. So there are different ways how that can be communicated, and we've been exploring them, and coming to the following conclusion. The scenario here is an AR accountant who wants to find the correct open invoices to assign them to the bank statement items that he wants to resolve. One option that has been implemented previously was that we have this information in a lock, and that shows you basically why the items that you see here are proposed, but this is very indirect. A redesign that we applied was also here not to put the information in the way, but rather to offer the information if needed. So as you see here, on the top of the list there is an information by along which aspects the ranking has happened. And there is also the information how confident this ranking is. And it's not a long, complicated metrics, and numbers with digits, and stuff. But it's really on an expressive way telling you, OK, this is a good recommendation we're very confident, or this is not a good recommendation we're not confident. If you need more information about it you can click on it, and you'll get the information what are the different metrics that have gone into that recommendation, and you also have the way to adjust them if you think that does not yield the right results. Similarly, you can click on the confidence, and see why this confidence was reached. What are the factors that contributed to that confidence. And also here you can give feedback, and adjust the ratings if you think they are not appropriate. So with that, you have the information you need, and you can get more information. And what is also very important you can give feedback to the algorithm, because we know AI is nothing that comes from nowhere, but it learns from the input that we can provide, and the more accurate the input is the more accurate the output. We have collected different aspects of explainable AI. That's how we call it, because we want to make sure that people understand what AI does, that it's not matches in the box, but that it's a transparent process that can be influenced by the user. And we have recommendations in our design guidelines that help you to determine what to explain and when. How much to explain. What are explanation techniques that you can use. And many more. Let's look at the third scenario, which is about situations. Here it's about identifying states that are unusual, or that are critical for the business, and that require action. So the question is, what has happened? What is information that helps me understand what happened? And what are options that I have? And you find in this points already also some of the aspects that we've been discussing about, like for instance, the recommendations. So assuming we have a supplier that cannot deliver as ordered. How would I show this here? Right now, this information would be somewhere on one of the tabs, probably. Or would have to raise an error message, or any other type of message which might differ from use case to use case. Instead we've decided to implement a standard for our applications that gives you a way to express exactly this situation has occurred. To communicate that situation we have reserved an orange triangle, so the critical state, to indicate there is a situation on that purchase order. On this business object there is something wrong. If you click on it, you get additional information which is the situation popover. So here you find some information about the situation, and to get the option to get more details. When you go to those details you reach the situation page. Now the focus has flipped from the object to the situation that object is in. So now I'm really talking about, what is the issue? What are the repercussions of that issue? So what do I need to understand what that issue is about? What is the business risk in here? What are the circumstances? And all those things. And finally, at the bottom you find the recommendations. So first of all in the header, what has happened? Then what is additional information that I need? What does that mean that this happened? And finally, solution proposals as we saw them initially, what can be done to resolve that? So instead of using standard UIs for every problem, we can deliver UIs that are very tailor made for specific problems to support a user to find the exact right solution for this exact problem. The situation proposals can be adjusted and reviewed, so that you can give feedback to the system that maybe you don't want that solution anymore because it might make sense for some, but not for you. The situations also have a status handling, so once the situation is resolved information is still available. But it shows that this is history you don't have to take action anymore, but at least for your reference you know what you did. Obviously this information also is reflected in the business data on the object page and so on. But from the situation perspective you have all of this information together. You can access [INAUDIBLE] situations from notifications. There's also a situations app that collects all the situations. Where you can work on those situations, and of course, you can embed, as we saw it, the situation in every standard app as indication on a list, or as a flag on top of an object page. As we tried to do this with all of our concerns. We tried to offer also the object at a situation. Information in different sizes, so that they fit to different use cases. So you can find that orange triangle as a standalone icon wherever it's needed. You can have a card like information in different flavors, or list item. Or you can have the full fledged situation page to show all the details, and all the recommendations needed. Important is that one of the main goals of this approach is that we don't start with an automation right from the beginning. Because, as we know, automation can be also a very difficult thing for people. You are responsible, and you have to delegate your decision to a machine is not something that everyone likes. So intelligent automation for us, means that we move from the manual workflow into an automation workflow. For instance, by using situations, so with the feedback that the user gives with the way how the user picks the options in the situations we can learn by the human being basically what are the best options. And once we are confident that the options can be discovered and recognized by the system we can start converting that into automation. Which right now, would not work, or would not happen automatically, but manually. But the information that we need to make that transition is available. So we help so that-- the AI in the end helps us to determine what are the options that we need for automation, and where we can streamline the process even further. Without losing the trust of the user, which is one of the most important things that we find for ourselves. We have identified, in this process, multiple design patterns. Three of them I've explained to you. Recommendations, cross patterns, like explainable AI, that combine some of those individual patterns, and whole applications like the situation handling. Other aspects that we have identified is clustering, prediction, classification, matching, and all those things. Feedback is another important thing as we all really solved the situation. How do I control that the system understands what other right options that I actually want to go with? So with Fiori for AI we have-- I would say, I wanted to give you three main takeaways. First of all, if you have an intelligent product we help you to streamline the design for it, that you get to consistent experience. You don't have to reinvent the wheel every time you run into such a situation. Because we offer well evaluated, and established patterns for that more and more over time. The research and the best practices that we have established are available in our guidelines. And you can use this, and also our frameworks, like the situation framework, to create your own situations, for instance. Because this is one of the wonderful things about situations. This is not a dedicated application that we have to deliver, but you can use situations to automate, or convert automation, or processes into automated processes by yourself. SAP Fiori, first of all is now truly the experience of SAP with all its products. All product areas have committed to follow the Fiori design. And we are going on that journey together. So we have also established mechanism within our company to make sure that this development happens jointly, and that we evolve jointly across all technologies. Be it the latest acquisition, or be it the classic UIs that we have in our portfolio. We are moving and pulling all those pieces together in to that direction, and we offer an integrated and intelligent experience, with integration, with consistency, but also with intelligence on top, that you can use for your end to end processes. So thanks a lot for attending. If you want more information on that topic here are some related sessions at TechEd, and websites that you can use. And I recommend you to continue your learning experience on TechEd by following the resources that you can find here. So thanks a lot for attending. Reach out to me if you like. It was a pleasure to present to you. Thank you, goodbye. [MUSIC PLAYING] 