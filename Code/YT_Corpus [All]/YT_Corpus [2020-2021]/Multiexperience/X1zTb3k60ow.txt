 hi i'm priyanka and today i'll be talking to you about serverless api development after a quick introduction i'll also provide a demo of how to build and manage serverless apis with the google cloud api gateway so stick around [Music] adoption of serverless computing offers a profound paradigm shift in developers ability to create highly scalable applications and services this architecture considerably improves the way modern applications and services are created by allowing developers to build without worrying about the setup and maintenance of the underlying infrastructure and by adding an api facade to these serverless applications developers can seamlessly connect data integrate systems and build modern applications as organizations are expanding their api programs a key question continues to come up how do we make apis lightweight on the client side yet highly scalable and secure to meet the changing traffic demands to accomplish this many organizations have been migrating their business critical apis to serverless architecture developers package serverless functions as restful apis to increase security of their services with monitoring and controlling access to data protecting these services from bot attacks and other malicious traffic improving performance with rate limiting and caching and identifying important insights from analytics data extracted from monitoring alerting logging and tracing with google cloud api gateway you can create secure and monitor apis for google cloud serverless backends it enables you to provide secure access to your backend services through a well-defined rest api that is consistent across all your services regardless of the service implementation it can manage apis for multiple backends including cloud functions cloud run app engine compute engine and google kubernetes engine build on onward api gateway is fully managed by google cloud to give you high performance scalability and the freedom to focus on development api gateway gives you all the operational benefits of serverless apis while reducing the complexity of implementation such as flexible deployment and scalability so that you can focus on building great applications additionally google cloud api gateway adds layers of security control such as authentication and key validation by configuring security definitions that require all incoming calls to provide a valid api key it also allows you to set quotas and specific usage limits to protect your apis from abuse or excessive usage let's take a quick look here at google we continue to see a lot of developers building their apis on top of microservices so in this example we've deployed a weather api on cloud run it's made up of four different services this is great for you as an api provider because it gives you a lot of flexibility around how you deploy and scale these services but as an api consumer you don't want to keep track of which service is responsible for which piece of the api you just want one interface that you can call to access all the capabilities provided by this api so let's take a look at how google cloud's api gateway can help you combine all these services into one easy to use api to get started we will need an open api specification that defines each of the resources in our api next we will add instructions that tell the api gateway where to route the request for each of those resources and finally we will want to secure our apis so we will configure a security definition that requires all the incoming calls to provide a valid api once we have our open api specification and we are ready to create our api gateway first we'll specify the display name and give our api a unique identifier next we will define the api's initial configuration by uploading our open api file we'll then give our configuration a display name and configure the service accounts that will be used to call our backend services and finally we are ready to deploy our api configuration to a new gateway in this case that gateway will run in the us central region once we hit create after a few minutes our gateway will be ready to start accepting incoming api request because we've secured our api we will need valid credentials in this case we've elected to use api keys as our security mechanism so we can get an api key for our api and the apis in service section of the google cloud console once we have our key we can make an api call from the command line using chrome if we try to access our api without providing a key the call will be rejected by the gateway once we add our key to the request the gateway then allows our call to go through successfully that was just a quick preview of how you can use google cloud api gateway to create and secure your apis you can leverage api gateway for a number of important use cases such as abstracting back in complexity to facilitate development for web and mobile applications connecting users to in-house and third-party apis and services especially those provided by google cloud controlling access for partners while rate limiting the number of calls for each partner and extending data services to enable frictionless service oriented access to data now it's your turn to try it out get started by clicking the link in the description below 