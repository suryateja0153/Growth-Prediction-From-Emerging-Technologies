 (techno music) Hello and welcome back to The Six Five Summit. I'm Shelly Kramer, one of the founding partners of Futurum Research and on behalf of all visit Futurum and more insights, we're really glad that you're here. In this spotlight session, I have the honor of introducing my long time friend Don Schuerman, the CTO of PEGA. Don's gonna share with us today the best practices for building an enterprise low code factory and one that empowers businesses while also securing compliance, reducing risk and promoting reuse. PEGA is a leader in cloud software for customer engagement and operational excellence and some of the world's most recognized and successful brands rely on PEGA's AI powered software optimized every customer interaction on any channel while also ensuring that their brand promises are kept. No small undertaking to be sure. I'm really excited to hear what Don has to share. Let's take a look. (techno music) Hi, I'm Don Schuerman. I'm CTO and Vice President of Product Strategy and Marketing at Pegasus and thanks for joining my talk today. Just a little bit about me. I'm a been in the technology industry for 25 years. I'm an avid bicycle commuter back in the days in which we used to commute. I spent some years as an improv comic. It's where I met my wife. And together we have two amazing kids. Now, I put their picture up not just because they are awesome cute but to make a point. You see my son Milo, he loves to build games in ROBLOX and his sister Greta, she like to build them in Minecraft. And both of them represent this new dynamic of programmers who don't use traditional code but use low code, visual tools in order to build the apps that they want. And in many ways, they reflect what organizations need. Gardner had said that "through the next couple of years, "the need of applications inside of business "is going to grow at five times the rate "of enterprise IT to deliver." So organizations are looking at low code as a way to involve a broader sphere of programmers and close that gap. But just because an app is low code, doesn't mean that it's low IT. I still need to think about things like my Enterprise data structure, my security policy, reuse that I actually can grow and scale these things fast. How do I upgrade my apps? How do I ensure that they are continuously tested and that I can continuously release new innovations and new changes. And we found that the best way to do that is to design what we call a low-code app factory to put in place the processes and the best practices and to the technology that ensures seamless collaboration between business and IT, that ensures the packaging and the reuse of key elements. That ensure that all of your apps follow guardrails or use of data and security. To make sure that you have the best powerful automation in AI. To build apps that not only just trap data but actually get work done and drive efficiency into the business. We've worked with clients such as National Australia Bank and Symonds to scale apps in as little as a few days but all the way out to 35,000 to more users. The way I like to think about this app factory approach is it's almost like building a playground for the business. You know, when you put a playground together, one of the things that the designers of the playground need to do is ensure that all the safety features are in place, to make sure that you know it's made of plastic and not rusty metal. That there's a rubberized flooring in case you fall. That there's a safety rail for people who climb up. That all the steps are non-slick so that people don't fall over. That there's a shade so that kids don't get sunburn. And a lot of what IT's role in low code is all about putting these guardrails, these safety controls in place, so that the business quite literally has a playground in which they can innovate. And in order to do that, you need to think about three things. You need to think about the people. You need to think about the processes and you need to think about the architecture. Now, from a people perspective, there's a big who's who inside of low code app development. They're citizen developers and business analysts who are people outside of the traditional development roles who are gonna build apps. They're your traditional developers and then your, they're your IT architects. And as we put together low code what we call communities of practice, we're rethinking what a traditional COE or center of excellence does. Instead of being the one thing through which all operations need to go, the center of excellence instead is an enabler. It enables these communities of practice, of citizen developers and business analysts to get what they want and it does that by clearly defining a set of guardrails through governors, people's who's job it is to make sure that the these guardrails and best practices are followed but most importantly, deploying coaches to actually work with each individual team and help them best understand how to apply low code. In fact, as business analysts and citizen developers get more mature, many of them graduate to become coaches and enable other developers to start populating and fulfilling this need of all the apps that a business needs. So, once we have the right people in place, you also need the right processes. And here, we found great success in applying design thinking to low code. Design thinking and low code are like chocolate and peanut butter. They go great together. Low code really enables that agility and collaboration that design thinking drives but to do that you need a firm foundation. And that firm foundation comes in three pillars. First, making sure that your app begins by clearly defining the micro journeys, that chunk of a business process or a customer journey that the app is actually gonna automate and you usually do that by laying out the stages or steps that that journey flows through. Secondly, you need to define the personas. Who are the individuals that are gonna interact with this application and what channels are they gonna use to do it? And then finally, what data is this app gonna need and what integrations are necessary to pull it in. By laying out that foundation, you enable fast collaboration between business and IT. We've seen organizations deploy apps in as little as three to six days by starting with this approach. And then, the process to scale the factory means thinking about things like capturing reusable elements ensuring that the data models and integrations are shared up for the business to use. Making sure that you have dev ops in place from day one so that you're continuously testing and deploying and upgrading these apps and making sure that you have coaches in collaboration spaces so that teams can participate and learn from each other. The final necessary component of this low code app factory is the right architecture. It's really tempting to focus low code apps either from a sort of channel in or system outway. Channel in means building a mobile app that is only mobile and embeds all of your business logic into the mobile channel. You know system centered thinking is like deploying bots that operate and fix one gap in the system. Low code is best on when instead of approaching it from the front end or the back end, you actually approach it from the center-out. And you weight out your business logic, your process logic, your decisions in the center. That way, you get reusability across channels. You also provide the ability to insulate your business developers from the complexity of your back-end systems. You can build data virtualization layers where you take core elements of data that the apps are going to need like what does a customer or a product look like and let IT define that so that it becomes a Lego block that a business person can easily pull in to the rest of the application. And all the while, you're doing this and building out your application in layers. You're thinking about what's gonna be common across multiple applications. What applications maybe belong to the same family or the same department and can reuse different elements. And how those applications layer up ensures that not the individual applications become silos but instead, they all become part of a broader fabric, interconnecting your business processes effectively for your business. If you do that, you can truly deploy a low code app factory, something that repeatedly turns out successful applications. But that only happens not when low code is treated as just a toy for the business, but as an enterprise tool that brings the business and IT together. Thank you for joining me. (techno music) 