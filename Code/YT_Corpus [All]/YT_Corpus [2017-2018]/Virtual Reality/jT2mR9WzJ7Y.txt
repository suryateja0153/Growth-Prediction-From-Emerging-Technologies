 [Music] welcome thanks for joining us this afternoon my name is Megan Lindsey and I'm the product manager for web PR at Google today I'm here to talk to you about web PR I'll show you the opportunities it opens up for web developers how this is going to benefit the VR ecosystem as a whole and what others are already doing with it then my colleague Brandon Jones will demonstrate how easy it is to build a cross-device web PR app by doing it right here on stage web PR enabled web developers to build fantastic cross-platform cross-device VR experiences here's a quick overview of what web var is all about and an introduction to our recently released web be our experiment site VR should be accessible to everyone because it has the potential to let everyone explore play and create an amazing new ways but right now VR is pretty complicated to make awesome VR stuff developers might have to learn a new language and then spend a bunch more time to make that stuff work on multiple headsets and then when we want to play with their awesome VR stuff we've got to have the right headset VR should be easier so developers can make something quickly and share it with everyone no matter what device they're on kind of like how easy it is to share stuff on the web but with VR well that's the idea behind Web VR it's VR on the web for everyone here's how it works so you're in a browser like Chrome and you come across a web VR experience you just tap the link come on a headset and boom you're in VR developers can build web VR things the same way they build web things with JavaScript and since it all works in a browser it's easy to make it work for all kinds of VR devices whether it's someone using their phones their computer or their entire room developers are already building and sharing awesome stuff with web PR we've started showcasing their work on a site called webview our experiments it gives you a glimpse into the kind of stuff that's possible you can play simple games see the world in a new way explore interactive stories play with a friend or lots of friends each experiment comes with open source code to help others make new experiments and developers can submit what they make all of this is an effort to make VR more accessible so anyone can build and everyone can play with awesome VR stuff so come and start playing at web P our experiments calm I want to tell you why we ago will care about web PR and why we're investing in it as clay Evora said in the keynote yesterday immersive computing is going to change how we play work live and learn we're at the start of the next computing revolution many of you have seen the technology adoption curve before 2017 is shaping up to be a pivotal year for VR where it's moving beyond innovators to early adopters this is a time of opportunity however one of the largest barriers to even broader VR adoption and more user engagement today is content content is absolutely critical to the success of any new ecosystem giving users great diverse and plentiful things to choose from we'll keep them coming back I believe that the open web is exactly a virtual reality needs to take it to the next level and web PR is the first step along that path web PR opens up VR to the largest developer platform in the world you web developers you can build for VR for the first time the web's an open ecosystem that we Google strongly believe in and support we're developers from around the world works together to innovate in a standardized interoperable way the web isn't controlled by any one company and its unique in providing access to content from any device through any web browser there are no walled gardens here what this means is that web be are simultaneously decreases the barrier to entry and extends the reach of your content using web PR you can start developing 4br with gradual investments by progressively enhancing your existing website you can light up your site with PR when an immersive experience add something special from breaking 360 news on the ground to exploring your next home with web PR you can build your experience just once to reach all VR headsets and the billions of mobile and desktop users giving you access to the broadest audience possible and you gain all the benefits of the web by making your content searchable linkable and low-friction with no installation required sharing is as easy as a link so the potential VR goes well beyond gaming what kinds of VR content just makes sense to do with web PR your imagination is the limit though I believe the first wave of web VR content will be the use cases that are already first and best on the web the ephemeral content found primarily through search and social media short form media content and important but perhaps less frequent tasks where you may just not want to keep an app around so let's take a look of some of the things that others are already doing with web BR matter port has created technology that allows capturing real world spaces in 3d to view them virtually for industries such as real estate travel and hospitality and architecture engineering and construction matter for customers like Sotheby's home visit and mansion global has scanned nearly half a million places and make these available to their users with matter ports web player the web player lets the user navigate through the 3d virtual space on their phone or desktop before web be our users were required to download a separate app to view the full VR experience this created a lot of frictions and resulted in significant user drop-off but now with web BR description has been eliminated the user can step right into the home they were looking at directly from the website and when the user exits VR they're still on the original web site rather than in a separate app matter port supports web VR for daydream view and cardboard support is coming soon with over a million themes created and posted by their community guests fab is the lot world's largest platform to publish share and discover 3d content online with web PR any sketchfab model can be viewed and manipulated in your VR headset content creators or enthusiasts can use sketchfab to share or embed models anywhere on the web enabling them to be explored either on a 2d screen or in VR palster creates custom experiences for movies and music helping with discovery of major entertainment products with the rise of virtual reality palster used web PR for the broadest audience reach and created experiences focused on movie websites show times and ticket encoder has done recently [Music] [Music] so movie studios over five times more movie theater selected inside VR than on the regular websites audiences view the 3d trailer and the 3d gallery images and they converted to seeing the movies in 3d rather than in 2d in the actual theaters and finally from filmmaker Christopher Nolan comes the epic action thriller Dunkirk opening worldwide this July just as the film offers a first-person perspective Warner Brothers wanted technology to offer a deep immersive perspective on just what happened to Dunkirk they've brought they brought this vision to life as one of the first collaborative VR experiences on the web showing the depth of soldiers camaraderie through a cooperative experience between two people working together to survive the evacuation each player will become both the rescuer and the victim here's a taste of what's coming for experience Dunkirk [Music] experience Dunkirk will be releasing in June and will be open to everyone supporting 2d devices as well as VR headsets a teaser of the experience is live today so check it out other areas were seen particular interest in web PR include news ecommerce interactive VR films education art and custom business solutions we are eager to see what web developers use web PR for next so whether your contents arriving and web be our browser support is already here in Chrome for Android we've released web BR support as an origin trial for daydreams view and Google cardboard our friends at Mozilla Microsoft oculus and Samsung have all released or announced coming support for web PR bringing it to Samsung gear VR Windows mixed reality oculus rift and HTC vive in chrome we're continuing to improve and extend our web PR support in our latest release of Chrome for Android currently in beta we've significantly improve performance making it more consistent and stable overall and making it easier to reach target frame rates by adjusting rendering settings we've also released web be our support for chrome custom tabs enabling you to enhance your native Android app with your web BR content too looking forward we have support for desktop headsets in development and we're bringing great web VR content right to the D dream home screen stay tuned for more in this soon we've talked about progressive enhancement of VR content and how this is a superpower unique to web VR let's take a little deeper into what that actually means and how others have solved it whether comm recently released an interactive web VR experience called the birth of a tornado they applied progressive enhancement and responsive design principles to ensure their experience can be used on any device by optimizing the interaction model for the device being used on desktop you drag with your mouse to change the view point and click to interact on tablet we change the view point by dragging with your finger and tapping to interact on mobile the phone's accelerometer is used to provide a magic window into the VR experience for Google cardboard head movement is used to gaze and target and tapping the button to select and daydream view uses the controller for an erection bertha poe tornado also works with samsung gear vr and the HTC vive the model used in birth of our tornado can be used with many web earrings and we have a library to help make this easy that brandon will show you a bit later this is just one way to support cross device experiences another example is dance tonight some of you may have experienced the dance tonight project at i/o yesterday evening also built-in web be our dance tonight is an ever-changing vr experience made by LCD soundsystem and their fans it's made entirely from vr motion capture recordings of fans dancing to a new song by the band another special thing about the project is that it works across devices but playing to their individual strengths on desktop and mobile you get to be in the audience on daydream you're on stage and in room scale you're a performer if you didn't catch this in person it'll be available online this summer your input choices and supported devices may differ for your web BR project though we recommend starting with a goal of universal access as a best practice and just see how far you can go while web VR content is still best experienced immersively in a VR headset most people have still never tried immersive VR at all web VR content will be their very first hint of what they're missing the great web VR content that you create will be the reason a new user decides to pick up their very first gr headset I hope you're as excited about web they are sequential as I am now I'd like to introduce Brandon Jones Brandon started WebRTC today he's going to build a cross device web BR up for you live on stage please welcome Brandon [Applause] [Music] Thank You Megan so Megan talked about the principles of progressive enhancement that is making pages that can be used on the desktop and mobile devices as well as across multiple VR devices that can seem very intimidating but the right tools can make it fairly simple it all starts with creating some with great WebGL content WebGL is an API for rendering 3d graphics to the browser and as reported across all platforms today there are many great WebGL tools and frameworks out there to help you bring your ideas to life from there turning your web the WebGL page into an immersive web VR experience can be as easy as adding a few lines of code to show you what we mean we're going to build a quick web VR experience on stage today the app that we're going to be building will be a 360 photo viewer or a 360 degree photos view er which is a great fit for web VR these types of photos are easy to create with many cameras available to capture them and provide a fun experience that you don't get from traditional photos best of all they can easily be viewed in 2d and browser with a click and drag or magic window controls while VR can optionally be used to provide an enhanced viewing experience for users with the right hardware 360 degree photos also represent a class of content that's difficult to get users to install a native app for because the content simplicity because of the content simplicity the overhead of an install is probably enough to discourage most users given that they likely only expect to spend a few seconds looking at each image it's very likely that most users would never get past the App Store link ideally they concluded leave step into VR and out of VR with very little overhead view the images quickly securely and then move on without happening to one solid ating afterwards this sort of ephemeral experience is what web VR excels at so now we're going to switch over to the code and actually build the experience now we're starting out here can we get the laptop up on screen thank you we're starting out here with some boilerplate code we're using 3jf it's not the only framework that you could use for creating web VR and WebGL experiences but it is a fairly common one there's also a frameworks that are available that are expressly for web's VR content such as a frame or react VR but because 3jf has fairly wide developer experience or fairly wide developer acceptance already we're using that today as our example now the boilerplate that we're starting here with is fairly simple so I'm not going to cover it in detail this is the type of thing that you would see in a three Jas tutorial 0 and what it produces for us is a black screen well that's ok that's a great starting point thank you that was awesome so because we're creating a 3d gallery of 360 photo gallery viewer we need images now normally we've come from of course a database with TMS of some sort but we're just going to hard code them in for the sake of example and then we need a way to view them now because it's a 360 image little method that we're going to use is to create a gigantic sphere in this case about 500 meters in radius invert it that's what the viewers skilled here is doing is inverting on the x axis so that all the faces point inward and then keep the camera for our scene at the very center of that that way when you look around you're seeing this sphere all around you that's practically at infinity next we need to put our image on the inside of that sphere using the 3jf mesh basic material this loads up what's known as a texture in WebGL and we'll apply it to the inside of that sphere and it just so happens that 3GS these default coordinate systems work out really well for equirectangular images which is the default that most 360 cameras spit out finally we need to combine the geometry and the material together into a 3jf mesh which the basic primitive that it uses to render and add it to the scene so once we've done that we can switch back to the browser and see that we now have a photo unfortunately there's no interaction so we can't tell that it's a 360 photo we'll fix that by pulling in was known as the web BR polyfill web BR polyfill is in JavaScript implementation of the web the our API that's targeted primarily at mobile devices it uses their accelerometers to to provide basic head tracking used for a cardboard style experience it also happens to provide us with a basic emulated click-and-drag mode on desktop that we can use to get basic functionality on this desktop computer now in order to make our application responsive to the web VR polyfill we have to add a 3jf extension called VR controls we'll attach this to the camera and then this makes it so that any head motion that happens on your headset is automatically applied to the camera itself in order to make sure that it keeps updating with the camp with the head motion we also need to add an update function to the animation loop once those two elements are put in place we now have basic click-and-drag functionality and we can see that we actually now have a complete Photo Viewer for a single photo but that's not terribly interesting we want a gallery so the next thing that we're going to do is provide a 2d version of the thumbnail gallery that allows us to switch between images we'll loop through the image gallery that we had loaded up previously load a texture for each and then pass them to this add to gallery 2d function that will bett we're about to define here we're going to use a little bit of basic HTML manipulation to create a container div add a simple class to it I'll leave the CSS as an exercise to the viewer append the image that's associated with our texture to that container element and then add a click handler when we click on this thumbnail we're going to swap out the texture on our gigantic viewer sphere with the texture that's associated with the thumbnail and this will give us the basics of iterating through the gallery now I should note you can see that here I should note that this is actually a terrible practice because normally you would want to use smaller images for the thumbnail to not impact loading time but because we're doing everything locally here for the sake of time I'm skipping over that but you can see here that as we click on each of the images we can cycle through the various items in the gallery and they're all viewable at this point the 2d site is done we've done everything that we need to work both on desktop and mobile but we're here for web PR so let's figure out how we allow people to dive into VR from here the next thing that we're going to pull in is the utility called web dr UI this is a library created by the Google Creative Lab that provides the button that advertises web PR support to your users it will also communicate to them if they don't have web PR support in order to add that to our application we need to go in create an instance of the web the our UI button append it to the DOM and then in this case we're going to ask it what VR device is associated with and cash that off for later use if we switch over here now you can see that we now have the button that normally would tell us that we can go into VR but because we're on the desktop site we can't actually go in yet we that is we don't have a hardware connected so we can't go into VR here we would be able to our mobile and I'll switch there in just a second now even if we could go in because we have the correct card where we haven't actually wired up any of the VR rendering yet we'll do that with another three days utility called VR effect this makes it so that the content that would normally go through the render and show up on screen well actually be rendered twice for a stereo view using the correct parameters that is going to query from the web VR API we also need to update the animation loop to make sure that we can properly handle when we're in VR mode versus non VR mode we do this by asking the enter VR UI if the users click the button and if it's presenting and if so we'll render the scene using the VR effect otherwise we render using standard three J s render and then the last thing that we have to do is make sure that our standard requestanimationframe is actually using a VR specific variant if it's available this makes sure that if we're on a desktop device where the VR headset runs at a higher framerate than your average monitor like 75 or 90 Hertz we're running at the same frame rate otherwise the user will experience a lot of stuttering in VR and come away possibly sick so we will update that and at this point we'll need to switch over to our Android device to see the rest of the experience all right great so you can see on Android we now have that nice magic window interaction mode where we're able to spin around and see the 360 photo without going into VR at all this is great if you just want to showcase one that there's 360 content here because the users natural hand motion will give them a hint that there's more to see and to just gives people a preview if they're safe sitting on a bus and maybe you don't necessarily want to blindfold themselves however once we hit the enter VR button we can now switch into VR mode and at the moment we're configured to use a cardboard device and you can see that we would also get the nice stereo view now these images aren't stereo but you could render a stereo view of the scene and it would work correctly in any cardboard device so we've now created a basic web VR enabled 360 image viewer but once again in the VR side we've only done it for a single image and that's not great especially when you're using mobile VR you don't want to force the user to put the phone into a headset and take it out repeatedly in order to navigate between different elements in the scene so ideally we'd like to take the 2d gallery that we've created here and pull it into 3d to allow the users to select between the different thumbnails there now this gets a little bit more complicated than the the Dom elements because we are dealing with 3d so a lot more math is going to be involved but the basics are still pretty simple we're going to be using and spheres once again just like the larger viewer to represent the individual thumbnails they're just going to be much much smaller this time and then down in when we're looping through our gallery we're just going to add items to the 3d gallery as well as the 2d that looks like this which now we start to get into a lot of math because it is 3d triggers kind of powerful course but skipping over the exact details of what we're doing here once again we're creating the texture to go along with the image we're associating it with each of our thumbnail spheres and then the positioning code here just put them in a semi-circle around the users waist somewhere that's kind of not obtrusive but easy to reach so if we switch back over to the Android we should now see yeah we have this nice semicircle of the same thumbnails once again now this is cool but that's probably not the experience that you want to leave your users with most of the time because we're doubling up on the thumbnails in the non VR version so over in the code we'll just add one more line to say if we're if we're not in VR mode let's just hide the gallery make things a little bit cleaner so next up now we've got the thumbnails but we don't have a way to interact with them and we're going to add that by using a library called ray input ray in put is the library that was used by the wthr.com example that Meagan was talking about earlier and what it does is provide a single unified model for cardboard daydream or higher-end desktop experiences with six doffed controllers in all cases it gives you a cursor and array that are based off of whatever the user's capabilities are and uses that to cast into the scene find an object and allow you to click on it so to start off with it's a little too far to start off with we have to instantiate ray input we provided the camera so that it knows where we're looking we set size that's just a little bit of bookkeeping and then add the meshes that are associated with that into the scene this is so that it we can get the cursors that are associated with it in the Ray itself like vvr controls we also have to update this every animation frame to make sure that it stays in sync with the controller movement in this case we also want to make sure that we know when we're actually selecting each of the thumbnails so we're going to modify their opacity whenever the cursor is over the top of them we'll start them out with a lower opacity and then we'll have some event handling here that makes their opacity higher as the cursor hovers over them one bit that I skipped here we do need to loop through all of the all of the thumbnails in our gallery and let ray input know that they are selectable otherwise it will also try to select the larger sphere on the back and that doesn't do us any good and then finally the last piece is that we say when we have clicked on whatever input whatever the primary input is for our control mechanism we're going to do the same thing that we did for the 2d gallery which is swap out the texture for that thumbnail for the larger for the largest sphere now let's see how that looks on mobile well let's save it first then we'll see how it looks on mobile okay so you can see because I skipped over this we no longer have the image spheres in 2d but if we jump into the VR mode and there we go we now have a nice cursor that can swivel around and select the different spheres based on our gaze this is once again a cardboard mode and if we clicked on it it switches the thumbnails so now we have a fully functional functioning gallery that the user does not have to leave VR for in order to switch through images now to demonstrate that this is actually this works correctly with more complexity input mechanisms as well we're going to come out here well that's not what I wanted sync this up with a daydream device and then normal part of the daydream entry flow is that we have to sync up the controller takes just a moment and then we should be back into our same experience with now you can see a basic ray based selection cursor that does not depend on the movement of my head but can still be used to do basic selection from the gallery [Music] so that's it in about 150 lines of code we've created an experience that works on desktop mobile and B are both cardboard VR daydream VR and if we were to put that on some of the larger desktop systems it would even work with an oculus rift or a vive so let's switch back to the slides okay so to summarize some of the recommendations that we covered during the development you should at this early stage we should be focusing on apps that can be used in 2d with VR as an enhancement well the VR ecosystem is still growing we should also strive to allow the users to stay in VR for as long as possible as been frequently switching between the 2d and the VR mode can get a little tiring finally there's a variety of input methods across all VR devices and using a library like Ray input helps normalize that into a single interaction model that's common between all all modes so now I'm going to turn it back over to Megan who wants to tell you a little bit more about the future of Chrome and VR Thank You Brandon everything up to this point has been about bringing VR to the web now I want to talk about bringing the web to VR today when you encounter a web BR link you drop your phone in the daydream viewer and then when you're done you take the headset back off soon you won't have to take it back off to continue your browsing as we announced in the daydream keynote this morning we're bringing the full Chrome browser and the entire web to VR for daydream view first you can use the daydream controller to navigate regular web pages and follow links and for web BR experiences you get transported into fully immersive worlds you'll be able to watch videos in a large screen feeder like experience Plus Chrome and VR is the same app that you use for browsing in 2d it shares all of your tabs bookmarks and history you don't have to real aughh into websites and VR things just work VR browsing is coming to Chrome for Android later this year so what's next take a look at our web yard developer portal with some great to Tory oles and case studies and the helper libraries that brandon showed us earlier check out the full set of web PR experiments online and consider submitting your own you can also try out some of the web PR experiments here in person at i/o in the experiments area thank you so much for joining us today and I can't wait to see you come up with [Applause] [Music] 