 so Larry already introduced me I'm Joydeep and the director of IoT at Bridgera we are headquartered here in Raleigh North Carolina we develop software solutions for our use cases in fact we have a IOT platform that we built that we use as the back-end for IOT software solutions that we develop. Today we will be talking about talking to your Things. Things mean devices in the case of IOT so I'll be talking more about how you can communicate back and forth effectively between your device and a platform so before I'll jump into the details of how you do the communication I will be talking a little bit about that internet solution and just setting the stage so any IoT solution starts with a device. Some of the devices are IP enabled that means they can directly communicate over the Internet. Some of the devices are not IP enabled like a bluetooth device or a zigbee device where you need a gateway or a hub in between the devices and the cloud platform. Then of course you have a communication channel between the device and the platform that is internet or cellular data whatever you call it and in the cloud platform you have data ingestion data processing data storage these type of capabilities at the order other end of a IOT solution we have IOT apps those are custom build IOT applications generally and they can be mobile app or a desktop app or web app generatively use those IOT apps to communicate with the device but as you can see from this diagram generally the apps do not directly communicate with the devices rather they communicate via the IOT cloud platform so now let's talk more about the device to platform communication how the different types of devices using different RF technologies they use they communicate with the platform so let's start with the long-distance IOT solutions the most popular one is the cellular network any device which get connected to the cellular network that becomes move on any IOT device there are there are plenty of different server technologies exist out there I'll not talk about rooty anymore it's almost obsolete for 3G 4G for different varieties of LTE irrespective of the communication or the density of the network that we use every iota device which use the cellular data they have a same and they did complete connected to the cellular data and then communicate with the detract from facilitator similarly sick fox laura1 they said they are other long distance I have dissolutions I am NOT going into the detail here but as you can see that the devices though those are using the sick fox or laura1 Network they use some type of gateways or other network servers to hop into the internet and then eventually get connected to the I will tear out that in the medium distance irony solutions are we talking about our Wi-Fi nicknamed z-wave and trade most for popular medium distance IOT solutions everybody knows what Wi-Fi is any device with a Wi-Fi chip in it can communicate via Wi-Fi to a Wi-Fi router to the Internet ZigBee is another type of medium web solution which is used a lot in the former mission space where there are multiple types of devices in as evening to approach the end node so they in devices at actual ZigBee devices are apart from that you can also have their routers and and the coordinators eventually their coordinators get connected to the Internet there's how and they was different network topology commissioners there's how the ZigBee your z-wave or trade devices get connected to the internet using some other hubs in for the short-range IT solutions the most popular ones are Bluetooth RFID NFC for Bluetooth you need a phone app or to communicate with the internet for RFID generally the RFID tags communicate with RFID digit and then the RFID reader gets connected to the internet for NFC the most widely used applications are MN terminals so NFC devices when we come close to another device they transfer the data using a third communication so here as you can see for this him enter when the smartphone comes near to the payment terminal the data transfer and there's how they get an interpreter and pushed up into the trap so that's enough about how different types of devices using different radio frequency get connected to the Internet now let's actually jump into the a different narrative protocols I in the topic itself I mentioned that being completely different languages those languages and Hakim are different IOT products before I'll jump into different IP protocols I've been talking a little bit about the different challenges that you see in case of IOT communication if you understand that then you will appreciate more why was protocol exists and what type of a problem these protocols actually trying to solve scalability is a huge concern for any IOT solution even though the amount of data transfer for data packet is very small but if you multiply the number of devices in your network and again multiply the number of times that the device pounding it with the server the actual amount of data transfer is huge so scalability is a huge concern and we need to make sure that any IP protocol or any communication channels that we are using can support a huge amount of data transfer huge amount of high-speed data transfer x-ray machine to machine communication IOT is all about machine to machine communication the Internet Protocol HTTP was designed for human to machine communication it was not specifically designed for machine to machine communication also HTTP was designed for the government of document type data transfer but in IOT that data the nature of data is different that's why the IOT protocols exist out there which specifically address this function the machine to machine communication next one is different based communication the Internet Protocol HTTP doesn't understand event quite well and it's just a stateless protocol for the given based communication and even based notification is very important we just think of a use case right if you have a temperature if you want to trigger your fan on when that temperature goes beyond 1884 intent then that's actually inhibit that is coming out of the IOT system so we need to make sure that the whatever diabetic communication protocol you are using they have inbuilt support for that even based application there's very important for in Yankee communication then the next point you really don't have much control about where the devices will be deployed many times the IOT devices the chief devices will be deployed in a unreliable concentrate network situation and any to make sure that I would take for the call whatever you are going to use has some support in support to make the communication reliable even in that constrain and leveling mechanism to know the current state of endpoints so I'll give you an example so if you have a thousand devices in your Artie solution and you are constantly communicating with their devices and you send a message to our device you send a request you are actually expecting a response back from the device but if that device is offline dev time you are not going to get it as possible right but if you don't know that current state of the device then there is a problem because you will expect something back from somebody but you are not going to get that that's why that the IOT protocol should support this thing or parachute easily and get the current state of the main points of the devices and security and I need an entire session to discuss about IOT security I'm pretty sure that there are a lot of other stations across security one thing I just want to emphasize here that in IOT the security is very very important and it is much more important than what it is in the wave world the reason behind that is in wave world you can use the state-of-the-art security mechanism you can implement that in the high-end servers in case of IOT you are actually dealing with very pretty cheap devices and most of the time those pretty cheap devices they don't have enough computing power to support those state-of-the-art security mechanism so and I would be end-to-end solution it is as secure as the week yesterday and most of the time that devices that we carry so irrespective of that I'm not going into the detail of IOT security what I track one time to address here that the communication between the device and the platform that means to be secure now let's talk about the actual IOT protocols so the first one that I'll talk about is MQTT message which you can spot elementally this is the most popular IOT protocols now it was invented by IBM it's a publish/subscribe based protocol it uses TCP as the underlying protocol in the center of mqt you have an activity broker and all other devices or all other players in MQTT ecosystem are traps that means all the devices are also crimes at the same time the IOT cloud that in itself is a client any client can publish topics public messages via some topics to them QT broker and also the other trends can subscribe to those messages depending on which when I set on which topic you subscribe to that we said you get delivered by a broker actually controls the wrap it is an extremely lightweight protocol the underlying protocol is TCP already talked about it for better security you can always use SSL or TLS but you have to understand that SSL or TLS and not an eye test of the protocols and it has significant overhead to the communication so if your IT solution can support it yes go for it if it cannot support then you can use your own custom encryption algorithm and if it doesn't have an inbuilt one but you can add your own custom edition either in to make it more secure also MQTT supports varied level of us so that quality of service starts that included his way of adding reliability in the communication I talked about that communication in the constrained Network for the devices so there are three levels of you is available for the Qt communication at most one which is the disk reliable it's basically just fire and forged whatever is being supported by cheesy nothing at least once it's somehow 11 that means yes the message that were delivering we receive by the recipient but there is no guarantee that the message will be received just once it can be received even multiple times so that means at the end at the recipient you need to make sure that you have a filtering mechanism to filter out the duplicate messages and exactly once is the most reliable one where it is guaranteed that whatever message you are sending from their plan will be received by the recipient exactly once and I added a prototype down here as well to describe that I'm not going to detail but you can definitely we talked about knowing the current state of the device in case of fire and that's included is way of doing it last we loves Testament duty so and everybody see those attributes here is pretty small I don't know if anybody can see it but yeah so when when you go oh yeah I just mentioned in QT d connection packet how it looks like and different attributes so you probably saw that just in here for last will and testament are there is a last will topic here if you can see my cursor and there is a alive setting which is set for 60 seconds here so basically when you connect the Puente when the client coming to the broker that keep alive sitting tells that time without the broker if I don't hear back from this client in that keep a tight time that is in the last 60 seconds I will think of that crime but disconnected on history that's what it is all about if the client got disconnected and basically if the broker change that then their broker means sentences that is the last will be safe here I mention it has unexpected exit and there is a last filled topic as well so all the clients or subscriber we were subscribed to that profit they will get that so if I am interested to know the current state of a particular device I'll be subscribing to this topic last will talk and whenever the property will decide hey I am not getting any kind of communication from this particular client it will send me that message that way I know that yes that that particular node is currently disconnected off that and I will change my on the implementation side and I mentioned earlier in my topic that I'll be talking about open source implementation I give up a public you can always go there and download the different in QT client libraries if you want to play with it there are Android and iOS libraries available out there which you can download in your smartphone and make your smartphone as an infinity client and start publishing messages if you are doing some POC kind of stuff using our do you know there's an Arduino library out there download it play with it if you are doing some serious stuff there is Java or microsoft.net clients also on the broker side there are there are open source brokers available out there also there are enterprise rate support available for some of the brokers so we use mosquito you can use high level qmq flowering key well so that's another protocol that is gaining popularity nowadays constant application protocol it's specifically designed for or it has a good support for the devices which runs in the constraint in work it's more like HTTP RS code restful protocol and it also has the matrix that is delimited so I get put post delete support for those measures the underlying protocol for wire is UDP which is pretty unreliable so our basic reliability scheme is built on top of it to support the reliability for the kind of communication and also to make it more secure you can always use DTS that is Datagram transport layer security MTD support ipv4 ipv6 low man and it supports unicast and multicast as if they know that rtv6 also supports multi class for web unicast is used for request response type type enter type of messages and my test is used for cipher discovery resource discovery actually imputed sorry we're supports sulfur discovery as well and the implementation side you just mentioned in your field so as I mentioned that co-op is widely used for the devices which runs in the constraint on the level Network and I have a link here where I can download all the different support libraries so completely the operating system that people use wild in for devices that they will to run in a constraint network and RDM is a quad client we are here as a convention that people use for the devices which runs on also on the under browser sector and the smartphone side there are clients available for iOS and Android there is a Firefox plug-in available out there copper if you see you if you really want to interest you are interested in dealing with require and you just want to see how it works you can have that path of struggle installed and of course it's the oldest of the protocols not was not specifically designed for IOT but there are plenty of devices still out there which uses TCP and that's why I think that it's worth mentioning here so in case if our device is communicating to the platform via TCP if you want to communicate back and forth with the devices you need to have a have a TCP listener service running in your server and that that listener service has to open a participe port when our device wants to communicate with your platform the device will have to another TCP port and they will have to do our TCP handshake and that way the communication link email that's how the data will be transfer so that's the one your communication when the device is communicating with your patch now if you want to do a two-way communication device to platform and platform to device so here is the catch most of the time when your devices are using IPP for the guaranteed the I IP address will be done because they are not enough ipv4 IP addresses exist out there if you desire a v6 is different I'm probably will get a static IP so if you really want to do a communication back from the platform for the device we actually have to request for static IP from your provider otherwise without knowing that the particular IP address you will not be able to get that idea the TCP communication SMS based communication so why it is important it's still important to me because in IOT people want to say better they and out way to save the battery is to put the devices in sleeper and once the devices are in sleep mode the only way to wake it out the easiest way to wake it up is to send a SMS text message to the device once the device will get the SMS text it will wake up and it will start communicating that's why the SMS based communication is still out there and simple for for SMS based communication it will generally don't use the commercially available SMS sending platform there are some unreliability in it because the characters that we same for IOT communication many times the cellular network things those are garbage and they will put that divide the messages in to spend and they will never get it so the best way to achieve the good communication SMS best communication is to use SMTP protocol short messaging it is simply you have to run a client which is yes Emme external short message entity which will be running in your travel track from that yes amy will start communicating with a network called SMS see short messaging service center and via that they do a twist up it will send SMS text message to all the devices you can also get that use the SMS communication to get their response back from the device for that you need to get a short code from your telecom carrier if you get a short code from a technical failure and put that in your platform and then program the device to send the messages or send the response back to that short code then the device is concerned so that's the way you can actually implement SMS based two-way communication back and forth communication with your device and time for that from the implementation side there is a open source library available out there for open smtp we use it you can also download free and implemented there are a few important methods that you need to implement in your code that it those are the tab start make sure you need to already define get credit submitted for most important now if you're interested well I'm pretty much done with most of the protocols there are other protocols also like indeed he XMPP MQB they are not that popular not used widely so I am NOT going to discuss it here and let's go to skip it okay so we talked about the back and forth data communication between the device and the plan so many different languages means different protocols that you can use to communicate back and forth now once the data is your platform then the platform will be ingesting the data it will process the data and it will store the data and also it will have the support for different IOT applications IOT apps so before I was going to jump into the detail of that and we just talking a little bit about why you use or why we use Big Data technologies in case of IOT data data management or data processing because on the server side one thing that cloud side we use Big Data technologies so are they explaining that with the three attributes of big data volume velocity and merit and all three applies for higher we talked about the volume of data that we need to handle the huge volume of data he's not even heard of it is data byte sometimes it up for different IOT solutions and traditional servers or traditional technologies cannot really easily handle that kind of thing forever Gator also the data in motion the data that is coming to the IOT platform comes at very high speed because there are plenty of devices whose IOT the devices generally stream the data so if you multiplying the number of devices and number of times it saves the data actually the data comes in the Attic at home at very fast rate so that's the there's the velocity part of demand that every device has a different data structure and also if you think of it even for the same device the data structure imports from former different former person so that little structure can be something with firmware version one and it can be completely changed for former version five so if you are supporting those enough number of devices different types of devices you need to have a support for support for there's storing semi semi structured unstructured data in your deep in your database and the traditional technologies that are really not on our devices are really not designed for that you cannot really change your data schema on the fly quickly so that's why we go for it there are other reasons as well in the Decatur technology staff the things like fault tolerance for scalability is inbuilt built-in so if you are using winter a technology stack you are getting support for the folder and sitting site for trends and scalability which are pretty important for ninety you really don't have to write a lot of custom code for them so that's a good thing so when the data ingestion side for the platform we talked about other different protocols so if your platform is going to support a wide variety of devices we need to make sure that the platform the data condition layer has support for all these different protocols at the same time the platform's will support the SSL or TLS type of data encryption algorithm because if you don't support that and if your device is supporting the device that you are communicating with you supports that SSL or TLS type encryption then you not be able to support it that's why the empty list editor yeah it should be scalable we talked about that it should be : torrent because we are using Big Data technologies that side will be faltering and also the data ingestion layer should be very lightweight it should not have a lot of data processing logic in it it should just do some data cleaning or data type of easy work and push the data back to the processing therefore the further processing on the implementation side we use Apache in 95 another open-source tool that edition there Apache 95 is a distributed data flow there is a stripped-down version of Apache 95 called mine and file if you are building peyote hubs or the gateways you can always run mine and find it because man finds that Enterprise great thing you need a big server programming so for the smaller cups and stuffs becomes HTF is hotter worse data flow it's essentially a putty knife right nothing different but if you are looking for enterprise grade support then you should go for hdf because they didn't indicate the enterprise good support from the data processing side we do two types of processing real-time data processing and fax policy so that Hilton Gator promising is on the on the data streams that what we what we get from the IOT devices we use Apache Kafka and Apache storm both open source for real-time data processing you can also use rabbitmq and above link for real-time data policy for batch processing we generally don't do it on the you cannot read it to it on the on the streams for batch processing is most more like offline data processing so the data needs to be stored in a database and then off flying over the 9th or some time to do the batch processing and most most of the time the batch processing is being done for some analytics type of use cases or for getting some business intelligence out of the data that you are captured from the IOT devices and for that we use another open source tool for Apache spark and I only did a storage site we talked about the different different attributes of IOT data it's large volume it's it has a different variety because because different devices stream different types of data that so because of that large volume and different variety of data we did not use the traditional RDBMS data storage to store IOT IOT device data rather we went for no SQL database query where it can handle large volume of data set of data sips also it can store different varieties of different types of data structure we use MongoDB another open source database you can always get an enterprise-grade support from MongoDB but it is open source you can always download and start using it as our newest well database which is a document type database we can also use Cassandra and no SQL database good thing about no SQL databases most of these newest predator vs. has a support for something called sharding or horizontal scaling so because of that huge amount of data if you think of it if you put that huge amount of data is just one storage or one server if you run a complex square it will take really long time to get an output instead of that if you if you do the horizontal partitioning of that data and put that into multiple cluster when you run a complex query the output will becoming much much faster and those are already you built into that into the new SQL databases if you have to achieve the same thing with traditional party B message it's a lot of fun and most of the time it will not be everything so no inspirited is a really good to store that device device data but it's not good for the data which needs transaction support which needs that acid properties so for these type of data we still use our differences so we actually use a mix of noise weather and our differences so the data right the customer data or financial transaction type data and you know now you use cases apart from the device data you also have other data so you need to so for those type of data where there is a third type of relational data we still use the our DBMS storage - q is the open source our DBMS we use it all the time most cranes and other open source otherwise you can always use Microsoft sequel server okay so we talked a lot about all these different communication mechanism how we communicate between back and forth between the device and the platform once the data comes in to the platform then how we process it how is going now in reality how it happens so I'll be explaining that with her use case fleet tracking use case and the thing that I'm explaining here is creating a geofence so as you can see on the left hand side i have a iot app which is a way back on the right hand side i have the device so this is a fleet tracking your skills so the devices inside the track and it is our ability to type of device which is plugged inside the track we are using impunity mechanism to publish/subscribe messages between their crimes so in order so this is that this use case is to create the jewels first the user will use the IOT app to send a request to the IOT platform and tell that it created your friend's phone the platform gets the request it will publish a comment to the MQTT broker to create a geofence the command will be sent to the actual device because the device has already been subscribed to that type of it's assistant so in reality that this is the in QT topic that the platform published a message to and we already talked about that publisher just a few years back and that profit is request last the device ID which is the IME on Gia / - your friends the device here that this is the device unique ID that I am Ian the device subscribe to any messages or any topic starts with request class that particular eliminate so anything that you send with that request ask that particular IMEI and then tell anything that relating to that differs so even though you have 10,000 devices in your in your solution you are specifically you can specifically send the command to that particular device using imputed now this is the actual message that you are sending this is a body of the message that was a topic and is the body of the message and the body of the message as you can see here I am telling that this is the latitude and longitude that means the center of the geofence and the radius is 300 meters the device got it it created a geofence now the next one that I'll be telling is getting the response back from the device to the to the and sending it to the customer so here the use case is that the device entered into the geofence as soon as the device enter into the geofence it emits a signal back to the broker missiny macula flatten the truck entered into the geofence the device Center published an alert the alert was received by the platform and here is the problem the topic is even /eo hands the platform is subscribing to any topic which starts with events so anything that you published with events laps will be reaching to the platform and platform you look at that but how the platform will know who sent a message if you look at the message the actual body of the message there is an IME edge here which is the unique idea of the device so from the glory of the misses the platform will know hey I got this message which is about a chip-in seller and it was sent by this device and it also has a message that the geofence one was in the device entered into the geofence one the current latitude longitude of the device the GPS accuracy all these terms what about the device much the same when the cloud platform gets that it process it it knows that this is an error that I need to send back to the application it sent an alert to the application or it sensor alert to the user Mercy's in business so that's the end of my session and I'll be taking a few questions here but before that here is a link for our iot ebook basically we published a free ebook it is a joint collaboration between Brazil and riot and I will suggest you guys to go into this becomes nasty book and download these people I mean if you are really interested in all these things I talked about he will know more also I didn't have any live demo with me today but we have a booth here just in front of 305 below number 305 so if you guys are interested you can always stop by our D they are mighty happy to show so in the beginning when the further because to subscribe for different office so if that device is subscribing for pockets each other like this not particular rather that device will be subscribing to any any copying starts with request as his own party so anything that artists and in from platform using that a union will be always sent to that and it is the type of device and thanks 