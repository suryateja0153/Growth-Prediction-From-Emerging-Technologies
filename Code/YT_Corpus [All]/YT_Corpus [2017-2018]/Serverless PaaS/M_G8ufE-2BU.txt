 Platform-as-a-service do your best to avoid AWS if this is your primary decision point start with a Google Cloud App Engine if this works for you And then and consider alternatives As your functions are compelling service offering don't assume that you should just use lamda the decision may come down to what open source projects Like the service member can do for you compared to what you may get built in from Azure also Don't forget to keep your eye on Google cloud functions to make them out of beta sometime soon Google container engine and as your container service are strong services that provide the best the world has to offer in container orchestration software There's really no point to even consider ECS here Database offerings are a clear win for AWS You may end up having to run your own if you opt for another provider of course you can do that But the question is do you really want to? GC Pease telemetry tools are first in class give them a go and see if they work for you They may even replace some of the existing tools you have in your stack EWS wins an application of support and beats out the others from a simple maturity perspective remember to select the provider that gives you exactly what you need you may not need everything in the kitchen sink as Your edges out the others in beta engineering because of their more hosted open-source offerings although I get the feeling that you may be happy with any of these three in this area Asked for geography is the big three are really quite similar here Google is set to launch new regions in 2017 so that should equal them out to remove it as a deciding factor However given the similarities. I don't think that this area will differentiate it 3 between most people and Finally we talked about price here It's important to remember to do your own analysis on compute storage in a wide array of other factors that may impact your Final underlying cost it's hard to declare a hands-down winner in terms of monetary cost for your exact use case However that being said Google cloud platform does appear to be generally cheaper for the majority of use cases Now these kind of decisions usually come down to the differences and not everything can be easily compared. Let me quickly summarize the results AWS is the known container of the group sometimes it's best to go with a devil you know instead of the devil you don't The open source community targets 8080 was first because of its market position and momentum Also, it's hard to discount AWS with portfolio and market position GCP feels like the upstart underdog it excels in some areas like telemetry but cannot compete feature by feature against the other two However, Google is arguably the best company in the world at building and running planet-scale systems You can't discount that wildcard also their UX and general performance for starting new vm's is the best of the three Asher is taking direct aim at AWS and their portfolio shows it from strong service offerings for the deepest enterprise supporting services also, it's Microsoft So if you're into the dotnet or Windows game then no one does it better than them their integrations between On-premise and cloud and even Visual Studio are hard to beat Alright, we've made it to the end. I'll do my best to boil it down to a few bullet points First go with AWS if you just want something that works everywhere and don't mind paying a little bit extra Go with GCP if their products meet your requirements, or you don't need everything in a kitchen sink They're also generally cheaper than the other providers GCP is a great choice if this is your first experience with cloud platforms because it's not so expensive And they generally cover the majority of use cases Go with Azure if you're living in a Microsoft world or you want everything and the kitchen sink, or you need enterprise integrations also Don't discount that they're pretty good at generally both of the things they do This next point is arguably the most important things you take away from this course It's a simple recommendation that may have gigantic ramifications, and how you actually architect your final system And it's simple go hybrid odds, are you're best suited to combining bits from all the different providers You can use AWS for compute, but throw GCP telemetry services at it You may use EWS as data basis services for containers running a Google container engine No, one says you must pick just one you can have your cake and eat it too by going hybrid Don't choose any one provider on platform-as-a-service alone if you're only interested in platform-as-a-service and something like Heroku Trump's all of these platforms Lastly, I recommend you pass if you just require a simple VPS not everything requires a cloud provider of this scale if you just need A simple VPS to run Apache, then you may be better suited for a digital ocean or other smaller scale platforms There are a ton of products in this area I suggest you evaluate these options first if what we just covered it feels like too much stuff for your particular use case 