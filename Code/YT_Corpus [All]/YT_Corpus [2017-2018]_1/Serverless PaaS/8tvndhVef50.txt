 - Hello everyone, and here's an Azure Stack update. To start, we have to look at Microsoft Azure. So it's basically three things. It's global, meaning there's a network of hyper-skilled data centers all around the world, 34 regions and 28 online. And it's trusted, so Microsoft Cloud is the most trusted by customers for the breadth of security investments that we made in the Cloud, and also it's trusted from an operational perspective as well. And then it's hybrid, we have the most comprehensive set of hybrid capabilities across all layers of the Stack, Whether that is infrastructure, applications, data, and even users. Taken together, these make us highly differentiated in the marketplace. So enter Azure Stack. And Azure Stack is an extension of Azure. So it's bringing Azure to on-prem. It brings the agility and innovation of cloud computing to on-premises environments, and organizations can now build modern applications across hybrid cloud environments with the right flexibility and control. This is very critical because consistency between the two environments is really important. If you develop an application for Azure, you want it to be able to run on Azure Stack. If you're running virtual machines or virtual machine scale sets, you want them to run in Azure, as well in Azure Stack. So another look at this, cause essentially, you've got Azure, and it's the public cloud. And you've got a Portal, there's PowerShell, there's DevOps tools, there's the Azure Resource Manager, which controls all the resources that are requested and actually running. And then you've got Azure infrastructure as a service, and Azure platform as a service. And then you've got the basic cloud infrastructure. So if we look at Azure Stack, it's got the same Portal, PowerShell, and DevOps tools, it's got the Azure Resource Manager, it's got the IAAS and platform as a service as well. Then I'll go over what is in those two areas in a moment. The key being that for developers and IT, there's a high degree of consistency between those two platforms. If you know how to create applications and manage applications and infrastructure in Azure, you can also do it in Azure Stack. This is just another look at Azure services that are available on-premises. They've got developers that can develop for platform as a service, or infrastructure as a service. And you've got IT that can manage those as well. And then a quick look at what the services that are available, at general availability. You've got the IAAS capabilities, where you've got virtual machines and virtual machine scale sets. That's rapid deployment with automated scaling, so the virtual machine and the virtual machine scale sets that run in Azure run in Azure Stack. And then you've got containers with Docker, both Linux and Windows server containers, then the networking capabilities, if you're familiar with Azure networking, you know, you've got virtual networks, you've got load balancers, and then VPN gateways, and other network function virtualization capabilities as well. And then with storage, you got blobs, tables, and queues, just like you have in the Azure public cloud. And the for the PaaS environment, you've got the Azure App service, you've got web, mobile, and API app occasions. And then it's got Azure Functions, which is a server-less computing service that enables you to run code on demand without having to explicitly provision or manage the infrastructure. So you use Azure functions to run a script or a piece of code in response to a variety of events. And then there's Azure Service Fabric. And Service Fabric is a foundational technology that powers the core as your infrastructure as well as other Microsoft services, such as Skype for business, Intune as your ven hubs, as your Data Factory, as your Cosmos database, as your SQL database, Dynamics 365, and Cortana. It's designed to deliver highly available and durable services at cloud scale. So Azure Service Fabric intrinsically understands the available infrastructure and resource needs of applications, enabling automatic scale, rolling upgrades, and self-healing from faults when they occur. And then there's the Azure Container Service, which is basically a container infrastructure so you can create containers and manage them as well. And then it also has the open-source platform, Cloud Foundry And Cloud Foundry's an open-source platform that is cloud-native for deploying and operating modern applications And also, there's one Azure ecosystem. So it works with the tools and technologies you want, across Azure and Azure Stack, and here's some examples: Chef, Cloud Foundry, Docker, Mesos, which manages the Docker environment, Redhat, Suse, Blockchain, and many, many others. So what are some of the use cases for this hybrid environment? So you've got this unified development and DevOps, but what if your environment isn't always connected? And so the edge in disconnected solutions are one area where organizations can deploy a cloud platform, Azure Stack, and if they've got intermittent connectivity to connect back up to Azure, or there's even no connectivity they can still get the benefits of a cloud platform, in that disconnected or edge state. And then deliver cloud applications that meet every regulation. And that's really the ability to create cloud applications and then deploy them anywhere in the world. So you can create the same type of application for multiple locations, and change them just enough so that they meet the regulations of that environment. You also have the ability to take into account where the applications actually run, so the regulatory environments of Europe are different than Singapore, which are different from the US. So you can actually create applications that run in those different environments. And the last part, where you build modern applications across cloud and on-premises. This is actually pretty significant, where organizations can create apps, or microservices, series of apps, however you wanna look at it, and deploy them across the public cloud and on-premises. There are many dev and test scenarios that go along with that one as well. Now looking at the systems themselves, they're actually purpose-built for operational excellence. So, we focus on optimizing the business applications and services, with integrated systems that are designed to deliver consistent Azure innovation in a predictable manner. So what we'll talk about is the types of systems that, and the vendors that they're from. So the first Azure Stack implementations will be from Dell EMC, Hewlett Packard Enterprise, Lenovo, and Cisco, and there will be many more over time. Azure Stack isn't just a stand-alone environment, it actually can scale, and scale globally. So number one here, there's one cloud endpoint, and that would be, you know, the portal and the Azure Resource Manager for all of the Azure Stack implementations. So you can also have several regions, where there's region one, region two, region three. And then you can have multiple scale units per region. So each scale unit can be different generation hardware. And then the scale unit equals the fault domain, which also equals a failover cluster. So the scale unit is fault-tolerant, and it also has failover. The smallest scale unit is four servers. And then the scale equals the number of servers times the scale unit per region, times the regions. So scale at general availability is one region, with one scale unit, with a minimum of four servers, four physical servers and a maximum of 12 physical servers. And then customers can incrementally add one server at a time. So post-GA multi-region support for additional capacity and geo-redundancy, and additional scale units in a region, and then also improved infrastructure management will be available. And for pricing, so Azure Stack extends Azure packaging and pricing model. So what you have to understand here is you pay for the hardware, but there are no up-front licensing fees. So there's just a fee for consumption, so you only pay for the services that are running on Azure Stack. Again, no up-front licensing fees, and it's compatible with Azure. So it's the same subscriptions, monetary commitment, and invoice as Azure. And that it's available in Enterprise Agreement and the CSP channels as well. This pricing model's pretty significant. Organizations only have to pay for what they use in the Azure Stack environment. It's a little bit more about the pricing concept for Azure services. There's no charge to install Azure Stack. Infrastructure as a service and platform as a service services are charged on a pay-for-use basis. And then with Window Server, if you wanna run it in a virtual machine, you bring your own license or you can just pay for the usage, and SQL server's the same way, where you can bring your own license. And then there are some pay-as-you-use model-metering units. So, the service and the metering units. So for Base virtual machine, it's per virtual CPU per minute. And then Windows server virtual machine, per virtual CPU per minute or the base VM fee, plus bring your own license, which is like the Azure hybrid use benefit. And then Azure storage is per gigabite, with no transaction fee. And then Azure app services, you know it as web app, mobile app, API apps or functions. It's per virtual CPU minute. So then for patching and update. So, pre-validated updates for software, basically features and security, firmware, and drivers are from Microsoft and partners. So they're frequent updates delivered to a known cadence, but the customer chooses when to take them. And then policy dictates maximum deferral window. And then automated application of updates across its entire infrastructure, designed to minimize disruption of customer workloads. Though this aspect of patching and update has to be addressed, because there's a lot of software and there's a lot of virtual machines that run on Azure Stack, and they have to be updated and patched, and all of that has to be automated. And then geo-availability at launch. The Azure Stack will be available in 46 countries, covering key markets across the world. I'm not gonna read each one of these, but it's Americas, EMEA, and APAC. And then additional geo-coverage will be prioritized based on customer demand and logistical considerations. So all in all, Azure Stack is a pretty significant product for Microsoft. If you look at the NIST definition for hybrid cloud, Azure Stack fits that definition, meaning you have a cloud on-prem. And you have a public cloud. And they're both connected and integrated. It's going to be very interesting to see Azure Stack roll out across the globe. With that, thank you very much. 