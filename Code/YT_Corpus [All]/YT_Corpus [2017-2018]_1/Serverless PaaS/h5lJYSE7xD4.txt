 Hello and welcome to All About Apps edition from Cleveroad studio. I’m glad to see you all again. Today, the topic to discuss is backend development. With the introduction and rapid growth of Node.js framework, avaScript is no longer limited to front-end development. Now developers can build the server side of the apps using one of the many Node.js backend frameworks. Let’s explore three of them: Express.js, Koa.js, and Sails.js. These are MVC server frameworks and written in JavaScript. Therefore, they share the same advantage - they are compatible across various browsers, devices, and OSs. But how they differ and which one to choose for your project? The first framework in our list is Express.js. It is lightweight, flexible and provides a wide range of functions for building single-page, multi-page and hybrid web apps. This framework makes the creation of websites and apps very simple. Numerous members of Express.js community claim it is a good, thoughtful and powerful tool, despite its self-positioning as a micro-framework. The other advantages of Express.js, middleware and routing, simplify the testing process and improve app performance. Express.js API also took advantage of the Node.js manager package node to distribute and install countless third-party plug-ins. However, there is no recommended method of organization and many manual labor-intensive tasks are involved. It can affect the memory usage if not handled professionally. Middleware frameworks, like Express, are suitable for small and medium projects. If you are going to develop a large project that will be supported by a large team of developers, Express.js is not the best choice. As for the usage examples, was used as a middleware framework for MySpace, PayPal, and Klout sites. Our next subject matter is Koa.js. It was created by the development team behind the Express.js framework. Koa.js is focused on creating web applications and APIs with improved performance. Koas main advantage is the usage of ES6 Generator. It is an excellent way to avoid callbacks, help developers to manage the code easier and handle errors efficiently. Koa.js is more lightweight and more modular than Express.js. That’s why it’s a great choice for first-timers developing Node.js servers. However, Koa is rather unstable and doesn’t have enough community support. And finally, Sails.js. It is based on the MVC pattern, like Ruby on Rails, but also supports the requirements of modern applications: software interfaces with a scalable, service-oriented architecture. It’s advantages are: A large number of automated generators It requires no additional routing Transparent to Socket.io Lets build our Rest APIs quickly. Sails framework is best suited for creating data-heavy enterprise-grade apps. This framework is especially suitable for the development of chat rooms, real-time toolbars and multiplayer games. Let’s now move to the most important question: How to choose best Node framework for your project? The choice highly depends on your project and the goals you pursue. Nevertheless, wed love to share our experience to help you make your choice. First of all, you should pay attention to the following criteria: Community Documentation Versions upgrading Scalability System resources loading Performance Simplicity of development and testing Availability and variety of modules Customization At Cleveroad we have built over a hundred apps with the Express.js framework. It has vast and active community of developers, sufficient documentation and provides transparent development and testing process. Well, this is all for today. Hope this information shed some light over the reasons we choose Express and helped you get the difference. If you want to get the detailed information, check the full article at the Cleveroad blog. You can see the direct link below. Next time we are going to talk about the most popular programming languages in 2017. Don’t mis it! Have a great day and don’t forget to subscribe! 