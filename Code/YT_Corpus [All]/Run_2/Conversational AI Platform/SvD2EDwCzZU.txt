 In this video we're going to build a simple bot. It'll say "hi" to us and ask us for our name. Aalong the way we'll also learn some of the fundamental concepts in bot building on the Meya platform including flows, states, components and intents. Let's take a look at what we're building. Here is the final result. We'll be able to say a variety of greetings so, for example, "hi". And it will respond to us and ask us for our name. And when we enter our name, it will respond, and it will actually use our name as part of the response. Let's take a look at some of these fundamental components that we use to build this bot The Meya platform provides a number of built-in intent types for example you might use an NLU intent that lets your bot use natural language understanding to intelligently detect a user's intent from a broader variety of input. Or you might use a catch-all intent that lets you handle user input that doesn't match any other intent. This allows your bot to gracefully handle a user's unknown intent with a friendly message instead of simply not responding. Or you could use a keyword intent that requires the user to say an exact word or phrase to match the intent. One possible use for this is if you have hidden flows that your developers use for testing and debugging purposes. You can make the keyword something no one will type by accident to make sure that only your developers can access the flow. Intents are core concepts in bot building. They are used to determine which sequence of actions your bot should perform. You can find a full explanation of the intent types available by going to the documentation page and taking a look at the intent types. On the Meya platform, we refer to a sequence of related actions as a flow. Each action is called a state. Each flow may have one or more states, or actions, that the bot will perform. Here are a few example flows your bot might have: A welcome flow that says "hi" to the user, asks them their name, and stores in a database your bot can access from other flows; a create a reservation flow that asks the user for the time they want to reserve a table at your restaurant, how many people they're expecting, and their phone number, and makes an API call to your reservation platform to save the data; a transfer to agent flow that allows the user to talk to a human agent, if necessary. Remember each flow should have its own purpose. This will make debugging your flows easier as well as moving from one flow to another. Remember: there are no limits on the number of flows you can have. A state can either use a component or start another flow. Components describe the action your bot will perform. In Meya there are components to display text and images to the user, or ask the user to enter some text, or mark the location on a map, or upload an image. There are components that will set and read information about the user from your bot's database. You can even schedule a flow to occur at a later point in time. There are many more actions your bot can perform using the built-in set of components. And if those aren't enough, you can even develop your own custom components using Python. You can also use states to launch other flows. In this way, you can have flows nested in flows. Your first bot won't be that complicated, but it's nice to know what's possible. So what is a transition? The most basic flows follow a linear path like this one. This flow has an intent called "open_chat" that launches the flow, or sequence of states. It begins with the first state, transitions to the second, and finally the third. The actual flow code looks like this. By default, your bot will perform the next state, or action, in your flow until it reaches the end of the flow. More complex sequences are possible by explicitly telling your bot which state to transition to and under what circumstances. Transitions tell your bot what state within the flow to execute next based on the value of a variable, a user's input, a button click, and more. Let's take a moment to review what we've learned. Bots can perform sequences of actions called flows. Your bot will wait for the user to perform some action, determine the user's intent, and launch the appropriate flow. Each flow contains one or more states, and each state can run a built-in component, a custom Python component, or launch another flow. Now that you know the fundamental concepts used in bot building, let's take a look at how to build the bot I demonstrated at the beginning of the video. Once you've created a new bot, you'll see the bot dashboard. It looks like this. Click the "Add First Flow" button. We're now in Bot Studio where you'll be developing most of your bot's code. The first thing we need to do is add an intent that our bot will listen for before launching this flow. We want the bot to be able to respond to any form of greeting, so let's scroll down and choose the "greetings" intent. Some of the other intent types have settings that will need to be set. The "greetings" doesn't have any, so let's just click OK. Let's select this code and delete it. The first step is to specify the name of our flow. It needs to be unique because it's also the file name for this flow. Let's call this flow "welcome". We'll then specify the list of states or actions that our bot will perform. The first thing our bot should do is say "hi" to the user. From the "Basics" menu, choose "Text". We'll change the name of the state to reflect what it does. In this case, I'll call it "say_hi" Here's the name of the component that we're using: meya.text It has one property we can set. Some of the other components have multiple properties, though. Let's say, "I'm a friendly bot!" Okay, the next thing our bot should do is ask the user for their name. Go to the "Inputs" menu and select "input string". Again, we'll change the name of the state to reflect what the state does: "ask_name". This component has three properties you can set. Let's start by asking the user a question: "What's your name?" We'll store their name in a variable called "name", and we'll store it in a database called "user". The third thing our bot will do is respond to the user using their name. Go back to the "Basics" menu and select "Text". Change the state name to "say_name". Replace the text with something like, "It's nice to meet you". To include the user's name, we'll use something called mustache syntax. It looks like this. Notice that we're specifying the "user" database, and the "name" variable that we just stored there. All right, we have everything we need. All we have to do is click "Save". You can also use the keyboard shortcut command-S or ctrl-S. All right! Our bot is done. Now it's time to test it out in the chat test widget on the right hand side of bot studio. Try entering a greeting such as "hi". Your bot should respond "Hi, I'm a friendly bot. What's your name?" We'll enter a name. It should respond with your name. Congratulations! You just built your first bot. For more tutorials, visit our documentation page. We can't wait to see what you build next. 