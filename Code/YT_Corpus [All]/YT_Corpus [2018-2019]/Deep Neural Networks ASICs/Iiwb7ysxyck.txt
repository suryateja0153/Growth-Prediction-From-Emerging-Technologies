 We have one more speaker for today, I'm very excited to introduce to you, and that is Albert Greenberg. Albert is the Corporate Vice President at Microsoft. He's in the Azure Networking Group which is the team that develops engineers, and runs all of the systems and tools that power the Microsoft Cloud Network. He is well-known as an author and a researcher himself. Multiple awards including a SIGMETRICS Test of Time Award. He's a veteran of both Bell Labs and AT&T, where he was a principal in developing a lot of the systems and tools that AT&T used to run its network, and has done foundational work in developing the architectures and systems that are part of software-defined networking. So, Albert joined us in 2007. He joined the Azure team, I should say Microsoft Research in 2007. He joined the Azure team in 2010, and he's here with us tonight. So with that, thank you for joining, Albert Greenberg.  Thank you. Hi. So, it's a pleasure to talk to you about startups. The startup that we're on is doubling every year, and it's an amazing journey. By the way, thank you for coming. I see a lot of faces that I recognized in the audience and we have a beautiful new space. You'll find that we're open and I'd like to see you more often than just in this room, and hopefully, spend more time with you. So, I'm going to try and describe the challenge of building a Cloud and the expectations that we have for the Cloud. It's really exciting to be on this journey to build the Cloud. We see it as the platform for all the world's computing. It's a very inspiring task to build and we see so much workload pouring on at mission-critical workloads, hospitals, police forces. Interacting with groups like that where they take reliability super seriously inspires us to even take it more seriously and understand what they mean by reliability and then embody that in our DNA. So, I'm going to talk about reliability and convince you, I hope, that reliability is the coolest thing that you could work on. Let's see, is that go? Okay. So, one thing that at Microsoft we do and I do in every one of my staff meetings, and every one of our technical meetings is talk about not just deep tech but deep culture. So, I'm going to do that here and I'm not going to bury it at the end. I want to talk about culture on the first slide. Do a little bit of that. Then I'll talk about the Open Platform we're building for the Research Community, and then give you some view of what Azure scale means, and what it means to build a mission-critical platform for all applications on the planet, and how would that cause us to rethink things on networking, and what an amazing opportunity we have to rethink and rebuild networks. I'll just pick two things. I'll pick how we rethink device firmware and how we rethink design and operations. Okay. So, let me talk a little bit about culture. Again, we take it super seriously and we talk about it all the time, and the connection to reliability is clear that monocultures are risky, right? Monocultures people believe in the same vision and they agree with each other and they get it wrong, and I've seen it again and again. Diversity in our team delivers creativity, innovation, and lowers risk. So, yeah, I talk about diversity all the time. We have a long ways to go in our industry, but also the encouraging thing is we're putting a focus on it. So, for example, when we spin up new teams and new initiatives, we'd set as a target 40 percent diverse hires, and we hit it. So, we can do it and it's great, it's working out for us. We're not there yet, we're trying to get better, but wanted to give you that update.  My favorite aspect of working on the open network and UMD user interface, was that I got to learn how to use AngularJS in the building of a website. The great communication and unity of my team was what help to perfect my skills that I have learned.  Microsoft project was an interesting blend of formal verification and emulation. I love the fact that I could work at the intersection of cutting-edge research and engineering that to add an Azure scale and that's what excites me the most and brought me back in a full-time role here on the Open Network Emulator.  I should have given you a little bit of preamble before showing the video, but that was a video of an intern we have now and an intern that, I think I saw her in the room, that created the emulator that I'll tell you about. So, one thing that we want to do is encourage you to collaborate with us, work with us, and continue to send us interns. I can tell you in my team alone, we're hiring 90, nine-zero college hires, that's our target in the U.S., and more in other places around the world. Okay. So, we spent just 7.5 billion recently for a company called GitHub. We are committed to Open Source and this is just the, what we call the NASCAR diagram of the different Open Source products we have. I was glad to see Databricks. Databricks is one of the customers and they are also based on an Open Source Project. So we are, it's the new Microsoft, we're open, we love Linux, we love Open Source. I think the GitHub acquisition speaks 7.5 billion times. So, one thing I want to announce here today really is the the open sourcing of an emulator that I'll tell you about called the Open Network Emulator (One) and it's a little bit of a pre-announce, it'll be available January, 2019, and I'll tell you about what it provides for you and I hope it'll excite you. It'll provide you a way to really emulate Cloud scale and I'll tell you what I mean by emulation in a minute, and it provides hands-on experience for students on the real router software. I'm talking about thousands of routers and switches in Real Networks and create large-scale labs on-demand. Test your next research idea and go as deep as you want in building networks and they're the real networks, but you don't have to buy the hardware. You can run all this stuff on the Cloud, our Cloud. So, and this emulator supports both commercial. Now, the normal sets of companies that you think have been networking and our own Open-Source switch firmware called SONiC. The word virtual's in here, it's the real thing, it's not modelling or something like that, it's the actual software that runs on the device and it'll be available in the marketplace. Just start it, portal.azure.com, and you'll find it, and there's the contact. By the way, I'm albert@research- no, I'm albert@microsoft.com, excuse me. And you can email me for other things, okay. So, let me tell you a little bit- Azure scale, Mark Russinovich may have gone through some of this. What it means, these numbers I have to update all the time, because if we keep growing, I think the left at the bottom of Africa, we just added some new data centers and regions. We're in 54 Azure regions, we're all over the earth. We've deployed 70,000 miles of fiber in 103 locations. We have 130 global edge slides. These are the outer ring close to the metros, where we can reach the rest of the internet. Just a fun fact that we think, that we are such a large network we deploy more technology than any Telco you can think of and probably any cloud you can think of. So, we deployed more for example, 100 g dense wavelength division multiplexing links this year than the rest of the industry combined. So, we are building a huge network. Areas of innovation, one that I'll talk about today is we take an algorithm and data-driven approach to network design and operations and it's deep. It's not us modeling on the side, it's in the guts and the actual mechanism how we run and design the network. We innovate an optical technology, this thing would have been cost prohibitive if we had just used off the shelf technology and we innovate in our own software defined network. I hope some of you or your interns get a chance to visit one of our data centers just to get an idea of the scale. It's an incredible scale, so there's Dave Malts and that little car down there with a circle around it, just kidding. But that's the scale thing there and there's the big data center it's enormous scale and that's just one of the data centers in the region. In terms of mission critical, again I'm going to talk to you about reliability. We support 90 percent of the Fortune 500 on the Microsoft cloud. These are just some of the names but it just brings home that reliability is so key. These people haven't just taken their small test labs or something like that and put it in the cloud, they put their core business in the cloud because it doesn't make sense to build it on prem and they support the- lot of things are born in the cloud and other things are connected to the to the premise but this is how these companies build and run their their world and its how again the critical government and medical infrastructure runs the world. Right, so we connect to a lot of, we have a private connectivity offer that is taking off like crazy. Where you want to have one relationship with Microsoft with different access providers. These are some of the access provided where you can get private connectivity straight to the Microsoft Cloud and this chart is also growing. So, we reach everybody with high-speed privately and an over internet. This is just something I often show and we believe in Azure. Now, what is the hierarchy of needs for the cloud? What are the basic things? It's all about, at the bottom you have to be secure, if you're not secure then you won't trust running your your critical apps in the cloud. So, that's at the very bottom and we spent a lot of time on security constantly. Reliability is one I'll talk about today. It has to be supportable, you have to be able to just use it and it has to just work with that a lot of thinking and trying to figure it out calling us up and it has to work the way you expect it and it has to be fast. So those are my priorities and in this talk, talk about reliability. I'll talk about just two, there's a wide set of work on reliability, but I'll talk about the device firmware and talking about Sonic which is on GitHub and I'll talk about the network emulator also on GitHub. Will be on GitHub for you to download. Okay, let me start with Sonic. So, if you think about the world of networks it's changing in a very exciting way. So, it had been that you'd buy this monolithic box from a networking vendor and all the things that I highlight here in blue you would not have. You really want to run your networking and consume your software the way you do cloud and other computing artifacts. You don't want a big proprietary box that you can't change and grow. So, you want agility, you want to be able to- we, in the cloud we ship weekly. When there's a bug we take care of the bug right away within hours or as fast as we can roll it out bug fix. It has to be serviceable. There's something that I don't know if academia studies enough. Serviceability it's so critical. You have to be able to update, it goes with reliability and the velocity. You have to be able to update without anybody noticing you have to be able to update all the time. Things have to be modular, so you can do these Hitler's upgrades and restart. It has to be as simple as use a normal sort of container update to reload the OS image. It has to be something you can already do and reliable up which I've talked about. So, two things here, one is, we're getting a lot of help from the industry so there are these companies that are producing amazing merchants silicon. These are ASICs that are fairly cheap and can do everything you'd like to do in networking, they have super high speed, they have lots of ports, they have the right kind of buffering, they have incredible capabilities hidden. You may not know about them but the ASIC supports them and if you can just get access to that ASIC and at the same time you want to protect, you want to protect your software that runs above that ASICs, you need some sort of hardware abstraction layer that allows you to plug in any ASIC below, your software keeps working. But you can still get to the unique features of the basic below. We have something called switch abstraction interface which provides that and I'll tell you it's really working out. So we can we don't have to go with just one ASIC vendor, we can go with several. It's again Open-Source, go to GitHub, pick it up. It's Open-Source, it's supported through the Open Compute Platform. Provides essentially the.H files for your code. Common APIs which are then implemented by drivers beneath it depending on the ASIC. It supports disaggregation you don't have to buy this monolith you can get the ASIC by the board, get the whole thing manufactured and build your own router. And so, the software and hardware can evolve independently and there's an open community around it. So, above this SAI, we have something which was definitely named in a different way so you would remember it called SONiC, and that's the software that really operates the switch and that's what we use in Azure. So, it's also available through OCP, it provides everything you need in terms of functionality. I'll tell you a little bit more but it really allows you to run your network devices like you'd run a Cloud service, like you'd run software in general, yet you can do networking. So, it really opens up the world to be able to change things and get at the power of these ASICs and really enjoy the disaggregation that the industry is providing. So here, this is just the kind of network we build to support our regional networks. It's a class style network, classes at Bell Labs mathematician in the 50's that figured this stuff out and did a good job. So, there's a lot of regularity here, a lot of power here. So, it's like RAID for networks, you have lots of components. Things can fail, it's okay because you've got more things that are working, yet you can have a full bisection bandwidth. Basically, you can go from any point in a region to any other point without congestion. You need software running on those switches and that's where we run SONiC. So it shows the SONiC software there. Now one test of you're really managing your software like you would manage software services, just stuff works that you'd expect to work. Like down at the bottom, there's RedisDB. It can be any kind of caching service you want. So, in networking, the very simplest things like getting counters out of a box, in the old school world there's this protocol called SNMP. Back in the day, 20 years ago when it was invented it was awesome, but now every time you want a single column in SNMP the ITF meets, maybe they don't accept or maybe they do. Maybe you beg your vendor to get it in, maybe they do, maybe they don't. It's just counters, what's the big deal? So, you can just reflect, you can put a Redis agent on the switch and it can just export whatever counters you need, and push-pull, all those options are yours. So, there's the typical networking applications on top of the operating system, as well as, orchestration software and telemetry software: Ansible, which we use, Puppet, Chef, and so forth. So, we wouldn't do this project if it didn't improve reliability. So today, we don't have control if we go to a commercial vendor. We're convincing, we're building the world's biggest Cloud, we have big pockets, wallets, or something. But we can't control the quality of what goes in that software. SONiC gives us that control, and then really, it's still hard work, software's hard. But we don't support every feature, we just support what's needed for the Cloud applications. So, we minimize the baggage that goes along. Then we're free to pick and choose, cherry pick what what software we want to go with, and every Cloud provider that consumes SONiC and every one of you, if you can send SONiC can pick your software. Hit this upgrade is huge for us, we want to be able if there's a bug take care of it, if there's a feature we want take care of it without you as a customer noticing. So, we can fix bugs and do fleet wide security patches in hours and new features in days. Yeah, we put the pressure of the entire cloud on the software so it's battle tested. Open Source. So, it's working out, as I said, we have a lot of community. We've spent time on community in the top right hand corner of some of the companies that are also heavily invested in SONiC. We work with the other companies to run their software in the SONiC framework. In the middle right, my right, companies that do the ODM world. They build the devices that make up the hardware of the switch. As well as on the left middle, the OEM world, some of them anyway like ARISTA that build a device and sell it directly. Then below, we have all these ASIC manufacturers and Cisco as well, all part of the community. So, really it's an invitation to you. If you like networking or you think you might like networking, you want to experiment networking, you can consume SONiC. It's very pleasant I think, it's containerized, it's Docker, and it's familiar, it's Linux. It's what you know how to do, you can just consume it and make it work. So, try it. You can find it by web search or you can just remember this GitHub URL. So, I'm going to change now from, we did this network firmware because they wanted greater control, we wanted to improve reliability, and we wanted to take care of all the bugs themselves. We wanted just the features we needed to improve reliability but let's now think about the big network. Let's think, how do we build a network that is reliable by design and meet these goals, changes work as intended, is resilient, we minimize the impact of changes, it learns and adapts automatically, and we can verify with formal methods any gap between what we intend the network to do and what it actually does. You saw all those links there, there could be little defects in the optics, we have to be able to detect these little defects. Needle in a haystack type problems where we use machine learning. So, we have a set of projects and a set of collaborations with Microsoft Research. In fact, all this stuff that I talked about was either born out of or worked, we worked together with Microsoft Research to bring to Azure. I will talk about the top one and maybe the second one. But email me, again, it's Albert@Microsoft.com and I can give you the pointers to all the others. So, this is another slide about some of the challenges that we face. If we need a fiber nowadays or we need more capacity between two points, we redesign that whole thing. We run a boat, we pulled the fire across the ocean. Our team does that. So, we take on that, it's about as routine as you might say plug in an Ethernet cable. We run the boat, pull the fiber, and we're ready. But we have to be resilient to storms, typhoons. Fibers somehow gets the sharks excited, they like to bite the fiber. There's repeaters down there. Sadly, there's fishing that catches the cables and there's potentially sabotage. So, it costs a lot of money to run the boat out, to pull the fiber up, fix it, and sink it back down. So, we think a lot about optimizing for resilient design so that we don't have to rush the boat out. We have enough fiber in the right places that it's okay if some of these disasters happen. Netsim is one of the projects that allows us to understand the impact of any failure on the fiber. Okay. So, let me tell you about that a little bit and then I'll get on to the one network emulator. So, one theme that I want to convey is that a lot of the stuff we do in networking to make the network reliable is stuff that you cannot do without a Cloud. The amount of hours and the computational methods we apply are Cloud methods and we need VM hours to do this. So, we simulate- these are modeling, like math models simulations of the network covering literally millions of contingencies for every fiber of things that could go wrong, there's a pipeline here and timelines. So, think about if you use Azure, you're running Azure Batch every time you think of a project and you pretty much, and this is what the Cloud job is all about, you try to anticipate all the things that could possibly go wrong. Get that risk into the model and then simulate all these things and see if you're resilient to them. That's just routine for us. We run these simulations before we touch the network and before and as we design the network. Here's an example, we created a fiber path with partners and it's a bit unusual that it lands in Spain most of them land north of Spain. But it was, we want diversity, so we landed in Spain and so, we run it from the Virginia, DC area into Spain. Just in this case, we had to think about, as we design this thing, thousands of different possible combinations of ways to design and protect the fiber and minimize disruption as we went, and for that, we ran the NetSim simulator. So, it has lots of cool videos on the net that you can look for Marea Cable and you'll see different government officials and Microsoft Official talking about this cable. You can also find deep technical talks from my team on how we built this cable. Now, I'm going to talk to you about the kind of work, it's more detailed work. The kind of work that happens day to day in operating a network. It's not a bad analogy to think about flying an interesting plane, except while the plane is flying, you're changing the plane and you're adding engines, and taking away engine, and the wings and wheels are also changing and so forth. So it's an evolving plane in flight. But the consequences again, the reliability, it's got to be there. The reliability constraints is so strong, there is no way that plane can go down or even be disrupted. We need an emulator, we need to train our people, we need to have the kind of confidence that when they're making a change to the network, and really, people's lives and work depend on it. That it's going to work, and so, we need something like a flight simulator. So, we built one, and I will tell you a little bit about it. This is the open source thing that you can consume starting in January. You can simulate a network with fidelity, you won't be able to tell. You can bring in your network engineer and let them go at it and give them a kind of a touring test. Is this the Emulator or just the the real thing? They won't know. You can do that with 1,000 devices in minutes. It's seamless, it's easy to deploy, and it's again, high-fidelity. So, do we use it? We spent 12 million core hours on Azure Network Emulator. Before I came here, we were running it for a big network migration we had to do. By the way, because of this emulator and the confidence it gave us, we did more network migrations. We changed everything in our network. We pulled more cables, we changed more routers and switches, we did more stuff to the network in the last year than we've ever done before. It was probably the biggest network migration in anybody's history and nobody noticed. But we caught 100 or so bugs in this Emulator, and that's why nobody noticed. The bugs never got to production. So, the way it works is, the network engineer describes a change in a machine-readable form. We automatically, could pick what vendor software we want, if it's the actual vendor software and our own software, then we download it into the Emulated Replica and run it. We also use theorem proving technology from MSR as well as the emulation, and we find out if the intent worked as we expected, the intended change. So let me try to click through this. I don't have time to simulate myself. Okay, so one problem you have with these emulations is, how big a network to emulate. Where's the boundary? Are you going to go for the whole internet? Where do you draw the line? Do you have to do the whole data center? Well, you need this fidelity, you need to be able to answer the question that, is this change safe? Is it going to have the intended impact? So, part of the research on this had been, how do I draw the smallest boundary? So I can answer the question without emulating the entire internet, and that's what we do. So, we pick the economic frontier and emulate inside it, and we do that all the time, and that's described in an SOSP paper from this year. Okay. Let me say one other thing about it. So, again I wanted to tell you how high-fidelity this, if you imagine like you're an engineer in one of these device companies, you don't expect your software to sort of go to sleep and wake up in the cloud and still work, it expects, hey, I've device, and I've got these wires, and I'm going to check the health of those wires and run some diagnostics. All that has to work. It has that software has to be faked out, and fooled, and understand that the emulated hardware is just like the real hardware, and that's what happens here. So that's part of the interesting engineering problems. Why does that work? It's because of the cloud, is because of virtual machines,. Same deal with virtual machines. Virtual machines think they're on real machines, is because of virtual networking. So, we had to figure out all that tech, that's why it works now, it didn't work five years ago, or ten years ago. We have the mechanisms because we can virtualize everything to full-fidelity in the cloud. We can also virtualize the networks into this emulator, and then use the Cloud to run the emulator. That's why it works. So again, try it, you can email the developers now to get early information about it and it will be on the on Azure market place. So this is an open invitation for all the work. Try sonic, try the emulator. All right. I think the appendix, which I'm not going to get to, has to do with all those other products we don't have time for. It's really an exciting opportunity to rethink the basics of networking. I don't know how to directly, or somehow chemically, or viscerally convince you that reliability is the most cool thing to work on, the most important thing to work on. But, if you start to think about changing all of computing to run in the cloud, and then just recourse on that, and think about, what does that mean? All the startups, all the already started Apps, all the work that you see pouring in cloud, all them, AI machine learning, then you'll see that reliability is really a hard problem and deep and takes years of work, and we need you to help us get there. All right, I'll wrap it up.  Thanks Albert.  All right. Thanks.  Thank you again Albert. It's amazing when you consider the scale of challenges and opportunity in networking that you're representing today. Hopefully, that gives you some potentially interesting point as to how to pursue your own research as well as to guide research and instruction for your students. So we are at the end of day one. Thank you for a fabulous day. I hope it was worthwhile, I hope you enjoyed it. Just take a moment before we head off to what I expect to be a really nice dinner tonight at the hotel. I want to give you a little bit of a recap of what we've done in a preview of what will happen tomorrow. So, I was really happy that we were able to announce here for the first time today and to give you input to some new fellowship opportunities, both the Student Fellowship as well as invite your input to the Young Faculty Fellowships, which we'll be bringing back soon. I appreciated the fact that Albert was pre-announcing for you all the Open Network Emulator One, that'll be available in January and hopefully, you caught the email address if you'd like to get a hold of that ahead of time. We had a lot of really top-notch plenary and breakout sessions today. I was super pleased with those, and again, thanks to all of the people who prepared so well to deliver on that. I hope you had an opportunity to enjoy some break time and to network both with old friends and to make some new friends. So, we have more of this to come again tomorrow. Tomorrow we'll be doing much the same, we have a one interesting thing though that we will add to. Tomorrow we have a technology showcase, which is actually going to be across the hallway tomorrow. It's a bit of a poster session. This show directly some of our researchers and the projects that they're working on. Gives you an opportunity to engage directly with them. We'll introduce you to those very broadly and what we call a lightning round, where we'll have and come up and give you just one minute overview, so you can get both the breadth of what we're doing, as well as have the opportunity to engage deeply with the researchers and the projects that we highlight there. Tonight, I'm looking forward to joining you all at dinner. Harry Shum will be there, Eric Roberts of course will be hosting. There will be a bag check at the hotel. So when you get there, if you're not staying at the hotel, you want to use a bag check, there's a bag check their. Buses will be be out front, we've got a couple of buses that are specially marked, that have a trivia contest on them. So if you particularly, want to or don't want to be doing trivia on the ride home. I had two jobs as I said, one of which was the weather which I'm hopeful it is still going well out there. You know there was traffic. I'm still working on that, but maybe Albert can help me with some of the traffic management that we have to do. But I am looking forward to dinner tonight, we'll hopefully have you as well for a group photo tonight, so it'll be a lot of fun. One other way I'd love for us to be able to say thank you to you is when you do check in, we'd love to provide you with a new smart speaker. So we've got the Harman/ Kardon invoke plus Cortana speaker as a gift for you also. Thank you again for joining us here today. The buses are out front, we will be back here at 08:30 in the morning. If you enjoyed what you heard today, be sure to communicate with us on all of those properties. Hashtag is MS facts some. We'll see you at dinner tonight and here again tomorrow morning at 08:30. Thanks for a great first day. 