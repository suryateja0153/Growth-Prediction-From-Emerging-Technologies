 This is the Raspberry Pi 3 motion detection camera. It's running MotionEyeOS, from a 16 GB SD card. There is a 16GB USB flash drive,also Inserted into the USB port. It is used to record images and videos from this 5 megapixels night-vision camera module. There is a 12 volts Cooler Fan attached to the casing of the Raspberry Pi. And this is the circuit for turning it on or off. The main power supply is this AC to DC 12 volts power supply the cooler can also work at lower voltages. The Raspberry Pi itself is powered by this 5 Volts buck converter which can be turned on or off by this circuit. Which,I made using Arduino Pro Mini. And when there is NO POWER available from the Main Power Supply everything is powered by this Battery Pack. Which I have made using these pairs of (NiMH) Nickel Metal Hydride cells. They are rated at 2.4 volts and 1300 milliamp hours. Their voltage at full charge is 2.8 Volts. This circuit also connects to the Raspberry Pi's GPIOs. But, the connection is not electrical, instead, I have used two Optical Isolators to Signal the Raspberry Pi to Shut Down and Get a Signal Back from the Raspberry Pi to see if It is running or not. Same Optical Isolator is used in the Circuit for Turning the Cooler Fan ON or OFF. The circuit connects to the Power Supply and the Battery here.The 12 volts Positive wire from the Power Supply connects here and the Battery here and They go to this Bridge Rectifier, which has four diodes inside. Like this,The positive wire goes here and the battery here and Through Individual Diodes, They go to the Output Pin, whichever has the Higher Voltage will Go to the Output Pin of the Bridge Rectifier and through there to the 12 volts Cooler, the Voltage Regulator and the Buck Converter. This is the Five Volts Regulator and It is used to Power the Arduino and the buck converter Only Powers the Raspberry Pi and the Infrared LEDs, which I have not connected right now. The Battery Voltage is measured by Audino's Analog Pin. Using this Voltage Divider circuit with its R1 connected to the pin of the Bridge rectifier where the Positive wire from the Battery is connected. So, IF there is NO Power and the Battery Voltage goes Below a level, Which is set in the sketch running on the Arduino Pro Mini. Arduino's GPIO Pin Turns ON/HIGH, Turning ON the Optical Isolator and on the other side, the Raspberry Pi's GPIO Reads a LOW and it Shuts down. After that the Arduino starts a Timer and when the timer is Up, it Turns OFF this N-Channel MOSFET, Cutting the Power to the buck converter. Because, the buck converter's Negative wire is connected to the Drain Pin of the N-channel MOSFET and N-Channel MOSFETs Source Pin is connected to the common Ground, Where the Power Supply's Negative and the Battery's Negative connect to each other. This is the mosfet that I have used its FQP30N06L "L" stands for Logic and this mosfet works at 5 Volts. The Source pin is connected to the common ground where the power supply unit and the battery pack's Negative wires are connected to each other. The Negative wire from the buck converter connects here to the drain pin of the MOSFET. And through here it goes to the ground. the gate pin of the MOSFET is Pulled LOW by a 100K resistor Hundred Thousand Ohms Resistor to the Ground and is connected VIA 1000 Ohms or 1k Resistor to Arduino's GPIO. So, when the GPIO goes high, The MOSFET turns ON and allows the flow of current form the Negative wire of the Buck converter to the Ground. Arduino is powered by the 5 volts Voltage Regulator and is connected to its 5 volts output pin and ground pin. The Ground pin of the Regulator goes to the Common Ground of the Power supply unit and the Battery pack. The Input of the Voltage Regulator is connected to the Bridge Rectifier's Output pin. Battery charging is done using this PNP transistor and this NPN transistor, connected to Arduino's GPIO pin. The Emitter pin of the PNP transistor is connected to the Second Pin of the Bridge Rectifier, Which is directly connected to the Positive wire from the 12 volts power supply. The Base of the PNP transistor is connected to the Positive of the Power supply VIA a 22 K ohms resistor. 22,000 Ohms resistor.  And if you ignore the rest of the circuit in this state the PNP transistor will stay OFF because its Base and Emitter are, both at the same voltage. The Base is also connected via a 10k ohm resistor to the Collector of the second NPN transistor to form a voltage divider circuit, when the NPN transistor turns ON. The Base of the second NPN transistor via a 22000 Ohms Resistor is connected to Arduino's GPIO pin.So, when the GPIO goes HIGH then NPN transistor turns ON forms a Voltage Divider Circuit and the voltage drops at the Base of the PNP transistor and it also turns ON allowing the flow of current from its Emitter, which is connected to the power supply, To its Collector, which is connected to the Fourth pin of the Bridge Rectifier. The current flows from its Emitter to Collector and then through the fourth pin of the bridge rectifier, inside, the third diode, here, And then, the current flows through the third pin of Bridge Rectifier circuit. And goes to the positive wire of the battery pack and it charges the battery. The Voltage Is dropped in the diode, Just a little, but it's enough to charge the battery. Sensing, if there is Power available or not is done using this optical isolator. Inside the optical isolator there is an infrared LED on the left side like this and a Photo Transistor on the right side. There is no electrical connection between both sides of the optical isolator. The LED side has its Anode connected via, a 22000 Ohms resistor to the Positive of the Power supply, and the Ground pin is connected to the Common ground. on the Phototransistor side the Collector is connected to Arduino's GPIO and via 22,000 ohms resistor to 5 volts output of the voltage regulator the Emitter is connected to common ground. When there is Power Available, Photo transistor will conduct current and Arduino will read a LOW at this point, and when there is No Power available Arduino's GPIO will be HIGH. The circuit for battery voltage measurement is just a voltage divider circuit. I have used a 10 thousand ohms resistor for R1 and 2.2K ohms resistor for R2 and at the V out there is a 4.7. K ohm resistor connected to analog pin of Arduino Arduino and the RaspberryPi communicate with each other via two optical Isolators connected to the GPIO pins. One,of the two Isolators is used to signal the Raspberry Pi to shut down when the battery voltage is low and the second one is used to see if Pi is currently powered up or not. the first isolator on its LED side has its Anode connected to Audrina's GPIO via a 1000 ohms resistor, its cathode is connected to ground.On the phototransistor side the Collector pin is connected via a 22,000 ohms resistor to 3.3 volt pin on raspberry PI's header and The collector pin is also connected to a GPIO pin on the header. When Arduino's GPIO is LOW, which will happen normally, The collector pin will have a 3.3 volts voltage level and the GPIO will read a high When Arduino's GPIO goes HIGH the photo transistor will start conducting current and the current will flow towards the ground, the voltage level ,here, will drop and The BASH Script running on the Raspberry Pi will read a LOW at the GPIO pin and then it(Pi) will Shut down. The second isolator has its LEDs Anode connected via a 500 ohms resistor to the GPIO pin on the Raspberry Pi . and on the photoresistor side the collector is pulled up to 5 volts via a 22,000 ohms resistor and is connected to Arduino's GPIO pin. Arduino will read a HIGH when Pi is Powered OFF and when the PI is Working it (Arduino) will read a LOW. Finally, the circuit for switching the Cooler fan using RaspberryPi's GPIO and its internal temperature. I have used an NPN transistor BC337 as a Low-side Switch.The Positive wire of the cooler fan is connected to the positive of 12 volts power supply and The Negative wire is connected to the Collector pin of the first transistor. Its Emitter pin is connected to ground. Because it works at lower voltages, then the power supply's voltage, I Have used a voltage divider circuit using a (R1) 2.2K resistor and a 1k resistor(R2). V out is 3.75 volts and via 2.2 K resistor the Base is pulled up to it. The second transistor is 2N3904 with its Collector pin connected to the First transistor's base and its own Base is pulled up via 10k resistor. When the first transistor is connected in the circuit it turns ON and it turns ON the Fan with it. The Second transistor Keeps the First transistor OFF. To Turn ON the Fan,the Second transistor must be turned OFF using an optical Isolator with its Collector pin connected to the Base of the Second transistor, And the Anode of the optical isolator is connected to Raspberry Pi's GPIO via 2.2K resistor. Raspberry Pi's GPIO turns ON/HIGH and Opto-isolator turns ON, and it turns OFF the Second transistor, Turning ON the Fan, and when the GPIO goes LOW the fan turns OFF. Now,I have connected Arduino to a PC using a USB to serial converter and in the Serial monitor Arduino is showing that Power is available, Charging is ON, Load is OFF and Battery voltage is 10.70 volts. It has a countdown timer, after that timer is up the load will turn ON. Because, the battery voltage is above the "Load On voltage". If I remove the wire from the main power supply now, The timer will stop, and it will not turn the load on. I have removed the wire, Arduino will detect that there is No Power available and it's showing, That there is No Power Available, it has stopped the timer, and it will not turn the load on in this state. Now, I have inserted the wire again, and it's showing that power is available ,it has started the timer from where it had left it. and After the timer is up it will turn the n-channel MOSFET ON. Now, only 20 seconds are left. After that time is up the load which is this buck converter, connected to the Raspberry Pi, will turn ON. The Load has turned ON. The buck converter is now on and the RaspberryPi is BootingUp. Camera has also turned on and it's recording videos. It takes a few seconds for the RaspberryPi to turn on it's GPIO and Audrino is now showing that the Pi has turned ON. Otherwise, if the Pi is Not ON, arduino starts a Reset Timer and after that it will reset the RaspberryPi. It's useful if you PowerOff the RPi,Arduino resets it and Powers it Back Up Again. Now,in this state when the Raspberry Pi is working, I'll remove the power from the main power supply. And you can see that it's still working on battery power. Arduino is showing that there is no power available, and it has started another timer. If the timer is up and there is no power available it will signal the Raspberry Pi to shutdown. but if the voltage drops first, below a certain level, below "PiOFF voltage" ,in the Sketch, it will signal the RaspberryPi to shut down according to that voltage Level and if Power comes back again and Raspberry Pi is off. It will reset it and it will turn it back on again. All the settings are in the Sketch. I will put all the links in the description. Please Like,Comment and SUBSCRIBE.bye. 