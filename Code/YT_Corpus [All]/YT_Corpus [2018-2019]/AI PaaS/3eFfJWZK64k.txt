 - Coming up, we take a look at strategies to migrate to Microsoft Azure spanning zero to higher levels of coding, and when to use which. From rehosting your apps by lifting and shifting them to Azure to choosing to refactor your apps for greater efficiency, rearchitecting your apps to be able to quickly add new capabilities or taking a cloud-native approach by rebuilding them from scratch. We show you how you can use Azure Migrate to plan your shift to Azure. And if you're concerned about the approaching end of support for Windows Server 2008 R2 or SQL Server 2008, we'll look at new options with extended security updates in Azure. (upbeat electronic music) So I'm joined today by Jeremy Winter from the Azure Compute Team. No stranger to Microsoft Mechanics. Welcome back. - Yeah, it's great to be here. Thanks for having me. - So the premise of cloud computing has been with us for the past decade, and this approach to computing is now pervasive in everything we're doing. It's no longer a question of if or when to move to the cloud; the bigger question today is how. - Yeah, and that's absolutely right. I mean, we are in that cloud era now. And if you haven't really looked at Azure, you know, for a while, Azure's really evolved as an open platform, where you can bring your Linux, your Windows environments, as well as your own tools of choice. And, you know, within the cloud, in many cases, you have more options today than if you did everything on-premises. You know, even if you just think about Azure from a leverage, just leveraging on our elastic compute and the scale, right, it just really helps you scale out on the needs of your apps and your resources. We also operate the service globally in a way that meets the requirements of your industry and regions, and we give you the control so that you can meet those requirements with the apps that you build on Azure. - So that's all great, but what about security? (Jeremy laughs) - Yeah, well, this is where you'll see, I think for me, I think it's the most significant advantage compared to on-premises. Azure has teams dedicated around the clock whose responsibility it is to bake detection and security directly into the platform. You know, and combined with machine learning and the AI, this equips you with the proactive insights and anomaly detections on the latest vulnerabilities and attacks, just baked right into the platform. And with Azure, you don't, the additional advantage is our strength with delivering that consistent hybrid cloud, where you can make the choice of which workloads and data that you keep on premises, and even, you know, even running in the hybrid cloud with Azure Stack. - And of course there are many pragmatic reasons why you may looked at a cloud. Might be your organization wants to expand into a new market, or you just need to innovate faster. - Yeah. The main point here is being that the cloud is now a viable first choice, and in many cases, the best option. - Okay, so there's a lot of good reasons for shifting, but how easy is it to take advantage of the cloud with Azure, especially if you've got existing on-premises investments, and how should people break down the challenge? - Yeah, yeah, absolutely. Our goal is to make this super simple for you, and it really depends on what you need to do with your app and what your goal is for the business. It really depends on that, whether you're rehosting, refactoring, rearchitecting, or just completely rebuilding. So let's just kind of start by assessing the typical app, and I'll walk you through potential migration strategies and how we support you in Azure. So, let me show you, as we dive in, we've got an app here that we've got for the demo for me to show you some of the different ways we can do the migration, and this is a smart hotel app. And if you think about it, it just allows me to come in and see my different customers that are coming in, and the point for this is it's an on-premises app. It's local into my hotels that I'm able to go manage my business with. Now, if I look at where this app is running, it's actually, as I said, on premises, but it's sitting inside VMware, inside of vSphere, and as I run through this, I can see, anyone who's familiar with vSphere can see, here's the different apps. So I can see my, the machines that are in the environment. I can see my web apps and my database app. But the point here is that everything is sitting inside VMware as I traditionally would have in my on-premises. But let me go over here and shift to what's going on with Azure and inside Azure. Inside Azure, we have this notion of migration projects, and with migration projects, this allows me to go look at all my migrations in one spot, just natively inside to Azure. In here, I have a smart hotel migration. Now this, when I go into here, it allows me to see all the machines. It looks at the assessments, and this helps me really see what's going on in the environment, and I can go discover, is I clicked into that discovery. I can quickly just see all the machines, and, you know, these machines match what we just saw inside VMware, and here, I can look across the cores that exist. I can go see the memory and the storage and the different operating systems like SUSE and Ubuntu here. And so the goal when I start to think through this is really getting that view of just what exists inside the environment. But let me go over here and show Overview, and when I click on Overview, I'm able to come in and see just the different projects and groups. And so I'm gonna go click on this hotelsapp like I just did. Inside the hotelsapp, I can see a variety of different elements with the hotel app. But my key piece I'm doing is I'm wanting to select those dependencies. What dependencies does is allows me to just see that now I have a tiered app. It's a two-tier app with a basic SQL world here. You can see I've got the SQL. I come over and I have the web apps themselves. And so this just let's me see how my app is constructed. It's a simple one, but it's a simple hotel registration for this. And so that really gives me that construct. - Cool, so Azure Migrate is generating a high-level dependency for you based on the network topology of this application. - Yeah, absolutely. And when we look at the network topology on this, it allows me to, you know, I can use TCP/IP to go look across the different dependencies. It also allows me, one step further, it lets me see the processes that are running inside the hosts or those virtual machines so that I know what needs to be moved and what's running on those specific machines. - Okay. So why don't we talk about some of the strategies that we could take for this application? - Yeah, so, why don't we start with just, the first one is a rehost, right? This is a great option if you wanna redeploy an app and take services without modifying any code. And so, I can quickly, if I just look at this front end, it may just move these things up to the cloud simply. It can just literally move them up, but it's running on Azure infrastructure as a service, just like it was running on your own hosts at home. - So I don't need to code anything. I can just move my VMs as is from my virtualization host straight into Azure. - Absolutely. Simple configurations after that just to make sure you're setting up the network, like it was running inside everything like it was in your own data center, and maybe sometimes a few changes of your database connections, if you've changed some names of your databases. - And while you don't have code changes with IaaS you still need to manage and secure your VMs and resources just like you do on premises. - Yeah, yeah, right. In fact, you know, that native management is just one of those things, the native management in Azure that we've done many shows and topics on that you can check out. - Okay, so what if you wanna make a few changes to the app and get out of the business of worrying about the underlying infrastructure and the VMs that you're running? - Yeah. This is where you have a few choices here. So let's take an example of these front-end servers that we have that I'm showing you here in my diagram. They probably are running some HTML and some other light logic. Now, I could refactor the app with minimal code changes, and we could look to optimize those resources for the, on the Azure platform as a service capabilities. Now, I can use the Azure app service, which is a fully managed service, with the resources I need to run on my front-end, or I can repackage these as containers to get more efficient compute and scaling, and we have several services for that, including the Azure container instances and our recently launched and globally-available Azure Kubernetes service. Also, in both these cases too, for rehost or refactor, I can choose to migrate my database tier to Azure SQL Database Managed Instance without any code changes, and we run those for you. - Nice, nice. So you're still sticking with what you've got. You're just repackaging and getting significant advantages such as portability, and as you mentioned, better use of your compute resources, but what if you wanna be able to change and update components of that app? - Yeah, so now another option would be just to rearchitect the app. And here, we can start to rearchitect the app into microservices, and that allows me to break this down into much subcomponents. And I might, you know, for example, I might wanna separate the billing part of the app, separate from the room scheduling, and that allows me to have these individual components, and the value for that is I now can increase the functionality or evolve the functionality of each component separately. It also allows me to use each component, and I can scale up the resources dynamically as traffic's needed during high-traffic periods, like my registration system, if I'm ever having a peak in the business. So that's where I think the value of those microservices really come in and let us bring those up into more microcomponents. - So what about if I wanna rethink and reimagine this application? - Yeah, yeah, that exactly. So that's where you would rebuild the app from scratch, using cloud-native technologies on Azure, including PaaS and Serverless If you want a more rapid development, and you wanna leverage unique capabilities like AI with Azure Cognitive Services. So, let's just take a look at, you know, but thinking about smart hotel, how cool would it be, for an example, if you reserved a room, and as soon as I showed up on the hotel property, it detects the presence of my phone, it automatically checks me in and configures my room locks to recognize my phone as the room key. This is the type of stuff you can do leveraging IoT and using functions and logic apps, and the underlying services here might be serverless. - Okay, so these are all great options, but let's start a rehost, which is probably the path of least resistance with almost no code changes that most people are gonna take. - Yeah, right. So this is still an awesome option on rehost, and you can always start to use some of the other options once you've moved to the cloud, and optimizing your app, you know, as you get better and further, more experience on Azure. So from here, in Azure, I really wanna dive back into Azure Migrate and show you an assessment that I've already created. So let's go back into the demo here. And as I move, I'm gonna go back to the hotel app that I showed you before, so out of this dependency map, and let's drop into the overall machines that I've looked at in the project, and let's go choose an assessment. So the assessment helps me really start to go look at what I'm doing and what apps and how I move them over and the overall cost, and so here, as you can see, I've brought in an overall summary of if my app is ready. So let's dive in and take a look if the app is really ready. And this does, it takes the data that we've collected, and we've made our own assessments of what are the right VM sizes that should be used, and we also look to see what's ready or not. And if you aren't ready, we'll flag those areas, and those will be areas you'll either leave on site or you'll start to go rearchitect or refactor. Now, the other key element we do here is we also allow you, we give you a suggested tool, and you can see, here's our suggested tools for how do you move your database over with the Azure Database Migration service and the site recovery for the servers. So let's go take a look at cost, because this is one of those areas that's on everybody's mind when they start to think about moving to the cloud. And here, you can see we've broken down your cost estimates for you. Whether it's from your compute or storage, it helps you go look and see, but one of the core areas we have is Edit Properties. And this allows you to go in and make your own changes and configurations. Now, this helps you make a change and focus on what type of VM series and what else you have. But one of the areas that I wanted to be able to show you is this notion of, I already have a license. I already have Windows. Now, the tip here is if you're going to save costs, if you already have a Windows Server or a SQL Server license, you apply that hybrid benefit, and you can already have up to a 40% savings. And you can see that change right here as the assessment reassesses those overall costs. - So your monthly run rate there dropped from $180 down to $121. - Yep, to $121, you bet. So that just helps you bring those costs down, if you already have those licenses for Server or SQL. - Great, okay. But are there additional options for those of us still running Windows Server or SQL Server 2008 and 2008 R2, which are both nearing their end of support? - Yeah, absolutely. You know, the good news, Matt, is that now you as customers get an additional three years of extended security updates for Windows Server and SQL Server 2008 and 2008 R2 when you migrate them to Azure. Now, these updates are provided for no additional charge beyond just your standard pricing of that Azure virtual machine. - Cool, thanks, Jeremy. So great overview of the migration options. How can people learn more? - Yeah, absolutely. So, you know, the best resource to learn how to apply these strategies and tools is in the Azure Migration Center. And also, you can check out the Azure Migration Series right here on Microsoft Mechanics. - Great stuff; thanks, Jeremy. And keep watching and subscribe to Microsoft Mechanics for the latest tech updates. See you next time! (upbeat electronic music) 