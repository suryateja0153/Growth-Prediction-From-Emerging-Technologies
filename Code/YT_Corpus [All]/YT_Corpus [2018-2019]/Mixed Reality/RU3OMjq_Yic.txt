 [MUSIC] Francesco Faggioli: Hey, everyone. My name is Francesco Faggioli, and I’m a Software Engineer in the Windows Mixed Reality team here at Microsoft. Matthew Hartman: Hi, all. I’m Matthew Hartman, and I’m also a Software Engineer in the Windows Mixed Reality team. Francesco: Today, we’re excited to talk about a new tool to test Windows mixed reality PCs and head mounted displays, also known as HMD. Matthew is the designer and the developer for this tool, and we will him from him first hand. Matthew: The tool is called the HMD Exerciser Kit and is based on the already famous USB Type C Exerciser. We’ll put a link to that video down below. Francesco: Before we continue, let’s say that this session requires a basic understanding of what an HMD is and how it is used with Windows mixed reality. Please refer to the links provided at the end of this presentation to find more information about Windows mixed reality. Matthew, let’s jump into the details of what this tool does. Matthew: Okay, let’s dive right in. With the HMD Exerciser, we can control the physical connections to the HMD. We can switch the USB and HDMI connections on and off or change what ports connect to the PC. We can also look at the state of the HMD. We can measure the brightness and color of the light coming from each eye’s display panel. We can measure the level of the audio coming out of the HMD’s audio jack. And we can monitor the USB current and voltage. We can also control the presence sensor of the HMD to simulate the HMD being warned or taken off. If you want to create a test setup with motion, we also included two servo connectors with a dedicated power supply. This is what an HMD Exerciser looks like. Francesco: Cool. Why don’t we look at each hardware component before showcasing some of the setup we brought over. Matthew: Okay, let’s go. The HMD Exerciser is composed of an Arduino, three stackable boards referred to as shields, and one separate board that fits inside the HMD and is connected with a ribbon cable. The shields are a USB Type A Connection Exerciser, an HDMI Connection Exerciser, and an HMD Exerciser Shield. On the bottom of the stack, we have the brains of the HMD Exerciser, an Arduino Mega 2560 or compatible board. This is the same base platform as a Type C USB Exerciser. Also similar to the Type C Exerciser is the USB 3 Type A Exerciser Shield. It has the same function of multiplexing USB ports, but we customize the board with Type A connectors to connect to the HMD without any adapters. On top of the USB Exerciser Shield, we have the HDMI Exerciser Shield. This provides the same multiplexing capabilities as the USB shield but for the HDMI connectors of the HMD. We created another shield that stacks between the Arduino and the USB Exerciser Shield. We call it the HMD Exerciser Shield. This provides two servo connections with their own dedicated power supply, allows audio input from the HMD, and provides connectivity for the HMD board. Francesco: Very interesting. Can you tell us more about the HMD board? I think it would make more sense when we put it all together with the HMD Exerciser Shield. Matthew: Certainly. We designed the HMD board to be mounted directly in a Windows Mixed Reality HMD. The main objectives for this board are getting information about the display. Are they on and showing something or are they off? And toggling the presence sensor to simulate the user wearing the device or not. Francesco: Okay, I see how this works together. If I add the functionality of these two boards to the USB and HDMI Exerciser, I can simulate the user plugging in and unplugging the device while also simulating the user actually putting the device on. Additionally, I can make sure that HMD displays are on and verify the hardware is working properly, all in an automated way. Matthew: Correct. Francesco: Could you show us how we mount the HMD board to the HDM itself? Matthew: Yeah. We get the ribbon cable provided with the exerciser and plug it into the HMD Exerciser Shield. Before we plug this into the HMD board, we lock the HMD board into the HMD using a 3D printed fixture. And then we connect the ribbon cable, and then the audio cable. Francesco: Matt, you were mentioning that we have capabilities to connect servos to the HMD Exerciser Shield. Could you give us an example of how we can use them? Matthew: Certainly. As you can imagine in the real world, HMDs and controllers are unlikely to stay still when in use. So, we’re providing a way to add movement to tests. By using a servo, we have the capability to move in a defined and repeatable way. Francesco: Why don’t we look at one of the setups we brought over from our lab. Matthew: Great idea. In this setup, we’ve used the two servo connections to automate the movement of the HMD and controllers. It’s hard to see how everything fits together in real life, so let’s take a look at a diagram of the setup. Francesco, could you pull that up? Francesco: Sure. As you can see, we have a Windows Mixed Reality compatible PC as the base of the test setup. Connected to the PC via USB is the HMD Exerciser. The HMD is connected to the PC through the HMD Exerciser, allowing USB and HDMI to be either connected or disconnected via software. The HMD board is mounted inside HMD and connected to Port 1 on the HMD Exerciser. Since we’re using motion in this setup, the HMD and controllers are mounted on turntables with servo control. Those servos are attached to the servo ports on the connection exerciser. The controllers operate to the PC using Bluetooth and powered externally. Matthew: Again, each part of this test setup is independent of the others. So, feel free to tailor your specific setup to your needs. Now that we’ve got the test setup ready, let’s go to the PC and run a few basic commands. Notice the HMD is enumerated on both USB and HDMI and we see the Cliff House. First, we’ll make sure we can disconnect the HMD via HDMI. And notice the mixed reality portal is going to come up and say to check your display cable. That means HDMI has been successfully disconnected. Now, we’ll try the same thing with USB. And now, mixed reality portal is prompting us to plug in our headset, so the HMD has been disconnected. Now, we’ll connect everything back together again and run some more test commands. Let’s check the brightness of each display. First, we need to tell the software which port the HMD board is plugged into. We’re using P1, so we’ll tell it Port 1. And now that we’re looking at the HMD on Port 1, we’ll check the brightness of Display 0, which is the left eye. It looks like the display is on. If it were off, the output would be near 0. Let’s check the right display by entering the same command with index 1. And that display looks like it’s on as well. Next, we can spoof user presence. Once we run this command, the HMD should report up to Windows that a user is wearing the HMD. And we see by the blue bar that the HMD thinks it’s being worn. Now, we’ll dismiss the HMD presence message. Now, let’s kick off a test script that uses the servos for motion. Francesco: This is awesome, and I see potential for many more complex test cases, Matthew. Matthew: Exactly. We want to empower hardware and software developers to create functional and stress tests to make Windows mixed reality headsets reliable. Given the HMD Exerciser Kit’s hardware and software capabilities, we see a lot of opportunities to increase test coverage. Francesco: This sounds very promising. Also, we should align that these tools can be used even outside Windows Mixed Reality. Well, we covered a lot of material today. Any final comments, Matthew? Matthew: We have more information on our MSDN page with descriptions of the setups we showed today and details of how to use the companion software. Information on purchasing is also available. Please do check it out down below. Francesco: Thanks for joining us and learning about the Windows mixed reality and the HMD Exerciser. [MUSIC] 