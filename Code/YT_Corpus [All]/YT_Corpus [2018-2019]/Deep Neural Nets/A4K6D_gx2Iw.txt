 what is going on everybody and welcome to part 6 of the deep learning in Python with tens flow and caris tutorial series in this video we're going to be talking about how do I use my model so a lot of people have been asking ok great we trained and tested our you know data set or whatever but like ok I've got some outside images how do I use these and make predictions on these so that's what we're gonna be talking about here we are going to be using the following the following script here that was our cats vs. dogs data set basically and we got 84 percent validation accuracy 89 percent accuracy so maybe he's beginning to overfit a little bit but that's okay and it was saved as a 64 by 3 Convenant now I guess I think I might even delete this I just want to show you guys that you don't actually actually need like your model so a lot of times like with tensorflow in order to load a model you actually have to define the model before you load in the model because generally the model itself is actually just some like weight definitions so you have to have the model there to like be populated and such a simple thing but chaos and I don't think testable has yet but chaos you you can just load in a model period you don't have to worry about defining the model first so it's pretty pretty nice and if this is your first time in the deep learning you probably wouldn't wouldn't respect that but anyways I'm actually just gonna delete this so just note that we saved the model 64 by 3 CNN model ok so good day so I'm gonna go ahead and restart and run all maybe yes sir ok so now we're gonna go ahead and do is begin working on this so what I've done is somewhere oh it's right here dude ok I've got some outside photos so this is a photo of my dog with the cone of shame he's got some staples in his face cuz he's stupid and then I've also got a cat here so these are two images this is my dog and he's not on Google Images as of yet and although once he's the tutorials maybe is and then maybe at some point he'll be in the cats versus dogs dataset but right now I can be 100% confident this was not in the data set also this is a creature that hangs around a house and because food gets put down in such and such anyways this is also an animal that is not in the data set 100% so this is true true testing of the data so what do we want to do well we are going to import see me too and then we're also going to import tensorflow as TF then we're gonna grab those same categories that we had before so we had it was dog and cat so basically a lot of this is the same kind of pre-processing that we had to do before and then some of it is like the reverse of what we had to do before so for example here categories well we did this initially so we could take the categories dog and cat and convert string dog string cat to numbers and now what we're going to do is is the opposite is take the number and convert it back to a string so we're gonna use the same you know categories list that we had before now we're going to define prepare and prepare is just going to take a file path as the parameter so this will be the image that we feed in so what do we have to do with this image well we need one thing that's to resize the other is we want to grayscale that image same as what we did before and I honestly forget I think in the videos I've been I did 70 so the images were resized to a 70 by 70 and I think in the text-based version I had started with like a 50 so yeah just make sure this is the same number you used moving along image we're gonna load in image if I could type image or a equals cb2 Dhanam read file path and then we want to read it in a CV to dot all caps em read grey scale so that converts it to grayscale now we want to resize it so new array and you could resize this like all in one line you can encase this and see v2 dot resize it just makes it kind of super long and hard to read CPT dot resize what do we want to resize one resize image array and what is the size don't make that a list it's tuple what is the size it's gonna be image size by image size so that's our new array finally we're going to go ahead and return that and we're gonna return new array dot reshape and we got to do that silly reshape that we have to do with chaos that one poops one day we won't have to do any more and I'll be telling newbies you should respect this back in Monday I had to do all the reshaping and it was super annoying okay so next good old guy boys so now we nice need to load in the model so TF chaos models load model and again this was sixty four by three - CNN model whatever you named it if you named it something different loaded in and again like I was saying this is really nice before you had to define the whole model then you load it in the model and if anything was off it just just blew up so this is nice so next once we've loaded in the model we're ready to make a prediction so we're gonna say prediction is equal to model not predict and then in here always always always you pass a list don't forget it predict always predicts against a list even if you just want to predict one thing and a lot of times you are just going to be predicting one thing and you're gonna forget that list and you're gonna like what the heck is going on so just remember that prepare and then we're gonna pass file path I've got dog and cat jpg so we're gonna do dog jpg first and then first let's go ahead and print prediction ah tensorflow cures it okay Cara's strike in do you took forever okay so the prediction here is a list of a list another seemingly useful thing a useful change and again this one I actually don't know if it's changed in tensorflow as well so for the longest time if you wanted to do categorical classifications you would need to use what was called a one hot array and now we can actually make these like sparse you know scalar classifications where it's just one value and that's really cool because now I don't have to you know you used to have to get the return and then do an NP org max or whatever whereas nowadays that's not necessary this just this does it for you which is pretty nifty the only thing I don't like about this is I can't apply a weight to it after the fact so maybe more on that later I'm not gonna get too deep into that but yeah you might not always want to do it this way anyway okay so we got our prediction now okay how long did that take right that that kind of that took a you know a few milliseconds right one thing to note is if you're loading in your model every single freaking time that's gonna take a while but if you just want to do the prediction part that's like it should be like nearly instant it should be very very fast and also keep in mind you can you can batch your predictions as well so there is like a thing called like tensorflow serving where you can I guess the idea is to for more of a production type server but I'm gonna be honest with you never used it this is what I use I just straight up use model dot predict it's very fast there's I can't imagine why you would need it much faster unless you're like Facebook or something or Netflix and you're trying to make recommendations to like millions of people almost at the same time otherwise I really don't know I don't know why you would need anything faster and in fact a lot of times this can actually be like you want to train on a GPU because you're trying to constantly be training batches of like 32 128 500 or more right so so you need a GPU but in general if you want to actually you know send a model to production a lot of times you can actually just run that model very comfortably on a CPU anyway enough that let's make this a little more pretty so prediction 0 0 that's just the number we could convert that to an integer make it even more pretty and then finally we can give it its most beautiful appearance by saying categories and make that the index in the categories boom now we've got a string look at us now we're gonna take this let me fix this little space come over here paste let's change cats and boom we've got our prediction of a cat again totally out-of-sample was not used for training 100% confident in that so pretty good so if you've got some pictures of dogs and cats go ahead and try them out obviously there will be some degree of error it was only about like a little over 80% accurate but on average it should be 80% accurate so it's questionable like is it 80% accurate and it does it like get dog and cat equally wrong 20% of the time or or is it actually wrong about let's say cats you know half of the air let's say it could be wrong about cats or it could be right about cats 60% of the time and right about dogs a hundred percent of the time and still give you that average eighty right hopefully that quick maths is correct someone let me know below if I screwed up but anyways obviously that balance could be way off right it could be this model could be really really good at predicting dogs and kind of an at cats or something like that so you want to check that stuff before actually using it in production but yeah okay so I think that's all for now a quick shout out and thanks to the recent sponsors actually they're called members now so thank you to Michael Nick Rodrigo and papasan E for your support I really really appreciate that you guys are awesome so anyway that is all for now if you've got questions comments discerns whatever feel free to leave them below if you've got anything more you want me to talk about or build upon on this let me know if I left anything out let me know the next tutorial I think is gonna be recurrent Nets I'm still trying to sign on like what kind of data set to use you know recurrent net is it's it's really for sequential types of data things like natural language or like time series data and stuff like that but natural language is very very challenging I don't really think I want to do that as a basics tutorial in and a lot of time series data needs to be quite complex before we can actually get anything from it so I'm not really sure what I want to do if you have a suggestion for a data set that you think would be a simple one to use with a recurrent net let me know otherwise I might wind up having to do like eminence or something like that because it's successful or we could do a time series with like stocks or something like that although a lot of times when I do stocks people are quick to tell me I don't like stocks okay it's just an example everybody okay so let me know in the comments what you want to see a recurrent net being used for and keep in mind has to be basic enough that hopefully I can get it done in one video most of the stuff I can think of that I would use recurrent Nets for or it's like a it's a meaning series of its own so anyways let me know below otherwise I will see you guys in another video 