 [MUSIC]  Hi, my name is Karthik Ananthakrishnan and I'm a Program Manager in Azure networking. In this session, my colleague Monica and I are going to talk about the work that we're doing with Azure Edge Zones, Private Edge Zones, and Edge Zones with Carriers. I'll start off the session with an world view of Azure Edge Zones and also talk about Private Edge Zones and the use cases in the partner ecosystem. We have a couple of cool demos to show you. Then my colleague Monica will talk about Azure Edge Zones and Edge Zones with Carriers. To set some context, we have been working for the past few years where we have been working with enterprises to move their mission-critical workloads into Azure. Now, we are seeing a reverse trend where with the technologies like 5G, where you need mission-critical applications running closer to the user, where latency and reliability are very important in terms of the reach between the end-user device and the application, we are bringing newer capabilities to the market. To that end, around the end of March, we announced Azure Edge Zones and the Azure Edge Zones with Carriers. These are multi-tenant Azure that are going to be in metros, and with Azure Edge Zones with Carrier, it's going to be one hop away from the 5G Core after telcos network. With Private Edge Zones, we are catering to the enterprise needs in terms of deploying private cellular networks. I'll start the session with Private Edge Zones, and my colleague Monica will talk through about Edge Zones and Edge Zones with Carriers. As we think about technologies like 5G, we believe that their enterprises using technologies like 5G is going to be in the context of private wireless networks. If you think about a retail store with frictionless shopping at the checkout, or smart shelf solutions to replenish inventory, or if you think about a smart manufacturing facility where there's going to be a lot of automated guided vehicles with a lot of metal and machines where Wi-Fi is not going to work in terms of the reliability, the capacity that is going to be available, we think that the enterprises are going to look towards private cellular networks. To provide a platform for enterprises to deploy private cellular networks, we have done some work and that is a platform that we are enabling with Azure Private Edge Zones. Let me go a little bit deeper into the capabilities that we are bringing with Private Edge Zones. Private Edge Zones is based on Azure Stack Edge. Azure Stack Edge is in one new form factor that the enterprises can deploy within their premises. It has native VM support and you can have a native Kubernetes containers to run your edge computing applications. The edge computing applications can be deployed right from the marketplace and the updates are completely managed remotely from the Cloud. What we have done, also done with Private Edge Zones is the ability to be able to orchestrate virtual network functions. If you think about a private mobile network, the core of a private mobile network is Evolved Packet Core. We are able to run the EPC network function on the Azure Stack Edge. We have also been working with other ISVs, who are bringing in networking solutions like the RAN, the routers, the firewall and the SD-WAN gateways, and we are able to offer these as an Azure service type of an offering from the Azure Marketplace. What we are trying to do with the Azure Private Edge Zones is to be able to run applications and network functions side-by-side so that you can take advantage of a private cellular connectivity, as well as each computing applications running in your premises. Moving on to the ecosystem of partners that we have built, we believe that building a private cellular network is not for the faint-hearted. To that end, we have built an ecosystem of partners who can enable the enterprises to build private wireless networks. If you look at it from the left, there is a lot of devices that can operate on a private wireless network. If you take a spectrum like Citizens Broadband Radio spectrum, there are a lot of devices that are coming into play that can operate on the CBR spectrum. Then we have partnered with the sim vendors basically. You see names like Gemalto and Mavenir here. We are working with Gemalto, Mavenir, and G+D to be able to get their operational sim profiles automatically provisioned on the devices. Moving on to the access points, we have working with CommScope and Nokia to provide access point technologies. We are building ecosystem of partners who can now run their virtualized network functions like the Evolved Packet Cores to run on the Azure Stack Edge. A couple of names that I want to point out here are Affirmed and Metaswitch. These are companies that provide a fully Virtualized Packet Core solution. To deepen our partnership with the telcos and to bring this clip release closer to enterprise customers, we have acquired these companies and we want to do a lot of innovation with this. With these capabilities, we believe that enterprises should be able to put together private cellular networks. We also have built an ecosystem of MSPs and SIs who can take advantage of this technology companies that we are bringing in, and they can offer and manage service offerings to enterprise customers. We also want to get this capability in front of the telcos, so the telcos can provide an end-to-end solution to you. Going into the specifications of the Azure Stack Edge that enables Private Edge Zones, we are launching a designate in New Skew, which is the Azure Stack Edge Pro. The Azure Stack Edge Pro is capable of supporting, it has a Telstra [inaudible] on it. You can have one or two Telstra [inaudible] that can support GPU inferencing at the edge. We have also updated the network configuration on the box to support network acceleration so that we can run specialized network functions like the Packet Core and the SD-WAN CPEs. Private wireless network and connectivity is one aspect of it where you can run the network functions on the box. But the end-to-end solution for a customer is not complete without running the Edge Computing Application side-by-side with respect to a private wireless network. Azure Stack Edge supports the following capabilities in terms of enabling compute and facilitating deployment of edge computing applications. It has an IoT Edge runtime and it has native Kubernetes support, which makes it easier for you to click and deploy a container-based edge computing applications. There is also virtual machines support on this platform to bring you legacy applications running on the Azure Stack Edge. Going into the actual Kubernetes support on the platform itself, you can use two orchestration mechanisms to deploy your containerized workloads. You have Arc for Kubernetes, which is currently in preview that you can use to deploy your containerized workload by pointing it to a container repository in Azure. You can also use an IoT edge and an IoT Hub runtime to be able to deploy Edge computing applications onto the Azure Stack Edge. So to bring it all together with Private Edge Zones, what we have enabled is the capability for you to be able to work with their ecosystem of partners to cover the end-to-end scenario all the way from the devices to a spectrum selection like CBRS and then the access point be suffered from companies like Ruckus, CommScope, and Nokia. Then the ecosystem of partners that we have built in terms of bringing the network functions to another Azure Stack Edge and the Edge computing applications that are offered as a managed app with the GPU support. We believe that this will enable enterprises to look into scenarios like private wireless networks with the Edge computing application. Now, I want to switch into a couple of demos that I want to showcase today to show the work that we have been doing with the different partners. Let's talk through this demo scenarios. The first demo that I want to talk about is the work that we are doing with Nokia Digital Automation Cloud. Nokia Digital Automation Cloud offers a complete private wireless solution. In conversations with Nokia, Nokia is always already been talking to customers in different verticals who are looking into private wireless networks. So this could be a farm in a remote location where there are wind turbines and there is no ELT coverage there. You can think of what private wireless networks running in there with the CBRS shared shaped spectrum that is available globally. There are also scenarios with the employee safety in a mining type of a setup, and automated guided vehicles. In a mining type of a setup where private wireless networks can hand significant value. Now, the other scenarios that Nokia is targeting is basically ports and smart manufacturing facilities, where private wireless networks provide the coverage and the reliability for mission critical applications that need to run. The Nokia Digital Automation Cloud is a complete solution all the way from the device management to the different types of access points they offer. The solution starts with the Picocell which is for the smaller indoor cells all the way to the mini and the macrocells, and then you have a complete outdoor access point. These are for providing you the solution within your on-premises network. In terms of the RF engineering and in terms of the access points that can support different spectrums. Now, the work that we have done with Nokia Digital Automation Cloud is in terms of running the Nokia DAC virtual network function with their EPC. We have done the work to provide a solution to the customer, where a customer should be able to click and deploy the NDAC Edge on the Azure Stack Edge. Then once the access points are welled up and the sim profiles are provisioned, you can now completely manage the solution from the Nokia digital Automation Cloud portal and the Azure portal to give you a Cloud managed experience for private LTE. They believe that this will open up possibilities for enterprises to an enterprises idea operations team to take advantage of technologies like private seller networks. Here, I have a Nokia small cell LTE and an Azure Stack Edge device. Now, as far as the Enterprise Deployment goes, once these access points and the Azure Stack Edge device are physically connected within the enterprise network, you can now go into your Azure subscription, and you can go into the Azure network function manager, VNF blade. You can select a resource group in which you want to deploy the Nokia DAC VNF and you can speak your Azure Stack Edge device. You can then give a name for the resource that you are creating on the Azure portal. Then you can select Nokia as the vendor and the skew that you want, the different skews from which Nokia offers. Then you can also select the user-data configurations that are specific for your network. You can specify that and upload that file here. Once you have selected all of these properties, the virtual network function is now validated, and when you click the "Create" button, the VNF is actually in the process of getting deployed. Now, here, what we have done is basically we have done the work of it to Nokia in terms of an API integration between our service and Nokia Digital Automation Cloud. So as the deployment of this resource progresses, there will be an integration that is done between Nokia and us, where they automatically get notified in terms of an actual NDAC resource that is getting deployed. You will see your VNF resource and your VNF resource will be not provision state. Now Nokia can go into the vendor portal, and from here, they can push the additional configuration changes, and they can click the Start Provisioning button at which point the Nokia VNF gets deployed on the box. Now, you can then go into the Nokia Digital Automation Cloud portal and into the management console. Here is a single pane of glass for you to provision the operational SIM profiles which will get applied to the EPC. Then once the complete end-to-end network connectivity is there, you can go and now activate a device with the private LTE sim, and then you can start navigating to the different applications that you want to. Now, here is an actual demo of a Private LTE setup and video traffic going through an Microsoft Endpoint. Now that we saw a demo of Nokia Digital Automation Cloud and data integration with the Azure privated zones and how easy it is for enterprises to deploy a private LTE network. Nokia has also put together an MSP offering on Azure portal. You can go here and look into the details of the MSP offering. If you are interested, you can click on the "Contact Me" button. Here is additional details about how you can look into the Nokia Digital Automation Cloud Private LTE solution and you can reach out to the contacts on the slide. Similar to Nokia, we have done some interesting work with the Celona. Celona also offers end-to-end private mobile network solution. So let's go through the details of how Celona has integrated with the Azure privated zones. Here are the set of use cases that Celona is targeting as it looks into enterprise deployment for private cellular networks. There are scenarios with health care where they are in place with the voice over IP phones assigned to the staff. They're also very keenly focusing on logistics where there are ruggedized tablets with employees, and then there is a private wireless network where the data has to reside within the enterprise network. There are other scenarios with the enterprises. Transportation and higher education are additional scenarios where private cellular networks are very interesting for enterprise customers. The complete solution from Celona includes the set of components that gives an enterprise IT, admin all the capabilities to set up a private seller networks. It starts with the Celona SIM card and the Celona RAN that comes up with both outdoor and indoor capabilities. The work that we have done with Celona is in terms of running their Celona Edge virtual network function running on Azure Stack Edge based on privated zones. What we have done is basically a simple click can deploy experience where once you specify your configuration, the Celona Edge will automatically get deployed on the Azure Stack Edge. It'll then do a call home to the Celona Orchestrator, and after that, everything is completely a Cloud-managed expedience in terms of provisioning your SIM profiles and looking at the dashboard in terms of the monitoring of the private wireless network. Yes, again the components of a Celona solution includes the Celona Edge. Once you deploy it in the enterprise network, you can also deploy your Cloud-native Edge computer applications, it could be a container base or a VM-based applications, and these applications can be side by side with respect to the private Celona network. Looking into my Celona Private LTE setup, I'm now on the Azure Portal. I'm going to pick my resource group and I'm going to give a name for the Celona VNF deployment. I'm going to pick the Azure Stack Edge device that I've already set up in my enterprise network. I'm going to upload my custom network configuration and pick the appropriate Celona skew. Once I pick all of these configurations and the validation is complete, I'm going to click the "Create" button. At this point, the Celona VNF is getting deployed on the Azure Stack Edge. Once the deployment is complete, the VNF running on the device will automatically connect with the Celona Cloud-managed portal. From here, I should be able to see that my Edge node is up. I should also be able to look into my access point configuration. I will also be able to look at the devices and the device groups that I have configured. I can then go and activate a specific device which is provisioned with this operational input file. The dashboard gives me a complete view of my private wireless network, including the traffic flowing through the network. Then I can go into my device and I can now configure my device to talk to the Celona private LTE network. We just saw a demo of Celona private LTE deployment with Azure Privated Zones. If you are interested in test-driving this solution, you can go to the Celona portal, and there is a lot of details in terms of how to get you started. Now, moving on to other stuff that we've been doing with the different SD-WAN partners, I would like to show a demo of Azure Privated Zones with the VMWare SD-WAN by VeloCloud. We are been working with VMware on their VeloCloud solution for awhile now. Looking into the technical integration of this, currently, you have VMware VNF running on Azure Virtual Network. The work that we have done with VMware is to be able to package their SD-WAN VNF into the privated zone marketplace so that you can have the same click and deploy experience off a VMware SD-WAN Edge VNF. In this picture, I have a VMWare SD-WAN Edge VNF running on Azure Stack Edge, and I have a VMWare SD-WAN Edge VNF running in an Azure Virtual Network. What we are also looking into into the future is basically where we can run the VMWare SD-WAN Gateways within Edge Zones and Edge Zones with Carriers. For my demo setup, I'm going to have a VMware Edge running within the VMware facility. I also have another Azure Stack Edge within the Redmond Lab. I have the VMWare SD-WAN Edge VNF running in both of those locations. I also have a VMware SD-WAN Edge VNF running within an Azure Virtual Network. I am going to show you a portal navigation and a VMWare SD-WAN Cloud orchestrated view of how this whole setup looks end-to-end and how easy it is for an enterprise customer to click and deploy all these Edge VNFs, and how they can manage this entire solution end-to-end from the VMware SD-WAN Orchestrator. Here, we are on the Azure portal with my VeloCloud SD-WAN setup. I opened the Azure Stack Edge blade. This Azure Stack Edge is no deployed in the enterprise premises, and you can see that the device status is online. Once I have completed the physical network connection, if I go into the Properties tab, you can now see that the different ports are connected. I have the management port configured for outbound connectivity to the VeloCloud Orchestrator. This channel is also used for us to communicate to the underlying services in the box. You have the port 5 that is connected to the local area network and port 6 is connected to the wide area network within the enterprise premises. Now, what I've done is basically, in the interest of time, I've already created an Azure Stack Edge device resource, which basically enables privated zone capabilities on the Azure Stack Edge device. Now, here is the Azure Stack Edge device, and this is the Azure network function manager device resource. Once the setup is done and the device resource is registered with the Azure portal, now I can now go and deploy any virtual network functions onto the Azure Stack Edge. Now, let me show you an experience on how it is going to be easy for an enterprise customer to go and deploy a VNF easily on the Azure Stack Edge. Now, I'm on this create VNF blade. I am going to add VNF. At this point, I can specify my subscription ID and I can create a resource group. I'm going to pick an Azure region. I'll give a name for this resource, which is the VeloCloud VNF. I can now go and pick the vendor to be VeloCloud, pick the SD-WAN SKU, and select a specific SKUs type. Behind the scenes, we have already done the work with VeloCloud to be able to package the VeloCloud VNF within our service. Once you specify your custom network configuration, and you click the "Review & Create" button, the VeloCloud VNF will automatically get deployed on the Azure Stack Edge. Once the VNF is already deployed, you can then go into the VeloCloud portal to be able to see the different VNFs that are deployed on the Edge. Now, I have three different virtual network functions. I have an Azure privated zone VMware VNF that is deployed on an Azure Stack Edge in the VMware premises. I have another Azure privated zone VNF with VMWare SD-WAN that is deployed in the Redmond Campus. I also have an SD-WAN VNF that is running in a virtual network in Azure. Now, what I'm going to do is go into the test and troubleshoot step. I'm going to show you when I log in into the VeloCloud portal and I click on the VNF that is running on the VMware premises, at this point, there is a session that is initiated from the Cloud back to the device so that I can now go and list an active path between this particular device running within the VeloCloud premises and an Azure VNet. I'm going to click the "Run" command. You will see that the data path is at this point triggered to figure out if this path is up and what type of bandwidth I have on this connection. Essentially, if you think about an enterprise deployment, and if you think about 50 or 60 different SD-WAN virtual network functions that are running in different premises, what VeloCloud does is basically provides you a VeloCloud Cloud Orchestrator where it provides you a single pane of management of all the VeloCloud SD-WAN instances. You can also then go into the Azure portal and you can look at the VNF deployment on the Azure portal so that you can monitor the underlying infrastructure on which these VNFs are running. This concludes the VeloCloud demo with privated zones. In this presentation, you got to know a lot of details about privated zones and the work that we're doing with the different partners. If you would like to learn more about the privated zone solution and the work that we have been doing with all the partners, you can go to aka.ms/edgezones. You can also learn about the work that we're doing with Azure Stack Edge at aka.ms/azurestackeedge. If you are looking to become a Partner with privated zones, you can go and check out aka.ms/edgezoneswithpartner. Now, I'll hand it off to my colleague, Monica, to talk about the work that we're doing with Edge Zones and Edge Zones with Carriers.  Thank you, Karthik. The most wonderful presentation and great demos. I'm here to talk about the Azure Edge Zones and the Azure Edge Zones with providers. The Azure Edge Zones are these facilities, the very small pieces of Azure that are deployed in metro cities away from the Azure regions, but to offer a very low latency for different type of workloads. The Azure Zones are Azure managed. So use the same framework to manage and provision all your workloads with the tools you already know and love, like the Azure portals and CLI. This allows us to have a very consistent developer experience, so the same tools and design patterns to build the applications. Once the applications are containerized, you can deploy it in the Edge Zones in a matter of clicks. The Azure Edge Zones allow us to provide compute closer to the end-user or device. You get a very low latency compute applications for services, for fast data ingestion, data processing, whatever need to your applications for low-latency. The Azure Edge Zones, very importantly, is part of the Microsoft global backbone. All data transit between the Edge Zone and Azure remains within the Microsoft global network. The Azure Edge Zones are essentially local extensions of Azure that provide compute, storage, and services very close to our costumers. We have several use cases, but it is up to your imagination. Media, data processing, IoT, retail, gaming, and collaboration, these are the services supported on the Edge zone. The basic services that we will have in the Edge zone is the Azure Virtual Machines and SLB, Azure Virtual Networks, and Azure Kubernetes Service, AKS. Those are the building blocks you will use to deploy and create your applications. We will also offer third-party services from the Azure marketplace, VNFs, and other marketplace applications. Any service that is containerized can be deployed in the Azure Edge Zones as a PaaS service, Azure IoT, Kubernetes Service, machine learning, XStream analytics, and Azure functions. Now, we are talking about the Edge Zones with Carrier. The same Edge Zones that are provided by Azure, similarly, we're going to be deploying in a carrier facility to be very close and co-located with the 5G network. You can offer your customers very close applications to their mobility devices. These Edge Zones with Carriers are optimized for mobile in 5G to provide the best user experience, running latency sensitive applications that are attached to mobile devices in the public 5G networks. The Edge Zones will be integrated with the operator infrastructure. You can use different scenarios in the 5G, such as a slice on demand. The Edge Zones with Carrier enables to offer ultra reliable and low latency communications. The Edge Zones with Carrier are co-located with mobile operations core networks and offer ultra reliable low-latency communications capabilities in the 5G network. We currently offer private preview in Los Angeles with our Partner AT&T. If you need more information, we will have that at the end so you can contact with us. The use cases for the Edge Zones is DevOps, connected cars, online gaming, events/cashless, IoT, and telemedicine. Both the Azure Edge Zones and the Edge Zones with carrier are connected in the same way and allow our costumers to deploy, to have a similar developer experience. You just need to get your source coding kit, package, create a docket container, push to the container registry, and then deploy. That life cycle, you can go from the Azure Regions to the Edge Zones, to the Edge Zones with carrier, and keep reusing your solution. Here are some of the public Edge Zones use cases; local data processing, it's secure all of the workloads, latency-sensitive data analytics, IoT, Media Services, realtime IoT, and Edge applications. Then, we have a very cool demo with the hardhat. In this demo, we are going to show the end-to-end solution, how a developer can deploy a solution either in the Azure Edge Zone, or even in the private Azure Edge Zones at [inaudible] talk before. The only condition is you need to be able to containerize your application, and then we go over the cycle, how it can get deployed, and what are the gains. This is the end-to-end data flow for the demo we're going to see, from the source to the detection, all the way to the processing. In this application, we're going to be a streaming videos and then displaying back into the Azure. You can have this end-to-end experience in a few clicks, as we're going to see now.  Hi. I'm Tobias, and I will guide you through the next couple of steps. We are going to deploy Custom Vision AI Object Detection Model in different deployment locations, by packaging up the train Machine Learning model as a Docker container and Kubernetes workload, and deploying it to Kubernetes clusters in both Azure West US2, as well as an Azure Edge Zone Base Kubernetes Cluster. We've already bid the object detection model in Custom Vision AI. It detects people wearing hardhats and people are not wearing hardhats. While Custom Vision AI hosts a web-based API to query your model as a service, we are going to export the model using Docker-based export that Custom Vision AI provides. After we've downloaded and unzipped the export, we need to build the container using the Docker file provided. The export comes with the model and an API wrapper written in Python based under FASTQ library. Let's view the container image using Docker. After the image is bid, we'll push it to an Azure Container Registry. We can use that location to pull the image from when we deploy to our Kubernetes clusters. Now that we have the image in the registry, let's deploy it to two different Kubernetes clusters, one in Azure West US2, the other in an Azure Edge Zone. We'll use the same process intuits for both. In both cases, we use Kubectl and Yamify. It's describing our deployment in service. As a prerequisite that has already been taken care of, I created secret entity in both clusters that holds the Azure registry log in required to pull our container image. That in place, we can build a deployment for Kubernetes using our container image. We're using a very simple Yammer deployment and service description without any bates and wizards for this demonstration. We're going to apply these two flights, which would create the pods in the deployment, as well as the service endpoint with the load balancer configuration. We'll wrap the load balancer IP, and now we can query our deployed service in West US2. Just like that, and this is the response we get back. That was West US2. Now, let's try the same thing in the Azure Edge Zone. That was West US2, rinse and repeat for our Azure Edge Zone based clustered, the process is identical. I've already swapped out my Kubectl configuration in the background. So Kubectl now targets the Edge Zone cluster. As you can see, this cluster is empty, and we can just apply the same deployment that we made to West US to the Edge Zone based cluster. There we go. As I've already grabbed the IP from the load balance in the Edge Zone, we can directly go to insomnia and fire our sample request against the deployment we made to the Edge Zone. That work too. The takeaway here is the deploying containerized workloads for Azure Edge Zones with Azure Kubernetes Service, is no different than deploying containerized workloads for AKS and any other Azure Regions.  After the deployment of the container, both in the Azure Edge Zone and the Azure Region, now we can compare the different of the latency between where I am located, the Edge Zone, and the Azure Region. As you can see, the latency is quite different depending of the distance between my location in the Azure Region, and the Azure Edge Zone. These showcase the gains we have in latency when we deployed into one of the Azure Edge Zones that is going to be near to you. I hope you enjoyed the presentation and learned something and be applicable to you. We're working on building the list of cities for the Azure Edge Zones in new locations to the roadmap. Our roadmap now includes cities of Los Angeles, New York, Las Vegas, and backward. If you want more information about the Edge Zones, please click these links. aka.ms/EdgeZones, aka.ms/EdgeZonesPartners. As well, if you need more information about the Azure Stack Edge, aka.ms/AzureStackEdge. Thank you for your time, and hope we can connect soon. [MUSIC] 