 so now we're off to edinburgh to meet chris who's made a rather impressive sudoku solver powered by tensorflow.js combined with traditional computer vision techniques so chris welcome to the show and first off tell us a bit more about yourself what's your background hey jason thanks for having me so um i actually started image processing about 20 or so years ago i did a phd in image processing so that's my kind of background that kind of brought me here and um i was playing around with um some image processing in the browser i was building some self-organizing christmas tree lights and um realized it's actually quite straightforward to capture images from the camera and do some image processing and it got me thinking about a mobile app i'd written quite a while back that was uh take a photo of a sudoku puzzle and solve it on your phone so tensorflow.js i realized that all the building blocks are in place now and i could actually build an end-to-end system that would solve sudoku puzzles in your browser so i decided to give it a go and see what would happen that sounds awesome so maybe we can go into a bit more detail on what you've actually created here sure do you want to see a demo i can show you that working great so i've got it running uh in the browser on my phone and you can see it's uh it's scanning the puzzle and solving it as we scan over the um the images in the newspaper so it works um works really well and it's uh it's really fast yeah super fast like pretty much instantaneous as you as you go over the grid there very cool so what what are the algorithms you're using to make this actually work then sure so there's um there's some classic sort of image processing stuff going on so we um our main sort of bit before we actually feed into tensorflow is to extract the actual image of the puzzle so there's a few sort of standard sort of processing techniques we use for that and basically there's a lot of throwing away of information so we want to get to a threshold image so we just have a black and white image with pixels that are the printed pixels and pixels of the background pixels and then using that we we can extract the actual digits from the puzzle image and feed them into an ocr system and i used tensorflow.js to actually do the ocr so that was um that was really interesting and it it worked sort of really well and on that note actually that's interesting to dive in a bit deeper there like what what did you decide uh to use machine learning for versus not like what was that what was your decision pattern there that why'd you use the ml for the digits but maybe not for sudoku um grid itself or something like that sure yeah so mainly i kind of knew how to i knew how to get to the point where i had the sudoku grid extracted and then the actual ocr bit was the bit that i wasn't really sure how to actually solve using classic techniques so there are there's ways to do it but they're not necessarily very accurate and they're quite sort of old-school now and so the way to do sort of ocr nowadays is to use kind of newer networks and and more sort of deep learning techniques so i kind of knew that i had to use some kind of deep learning for for the actual digit recognition and um tensorflow seemed like the obvious choice especially with tensorflow lite being about tensorflow.js being available i could i could just run it on the browser excellent that sounds cool so um did you use an off-the-shelf model did you create your own or what architecture did you use for the digit recognition sure so i wrote mine i wanted quite a simple sort of model so i could definitely run it on the browser without any performance problems so i ended up with a an input layer that's a convolutional layer so a conf 2d with 16 filters and a kernel size of three and then i fed that through a drop out layer to stop any overfitting and then that goes into a fully connected layer and then finally that goes into the output layer which just has a softmax activation function with the with the nine outputs one for each digit awesome and and um is this something you invented yourself or is this kind of a from a blueprint somewhere did you have a background in ml before this um i've done a few courses on ml so i'd um i've done a few on sort of udemy and corsair so i had a vague vague idea of what i should do and then found quite a few examples on the internet of kind of simple sort of models for image recognition so i sort of took some of those and repurposed them for what i needed and then just tweaked the model and tried to make it as small as possible while still getting sort of good accuracy perfect so once you've got the network working um what was the accuracy of this sure yeah so it was surprisingly accurate so i ended up with sort of 99 accuracy on on both the sort of training and the validation sets so that was that was really pleasing um it was interesting the the images that it failed on were sort of ones and sevens particularly sort of where the font was quite sort of um esoteric fonts or quite strange fonts were sort of italic ones sort of very bold so they looked like sevens um there was one image of an eight that was recognized as a seven and when i looked at it i could see that even i would kind of think it was a seven so it was it was interesting to see where the neural network failed and where it was sort of confused it was it was just like a sort of human would be confused so that was that was quite pleasing because i knew then that it was probably going to work quite well on on lots of different characters awesome and what did you use to train the system with did you they take lots of images of sudoku puzzles or how did you go around that sure yes i did um i did think about buying lots of newspapers and taking lots of photos and then i realized that that would take me quite a long time so in the end i um i downloaded about 100 fonts from google and then just generated small images with digits in them and i'm trying to sort of vary the sort of background and add a bit of noise to make it look like a printed sort of digit and then just let that run for quite a while and just generate thousands of images to train on very cool yeah we're seeing a lot of this kind of data augmentations kind of being used these days especially in the javascript community which traditionally hasn't done so much of that kind of stuff so it's great to see someone using this and getting great results with it as well that's really cool to see yeah i was pleased that the sort of simulated data actually worked sort of well in the real world because i know sometimes that can be an issue where you you make up data but it's not realistic so i was quite happy that it did seem to actually match what was sort of in the wild so it seems to be working super fast at solving the puzzles but how is it actually happening yeah so once we've done the ocr we've got the digits for the puzzle so then it's a case of feeding it into a sudoku solving algorithm and i'm using something called dancing links which is originally by a guy called donald knuth who's pretty famous in computer science and it's a it's a really fast um algorithm for solving suduko puzzles so there's lots of information uh on the web on how this works and it it's really worth checking out because it's quite a quite a famous algorithm and he's quite a famous guy so that's a definitely one to look at so it's really interesting to see like how you put all this together and i'm curious like how you go about breaking down these problems in your mind sure yeah so there are there are some sort of standard image processing techniques that you can apply so i always try and break it into a sort of simple set step break it into a simple set of steps that you can sort of put together into a pipeline of image processing so there's kind of thresholding binarization there's things for extracting sort of objects from an image so it's quite once you know those techniques it's quite easy to build a pipeline that you can then stick together as a set of building blocks yeah and i love like how the machine learning is used here for a very specific purpose but got always other computer science going on that actually makes the program as a whole and for those of you interested chris has made a really cool video that goes into much more depth of how he broke this particular problem down so i do encourage you to check that out and we'll put the link in the description as well um so if people want to try this out right now is there a website they can go to to do so yeah so they can there's a site called sudoko.cmgresearch.com i'll send that over to you and that should work on on any modern sort of phone and it should just run in the browser it will ask for permission to use your camera and then you should be able to scan sudoku puzzles it does run on the desktop but you obviously have to hold up newspapers to your webcam which looks a bit silly excellent we'll put that in the description after this show and do go check that out people are watching back at home so looking to the future is anything in the pipelines for this project progressing sure yes i'm really interested in um removing some of the classic image processing and replacing it with the newer network so i do wonder if you can sort of push the neural network lower down in the stack so get the neural network recognizing where the puzzle is maybe even make it work end to end so it recognizes where the puzzle is and recognizes the digits all in one neural network i think that'll be really interesting to experiment with uh i will have to work out how to simulate lots of sudoku puzzles in printed newspapers which i'm not quite sure how to do yet uh otherwise it will be taking lots of photos which um sounds a lot of work once again that's super cool though i'm interested to see where that goes uh i bet any other projects coming out sure yes i've been playing around with a voice controlled robot and um one of the limitations with it is that it's running on a microcontroller so there's a limited vocabulary that it can respond to so i'm quite interested in controlling it from the browser and i think with tensorflow.js there's a few models for word recognition and i think i can make quite a powerful sort of voice controlled robot by doing that so i'm quite quite excited by that next project that sounds awesome so great work thank you so much for being on the show today and look forward to seeing what you create in the future thanks for having me it's been really [Music] fun you 