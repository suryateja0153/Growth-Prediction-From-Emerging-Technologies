 Hello! You are in Emiliusvgs. WebAR is a very strong trend that is advancing rapidly. In this stage of global social quarantine, augmented reality is becoming more relevant. Last year I talked about the google webAR with the functionality of model viewer and scene viewer. This month there was a trend about placing 3d animals in your home with this technology. So today you have a video tutorial on how to use this functionality to implement in your business projects. Are you ready? Let's start! The post about Scene viewer was published in May 2019, there I mentioned about the future script that will exist to properly implement this technology. I even got to try the astronaut demo. This technology is already available and you can see several official sources related to arcore, web browser, GLB or gltf files and more. but the most complete and simple page to enter this technology is Modelviewer .dev. Here we will find the necessary script. In this code we will see the model-viewer.js the model-viewer-legacy.js. In addition, you'll see the 3d file in GLB format. Remember that the urls are online and not in your folder, remember that when implementing it on your website. On this website you will also find documentation of the elements of the project, such as the path and alt of the file, nomenclature of the documents, how to generate the rotation, scale, among others. In addition the properties of the css will also be mentioned. I was pleasantly surprised by the clean and direct documentation. At the end we will see what mobile web browsers are used to visualize this experience. Now we will see the "animation" section. Here we will see the series of elements that we can use to specifically animate and read each movement Anyway, I invite you to browse the entire site so that you can inform yourself correctly. We need to enter the project github because we will find the necessary working files. We clic on download. In these folders we will find the 3d objects that can be used to create your first examples. Now we go to action, we will create our own project. You can start from scratch, but what better than to use a template. This is the model viewer from glitch. Glitch is a world development community where we can code WebAPPS with total freedom and above all get to publish without complications. This page is designed to teach and learn since all the codes are published. I think that's why Google used it. We will click “remix this”. These are the working files: demo style.css and index.html. These scripts are additional to work correctly with most browsers related to microsoft edge, firefox, safari, full screen properties and even an additional file to display correctly in Magic Leap viewers. Now this code is the original from model viewer. Here we will see the path of the GLB and USDZ file. In addition to the alt of the object. Here I want to specify some information: In the webar world there are two routes: the first is working with gLTF format. This is driven by several companies and it is in massive use. The second is to work with the USDZ format which is powered by iOS and is more restrictive. Model viewer works with the two files so that the visualization is as standard and universal as possible. In this part of the code we will see the missing part of the script. The model viewer.js and the legacy.js. Right now we replace the glb file. To do that we go to assets and upload a new file. We will use an object from the folder downloaded minutes ago. The selected object will be "robotexpressive". When it is added to our assets we will click on it and copy its path. Let's go to index and replace the path of the GLB file. Having the first change, let's try it! I will use the link of the "live app". I am testing directly from my android smartphone. Here we see how the robot moves correctly and without problems. Now we are going to upload our own file. I will use a file created by my photogrammetry work. If you are interested in learning about this technology, I recommend the Display Land videos that I have made. Well, I download my project that I did in display land in gltf format. Then I will work it in blender to polish the details and export it in GLB. I already have my glb file, now I need to convert this file into usdz format. There are already several solutions for that, now I will use "view ar". this platform needs to first import the same file in fbx format and of course independently add the texture ... when we have everything ready, we will convert it! don't worry that in another video I'll explain in detail how to properly work with the USDZ and GLB file. Lastly, we go back to our glitch work and upload our files in assets to later replace the paths in this way. I will also make an adjustment in the css, especially in the background color of the experience. We're going to try it! What did you think of this video? In the coming weeks I will be generating more content about augmented reality on the web. If you liked this content, like it and subscribe. This is all for now, Emiliusvgs says goodbye. Byeeee! 