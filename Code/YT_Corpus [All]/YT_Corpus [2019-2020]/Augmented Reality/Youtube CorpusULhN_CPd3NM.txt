 in this video, I'm going to show you how to build an Augmented Reality app that could help you change how you maintain your factory equipment. And to demonstrate this concept, we're going to build a simple augmented reality app that overlays the temperature and sensor data on an android device. But first, let's take a look at the architecture that I'm using in this demo. So, I've got my demo board here with my Raspberry Pi that reads temperature and humidity sensor data from this dht11 sensor and publishes that information to an MQTT broker. And then, I've got my node-red running on my Magelis industrial PC, subscribing to the sensor data from the MQTT broker and sending it to my Augmented Operator Advisor Runtime engine also running on the Magelis PC box, but it could very well be running on any PC with Windows. And then I use a web browser to access my Augmented Operator Advisor Builder app to build the App, download it, and copy it onto my runtime engine. And then finally, I download the Android app on Google Play to view my demo board in Augmented Reality. Ok, so this is the section of my demo board where I have chosen my point of interest, which is this dht11 temperature and humidity sensor connected to my Raspberry Pi. So, when I bring my Android device running the Augmented Reality app over this section I expect it to overlay values for temperature and humidity on the app. Ok, so the next thing that I have here is my Augmented Operator Advisor Runtime engine already installed and running on this Magelis industrial PC. For now, let's head over to our web browser and start building our app. Ok so now I'm in the Augmented Operator Advisor Builder, so I'll go ahead and log in. Ok so we're going to create a new project. Okay once you've created a project you can go ahead and add a new area which could be like your plant. Okay, now that we've created our plants you can go-ahead and add the scenes to our plant. So I'll upload the image for my demo board. And then here I'm going to leave image recognition, and then I'm gonna label my scene as Demo Board. And then I'll click validate. Okay, now the next thing to do is to add our variables, which is the temperature and the humidity that we want to display on our scene. Then we click add. So, we can choose how we get our variables into our Augmented Reality app. So we could either use the Augmented Operator Terminal Expect or to choose Internal which will allow us to use node-red to bring in the variables into our app. So to do that we'll first head over to our industrial PC that is running node-red. So let's go ahead and open node-red to start collecting data into our augmented reality runtime service. Okay so the variables that we want to collect using the node-red is the temperature and humidity sensor data that is currently being published to an MQTT broker using a Windows 10 IOT core app running on the Raspberry Pi. Ok so let's go to our IoT Core app and check to see what topics our variables are being published to and what is the address of our broker. So, as you can see the humidity variable is being published to augmentedrealitydemo/humidity and the temperature is being published to augmentedrealitydemo/temperature and our MTT broker is a HiveMQ public broker that is at broker.hivemq.com Okay, so here let's use our MQTT node to subscribe to the data add our broker address and then we'll subscribe to the humidity topic. And then we do the same for temperature. And then from there we convert our variables into an Augmented Operator Variable. Okay and then we give our variable a name. Okay, we do the same for temperature. And then we send our variables to our Augmented Operator Server, then we configure our server. Set this as PUT. Okay, and then we deploy our node-red flow. Okay, and then we go back to our builder and add our variables. Okay, so now we've added our variables, so we are able to use them in our scenes. So, we go to the scenes tab. Okay, now that we've opened our scene we can drag and drop our variables or our list onto to the scene and place them exactly where we want them to appear. So my temperature and humidity I'd want it to appear as a list, so I'll click my list and then I drag it. I'll drag it to be right next to my temperature and humidity sensor. And then I'll call my list "Sensor Information". Then I go ahead and configure the information. And then I'll select Read Variable. Then I'll select an existing variable, which is the humidity. And then I'll put my information label. And then I'll validate. Okay, and then I'll add my temperature to the list. Okay, now that we finished defining our scenes and our variables we'll go ahead and build our project. Start build. Ok, our project build file is ready, and then we'll go ahead and download it. Ok, and then when your build project is finished downloading, you extract the files and then you transfer them onto your industrial PC, under the project folder which I have already done. Now let's go to our app on the phone, and see how we can configure it and use it for Augmented Reality. Ok, so now I'm using the screen recorder on my phone to show you how to set up the Android app. So here you see I've got a connection which is the IP address of my Augmented Operator Advisor Runtime engine. So I'll click login. Okay, now I'm logged in. I'll go into my Augmented Demo, DemoPlant and then I can click to view my scenes. And then I'll click Start to start my Augmented Reality view. So as you can see we've got the temperature and humidity overlaid on our point of interest, and if I move it away from that, it will disappear. And if I bring it back again it'll show up. I really want to find out what you think about the use of Augmented Reality App in the factory setting. So please leave a comment in the comments section below. Thanks for watching. 