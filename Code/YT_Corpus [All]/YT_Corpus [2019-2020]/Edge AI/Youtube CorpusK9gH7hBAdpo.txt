 [Music] all right so welcome to the AI course from today we are going to talk about the technical aspects of AI and before I start I want to mention that while I am going to be presenting the course I have I'm really standing on the shoulders of giants in other words there are a lot of lot of people who have taught I thought AI really really well today I probably much better than me today I have learnt a from them and so on so forth and I have learned from many such people and the slides that I will be using will be stolen from different places of course with you know some some permission some permission I would say and so because of that you know we will be sort of taking interesting bits from wherever I found and combining them in the course I should also point out that I'm going to credit all the people I have taken slides from in the first slide not on individual slides but you know I really really thank them for developing this pose for me and for themselves and for the field further yep now a course has been is being taught in pretty much every department right in the world every top department in the world at least and if you look at the AI courses in different institutions you may find sometimes the overlap between topics is limited there are many ways to look at a broad field like a you know I remember that when I would go to a triple AAA conferences as a student there will be eight or nine parallel tracks running and sometimes as a young student even though I was a researcher in the eye I may only understand things about one track and not understand anything about the other seven tracks it's a really broad field and the reason it's a broad field is that AI is not just a technical subject and we will understand it more and more over time but it comes from a philosophy AI is not a problem which has one solution or two solutions a is a general problem a philosophical problem which has many many many manifestations into concrete problems which have many many many different solutions so Tripoli a conference or NA a conference often thinks of itself as an umbrella conference which brings all these people together because AI has so many diverse subfields any course cannot do justice to all of them any limited time course and therefore if you look at the book which is the result Norvik book by the way how many of you now have access to the book very good very good I am very happy to see that at least 20% of you have access to the book this is only the second class so by next week I hope all of you will have a copy of the book with you as you must have seen for the people who have had looked who have looked at the book it's a big fat book and there is no way we are going to cover the big fat book in the class right so any instructor has to make some calls on what it is that they want to cover in the course now I think of it as a breadth course right a breadth course therefore may not be deep right so usually the trade-off is between God and shallow versus deep and narrow right if you are one person who is broad and deep you know all the power to you I mean I respect you but most people are not such people most people are either on this side of the coin of that sort of kind and in fact you are undergrad students so it is your time to learn something about everything right it is your time to be broad once you start doing a research project once you go deeper into a particular assignment once you go into a specific you know course project or whatnot that would be the time for you to go deeper into something and you can only go deeper into a few things not too many right so I am taking a view that we this would be an introduction to the breadth of ideas in area so I am going to introduce an idea and that idea if you are able to capture it the coefficients have it with you it is going to help you in wide variety of settings not just in the specific topic in which we learned that particular idea so if you are general the scientists not interested in the AI in the long run you will still get a point of view and a set of general tools that will help you in attacking a new problem and I'm assuming that almost all of you will go into the industry or somewhere there you will be solving problems I'm not saying that you will be solving computer science problems also you will be solving problems technical problems at some level right and this a a way of thinking is going to help you and that particular way of thinking will introduce in the next week for now we are just motivating them and talking about what is a like and the history of it and if you are the serious AI enthusiast if you want to make AI your career either in research or in further study and you know a job and so on so forth this would give you an introduction to a lot of topics this will teach you about such then you can go and take a heuristic search course this will teach you about some Bayesian networks probabilistic graphical models and you can take Parag single oscars and published a graphical models or Daphne Koller scores you know about Daphne Koller Daphne Koller was one of the founders of Coursera she was a professor at Stanford probably still graphical models book and her course is sort of the most famous course in this particular area you will learn a little bit about planning and decision making from there you can take a full-blown course on the reinforcement learning for example Barak Singla is teaching a reinforcement learning 800 level course in our department this semester now you are not ready to take that course without doing the AI course which gives you the introduction I mean you can always pick it up but eventually this course prepares you to take that advanced course if you are interested in and so on so forth right so there are many many subtopics of AI and this particular course is going to introduce all of many of them to you yep the other decision as an instructor we have to make is what do we focus on even within the topics that we are going to explain right and here you all know about theory and practice theory and applications those are the two extremes of any scenario right but there are two more steps in the middle the way I think about it there is the theory there is the modeling there is the algorithm and then there is the application in my view and let us think about this from an example and this is very important this broad understanding of any problem is very important so let's say I am I am in 2004 or 2003 and I am trying to create a MapQuest or a Google Maps and there I need to decide that I have the whole map of the world I need to figure out that I want to go from location a to location B what is the best way to reach location B from location a now this is a real problem this is a real application right the first thing you will have to do is to make it into a computational problem you are not going to talk about which car am i driving you are not going to talk about you know whether there is a gas station on this particular Road or not for now I am going to abstract out all this information I am NOT going to talk about whether there's a pothole in the road I am NOT I have to abstract out all that information into a simplified approximated computational problem and what will be such a computational modelling can you think about it it's very easy you have done this graphs you will take the model the computational model of a graphs now a graph has node and edges so you will say from my problem what is the node so you could say that any intersection is the node see we are talking about roads and locations we are not modeling every coordinate in the location we are abstracting it out if we start modeling every coordinate then it will be impossible right every little point we cannot model that we have to apply abstract it out so in our model we will have graphs and node will be an intersection the edge will be a load segment that connects two intersections then we can additionally have a weight on the edge and the weight could be in this case length length is one possibility some people will say time now you have to say Oh in the morning the time is different in the evening the time is different in the day time the time is different if there's an accident the time is different if it is raining the time is different which time it's an abstraction initially we will say I don't want to worry about morning evening raining I will just take some average time so I will keep my Google cars going all around the city at different points in time and I add each Road however time it takes I am going to just average it out or take the not if not average you know one deviation or whatever right then now I have converted into a graph now notice this is called can you guess modeling this is modeling okay taking a problem and converting it into a computational problem this is modeling this you have to do in everything in the world if you are a computer scientist you will never get a computational problem almost never unless you were the theoretical researcher which you will start from some model you will always in the world you will get some real problem you don't even know how to start modeling it into a computational problem often you would see that for a real application a lot of the magic isn't modeling because once you model somebody sometime has already solved that problem once your model this is a graph and model on the graph as a shortest path problem now the all the literature on shortest path problems becomes applicable here you don't have to really be creative in solving this specific problem you just now have to read up read up and check what are the various shortest path algorithms you know there is a there is a bellman-ford algorithm there is a Dijkstra's algorithm there may be twenty others you just quickly go look at which one is the right one for this fit bellman-ford is much better if it if you have negative edges we don't have negative edges nobody is going to gain time you are not time traveling here right so you don't need bellman-ford let's do something simple and so on right I am NOT getting into the specifics of how Google and Microsoft made their map engines that is called the algorithm right we model it is a problem then we chose an algorithm for it we may have to innovate there but that's the algorithm then we implement the algorithm and when we implement the algorithm we have to decide on you know what is the full graph when I am going from IIT Delhi to Ames or hostas metro station do I need to have in my graph the edge from you know the highway edge from Seattle to Portland I don't the whole graph of the world is huge we don't need the whole graph for every problem so how do we cut it slices dices where does the map get stored which part of the map do we put in the memory etcetera etcetera all of these parts would be parts of the application solution they are also always interact with the algorithm obviously and last but not the least what can I prove about them can I prove that I will always get the shortest path under what conditions will I always get the shortest path etcetera etcetera that will be called the theory so now do you understand with an example this is called you know explanation for example application modeling algorithm theory you can I guess I don't know which what will be the right order the order is because you can prove theorems about the problem what is the complexity class of the problem you can prove theorems about the algorithm so therefore theory interacts with both the modeling as well as the algorithm itself the algorithm is implemented in the actual application now in this course we will tilt towards modeling and algorithms in your assignments you would do application and we will not very much bother about theory and again this is a choice once in a while I'll introduce some theorems maybe I may prove one but mostly we will the book has theorems and proofs we will talk about the theorem but not talk about proof we will mostly focus on how it gets applied how a new problem can get modeled how a problem a model may have solutions how what are the properties of each solution and so on so forth this is part that we are going to focus on in this particular course and of course you can have any a course where you go deep into the math and the theorems and the theory and that is not what we are going to do okay any questions on this all right [Music] 