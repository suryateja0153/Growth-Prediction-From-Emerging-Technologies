 What I'd like to do today is talk a bit about quantum computing which is my own research area, and tell you a bit about where we are now and where we might be in a few years time. So what's a quantum computer? So it's a machine which is designed to use quantum mechanics to do things that can't be done by any standard classical computer based only on the laws of classical physics. There's a quantum computer - it's the thing in the middle not the people around the outside. OK. So even though quantum computing is in the news a lot today, the theory of quantum computing is been around for quite a long time. It was really kick-started back in 1994 where Peter Shor gave a quantum algorithm for factorising large integers efficiently which we don't know how to do classically. And this breaks the RSA cryptosystem.  And this created a huge amount of interest in quantum computing. Since then there's been a lot of hard work that many people have been doing, including on the theory side. We've been developing new quantum algorithms, new quantum error correcting codes, but crucially also on the experimental side, and people have been working very hard to develop better and better quantum computers using lots of different technologies. And we're now finally at the stage where a quantum computer has, for the first time, outperformed our best classical algorithms running on the world's best classical supercomputer, solving a particular problem. So this is a point with a somewhat terrible name of quantum supremacy and this is a paper from end of 2019. So what did they do to get this result? This is a team at Google who built a device using 53 qubits which is quantum bits and they ran a particular task on it and they showed that this was better than the best algorithms they could come up with using a classical supercomputer. And what did they actually do? They ran a random quantum algorithm. So they ran a so-called quantum circuit, which is basically a sequence of small operations called quantum gates, and they ran a randomly generated quantum circuit, and they showed that, as far as they know, that the best algorithm that they have, couldn't reproduce what that algorithm did. And in fact there's some good theoretical evidence why this should be the case too, because I can't resist referring to one of my own papers, this is one example, you can come up with some theoretical evidence that it should be hard for classical computers to reproduce these results even though we don't have a proof. But so far you know this thing that we've run is not necessarily interesting for practical reasons. So it's a random algorithm, it's not necessarily useful. So it's an obvious point like what are we going to do next? We're going to try and do something practically useful with these sorts of devices, because we don't just want to demonstrate outperforming these classical machines. We want to do something useful with quantum computers but in the next few years the quantum computers that we have will still be fairly limited. And in particular they won't have fault tolerance, they'll be affected by errors. They'll be fairly small. So we don't yet know how useful these devices are going to be. And it's a really hard task to try and make best use of them. So what I'm going to try and talk a bit now is what we could actually do with such a device, a so-called noisy intermediate scale quantum machine, and talk about one particular direction which might be interesting to try to approach on these machines. And this is a direction which I guess a few people think is interesting, which is simulating a quantum physical system using a quantum computer. And this is something I've worked on recently with Chris Cade, Lana Mineh and Stasja Stanisic. And this is interesting for practical reasons because many systems we care about in the real world are quantum physical systems, and they are based around the rules of quantum mechanics. One very exciting sample is this model called the Fermi Hubbard model which is a famous model in condensed matter physics that models strongly correlated systems of electrons. And here we've shown like a 5x5 lattice for this system so this is a very small example of a system in this model, but in fact even a 5x5 array of atoms, solving this completely is beyond the reach of today's best classical supercomputers. But with a quantum computer we might be able to approach this. So mathematically what does this problem mean? Well, when I say solving here, what I mean is basically finding the lowest possible energy of this particular physical system, which mathematically just means finding the lowest eigenvalue of a matrix. The only problem is that this matrix is a huge exponentially big matrix, which is why we can't do it efficiently but with a quantum computer. We can try to solve this problem by producing a quantum state which encodes this sort of low energy vector, and we have a classical optimisation algorithm,which optimises over these quantum states using a quantum computer, to try to find this lowest possible energy. And interestingly this approach basically works so, building on a lot of previous work, we were able to show that as the depth of your quantum circuit increases, then the fidelity with which you achieve the low energy state for relatively small examples increases exponentially, which is what you want. And we're also able to show that for small amounts of noise in the quantum computer, then the algorithm still basically works okay. I should say these results are classical simulations because we don't yet have quantum computers that are big enough to to really outperform our classical desktops for problems of this practical sort. But still this is interesting evidence that in the future we will, and in fact the results we show even though they're promising, they're still slightly beyond the reach of the quantum technology we might have in the next few years. So there's still a fair amount of work to be done here I think. This is everything I wanted to say I think. I'm just about on time and if you'd like to read more there's a paper on the archive you can read. Thanks very much. 