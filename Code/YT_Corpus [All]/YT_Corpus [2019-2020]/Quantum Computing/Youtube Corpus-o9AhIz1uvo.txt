 [Music] good evening everyone I'm Masood McNerney a research scientist at Google quantum data I would like to thank the organizer for invitation and making this livestream presentation happening today today I'm going to announce the launch of terms of low quantum which is an open source framework for quantum machine learning I would like to mention that in this heart I do not assume any background in quantum physics or quantum computing I would like to start with a famous quote from Richard Feynman that he made in 1982 that is considered as the first deep observation on computational power of quantum systems he said that niche was on classical dammit so if you want to make a simulation of nature you better make it quantum mechanical so of course we should know that machine learning is not about that exactly is simulating systems but has the ability to learn a model of system and predict systems behavior so I would like to rephrase Foreman's code as nature isn't classical damage so if you want to make a lab model of suit nature or learn a model of nature you better make it quantum mechanical so with that in mind we developed a soft rock on tome basically as toolbox to model nature's and also artificial quantum systems so what are the main objectives for TF control it's the first one is this software framework for hybrid contaminant quantum classical machine learning under terms of flow and search and it allows researchers to perform fast prototyping training in France and testing of quantum models for quantum data which can reduce the prototyping time from weeks to orbs also it can help in learning in quantum computing researcher to discover new algorithms for near-term devices or ultimately for falter and quantum computers once they become available so for people who have no background in quantum physics I would like to make an introduction to quantum mechanics quantum computing and quantum machine learning in just one slide so are you ready so this is the setting that we want to discuss this is known as a double slit experiment and it's at the whole of the quantum mechanics so let's consider that you have a ball machine if you have played tennis you know that like how its work you can set it up to send random balls and if you have a wall between slits so that some of the balls can go through the states and you have another wall like a screen yet you can detect where these balls are hitting so what are your expectation of the property distribution the balls can't hit the screen so there are two possibilities balls going from the top correspond to orange slit you see a care of a bump quest on to that and there is another one for if they go through bottom straight and the joint or up to the distribution is just summing over all two events that's all you need to do so what happens if the the source for these particles is quantum mechanical so assume if you have a electron guns that sends electrons or if you have a laser to send photons these are the particle of light and if you have like a double slit setting and unless these are obviously made smaller and then you have a screen and sees you want to see where these particles are healing and now you can see that there is going to be an interference patterns emerging that is very bizarre so here instead of that Gaussian distribution right in front of each slit you have this interference pattern that sometimes even right in front of the slit there is zero chance of getting a particle and so this was very puzzling for physicists back more than a hundred years and until they realize that actually there is a quick fix to this you can all you need to do is just generalize the classic approach to distributions to quantum and what for that you just attributed a property amplitude instead of a property and then that's a complex number and so for treatment you have to just add them up and then ask wordham and then you ask where there's a new term up here instead of like that that properties of getting through the street top or bottom there's interference then this is the term and this is related to the relative phase between these events and you can manipulate this and by manipulation of that basically we can do computation that's the core idea we are taught on computing and how do you do that you place a stack of the walls add various different distances and you place the slit advise different locations and you set it up to sample from it property distribution so you create a constructive interference pattern to generate distributions that is the desired outcome now that basically is quantum computing so congratulations you've learned how quantum computation works so let's look at a specific example that's pretty interesting if you have random walls separated in different places and random slits and located in this world you get a fancy property distribution is known as a portrait almost means that's like you have basically a quantum critique system and this is sampling from the distribution of this system is exponentially hard classically and this was at the hole of the quantum supremacy experiment that we announced last year basically this is a rich computational setting already of course that particular setting is not a scalable but that's a technical detail all you want to say that you can basically even set up a confirmation landing on this so how do we do that we parameterize this arrangement so we allocate or attribute parameters to each slit location and then try to learn to generate an desired output property distribution function or iteratively learn to create a set of solutions that are the correct solution to your computational problem and that's at the heart of the quantum machine learning so you just basically learn all the concepts I want to introduce in this talk except you know this setting is not a scalable so the rest of talk is about a scalable implementation and how we can call it overturns of law so to push the analogy a little bit further you have to think about generating or engineering this interference patterns is like generating sound waves like it's like you're composing and playing a music and so there are certain you know strings and the strings here becomes qubits and instead of the note you have quantum gates here it's like a two qubit gates illustrated here and instead of the musical instruments you have this control microwave electronics where you can generate electrical waves that generates this property distributions that correspond to their very nature of the particles so we did this at Google it's over past five six years we have developed these superconducting technologies that you can fabricate these qubits at the scale and so this is a particular picture of a 1d arrangement of the superconducting qubits that could be a ring and there's a pair of electrons that it's a current in that qubit that can go either clockwise or counterclockwise but when it's quantum mechanical can be a superposition of both directions and goes in both way and this is like going to the particle going to athletes and at the same time and you can control it here with the electrical gates and this has to be low enough temperature for this superposition to happen that's below a critical temperature of superconductivity that's reserved a place it in a dilution refrigerator at 100 military so we use that device with a 53 qubit process or to implement a random set of random quantum gate and showing that it's very hard to sample them classically so let's back up a little bit and see what what are these quantum bits quantum bits basically can place and present them as like a vector in a broadcast fear so basically if you consider this as a Coulomb if it's a classical it's either pointing at north pole or South Pole for a quantum bit it can be any point on this globe so there are certain properties of classical bits that you can always they always have a value of zero one it can be copied their state doesn't change if you if they are measured and measuring one bit doesn't affect other on measured bit and none of them actually in general works for quantum bits so the challenge is how we can actually manipulate quantum information and how we can do quantum computation so in order to do that you can build arbitrary single qubit operation by just rotations around to fixed accesses and this can make a rotation anywhere in that globe basically and to to do orbit or universal quantum computation all you need to add is to add a single non-trivial two qubit operation which is like here is Z naught that means that if the first bit is 1 the second one is flipped and Quandt understanding quantum circuit as well composing music is like there are these different strings correspond to two qubits so they are placed in a space and in time you print that kind of things operations you do which as various three different single or two qubit rotation at the end you just measure them to create classical property distributions and that's always you know means for each bit is either one or zero likes classical bit the thing is that these outcomes are normalized so they sum to one so what is the landscape of near-term quantum computing today with this kind of technology so basically right now if to come to quantify our computational power of this system you have to consider through index one is the number of qubits one the quality of the qubits so two to have maximum computational power you need to have high quality could be it's a lot of them so in that shaded purple shaded paper area if you're there means that the above the dashed line basically things are not interesting because although you have a lot of qubits they can be simulated classically basically because the state of the quantum computer is localized so it does not have exponential power build into it so below that's - line where that we actually on Sycamore we observed this confirm supremacy things becomes interesting but to have photonic quantum computer you need on the order of millions of K bits and tens of millions to do it like something like Shor's algorithm that you can use it to basically decode crypto system and it's for a lot of factoring large numbers to prime factors but that's kind of one extreme points in near-term quantum devices you can actually think about on the order of tens of thousands of qubits I think there are potential opportunities to do something interesting like quantum machine learning that cannot be classically done especially when you want to analyze or distill contemn data and this is where Co tensorflow quantum comes in as a toolbox in this area that was not available and we are introducing this week so how can we do machine learning over this parameters quantum circuit so to hear to see a particular analogy you have to notice that when we print is kind of unitary operations or random rotations in a spacetime volume that you have this is a kind of continuous parameterize rotation this mimic kind of classical circuits like deep neural networks that map certain input to output so that's reason for the term quantum neural networks that you might have heard but how do we create this parameters quantum circuits let's look at a concrete example so we use here sake this is a toolbox introduced by a team for simulation of quantum circuit so we import say to import simple and next we write a parameterised quantum circuit for this particular processor on the right which is C comma which is basically the SiC here in this setting is like acting as a quantum computing assembly language we will use simple for adding symbolic parameters to our circuit we define a qubit for our circuit using the six cubed great qubit command which plays a qubit under here this command can takes coordinates of qubits on the grid the place at on the corner at 0 0 coordinate and then we can try to beat a simple model what would be that simple model it's a parameterize quantum circuit with one gate using silk dot sec and then it's just a rotation by an angle theta about some y axis of the qubit to simulate the secret we actually need to attribute values to this symbol of theta this can be done by seat parameter resolver and then we pass this ticket six simulator object obtain that can obtain the resulting output vector so the output is actually a vector that just the speed at all now all we need to do to get the classical values from this wave function is to define a measurement here we choose a standard Paul is the operator which measures if the qubit is 0-1 the expectation value of the measurement is obtained by calling the expectation from wave function command on the simulator output so how can we do machine learning and this finite space times that we have available so that was an introduction to seek to just set up a parameterize model but you have to notice for one quantum machine learning we should upload the data basically we have to prepared on the floor this is the first part of a circuit this is a 2d array that you can see that first part is like to look basically generating the data on the fly and second ones the parameter stick is to try to learn additively using some measurement outcomes so I mention contaminate or what one might ask what are the possible sources of contaminator basically whenever you have a quantum Camilla there are two the states of a quantum convenience quantum later so you can use quantum machine learning for verification doing inference over that output and discarding algorithms in particular for simulation of chemical systems or simulation of quantum many-body systems in particular when we have this quantum matter quantum critical points the entanglement or these correlations diverges exponentially and so it becomes very hard to simulate them at that point so what what are the other cases are quantum communication networks basically in quantum limiters quantum receivers purification units basically when you have data and communication networks the networks are noisy and you have to distill and improve it improve the quality and you can machine learn that you can improve control metrology which is like sensing imaging basically high performance measurement or also control quantum devices this is important for near-term devices to avoid you know or mitigate errors the simplest possible case for quantum annealer is just for a single qubit basically you can have two claude of their data for the blue and orange correspond to two vectors you know pointing in two different directions but they did the things could be noisy so it's when you have a data set it could be any point near to that direction but not exactly there so the question is that if someone gives you that data can you do a binary classification and this is the examples the hello world examples I'm going to walk through it today so as a concrete algorithm for doing quantum machine learning is variational quantum algorithms basically here we have two different core process or a CPU and qpu that talk to each other what happens that GPU you want you collect some classical distribution of data and just pass it to the CPU to come up with better suggestion for the parameters and you do this iteratively to converge and this is basically the iterative quantum classical optimization but you can do more interesting results why not just combine quantum classical deep neural networks with hybrid models here you use the best of both models to increase your reach become the develop Reacher representation to capture some unknown data and also you can improve generalization but how do we do that we are know already traceur flow is the most one of the most used machine learning platform and think is also one of the widely use ticket simulator for quantum circuit can be combine them and what are the challenges for that once you start to looking into this problem you realize are certain technical hurdles for example quantum data cannot be importer so you have to generate it on the fly and also you need to have both data and the models or layers in this quantum circuit and you have to basically be have a way to build this highly non-trivial computational graphs that are nine dynamic so the data hurdle is that you need to pass this the quantum program to keep you at one time so you cannot just do computational graph two measurements and just pass it every time there is a delay there is a latency between CPU and CPU because QP works at the few microseconds including measurement and the other issues with sending batches of jobs to realize many parallels quantum circuits and consumer all those hurdles we arrived at for design principles first we we have to support differentiation of quantum circuits and hybrid back propagation if you want to build hybrid models also the secret badging which is we mean that we have to be able to generate continent on the fly and train over so many different quantum circuits in power also there is a issue that we need to be back and agnostic but it means that we should be able to switch from a simulator to a real device with few changes so we especially for theory story they can try a lot and then they can compare their simulation against an actual hard real output so and the final principle is the minimalistic nature of approaches that we will be the bridge between sick and he Kiev not necessarily to reinvent the wheel so we don't want to force the developer to to learn new toolbars that is different so much different from the offensive so we Deb arrived at the software architecture it's basically very simple we map everything to turns holes and then we use this kind of ops tensorflow framework to calculate okay classical property distributions for the output so basically here you can see an example that secret become a tensor the parameters that describe quantum circuits it is a tensor poly operators are tensors and also we can have from some ancestry note getting some particular suggestion for the parameters value to insert that and then becomes the operations that you calculate the expectations and then you can fit forwarded to other nodes in the computational glare so with that we can look at the software stack as a whole so at the user interface or two sets of data it's data could be classical or quantum so that you have gone home now support quantum data but the interesting thing is that the quantum data as I said is like either circuits or operators but you can map everything to transfers and then using standard TF layer TF care as high level layers that you can manipulate them so below that you can see these tfq layers and differentiators and below just below that is the typical ops that they can run a simulator like silk or this more high-performance simulator that we just launched this week as known as cue sim or you can run it on actual hardware which is qu the classical part of the model can be run on CPU GPU or GPU as a standard TF basically framework allows you to do so to see a particular concrete suggestion for to understand what all these framework works is like looking at the pipeline for a hybrid discriminative model here you can see their interaction between different parts like quantum data preparation evaluation of quantum models and then once you measure it then the data becomes classical then you can feed it forward for further post-processing by classical neural network and then you can measure across some cost function feed it back to improve the parameter now you can improve the parameter of both quantum model and the classical neural network and this is basically the nature of the hybrid model so with that we are not ready to do a hello many world examples so this notion of many more this comes from an interpretation of quantum mechanics known as many word interpretation and not necessarily identified with that but it's kind of a interesting way of looking at the simplest possible case for analyzing quantum data would be a binary classification for a single qubit so how can we do that so here again as before we import sequence in PI and place cubed on the grid we also import numpy tensile foreign tfq packages the first to do is setting up the labels and parameters for preparation or working of the data and then then we for simplicity here we classify just two data points a and B correspond to two vectors on the blogosphere then we can convert these vectors to tensors and with that we can have we already generated our quantum data now we need to build our hybrid classifier and in order to do that we apply a core tfq functionality and that Able's us to easy to have an easy integration with chancel flow so the data inputs or hybrid model can be specified using standard curves input object the quantum portion of our model begins with with the parameterize rotation about the y axis and then on hybrid model we landed to discriminate to their States by optimizing the theta parameter to calculate the loss function to basically learn this we need to convert the quantum states into classical information we can do this by making a measurement along z axis and we embed our quantum model and measurement into a cross model we use the TF q PQ c layer and this layer enhanced from the TF curves layer as so it's compatible with Karis API for the last stage of the classifier we attach to basically unit dense layer with softmax activation and then the layers are ready to to to basically use the resulting measurement to predict their properties that the input data point is either from Class A or Class B to train the model B rap or classical and quantum layers in a class model the weights in the dance classical layer and the parameters in the quantum models have both updated using atom optimizer with the last different but with the categorical cross entropy we see that the loss is quickly driven towards zero during their training now we can apply this classifier that we built for distribution of the quantum data for a single qubit that I mentioned so we can give this model quantum data points per table from training data points to to see if this is this model can actually generalize because the actual you know that example was a bit artificial in a sense of fixed data point contenido point or fixed direction a and B now using the standard chaos model we can predict for function and see that the noise noisy samples are categorized with enough accuracy so basically this is has been a very long journey and we had a big team to be able to bring this up to you and we would like to thank our colleague in our team in particular the contem team we had contribution from X most baingan and in particular University of Waterloo I want to mention a significant contribution from Michael Antonio Gillman Trevor over the past years and we will excited to see what you can do with this and we welcome your contributions so you can dig deeper by going to the website the Supra dot org slash contour also you can look at our archive paper which is provides detailed overview of the entire framework and also a lot of console applications that you can work the details in the collab that are available in the TF quantum website thanks a lot for your attention [Music] 