 it was the Year 1822 when a guy named Babbage started to work on a weird kind of machine he called it a differential engine that was a physical machine to solve polynomials a few years later 1847 another guy called George Boole created the basis of something that we know today as the boolean algebra and that that was the dawn of computing to be more accurate that was the dawn of classical computing things started to pick up really really really quickly after the 1940s the 1950s and all of the sudden starting from these physical mechanical machines we find ourselves in the era of transistors we find ourselves in the era of high-speed compute of course we started with a few transistors and then we went quite quickly to literally millions and billions of transistors and from this we went even quicker to this and then to this and then to this and it's such a great time to be in IT in this particular decade think about the computing power of the CPU think about the computing power of the GPUs and think about what you can do when you start creating programmable Hardware like an FPGA or even a hard for a tensor unit or even an ASIC an application software integrated circuit but let's just try to step one step back and think about this this looks like an enormous quantity of computing that we have at our fingertips think about the combined power of the public cloud provider data centers think about combining the computing power of Microsoft of Amazon and of Google right it seems huge and this conference and many other conferences are standing proof of the amazing stuff that we can do with today's computing power yet there is a problem the problem lies in the situation where we need to solve problems that are exponential the solving of exponential problems even with today's unbelievable power still eludes us and there are lots and lots and lots of problems that cannot be solved I like when I see in the news news like supercomputer X simulated a nuclear explosion and you go like dude at the times that we live right it's like we're simulating nuclear explosions the reality is that that supercomputer simulated a super simplified model that resembles remotely what happens in a nuclear explosion turns out nature works in a way that even with today's classical computer resources we cannot keep pase one of the big problems that humanity faces today is inventing the right materials and the right substances and dr. Marcus in the keynote talked about that amazing molecule which we call the thermocol molecule that once it is understood could replace our ancient technology for producing fertilizers I give you an even simpler example what if I want to model the behavior of a system that contains 30 electrons to keep track of the states for that model I will need to at the power of 30 numbers right suppose the number is a tiny number like a byte I would still need to at the power of 30 memory locations just to track all the states because of course you need to track all the states as they occur with different probabilities now if you go from thirty to a hundred electrons you're already surpassing that combined power that all the data centers in the world have and if you go from a hundred to as little as 300 you've already surpassed the number of particles in the known universe so turns out nature works in a way that classical computing is not really capable of simulating which is in itself an an amazing thing right and the promises of quantum computing computing that works based on how nature really works are just mind-blowing new materials new substances improved algorithms are some of the promises but because I'm kind of a realistic guy I will emphasize on the word promises they are not certainties we think today we could use quantum computing for all of these there is a good probability that we will be able to use it but these things are not yet certain so let me start with a very very beginning the humble bit the humble bit in classical computing has only two possible states 0 or 1 and turns out there are very limited number of operations that you need on a beat or on multiple bits to sort of implement any kind of algorithm in classical computing the equivalent in the world of quantum computing is tarah the qubit now the qubit is a weird animal because it can have two states are 0 and the 1 but it can also have any linear combination of those states described by two complex numbers the only condition they have to meet is that their norms are it should be 1 there's a saying that I love so much which says the universe is a complex thing it has a real part and an imaginary now the first question I always get from developers from IT people even from non IT people is why I mean why is the cubit an Alpha and the beta and why are they complex numbers and why the sum of their squares norms should be one why why don't we have three numbers why shouldn't they be real numbers let me tell you a story I am a considering myself a very very fortunate man because life had taught me humility in more than one way the one way that I want to tell you about is it gets back to my first year in college I was what you could call a calculus hotshot I knew I thought I knew calculus right so besides calculus we were forced to study two other things one was probabilities the other was statistics I hated them with all my guts right fast forward 20 years I work mostly in AI and for a few years in quantum guess what when I wake up I dream probabilities and statistics when I go to sleep I dream probabilities and statistics it's it's a weird lesson that life have thought taught me now about 15 years when I started to study quantum mechanics I was really not able to get past the first chapters I watched one of the I believe the best introductory courses in quantum mechanics which is Professor Leonard Susskind's course at Stanford I was never ever able to get past chapter 3 I'm like am i stupid like I know math right now I already know probabilities and statistics how come I can't understand these stuff until I met a professor from my hometown University a professor of physics who enlightened me it's like dude you know why can't you go further with this why because you try to picture that information in your mind forget about that go with the math I was like in shock and awe it's like how that can be possible right now back to the question of why is this like this well it is because of some of the fundamental principles of quantum mechanics which we call postulates they are the kind of thing that you observe in nature but you cannot explain they are because they are it's like mind bending right so the first postulate it says that any physical system in the nature can be described using a vector space of complex numbers right and this in itself is is amazing and it is amazing because of this this means that if a system has one state and can have another state it can have any linear combinations of those states so back to the humble qubit this means that a qubit can have an infinite number of states welcome to the world of quantum computing and that's just the beginning the second one is even more interesting it says that if you want to observe a system in in nature the way it evolved can be described by what we call a unitary operator which is by the way nothing else than a matrix that has some properties and here's another amazing thing about quantum it is described by linear algebra turns out if you remove the restriction of linearity you get into the weird stuff like time travel which at the moment we think it's not possible this is why we use linear stuff now the other cool thing about this is that it is a unitary transformation which means every single operation in quantum is reversible this is one big step from classical computing think about the or gate the or gate on bits is an irreversible operation given the result of it you cannot tell for sure what the inputs were in quantum everything is reversible turns out there for some of the states of the system if you apply that operator you get the same state multiplied with a number and these are fundamental in quantum the number is called the eigenvalue the state is called the eigenstate now why are they so important is because of this the only result that you can get when you measure a system is one of the eigenvalues which means getting back to the humble cubit there's no way to find the state of the cubit the moment you measure a cubit it will either yield the 0 state or the 1 state and that's all and the kuba itself will collapse into one of those states and no matter how many additional measurements you do on the cubit you will always get the same initial value we call that the collapse of the state so you might already be a little bit puzzled it's like dude these things have an infinity of states they cannot be measured yet we're talking about doing computing with these things right isn't that like like just simply amazing now here's the other postulate and again all these things are derived from experiments from what we observe in nature there is no proof for these there's only a general belief today that they are true statements so this postulate says that when you measure for instance a cubit you will get the zero state with a certain probability and you will get the one state with a certain probability and of course if you add the two probabilities they will yield 1 which means that if you would really really want to learn about the state of a cubit getting the accurate values you would need to do what an infinite number of measurements on an infinite number of qubits that are set initially in the same state so good luck creating algorithms with that right it's it's it's amazing and this is the one that I've already mentioned right so immediately after you get the value the system collapses to one of the fundamental states and finally this is what you sort of hear and see every time you you somebody talks about quantum right the postulate simply says that the time evolution of the system meaning applying that unitary transformation to a state getting a new state and then applying that and getting a new state and so forth preserves what we call the normalization of the state you will hear many many times the state being refers as a cat vector or simply a cat turns out that this implies the equation at the bottom of my slide don't worry if it looks like alien sort of wording to you that is what we call the Schrodinger equation that that is the fundamental of quantum so let's get back to the question of why it should be a little bit clearer now why we design the entire logic of quantum computing around this model basically what we are saying is that qubits live in a two dimensional space that is defined by two complex numbers alpha and beta and the only thing needed to have a valid state is to satisfy the condition of the sum of the square of the norms of the complex numbers should be 1 which in turn means that this space turns out to have these two eigenstates and by convention we named they we named them the zero state when alpha is 1 and beta is zero and the one state when alpha is 0 and beta is 1 and the qubit can have any linear combination of these states so looking at this slide is like dude that is so abstract right it's like well it turns out there were folks that invented a way of looking at this in a different way which is more visual for the human brain and that is called a block sphere now let's go back to the definition of the qubit right alpha is a complex number which means it's defined by two real numbers right the real part and the imaginary part beta is a complex number which means it is defined by two real numbers so it occurs that a qubit is actually defined by for real numbers but because there's a relationship between those for real numbers it turns out that the qubit can be defined by three real numbers and those three real numbers are actually points on the sphere that has radius one so now it becomes in a more visual way obvious why a cubit can have an infinity of states think about state zero as being an arrow from the center of the sphere to the North Pole that is state zero think about state one as being the arrow from the center to the South Pole that is state one now imagine an operation on the qubit being defined by simply moving the tip of the arrow like this like this like this like this like this so in a visual way an operation on a qubit is simply moving the tip of the arrow but because the sphere has an infinite surface in terms of point turns out you can have an infinite state for your qubit and even more than that which is even more sort of disturbing you can have an infinite number of operations on the qubit those operations we will see in a moment are called gates so turns out you can have operations on a qubit and because the qubit is in a two dimensional vector space the operations will be two by two matrixes if you multiply a 2 by 2 matrix with a two dimensional vector what you get is a two dimensional vector all of these matrixes desire that I'm showing you here our matrixes that satisfy the requirement of leaving the qubit in a valid state after they are applied the ones that top-line are what we call the poly gates what they do if we go back to the Bloch sphere they simply flip the state on one of the fundamental axis so the ax gate what we'll do is we'll take the arrow from this position and when applied we'll flip it down the Y gate we'll take the arrow from this position and it'll flip it the other way and of course the Z gate will take it from here and get it there these are some fundamental gates now the SEC that the fourth one is the one that made Einstein be so upset that gate is what we call the atom art gate and the atom art gate puts a qubit in a state that we call a superposition state because it puts it in a state where if the qubit is measured you will get 0 or 1 with equal probabilities 50/50 so think about this in a visual way basically what the atom art gate it puts your qubit the air or something like this so when you measure it will go either like this or like this 0 or 1 with equal probabilities if you take a qubit apply the atom art gate to it and then you measure it and you do this enough times you will get roughly about half of 0 states and half of 1 states why did this is make Einstein very upset I will tell you in a minute turns out there are two other gates which I'm not going to enter into too much of detail the ass gate or also call which we call the phase gate and the paper eight gate or the t gate we will see in a moment why these gates are important now just think about it all we've talked about so far is one qubit this is one qubit right let's see what happens when we talk about multiple qubits so one qubit will always be in a state defined by two numbers say alpha 0 and alpha 1 if you take two qubits you will already have a number of two at the power of two states meaning four states defined by alpha 0 0 alpha 0 1 alpha 1 0 alpha 1 1 the squares of these will still need to obey the rule that their sum should be 1 go with three cubits you will have eight states go with a thousand cubits a system with a thousand cubits can model to at the power of a thousand states which gives you a little glimpse on the unbelievable raw hidden and I emphasize hidden power of quantum computing so this is the picture that professor Marcus showed in the keynote and he said you can tell these do folks are really really upset and they were and just as a side note this is another example of how life can teach humility even one of the greatest geniuses of all time the quantum effects that were predicted by his genius theory were looking totally unrealistic and unbelievable to Einstein in fact until the end of his life he tried many many times to prove them wrong he could simply not believe that nature could work in a way that is fundamentally based on this order yet this is how it works and the reason why he was upset is this particular state of two qubits you can see here that alpha 0 0 is 1 divided by the square root of 2 alpha 0 1 is 0 hence we don't have it alpha 1 0 is 0 hence we don't have it and alpha 1 1 is 1 divided to the square root of 2 this is a state of two qubits that is called a bell state sometimes we call it an EPR pair EPR stands for Einstein Podolsky and Rosen who wrote a famous paper trying to show that this cannot be real yet it is the popular name of this is entanglement these are two entangled cubed modeled in a mathematical framework of quantum computing why is this like drain explosive is because if you entangle the two qubits and you separate them apart say by ten thousand kilometers and you do something with one qubit it instantaneously happens to the second one as well and this has been already proven by countless experiments turns out there is somehow a connection between the two of them which looks to be instantaneous so the immediate thought that you can have is dude this is the way to pass the speed of light this is the way to communicate faster than the speed of light well Mother Nature has surprises for you it is not turns out there is a fundamental theorem which we call the no-cloning theorem which says with two entangled particles or two entangled qubits you cannot transmit any kind of quantum information unless you also transmit some physical some classical bits transmitting classical bits is still subject to the speed of light yet we can do some amazing things based on entanglement now might be a good moment to move to gates that operate on two qubits so far all the gates I've shown where gates operating on one qubit they were matrixes of two by two obviously if you need to operate on two qubits you will need the matrix of four by four this matrix is a fundamental matrix in quantum computing and the fundamental gate which we call the C naught or in other words it is the controlled-not gate what it does is described at the bottom of my slide the inputs are two qubits the gate works like this if the first qubit is zero nothing happens to the two qubits if the first qubit is in the state of one the second qubit is flipped that is an apparently simple C naught gate well turns out the atom our gate plus the C naught gate are the gates which with with which you can produce entanglement so all theory very nice very interesting hopefully but time to see some stuff in action let me just duplicate my screen and open what else then visual studio of course our folks in the back ok with the size of the font yeah thank you so turns out Microsoft created what we call the quantum development kit which enables us to do quantum programming in a language called Q sharp using a quantum simulator now because we're using a quantum simulator of course the number of qubits that we can use is severely limited yet we can do some amazing stuff with this let me show you so here's the way in which a quantum program looks in q sharp obviously it's a basically a dotnet program console application so what I do in the first place I'm initializing a quantum simulator which is basically the equivalent of a quantum computer with a limited number of bits and then what I will do is I will repeat a hundred times this operation measure one qubit and then I will simply show the results and I'll we show you the frequency of zeros and ones now obviously this is no news for any programmer right so the fun part is actually here let's take a look on how do I do this so what I'm doing is I'm requesting from my quantum cannon and a bit later we will talk about the cannon it's not the kind of cannon that you would think right so I'm requesting from my quantum cannon one qubit basically an array of one qubits then I'm applying the atom art gate on the qubit which means I'm putting this qubit in a superposition where both states 0 and 1 occur with equal probability 50% and then simply I'm measuring the qubit what happens the moment I measured the qubit it collapses to one of the states 0 or 1 so at the end what I'm doing is if it collapsed to the state of one that I'm flipping it back to the state of 0 there's a fundamental rule in programming with C with Q # (sharp) every single time you need to return your qubit in a zero state you get them in a zero State always return them in a zero state some kind of like a reference incrementation in the old days right kind of well and I will run this multiple times let's see what we get so let me run this because we have a small number of a small number of qubits it runs on my machine so here's what I've got the results of the measurement are I got 51% of the time the value zero and forty-nine percent of the time the other state and the reason why they are not fifty is because I did a very small number of measurements and because the random number generator on my computer is not really adding the number generator is actually a pseudo random number generator so that's why you don't get all the values okay let's go into a little bit of a more detailed approach so now the next thing that I'm gonna do is I'm gonna measure two qubits so I'm requesting two qubits and then I'm applying the same at the margate on both of them and then I'm measuring them and this is a nice operation that I have in the lock wanna mass decay which says em reset Z which means measure and then reset the qubit so I don't need to check the condition that I checked before so basically when we run this I'm gonna run again the first step of course and then I'm gonna run the second as well here's what we get pairs of qubits and there's absolutely no connection whatsoever between their states right you can see that you can have 0 or 1 or 1 or 0 or 0 and 0 this is because applying the atom art gate to every single qubit created an super position state which is independent of the other now here comes the fun part next thing that I'm gonna do is I'm gonna request two qubits but this time and and take a close look to this I am applying a damar gate to the first qubit and then I'm applying the C not the control mod gate to both qubits what happens is they will be in an entangled State so now when I do the measurement guess what the states match perfectly and that's because they are entangled I haven't set the state of the second qubit I just applied the see not gate and if you want to go a little bit further than that let's just bump up this a notch and get crazy let's do this so this is another gate this is a more composed gate where I do a rotation based on an angle and I only do the rotation on the second qubit so think about it like this right initial qubit set like this then I'm entangling them and then I'll apply a rotation for the second one say something like this what happens when I do this this this is entanglement and of course if you run it again we will get the result that we are expecting if my visual studio agrees to do it and it does sorry about that so oops apparently there was a problem in my simulator I'm very sorry about that let me do it again okay so as you can see in the third case I still have the same States this is truly it is of course it's a simulated one but it's a simulated demo of quantum entanglement isn't that just amazing so let me continue because there is some even more interesting stuff down the road now turns out that if you take this set of gates H S CNOT and T divided by 8 or the T gate this set of gates is a universal set of gates which means that with only these gates you can actually create any operation in quantum computing and this is a fundamental result this is why we actually have quantum computing because if you cannot find a set of gates it's it's very similar with what happens in classical computing if you cannot find that set of gates then you cannot create complex algorithms everything I've showed you until now is perfectly useless right there's absolutely no application for what I've shown you so far unless you can build on top of this and create complex things and without this fundamental thing you cannot do that so here's another moment for a reflection I want to do an algorithm I want to implement an algorithm yet I have a computing framework quantum computing where I can set initial States for my qubits I can change those states but I cannot read them because the moment I read them they collapse so good luck designing quantum computing algorithms with this it's like you're working with a black box it's like how many of you do any kind of work with databases right imagine that all you can do is set the initial state of the database and then do operations on it without ever reading the database and expect to obtain the correct result is that cool or what right well this is the challenge this is the challenge for implementing advanced algorithms with quantum computing so now is a good moment to get into a real demo and this real demo is about search suppose I have n entities and for the sake of simplicity let us suppose that N is a power of two right and I have a function that gets us input and entity and gives me one if that entity is the one I'm looking for and zero otherwise and suppose that function gives me a one only for a single entity this is a sort of a formal definition of a search problem now in classical computing if I choose randomly one of the N entities what is the probability of getting the one that I'm looking for is 1 divided by n obviously turns out with quantum computing you can get the same result but not with a complexity of n but with a complexity of the square of n which is in itself a sort of unbelievable result every single time I talk about this algorithm I get people looking at me like dude what's the catch right let's take a look and I won't go into the details I'm going to only discuss about the principles nevertheless it's absolutely impressive so let me go back to my visual studio and let's switch gears and I'm gonna do the following here so I'm gonna set up of course I'm creating my quantum simulator and then I'm going to do a random search without any quantum improvements and just remember this number of iterations which is zero right and I'm going to use three qubits which means that I can simulate searching in what in eight entities now this might seem like dude why do we want to search in eight entities well imagine that when you have a thousand cubits you can search in two at the power of a thousand number of entities which is kind of mind-bending so for the purpose of the demo I'm searching in three entities and of course the classical success probability is 1/8 and I'm gonna repeat the process a thousand times so that we can get some statistical relevance out of it and what I'm going to do is I'm going to run this operation called apply search we'll get to it in a moment and then this will return a result which will give me a 1 or a 0 meaning that I found or I have not found my entity and then the state of that entity that I was generating at that moment and of course what you would expect running this is you would expect to find the right entity every one cases out of 8 so let's go a little bit to apply quantum search because this is the real juicy part of it and without getting into too much detail this is apply quantum search so what I'm doing here is I'm allocating n plus 1 cubed and 1 cubed will be an interesting one because I will use that to be what we call the marked qubit the Mart qubit will be in a state of 0 if the other qubits do not represent the entity that I'm looking for and will be in a state of 1 if I have found those the state that I am looking for and then I'm going to call quantum search I'll get to that in a moment and then I'm gonna simply return the results I'm gonna measure the mark qubit and I'm gonna measure the rest of the qubits and return their states and at the end I simply reset all my qubits because of course the rule is you have to return them in a zero State so what does quantum search here's the amazing thing this function that I mentioned that gives you one if the if the entity is the one you're looking for and zero in the rest of the cases is called an Oracle what the quant State does it initializes it allocates and cubed and then initializes all of them with an atom art gate meaning that when you read them you either get a 0 or a 1 so basically I'm allocating a random bit string generator of length m and then I define my Oracle just for the sake of the demo my Oracle is basically this operation which says the following I will only mark the mark qubit if the rest of the qubits are in a state of 1 so basically the entity that I'm looking for is an entity that has all n qubits in a state of 1 it's very simple I'm looking only for for one entity this is the function that returns and getting a little bit back to quantum search this part is the amazing part and in the first part of the demo I'm gonna run with 0 iteration so this part won't run let's see what happens it's quite expected and quite obvious so you can see here the theoretical probability is 0.125 because it's 1 case is out of 8 and as I run through my state as you can see the probability sort of goes toward that and in fact I only display here every hundreds attempt and unfortunately in none of those attempt turns out that I found the state that I'm looking for but there are attempt where obviously I found it because my probability is close to the theoretical probability so this is an example of how quantum does not improve anything right right now let's do some magic now in the second part I will run with multiple iterations through what we call a grover transformation oversimplifying things what happens is I get that initial state but instead of trying to see whether that state is the state that I'm looking for I'm doing the grover iterations on it meaning I am applying a set of smart choices of quantum gates which increase the probability of making the result of that the right result it's like holy shit let's run it and we're simply restricted here by time and that's why we can't get into the nitty-gritty nitty-gritty details of this but there's nothing funky here this is real so now I'm going to press a key and I'm going to do the same thing but that initial state is going to go through a set of growver iterations which will make it closer to the desired state here's what you get from 0.125 sorry from 0.15 6 to 5 because now I'm using 6 cubits here just to get statistical results so this is a larger number of items from the classical probability of 1.5% I'm up to a probability of finding the result of 60% this kind of approach is an approach that we call amplitude amplification this is fabulous because I've done it without looking into the internal state of my qubits yet I've managed to get an absolutely impressive result so the immediate question is how do you create something like this right well it has been already answered by Professor Marcus's keynote right the only thing that I want to emphasize here is that all of these in real life work at 0.03 Kelvin which is 30 Mille Kelvin given the fact that the coldest place in outer space has a temperature of around 3.5 Kelvin imagine the challenge of building something like this the one thing that amazes me about Microsoft with respect to quantum computing is the courage and vision that the quantum team has when it comes to creating a quantum computer because the way they build their quantum computer is fundamentally different from all the others on this planet the reason why they do it is because topological quantum computing which is the approach taken by Microsoft promises much much more stable qubits so when you hear today the IBM's and the googles and the Righetti's of the world saying we have fifty cubits we have seventy cubits moving from seventy to a thousand is practically impossible using the other approaches and you really have to have vision and courage to approach this the way Microsoft approaches and that is the end of our story today so the way I see the world developing in the next decade or decades we will still have amazing improvements in classical computing and quantum computing is not going to replace classical computing is going to enhance and is going to provide solutions to some of the intractable problems that classical computing cannot solve today but in the same time what we will see in the space of quantum computing is simply going to be mind-bending and that my friends is also a huge challenge for all of us because I hope that from this glimpse that I've shown you today you will see the challenge of thinking in terms of quantum computing you actually have to forget almost everything that you know about computing and reset your mindset so with that I thank you very much for today I'm truly honored and humbled to see you in such a great number I hope all of what I've said makes a lot of sense if not I hope it will make at some point you can find me on my website and I'm also very very happy and honored to announce that this December we're going to have the first dedicated AI Microsoft conference it's gonna run in Vegas be in the three and the 6th of December it has an amazing line-up of speakers and of course I'm talking about the first line obviously right so if you feel like gambling a little bit come see us in Vegas this December once again thank you very very much and also if you liked it or if you've hated it please rate it on your mobile app thank you very much 