 ready right cool good afternoon how we doing yeah well having fun yay cool so we've got a bit of fun too to round out the middle of the afternoon and I want to start with a quick question for everybody who here has a cloud connected device fitness tracker smart home thermostat Roomba vacuum cleaning yep all of us we all have these kind of devices now by a cloud connected device what I mean is a device that maybe you wear it maybe it's in your home it has some sensors on that it gathers data it ships that they through up to the cloud and then you have a client app to then view that data and then maybe you have some configuration that you can figure on your client on your web app mobile that website and that configuration gets pushed up to the cloud and back down to the device now these things are becoming ubiquitous pretty much everything from washing machines toothbrushes everything these days is becoming cloud connected so I want you to imagine your boss has come to you and said we need to build our new cloud connected McGuffin you need to build your cloud connected thing so where do you start with the prototype obviously the first thing I do is put a prototype where do you start with the prototype you need to think about hardware these are devices with sensors with capabilities you think about hardware you think about software the hardware you've got will be running some kind of software you just think about that you think about the software you have in the clouds you think about the software you have on your client so how do we get started how do we do this so I want to talk about this from the perspective of a cup of a cloud connected fan my lovely device here held in place with some unicorn duct tape so seeing as it's lovely weather out there I thought it'd be really cool to build a climate control system on a smaller scale the purpose of this device is it monitors the temperature if the temperature exceeds a certain point the fan comes on when the temperature goes back down the fan goes off and I won't get this data up in the cloud so I can access it from a client app and I won't have better configure the temperature at which my fan goes on and off from my client app so let's clan just talk through this the first question that comes up is what do I need well I need hardware obviously I need software on my hardware and he's suffering the cloud and his software on my clients so let's stop let's stop I think about the hardware we need to have some hardware here now when you're building a prototype you don't want to start creating custom hardware it is very expensive to start printing circuit boards getting custom-built silicon you don't want to be doing that ideally you want to start with some kind of prototyping board ideally want to start with something that you can code easily that works with your existing coding tools when languages you know something that's got sensors already built in you can take advantage of and maybe expansion and ability systems do more stuff with it now the particular board that I happen to like is the MX chip or the azure IOT dev kit I love this board now I've actually got into IOT about a year ago simply thanks to one of these boards a friend of mine Sue's she gave me one I started playing with it I got hooked these are awesome these are our three no compatible boards they're pretty cheap they're about 40 bucks or so for one of these they have a whole load of stuff built in so they've got microphone headphone socket infrared Wi-Fi Bluetooth they've got temperature sensing humidity sensor accelerometer magnetometer and gyroscope to pick up all the kind of movement that you want to do with it they've got buttons they've got an OLED screen they've got LEDs do we love LEDs yeah when we were playing with IOT we want the LED to light up that's what we care about this has got two LEDs how awesome increase is his board two LEDs one of which is multicolored so it's got all that and it's got this lovely little finger connector at the bottom now has anyone here heard of the BBC micro BAM little tiny cheap computer invented the UK where I'm from fantastic board kids play with it we've got a whole dozen of students and the kids have been playing with they have the same connector the idea this connector is you can clip on everything from crocodile clips or you can plug this into an expansion board and you've got pins you can control so you can send signals out to do things so my case I'm going to use the temperature sensor that's built into this board to read the temperature and then if my temperature is above a certain threshold I'm gonna like my LED because we love lighting LEDs and then I'm going to send a signal to a relay I'm sent a thank-you signal from a pin to a relay flip the relay on the fan comes on when the temperature drops turn off the signal to the pin relay goes off fan goes off that is my hardware not too not too difficult for you put together I put it together like a an hour or so now that's the hardware but I need some software running on my hardware and what's cool about the MX chip is it's Audrina compatible so I write Arduino code in C I write my setup and my loop that anyone who's done out doing it will be familiar with but I can do it all in Visual Studio code there is an extension built into vs code designed for doing IOT and there it's designed to work with this MX chip I can not only write my code deploy my code I can even debug my coat the MX chip has got the right debugging hardware I can stick break points on my code and step through it so it's telling me talking about it Trucy it see the code yes so flip over to visual studio code when you first launch Visual Studio code with this plugged in you install extension called the azure IOT device workbench every time you plug it in this workbench pops up and it guides you through creating projects if you want to now there's some particularly cool projects down here I like this one here I think this one's quite a cool project this Jim guy seems pretty awesome I'm liking what's going on there but there's also other cool projects so my friends series was built this one which is phenomenally cool you can upload an animated gif and it plays it on the screen on the MX chip that is a lot of fun that one so I launched Peter pseudocode plug my board in it spit up a project I start coding now if you lose don't know between their programming before few hands so with an Arduino program you have your dot in O file your sketch and you base everything around two functions set up and Luke now in my loop function this is where I want to get the temperature the loop function as the name suggests is called on a loop it's called a loop loop loop called again and again and again and again now in this function I want to get my temperature so I've got my get sensor data method here this initializes the HTS two to one sensor the humidity and temperature sensor it spins this up and it requests the temperature which I get out here I call get temperature it's a really nice API that comes with the MX chip for accessing the sensors and then once I've got my temperature zip down to my coat down here I check it against my threshold it's if it's warmer than my threshold temperature I set the color of my LED it's an RGB LED said 255 to the red Channel nothing too green and blue it goes red and then I do a digital right so that's how I send a signal on a pin out to my relay to turn my relay on if I'm below the temperature then I set the blue LED and then I turn off the signal I write two zeros of the signal and that says the fan off so if I just slip over here and I spin up QuickTime and I launch a new movie recording right say hello to the camera say hello yeah right so if I dip it down here I'm hoping this is gonna focus this camera can be a bit flaky when I focus so here is my board you'll see it's currently showing a temperature of 20 2.6 and my blue LED is lit because we love LEDs now I'm plugged into this BBC micro bit inventor skip and that gives me some pins wires onto a breadboard and then I am plugged to a relay down here and then that's wired up to my fan here so the moment my temperature is twenty two point three I'm gonna stick my thumb on here to warm it up and see the temperature going up 26 hugging my thumbs warm enough 27 Tom's a bit chilly in here make sure if I can get one bit quicker and then hopefully in a second when it gets warm enough I should have hugged a cup of coffee before doing there shouldn't I come on the aircon here is obviously too good there we go yay fan comes on thank you very much my LED goes red and then when I take my hand off as it cools down LED goes blue fan goes off so that's my hardware that's my device software that's all working pretty sweet now this is great just from the perspective of a climate control system but this isn't a cloud connected device and I don't if you know this but we at Microsoft we like the cloud but if you had that had that concept we loved it so how about we connect this to the cloud and I can do this with a think would azure IOT hub I love IOT hub IOT hub is a service to connect monitor and manage IOT devices at scale I can do one device for a demo I can do a hundred devices I could do a billion devices this is useful for me playing right the way up to if you wanted to sell outi devices across this entire convention center you can just take data and just plummet into IOT hub and it's kind of most basic feature it takes data in it uses the MQTT protocol which is a very lightweight messaging protocol for IOT and you can just pump your data in from all your devices obviously it does a lot more it's got security around devices it's got the ability to push configuration down to devices to manage the firmware on the device whole lot of stuff but first instance I'm using this to take my data in so I can send an MQTT packet from my MX chip up as your IOT hub now once my data's in the harbor I need to do something with it and I can do that using a national functions binding whose user functions yay lots of people add your functions is a our service offering it allows you to create event-driven code you write a block of code and event happens the code is run and we charge you a small amount of money per million times that we run it this is very cheap and a great way to run code OOP personal bunny and what's cool about as your functions is that as a whole and of what we call bindings so it allows you to connect your function to events to services just through configuration so I can define a function configuration I can say listen to my IOT hub through configuration I can say connect my cosmos DB database and every time an event gets raised every time an MQTT message come to my MX chip goes into IRT hub triggers manager function my code goes in cosmos dB I can do this like 11 lines of code it's really really nice way of creating event-driven code so I can use this and use Azure functions to push the code and to push my data into cosmos DB now of course once my data's in a database I want to get this on my client and again I can do that without your functions I can create an azure function that responds to an HTTP request that gives me a REST API I bind that to cosmos DB database and I let you do one line of code that says return the thing and I can get my data route I've got a nice REST API to query the data that went in from my IOT device so the last thing I need to think about is the temperature which my fan comes on how do I configure that threshold which the fan comes on enough and that I can do with a thing called the azure device twin I love device raises so cool it is at its most basic adjacent document it is just a JSON document but when I update the JSON document in the cloud it gets pushed to my device if I update it on my device it gets pushed up to the cloud and this allows me to manage configuration and what's cool about as well as it works offline so I update it in the cloud my device is offline nothing happens as soon as my device comes online it gets the data push down to it straight away so I don't have to insure my devices online when I do it I can change the configuration and then as soon as it connects I get my data that is really really cool so enough talking to do more demos yeah let's do it cool so if we start with azure IOT hub so I send a strap over MQTT with DMX chip there's a whole of libraries built in to make this happen for me so this is dev kit and qtt client it's just comes with the MX chip C library and then when I get my sensor data I call my send data function my send data function does a lot of horrible seed coat of format the day plums all into a JSON string and we call sentiment instance just that one line of code and that's it everything's going up into a variety hub and if I flip over to my add rarity have here if i refresh this we should hopefully see some data it's not playing very well today there should be some data in here there we go see so this all my message is coming in so from there as a portal in IOT hub I can actually see a live overview of my data coming in now what's really cool as well is if I wanted to from inside Visual Studio I can actually find my devices and actually show the messages I can see the live stream of Jason inside Visual Studio code so don't even have to go into our do you have like actually debug the Jason by watching it come through for inside vs code now this gets my data international IOT hub I then need to do something with it with my as your function cool I've got my asha function in here where's my code here it is this is my IOT hub trigger I have defined this as the I at this so this thing here this IRT hub trigger attribute it's the c-sharp code you can do many functions and a whole raft of different anguishes but this simply says connect to YT hub and use this connection string that's it as soon as I drop that in this code will be called every time data gets sent up to my IOT hub and that data gets passed into my function I have my data Bausch next thing I do okay cause most DB cosmos DB here's my database details this is an out parameter which means whatever data I put in here gets in certain cosmos DB for me automatically isn't that lovely so all I have to do my code is a bit of logging because we like a bit of logging get the data out build up this object bang into cosmos done what have we got here we have got 12 lines of code two of which are located some of its whitespace so I wouldn't say this is simple because you have to understand how the concepts work but I don't need to write much code a lot of the boilerplate a lot of the hard stuff is done for me so I can just focus on the business logic that I care about not boring old plumbing so I do this I get my message in cosmos TV so what I can do is I can flip to my cosmos DB tab because in Visual Studio code there's a most DB extension I go in here I've got my cosmos TV extension I can open my collection I'm from my document here we go down here there's my subscription my cosmos DB database collection document I have look here and it's 24.9 it says here yeah looks about right there's my document awesome so I can debug I'm doing cosmos from inside Visual Studio code now this is grey you know but I want to actually get this in some kind of client app more Roger functions as your functions for everybody so I've got an HTTP trigger this is a rest interface it's at a root of temperature slash device name and what happens is due to my lovely little syntax here whatever I go to go to my rest endpoint slash temperature slash thanks to whatever it plumbs into my cosmos DB query pulls back my data and I just return it all the Plumbing's done for me so I can just get my data back and that gives me this really nice rest API in fact if I flip over to postman here I've got I can just call it here I call my REST API 23.3 is the current temperature that's showing excellent I've now got an ability to get the temperature from here up in the cloud into my client now I want to configure the point which my fan comes on I want to set that and I want to do that without your device twins so one more added function because we love our functions another HTTP trigger in here i patch the JSON of my document so the device twin is a JSON document I request my device twin for my device I say give me the JSON document and then I patch it so there's a whole nice API I don't have to build an entire new JSON documents time I can simply say I want to patch a desired property called temperature threshold that just adds one row to my JSON document or updates therefore it exists and then I update the twin once I call this the twin is updates and IOT hub gets pushed down to my MX chip if my own X chip is offline next time it connects it pulls this down that's it's my temperature configuration and again I can do that for inside postman I can make a post request I don't set my threshold to be 20 in a second that we pushed down to my fan comes on there we go and then I can round that back up again I can say what my fresh off to be let me think 29 set the threshold it gets pushed down my fan goes off and the way this is handled on my MX chip when I call my setup when my device first starts up connects to Wi-Fi I set my device to win call back this is the function that's called every time the device between a sink down to the device I do a little bit of JSON parsing it's not very nice handling Jason in C so sorry about that that's not so nice but I pull out my temperature threshold here and that way next time I loop function calls it's got the new temperature threshold awesome so what have we got so far we have got some hardware we've got a temperature sensor we've taken that a temperature setting up the cloud and use the temperatures to control a fan we've got an API to get the temperature they've got a flight to configure the point the fan goes on but obviously our customers don't use postman wouldn't it be really annoying you buy this wonderful smart home control system and we give you the REST API so you have to connect over postman that would be annoying but of course it's just a REST API I think all of them anything who does salmon development it was here earlier watching James not to make no chef all the cool stuff yeah cool well let's do some of that you know what I've got a salmon app here and I've got my URL manager functions it's just HTTP request so I can take a usual HTTP client I can make a get request to get the temperature I don't make a set request to update the threshold and if I step over here to my app running my temperatures 23.4 let me drop the fresh shot down to 21 I click that it makes the request my fan comes on awesome I ramped it up I do that it gets pushed down my fan goes off or down from a mobile app and of course as I adjust the temperature here we should see in a few seconds the mobile app should update there we go and update to show my temperature awesome so what have we done we've got Hardware one board to rule them all one board with all my sensors a lovely breakout system can connect up to the cloud I've got a breakout from there to relay to a fan I get my temperature ship it up to azure IOT hub as your function gets fired saved it to cosmos dB certified your functions to control everything one to get the temperature one to control that the temperature threshold that goes put into a device twin automatically pushed down to my board everything works I have my prototype my boss is happy I go home with a nice big fat bonus cool so thank you very much your time hope this was fun I'm Tim Bennett MacLeod I've got a Microsoft take a photo of this this is the important part take this photo that's me on twitter follow me a tweet IOT stuff mobile stuff and just general rubbish but if you go to a cure - MS slash IOT fan that is a github link with everything you need to recreate this there's links to buy the board that's how you sit on up and there's links to all the relevant documentation that you need to learn about IOT hub device pins and functions and there's the code - so thank you very much and enjoy the rest of Microsoft build 