 There's been a lot of speculation about cryptocurrencies are they the future of Finance or just another fad These digital assets have divided the investing public and even the academics who study them the one thing we know for sure They've made some of their founders and early investors spectacularly rich This series gives you the chance to hear from some of the most influential people in the crypto space in this episode We talked to Lehman Bear the computer scientist behind a technology called hash crafts In this section of a longer video Lehmann explains the nuts and bolts mechanics of how hash graph works He also shares his thoughts on distributed ledger technologies more Generally, that's the overall category of technologies that powers cryptocurrencies Hache graph is a way of making a distributed ledger work in other words It's a way to have a bunch of computers come to an agreement on the order of our transactions of the things that we're doing And it also puts time stamps on them. So we have an agreement that this transaction was first and this one was second Not the other way around and we have an agreement that this transaction happened at noon on Tuesday And the whole community is agreeing on this and that's what everyday DLT needs to do Every distributed ledger comes to agreement on ordering and time stamps and that's what hash graph does But it doesn't in a very strange way not the normal way of doing things It is not like proof of work. You do not have to buy a supercomputer to run a node In fact, we have full nodes that are raspberry PI's, you know, there's little tiny $30 computers mice melt cell phone Of course is far more powerful than you would need to be a full node cell phone can easily do it So we don't use proof of work the obvious way of getting consensus is well, let's just have a king I mean, that's the easiest way to make everyone agree on something. We'll have a king and the King decides what we do That's the simplest way to have agreement. So in a lot of old systems that were designed and so and many of the new systems are based on a leader and In some systems what you have is one computer is the leader Everybody sends it the transactions it puts them in order and then it tells everybody the official order that it decided on That's how it works. The problem is with a leader. You can do DDoS attacks distributed denial of service attacks What if there are a bunch of computers out on the internet that a hacker has taken control of? little tiny computers like the computers and Printers and in web cameras and in DVRs and they've taken control of a whole bunch of these little computers and they tell all the computers at once to flood the Leader with packets that would shut down the leader which would shut down the whole network Of course, if they're manage to get enough of these bots to shut down every single computer in the network, then the networks dead but you don't want it to be so fragile that just shutting down one would do it and So what we want is to have every computer be the same. We don't want one computer being the leader not even temporarily There are other ways of doing Ledger's Voting basis stems are 30 years old. The math is beautiful. The guarantees are beautiful They're really nice and no one's ever used them as far as I know these voting algorithms because they are so incredibly slow You have to send gazillions of votes over the Internet and receipts on votes and it just blows up and you can't do it So to my knowledge, no one's actually applied these in the wild and then you have hash graph, which is none of the above It's this weird thing in hash graph Here's how it works We all want to do transactions, you know my transaction might be to move some money from one account to another or my a transaction might be to store a file in our network or my transaction might be to run a smart contract a little program that that Enforces some rules. So we all put our transactions into the network anytime. We want to any computer can put in their transactions and When you have a transaction you tell everybody else in the fastest way we know in computer science in The most resilient way we know which is a gossip protocol. It's used all over the place You just tell somebody at random and now two of you know it and then each of you tell someone at random now four of you know it they each of the four you tell someone at random now eight of you know it and it keeps doubling and So in ten steps a thousand people know it in 20 steps a million people know it in 30 steps a billion people know it it just explodes outwards Exponentially fast spreads as fast as gossip spreads rumors in an office. That's why it's called a gossip protocol sadly It does not solve the problem of Consensus. All it does is the gossip protocol allows us to get our message out fast and everybody will get the message and So all it is is when I call you up I say so what do you know so far? Oh, here's what I know So far, okay. I'm gonna send you the messages. You haven't heard yet and you send me the messages. I haven't heard yet So everyone's going to get every message really fast, but everybody will receive them in a different order. So I'm now having to send you all my messages, but I'm also having to send you maybe 1% more messages so I need just a little bit more powerful computer a little bit more bandwidth and What those two hashes are is they just tell you here's my message? Oh, and here's the last message I created in the last message. Somebody else created who just talked to me and that's it every message Has these two lines going out to two previous messages and each of them has these two lines going out to two previous messages Earlier ones and so on and so on and so on and when you collect this pile of messages inside your computer You can just grab them out with all these lines And what you get to see is a complete history of how we've talked to each other Not only do you get to hear all the juicy rumors you get to see exactly how they reached you In fact, you can tell for any given rumor when each person in the office heard it Of course, this isn't offices or computers, but for any particular one of these messages You can see exactly when every computer heard it and in what order they heard it and in what order they talked to each other You get this complete history of how we have talked to each other Okay, that's weird because well that doesn't give me consensus either I don't care about that. What I care about is the ordering So I had to send the messages out I do that the simplest fastest most resilient way known is beautiful and add this tiny bit of information That gives me this weird Graph of all of us how we talk to each other held together with Brett with hashes We call it a hash graph It's a graph which is things connected with lines in math theory and it's a held together with hashes. So it's a hash graph Hash is just a way of taking a big message and scrambling it down to just a few bytes So we've sent the messages out. We've added a tiny bit of extra information Just get the hash graph and now we're going to get consensus By running one of those really old algorithms thirty-year-old voting algorithms that require gazillions of votes to go over the Internet But we're going to do it with no votes zero votes. We're gonna use virtual voting in other words You have to send the messages out You have to send a tiny bit more information and then you get consensus for free You send zero more information beyond that wait, how could you do that? It's because of the hash graph we can see the history of how everyone talked to everyone So I know what you know, I know when you knew it I know what you know about what Alice knows about what Bob knows I know everything about what you're thinking right now And so I know that if we did run one of those Thirty-year-old algorithms if we were to take one of them off the shelf and run it right now I know how you would vote. So don't bother sending me your vote I'll just run it in my mind and pretend that you voted And so I can run one of those algorithms that had the really strong proofs asynchronous visiting vote tolerance But I can do it purely in my head at Zero cost over the Internet no messages whatsoever. No bytes whatsoever over the Internet and it happens very very fast And so what we're talking about is when you do a transaction Everybody gets it as fast as we can push things over the Internet I don't think you could get the messages out any faster we pay a penalty of 1% in the amount of extra data we've sent so we basically still everybody gets it as fast as possible and As soon as you get one of these messages to get a few more You instantly know how fast this one is or where this one goes in history so when you get a message a transaction you Get a few more than you collect and then we just get a few more you will know for sure We're in history. This one goes and what the timestamp was on it guaranteed and it's guaranteed that we'll all have the same answer as long as less than a third of us are being malicious and it's guaranteed that we'll all get the same answer even if the internet itself is being malicious if there's DDoS attacks on us if there's Firewalls that are stopping traffic or letting some traffic through not others or slowing down traffic. It doesn't matter We have guarantees the strongest math guarantees that we could and so hash graph is gossip about gossip with virtual voting and That gives you incredible speed and so you can be doing hundreds of thousands of transactions a second or you can be doing Consensus in a few seconds. That is how hash graph works The idea is that we as a community are going to come to an agreement that this transaction happened at noon on Tuesday And no one person can unfairly influence what answer we come up with Basically, what we're going to do is the hash graph lets me see so much about our history that I know When Alice received it and when Bob received it and when Carol received it I know when each person received that transaction for the first time and the time they claimed to have received it and I could just make a list of all those times that everybody says they received it and work them in order and take the middle one on the list and If less than a third of us are evil Then it came from a good person from an honest person or was between two times from honest people But if you have a stock market fairness matters a lot If I put in a bid on a stock and you put in a bid on the stock If yours was put in a little bit before mine You want to get credit for being before me so that you get the stock? It is incredibly bad if I all by myself or by Bribing just a small number of computers could get mine unfairly put before yours Even though yours actually reached the world before mine reach the world This prevents that it prevents the unfairness there and so it's incredibly important for a stock market. It's important for an auction It's important for a patent office that cares in the order in which the patents come in it important It's important for a game If it's a first-person shooter and you shoot me and I dodge We care a lot which one happened first if you shot first you get a point but if I dodged first you don't get a point and so it would be Disastrous if I could cheat and hack the computer on the software on my computer And get my dodge to happen earlier than it really happened in this system You have fairness so it could be used for real-time games or it could be used for software. So that's what hash crafts Does it is gossip about gossip? with virtual voting that gives you speed and security and You get fairness and those enable all sorts of things for distributor Liman covered some of the basics about our hash craftworks We also learn more about distributed ledger technologies or generally what are their strengths are their weaknesses? And perhaps most importantly what can they actually do for us? We're still very early in the distributed ledger tech game There are many issues that still need to get sorted out and things are changing very rapidly But when armed with a basic understanding of how these technologies work We can all become more sophisticated Watchers of this space for real vision. I'm ash Pennington you You 