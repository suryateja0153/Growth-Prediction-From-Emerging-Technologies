 [Music] [Music] [Applause] [Music] [Applause] [Music] good morning today we are going to see the lecture on neural control of your hand exoskeleton the outline of this lecture will be as follows first we see the introduction why we go for neural control and then we see the corn and self-organizing map architecture and then we compare the results obtained from the coherent self organized based mapping with that of the inverse kinematics then we finally conclude the Reeboks now coming to the introduction the kinematic control of a robotic or is difficult since we require the inverse kinematics relationship between the joint space and the Cartesian space through the inverse of the Jacobian matrix model based systems or methods require accurate knowledge of the robot and also the computation of the inverse of the Jacobian matrix to obtain the joint angle in the case of a rigid manipulator the Jacobian is here non square matrix and hence the pseudo inverse of the Jacobian matrix is required instead of invest so pseudo inverse is given by J transpose J J transpose right inverse so this is the generalized essaouira inverse if you take if the manipulators degrees of freedom is greater than that of the coordinates of the Cartesian space so alternatively neural network based approaches avoid the necessity of estimating the follower kinematics and also the computation of the pseudo inverse of the Jacobian matrix now the training of the neural network in supervisory mode to control the robot is infeasible since the data which represents joint angle corresponding to the desired position is not available due to that reason supervisory mode is here in feasible methodology because of the non availability of the data which corresponds to the desired D position so basically we can do from the forward kinematics like for example if we take the forward kinematic relationship that is give the joint angles varying the joint angle 1 from 0 to it's limit and also join to up to join ten and obtain the power kinematics unique solution then we do the reverse in order to train the system that is we do the reverse data the system is trained with the data and you reverse it reverse give the joint angle and obtain D position that is if our kinematics and then you give the corresponding joint angle corresponding tip position as input and then try to obtain the joint angles corresponding to the the position you have given but in this case there will be possibility to obtain the accurate result because the system is non redundant that means you have the neural network you give input joint angle and you obtain the position of the end effector this is the forward kinematics so you take this data and take this data now for the inverse kinematics we feed this position data and try to obtain the joint angle as the output but this works well provided the system is a non redundant system where m equal to n that is the Cartesian space coordinates is equal to the number of degrees of freedom of the system but in the case of redundant robotic system the inverse kinematic relationship cannot be learned directly with this data because we have one to many solutions that means if you give this position for this position you may get for this position you may get different solutions possible you may get different solutions possible that is the joint angles for this tip position will be many that is one-to-many relationship in this case the system Network gets confused thus supervisory mode will not be feasible to do the in this kinematic control an alternative method is that the inverse kinematics relationship can be directly learned in unsupervised mode of learning by actuate in the robot with the joint configurations generated by the neural network and then adapting the network for the positions reached by the end effector such an approach resolves the redundancy in the learning phase so what the system is generating to that output we train the network and then by this method given the desired position we get the joint angles according to this joint angle we can get the forward kinematics so we have theta and the X so this with this relationship we can train the network so that the system the network gets add up to this type of relationship X and theta with this approach we can able to resolve their tendency in the learning phase how we are going to that we are going to see in this coming lecture so now we see corn and self-organizing based kinematic control of the exoskeleton first we see the coherence self-organizing map architecture the lattice is given here that is 3d cone a self-organizing map lattice so the system's perfect feature is the main important feature of this case of learning is its topology the arrangement of the neurons in 2d as well as 3d structure so each neuron is discretized into the input Cartesian space and its corresponding output joint angle space the input space is mapped in a linear manner by AI which is the approximation of the inverse of the Jacobian matrix because in general theta dot is equal to J pseudo inverse XD dot so this mapping is done by the pseudo-inverse of the jacobian so here in our case on based learning approach we are approximating this Jacobian inverse by the matrix AI in our case on based learning so here the system is in such a way that each neuron is arranged in the lattice is associated with the input space which is categorized by the Cartesian space and the output space which is generalized by the coordinates de taille an input space it is Xen which is basically the weight vector W en which corresponds to the weight vector and thus we can say that input space is discretized by the vector W N and the output space is discretized by the vector theta N and a linear map connects them which is given by a n this a n represents the inverse Jacobian that is the inverse Jacobian Jacobian pseudo inverse or inverse is approximated by this linear map which is a N and the case of based inverse kinematic control scheme uses weighted norm weighted Norv solution based formulation this approach utilizes or uses the weighted norm solution based formulation to compute the joint angle corresponding to the given tip position in the workspace so here the learning is done in order to obtain the weighted norm solution is given by theta dot equal to W or power 1 by minus 1 by Y n 1 by a 2 JW pseudo inverse Y X dot where W R is nothing but the weight matrix penalizing the the weight matrix penalizing the joint motion to achieve the desired cost that is desired a secondary task what you want to achieve as a secondary sub task is obtained by this weight matrix and we have the matrix J W which is given by J W or power minus 1 by 2 accordingly J W inverse pseudo inverse is given by W or power minus T by 2 J transpose x JW or power minus 1 by 2 J transpose whole power minus 1 this is the right inverse so the weighted num foundation gives minimum norm solution when W or equal to I that means the when W are equal to high that gives a solution which is given by if this is the solution then it means that W R is I this is corresponds to the minimum Nam solution the detailed case of algorithm is given by the reference where the artists are we premkumar and yell Berra that is in they have the visuals are going redundancy of robotic manipulator they have made visual visual redundancy of seven degrees of freedom manipulator that is in 2010 in robotics and autonomous system they have published this paper the detailed approach is given in that paper with the stability analysis so now coming to the learning algorithm based on K so first the winner neuron is selected by given the desired position based on the lattice of the case home a winner neuron is selected which has the minimum distance with respect to the given decide trajectory so the winner each neuron is taken and its position with respect to the desired trajectory decide given position is considered so which neuron is having a minimum discrepancy between the desired one and its position that is considered as a linear neuron from the minner non course motion or course movement of the robot manipulator is computed which is given by this expression that is for course momentum given the position that theta naught that is a course movement will bring the system close to the tip close to the desired tip XD for XD theta naught will bring X naught from X naught we are going to do the fine moment which depends on the X naught that is given by theta 1 equal to theta naught plus s inverse summation I like to want to Nha of the difference between the desired one and the coarse motion one that will bring the system much much closer finally to the desired position thus for a given yes d we have now theta naught corresponds to X naught by 4 kinematics and theta1 fine motion which corresponds to X 1 so we have this data now and we are going to make the system get adapted to this pattern of input and output where here the function y s is given by summation of I equal to 1 to n H i where H I is a function given by E power mu i mu minus I by 2 Sigma squared this is the representation for H I and yes that's the case and now after getting the two data which is X naught theta naught and X 1 theta 1 we are going to adapt the make the system get adapted to this data by this network adaptation formula where AI is getting adapted with old a and WI new the new weight update is done by this and accordingly the Teta I the new Teta is getting updated with this weight update rule and now coming to the inverse Jacobian approximation the inverse Jacobian approximation is done in such a way that taking the fine moment we rewrite it by DT 1 minus theta naught bringing the theta naught on the right hand side to the left hand side we have the difference delta theta is given by yes in the summation I equal to 1 to n hie I of the error and due to which the delta theta can be written as theta dot equal to yes in the summation of I equal to 1 to n H I AI into the difference also X dot thus J pseudo inverse is given by yes inverse into summation of this which is hiked to 1 to n H ai ai because this 1 into X I which is given by theta dot equal to pseudoinverse yes . so that the pseudo-inverse corresponds to yes in this into summation I like to 1 to N hie I thus we have approximated the Jacobian inverse by DK son learning approach under unsupervised technique and now we compare that approach with that of the inverse kinematics of the same three-finger exoskeleton or hand exoskeleton so the inner skin ematic approach for redundancy resolution is given by this technique which is a former kinematics XK equal to F of function of theta and the differential kinematics is given by X K dot equal to J Jacobian into theta K dot and the Jacobian matrix is the derivative matrix which is given by the partial derivative of the former kinematics equation with respect to the joint variable and the generalized solution for this differential equation is given by theta K dot equal to JK pseudoinverse into xk d dot plus i minus j pseudo-inverse j into n where the first term is the one that gives the solution which is corresponding to the minimum norm solution whereas the second term considers the redundancy present in the robotic system so which is basically the mapping from the space to the null space of the Jacobian so the null space is now getting occupied by this term this vector so due to which the null space of the Jacobian matrix is now filled with a certain domain so that that part will be utilized in the joint space of the Jacobian matrix in order to utilize a tendency of this system where pseudo inverse is given by the right inverse which is given a J transpose into J J transpose whole inverse and n is an arbitrary vector which involves the instantaneous optimization of a performance criterion in our case it is taken as the manipulative measures insert a neat option which is we are maximizing with the positive scalar with the first derivative the derivative of the manipulative measure which is given by a root of determent of GJ transpose of the manipulative because it's a redundant if it is non redundant it is determinant of j which is the manipulate bility and now we have taken this video that is the fingertip trajectory is to trace the straight line so from this straight line trajectory we have made the system to trace this given decide a straight line trajectory I repeat again rest to initial posture from initial pusher to a straight line final destination so this straight line Porcia trajectory of in the Cartesian space will provide or will make the system to have redundancy in the joint angular solution so how we are going to do this type of redundancy resolution for under the casein compared with that of the generalized inverse kinematics approach similarly we have done for the middle finger exoskeleton the previous was the index finger exoskeleton because it is a three-finger exoskeleton we are done for first for the index figure now for the middle finger and then for the thumb because as you can see that the actuators are not own or attached to the exoskeleton which makes that system in such a way that the exoskeleton now without the actuator acts as a slave whereas the human finger or a hand excessive master so the trajectory is now given by the human healthy human hand so that the exoskeleton follows it in order to take or derive d desired a tip trajectory so that that can be fed to the inverse kinematics approach as well as the cone and self-organizing based neural control so now after doing that we so computer D decided joint angle in such a way that it is given by this approach this is what the marker just let me get back so the marker one you see this the each strip in the motor or actuator attachment has two markers which will form a vector from the image we could able to obtain the joint angle that is the desired joint angle so that that can be given to the desired joint angle for the conan's for the cone cell for minimum also for the inverse kinematic approach in order to have the Linden C parameter being an optimal trajectory that is KP in our case we have taken this as a spline a pubic spline in such a way that this optimally varies with respect to time so that this can take a value which is different which is changing not only in magnitude but also in its sign you can take from negative to positive or positive to negative and the magnitude varies also so that we don't have to maintain this as a positive scalar instead we made it as a variable that varies in sign as well as in its magnitude so to obtain this one we are instantaneously varying the or optimizing the manipulative measure and also we have to have the discrepancy between the desired joint angle that we obtained from this videos of this real human act by the exoskeleton and that angle is the desired angle between this desired angle and the inverse kinematics angle to be minimized and that minimize to one will provide the optimal KP that is a tenancy trajectory so the is given considered the angle joint angle decide joint angle theta D is computed in this way that is the cause angles between these two vectors v1 and v2 so this is how the joint angle decide one is computed that has been given as the computation angle in order to have the root mean square error to be minimized so we have done that and compare the results now between the joint angles obtained from kasem based joint triangle joint con joint control of the exoskeleton and also we have done the inverse kinematics based redundancy resolution with the redundancy parameter being optimal residency parameter so we have comfort that for the index finger exoskeleton the tip trajectory is accurately mapping in the case of both the case home as well as in d inverse kinematic based approach but the joint angular trajectory is very good matching obtained in the inverse kinematics based approach whereas the imminency resolution done through caisson based approach gives the root mean square error thirty degree because we are supposed to include manically measure whereas what we have obtained is the weighted norm solution so because we obtain the weighted norm solution from the case of based approach it that's why the error here root mean square error is larger compared to that of the error obtained from you know skinny matrix based approach this is for the index finger X is written then for the middle finger we have nearly 50-percent hu greater than that of the root mean square error approach obtained from the inverse kinematics approach thus it is 7.5 degrees would be square error within the skin america approach for the middle finger exoskeleton and it is 15 degrees for caisson based approach but the tip trajectories are perfectly matching as it is the primary sub task to tracted given decide tip trajectory similarly for the thumb make so skeleton we have the root mean square error being 50 degree for the caisson based approach and then for the root mean square error for the inverse kinematics based approach it is 13.5 degrees whereas the tip trajectory accurate matching he is given here now coming to the working demo we did it for the index finger exoskeleton based on K so in order to trace the desired trajectory this is straighten trajectory and this is without the human hand and this is with the human hand so that straightened territory is clearly observed what is observed here is the exoskeleton now accessing Master that makes the slave human finger to trace the straight line trajectory this is a first prototype what we are having here is the ultrasonic actuators that is having a good way to good power-to-weight ratio whereas the latest model what we have made is with DC servo motors so that the cost of the system can be reduced because with this ultrasound system with this ultrasonic ultrasonic system we have the actuator cost being very heavy and hence very costly and hence the expansion expenditure of this system is very high in order to reduce the cost of the system overall system we have replaced the ultrasonic motors with that of the simple DC servo motors so that the required torque of 5.2 kilogram centimeter is obtained with these motors as well and the demo is the working demo in tracing the straight line trajectory is shown here similarly for the thumb this is the way because once the more actuators are attached to the exoskeleton now the exoskeleton cannot be acting as your slave because the exoskeletons are getting moved by the actuation of the actuators and it cannot be freely moved by the human hand and thus with this motors attached to the exoskeleton the exoskeleton becomes a master and the human finger has to get traced by the trajectory provided by the master system now this is the demo which shows the coin tracing one so that you can make the coin to move in your slender straight line trajectory now coming to the summary of this lecture it is stated that in the starting we have seen what is the significance of unsupervised learning because the simple neural network based supervised to learn it cannot be useful in order to resolve the redundancy whereas unsupervised learning can be helpful or useful to resolve the tendency associated with the manipulators and from that we conclude that because of the comparison with that of the inverse kinematics approach with the optimal redundancy parameter we have observed that at the given tip trajectory tasks can be the performance of the designed exoskeleton is comfortable between the case home based scheme and that of the in cinematic space scheme but the for all the for all the three exoskeletons that is the index finger thumb and the middle finger what you have observed is the root mean square error that comes from the case who is significantly higher than that of the in the skin emetics based approach and the reason is in the case of based approach we did not include the instantaneous optimization approach of manipulative measure what we have done is we have done the weighted norm based minimum solution under the caisson based approach that's why the significant difference happens here and from the results it is shown that the inner skin ematic based trajectory gives a better results than that of the some ways to scheme and the references what we have followed for this lecture are basically from the paper by artists Prem Kumar and professor Lakshmi Deborah that is the title of the paper is visuals are going of redundant manipulator with Jacobian matrix estimation you see self-organizing map that has been published in robotics and autonomous system in LC where the volume is 53 the issue number is 3 and the next paper followed from this paper is the recent paper which is published in a conference I truly advanced intelligent mechatronics conference in 2018 which we focused only in the invest that is the exoskeleton part of the Indus kinema of the index finger exoskeleton and the kasem based topology approach or architecture has been studied from this book which is by Professor lets me Deborah and Indrani Kerr the book entitled as intelligent systems and control principles and applications thank you with this we wind up this lecture [Music] [Applause] [Music] [Applause] [Music] [Music] 