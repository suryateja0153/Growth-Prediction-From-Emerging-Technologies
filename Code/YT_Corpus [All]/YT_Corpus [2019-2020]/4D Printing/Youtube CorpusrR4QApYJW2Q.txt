 greetings i'm humphrey yen from carnegie mellon today i'm here to present similar a fast and accurate simulator to support moving material design and workflows the hci community has recently become interested in using active materials to enable new modalities of interactions but designing them is challenging because we need to accomplish their transformations and that is why we need simulations in our design tools but existing simulation methods each has their pros and cons and there is a tradeoff between speed and accuracy on one end parametric geometry ignores physical factors to achieve fast computation and they are less accurate we also have mid-spring models or elastic rods that consider some physical factors and are more accurate but they are also slower to compute and are subjected to specific limitations on the opposite end finite element analysis is highly accurate but they are also very slow to compute and are not interactive therefore we are test to develop a phase and accurate simulation method for moving materials this method should be fast enough to avoid real-time interactions while being sufficiently accurate to inform effective design decisions the concept is fairly simple given the material system we use fva to collect accurate data about its transformations then extract useful information to a wrap at the concise data set the data set is then used to train machine learning models so that when the model is trained it will be able to simulate fast and accurately and we can use that simulator to make design tools in this work we use thermoplastic 2x2 morphing grids to contextualize this concept the grids are made of bending beams and passive joints and are always fixed at the center during transformations we use a parametric script to generate different input models for fva these models have varying design parameters to cover the design space the fps solver is provided by literature and has an accuracy higher than 95 we collected more than 2 000 childs for training the final simulator raw fea results are distilled into concise feature representations the beams are represented in terms of their shapes stress fields and actuator designs whereas the joints are only described by their shapes and boundary conditions because of their passiveness we can also represent the grid structure as an abstract graph in which the joints are the notes and the beams are the edges this graphical representation also allows us to use graph convolutional networks as our machine learning architecture which accounts for the dynamics between elements at a high level the forward computation can be characterized into several steps given the grid as input we decompose it into beams and joints represented by feature vectors these feature vectors are then used by the network to compute their updates by applying the updates to the elements we can obtain their shape in the next time step as well as the grid as a whole and we can iterate this process until there's no further transformation finally when we benchmark the simulator we find that it is a thousand times faster than fva while being similarly accurate when compared to physical prototyping simulant is also 9000 times faster and provides very accurate predictions it is also highly parallelizable when running on the gpu in design tasks simulation also allows us to extend design spaces to those that require high accuracy and for workflows that require different levels of interactivity in a forward design workflow simulation can help users to iterate and explore design options without waiting in our joinery design example the designer used our tool to visualize interlocking behaviors and created multiple design alternatives in a very short amount of time we can also use simulant in inverse design tasks by leveraging its speed and parallelizability in our modular lampshade example the design tool used finite difference methods to bring the shaped feeding adding errors to an accessible range within 12 minutes much faster than manual design would we can also make optimization tasks more interactive by putting the user in the loop in our education table design if the designer wants to modify the structure the tool can offer candidate changes for the user to choose from and the user can make decisions based on their aesthetic concerns this way the tool and the user can each take on what they are good at to sum up similar can readily support complex design tasks and interactive workflows but there are still rooms for future research such as generalizing it to other material systems by swapping the fva solver and representations or scaling to different sizes by augmenting the machine learning model looking forward into the future we also think that simlearn will enable future design tools to become more active and conversational with the user finally this is the end of this talk 