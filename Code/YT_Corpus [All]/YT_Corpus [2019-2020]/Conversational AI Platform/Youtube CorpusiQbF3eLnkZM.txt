 [Music] hi and welcome to episode number 188 of the weekly Google cloud platform podcast I'm mark merchandani and I'm here with my colleague Brian Dorsey hey Brian hello and we've got a really good conversation here today with Priyanka about conversational AI kind of matter oh it's super super cool but before we get into that we also have our question of the week which talks a little bit more about running Python scripts or really any other script in a very recurring manner awesome but before even we get into that I like all these before it's very confusing about where we are the show as though people hadn't realized what the structure was well before we do that we do want to talk about our cool things of the week [Applause] so I work in Cerberus and compute for developers in general and you know we mostly focus on like trying to make it easy and smooth and reliable to run stuff but we also need to keep it secure and so there was an article on the geez people recently on how to execute the principle of least privilege when building a system and cloud functions so I just want to plug that a little bit I think it's pretty interesting and at the core it's basically using a service account dedicated for each function and then giving it specific permissions on your project yeah I mean these resources are easy to spin up and easy to manage so it kind of makes sense that you might create an individual service account for each function and then be really really granular about the permissions those accounts have and this is a relatively new feature for functions but it is definitely there now so it used to be the case that like all functions render one service account and so now you can make much more granular controls and we've got a link to introducing it and going into more detail in the notes and speaking of using functions to do kind of cool things there's a fantastic blog post that I just saw about spinning up a minecraft server using functions to send the triggers right for starting and stopping the server using compute engine to host the actual server and using some backups but I think what makes this really really cool is that this little blog post is targeted towards like having a child start to understand some of these architecture pieces and you know maybe as parent-child thing you can both work on it and kind of spin up a minecraft server which i think is super fun because you know we've seen a lot of examples of previous architectures involving Minecraft in the past but this is a fun way that you can kind of take something that most kids care a lot about which is Minecraft and try to get into showing them the architecture version and it even has like a fun little child architecture diagram which I completely adore but it's a very cute and very fun way to showcase a simple architecture and then it gives you a lot of ideas of what you might build on top of that for example a common one is you know how do you make sure that there's a sort of a cure for you setup so that the server shuts down well again that's something you can do with functions that's super interesting and I think applicable to a lot of kind of work environments as well so that's a lot of fun actually that reminds me I think several years ago a colleague of ours Julia Fraley wrote series of posts about container izing minecraft and running it on google kubernetes engine so let's include a link to that too so that might be like the the next step after a compute engine is you teach your child containers and then and then show the minecraft in that you could never start too early i you can and i would not want to be the person teaching containers to a middle school group but you know what actually i think a lot of people on our team are doing that and props to them and i think me you know what maybe you're right maybe you can't start too early and they get these concepts a lot faster than i did that's super fun okay so another cool thing that we cuz i think is keeping in tune with the overall theme for our main topic is around AI and we just recently announced a what if tool for cloud AI platform models so there's this on running understanding that one of the challenges for working with ml is actually understanding what's going on in the covers and how the models making decisions so there's this tool what if that has worked with tensorflow and now works with few other very common ml backends and works with air platforms are running on GC p or on your own machines to help you understand how the model is making its decisions so it lets you kind of investigate i guess by the name what if you were to change some certain aspects of it or how you can kind of look at it from a more holistic view and kind of ask more intelligent questions is that right yeah exactly that and you know for example kind of give you visualization of the distribution of where things land and when you click there you can see where the model made a different decision for similar cases so you can really get down at the details of why something turns out a certain way or not and help the model from there well i can definitely say that i would rather teach a large class about containers than i would about AI as a person coming from compute perspective i would be a lot more successful that way as well all of those words i just said were from the blog post that is linked in the show notes so that is it time to get into it I think we should let's go ahead and jump into our interview with Priyanka [Music] okay here we are I'm Brian Dorsey here today with mark and Priyanka for gaudiya I go ahead can you introduce yourself and what do you do sure yes so I am a developer advocate at Google cloud and I've been working with customers and partners on conversation AI use cases for quite some time so I'm really excited to be here it's a conversational AI what is that conversationally AI or conversational experiences it's basically a comprehensive name for a newer class of solutions that include chat BOTS voice BOTS experiences that are basically conversational based so whether it's an apps or messengers and things like that the common denominator is basically the use of natural language understanding and natural language processing which is obviously a type of AI technology to power these interactions between humans and and machines so let's let's take it a step back there tell us what natural language understanding really means absolutely so in very simplistic terms natural language understanding is a technology that helps translate human language into computer language and also vice versa so let's think about this as an example so when you and I when two humans are talking to each other and if we speak in the same language we don't need a translator but if I speak English and you speak say Spanish and I don't understand Spanish and vice versa then we need a translator in the middle to translate my English to Spanish and then your Spanish to English same way when humans are talking that human language needs to be translated to a computer because computer speaks binary zeros and ones right so our English needs to translate into those zeros and ones and then computer responds back then that binary needs to be translated back into English as well so that technology can be called natural language understanding and then while we are at it natural language processing is also worth mentioning right because natural language processing is a superset of this realm very rational anguish understanding falls in it and natural image processing in pollutes things like how do you paraphrase something or how do you summarize a given story or how do you understand sentiments off of a conversation or was there a spelling mistake or an error or accent changes and differences and things like that so that is what natural language understanding and processing means and it's kind of the core of conversational er technology okay so this is more than just like speech to text then yes it's absolutely much more than speech to text like I said when you talk about natural language processing speech to text is like one part of it there is natural language understanding which is the other part and then you hear things like text-to-speech is another part of it and then you'll also hear automatic speech recognition which is ASR so these are kind of like different parts of the technology that fall under natural language processing so we've got a way for people to talk and understand what they're saying and that's kind of one side of it but then you dive deeper into it right with things like sentiment and understanding what they're saying even going so far as to summarize what they're saying because you're able to pull out these very abstract concepts and then define them and say I think when this person mentions something about the Eiffel Tower for instance I know what that is I know where it is I know it's this landmark and then I can use that information to pull together something else whatever that workflow by be going back to what you were saying earlier about chatbots right I mean on a website usually there's a pop-up or something and then you can kind of converse with in this case an AI so this is something new or interesting I mean we've been talking about you know kind of robo chat for a while but this is more about actual AI why is this big and what's happening now that's making this more prevalent than it used to be the one that we are living in now with more and more devices that are coming online these days whether it's IOT or just our preference of dealing with more devices and working with more devices take an example you know you wake up in the morning starting from a smart coffee maker - like when you end your day with asking Google to set your alarm you deal with so many vices in the day and it's going to be and it's already is becoming really difficult to deal with all the devices and work with them on a smart screen we are going to have to have conversations with our machines and devices as we progress in this era where we have more and more devices just an example right when you're having breakfast or cooking breakfast and then and you want to know what's the traffic like to the office you don't want to look at a screen you just want to know the answer to that so that's just one example but that goes to say that we are moving in the era we're dealing with machines is becoming our everyday pattern and every minute pattern and for those reasons most people are interested in having their problems solved with wise and conversational interfaces so this is showing up in a bunch of place so you mentioned chat BOTS and we've got these kind of like the boxes you see on support for like websites they talk to maybe a home or other assistant thing in the morning for weather in traffic and such are these the most common use cases or there's other things what are people actually doing with this today and what do you see them doing next yeah I saw I just gave like the broad examples with the traffic pattern and alarms and such and smart coffee makers but word companies or enterprises are using conversational AI for our use cases around customer experience and customer support and it's very easy to start with that use case it's because of the fact that you know a very specific pattern of questions that your customers would ask or your users would ask so it's a lowest barrier to entry into conversational AI and examples could include like for example if you talk about retail that customer experience could be a personal shopper where I want to know a specific type of outerwear I'm looking for and then this personal shopper can give me recommendations on here are some of the different sizes and colors and party bears versus others and things like that and I actually built a demo around that a few weeks ago and then the other example could be in banking or in financial institutions where really when you go to a teller you ask questions like what's my balance or I want to withdraw an amount or I want to transfer an amount from this account to this account and you can do all of that through chat or a conversational experience so those are some of the easy waste can I get into it and also the best place to start because you know what the users asking for and you know how to respond to it because your backends are already supporting that with your websites or in a more personalized manner so you can put those two together into a conversational experience by using a natural language understanding or processing platform like the one we're going to talk about which is dialog flowing don't worry we'll mention dialog flow for you but I wanted to pick up on some of the topics you were saying there I mean with customer support being probably one of the premier examples of this and basically just taking that conversation piece and automating it right because there's a huge subset of the users that call in or they contact support and I'm sure there's some percentage out there I'll make one up and say 98% can be solved through like routing it through like three simple kind of formula questions that are FA cues or what have you but then the people who do kind of get through that and when they do get to usually a live human agent though at least have a little bit more information on what the context is so there's this great kind of balance between not having to be on hold as long because you want to wait for a person many people can interface with the Machine at the same time and not have to overload it but we've seen implementations of these things for a long time right I mean the automated phone support system has been around for quite a while and I speak for myself and maybe popular media when we say like oh these are so frustrating sometimes and they're so rigid and you're just like I want to check out you know I need this piece of information but the Machine won't let me have it or it needs these 80 things that it's not related it's very cool it's very interesting but it can also be incredibly frustrating I would hope that a lot of this stuff is changing it but you know I'm sure there's been lots of failure cases as well where does the challenge lie in this where do the problems happen yeah I think so the biggest thing that needs to be thought about or why conversational interfaces had have failed or do actually fail even today there is a really good compiled list but chat bots start fail and it's definitely worth checking out but I'm gonna highlight a few here some of the reasons why chat BOTS actually fail is the rigid structure right the flowcharts or they're really designed for how the machine responds and what the machines looking for not how a human would say something and that is where the biggest problem is so what we need to do in order to create a good natural experience is to use natural language obviously natural language understanding and processing where you can have the Machine understand what the users saying and then decide what needs to be done versus in the IVR examples that are frustrating that you mentioned mark we went the other way around right we are basically designing an IVR by saying ok I will only take a customer account information and if they don't give me the account information I'm going to keep saying can you say that again can you fake that again and that is what makes it frustrating because there is no understanding that the customer doesn't have so I can ask for these other things I'll give you a very simple example where if I say would you like coffee and the IVR is expecting yes or no and if I said sure it's gone it's gone wild because it doesn't know that sure also means say yes I gotta be honest in the mornings when I need coffee even yes or no is asking a lie if I could just kind of unintelligently grunt towards it and it's like yeah he needs to come that would be for her exactly so that's what I'm alluding to and that's the advancement in technology that we are utilizing with natural language understanding and processing so that's definitely one and then some of the others are you need to make sure that your back end is actually properly integrated with your front end so you can have the very best natural language understanding experience but if your back ends your databases cannot connect properly to respond to these questions then again that experience is not going to be useful so in this case let's take an example and say you connect to Salesforce back where you create these tickets or questions that the user comes with and you create a case in Salesforce but the hook or the API that needs to make that connection is either not live or you don't have the right way of making that connection then it's not going to be a really good and streamlined experience so making sure that the backend can connect is another very big example and then some others could be creating a chat bot that is a silo right and it only does this one thing and doesn't do the other five things that it should be doing so if somebody asks a question about the other five things that are not handled then how do you handle them in that but it's okay to not have them handled but not have the answers to those questions but it's it's not okay to leave the user thinking what they are supposed to do so you need to provide them something to go off of I have a related question around this exact thing so if we think about GUI versus command line you know we kind of think that the visual user inpatients are kind of more discoverable you can kind of figure out what's possible or not but you have to do the same thing every time and command lines you know it's not as easy to figure out what's possible but once you do you kind of internalize that and you can do things very quickly or you can make scripts to do things in order and I feel like we're almost missing like how to think about these things and in particular yeah for voice as a user I find this question of like not even knowing what's possible really challenging like I don't know what I can say or not say to the thing I'm talking to you and it gets frustrating after a while as people are interested in designing these do you have recommendations for how to help with that challenge yes so the first biggest recommendation that we offer when we it help design these experiences is then the user ends up on your body experience or in your chat experience however they are ending up on that landing prompt that prompt should be very specific in terms of what this bot can do so when I have when my bod responds back saying hi welcome to XYZ I can help you get your balance information and transfer funds from one account to another and if it does only these two things then mention those two things if there's any other question that they have at least a user now knows that the bot can do these two things is this like the rest of life like setting expectations is everything exactly right just make sure that you're setting those expectations correctly and obviously they're going to ask questions that you didn't expect them to ask and then for those you have the fallback mechanism where you say okay I didn't understand that but a connection to a human being or a live agent is also very critical there are going to be scenarios where your bot will not know what to do because it's not programmed to do that in those cases how do you connect to a live agent whether it's chat or a call is important and you need to figure that out as well while you're building the bot yeah I mean for command lines we've got like tactic help right so usually you have this verbose list of all the things you can do but in conversing with AI it doesn't exist is that something that see people have tried and it just didn't work is that something that just doesn't resonate with people I had a conversation with one of our voice user interface designers at Google a few days ago and she brought up a very interesting point she said we all assume that we know how to have a conversation and that's why we start building a bot without creating any blueprints and that is the biggest problem and she kept mentioning and highlighting the fact that you need to build the design flows they're not flowcharts they are the flows where you say here are the thousand ways in which people can ask for coffee and understandable right that machine learn is going to handle all those thousand ways but you still need to think how the flow would Traverse when they're asking for coffee in different ways and conceptualizing and visualizing that flow is really critical so she recommended that anybody who starts designing a bot do not start designing it without having a blueprint of what you're designing for here are the four things I'm designing for and then these four flows can look something like this and that is very important to have and I think that's the part we keep missing because we think that we know how to have a conversation and this is what people are going to ask my body and we just end up developing I'm super new to this when you say like design these blueprints I don't know what that actually is or looks like because I used to you know either code or scripts or you know HTML or something what's the format of these blueprints is it just drawing things out so you have a good sense your head or what does it look like and I ask the same question right because we are mostly developer-centric people so we think about codes and strips and for charts things like that and she literally said it can be any format that you want it to be in it can be just a simple script where it's like the user is going to say this and the bot is going to respond with this and the bot can respond in these four ways if the user says this question in these different ways so it can literally be any format you prefer it can be an excel sheet it can be just a word dog it could be an animated format with pictures and stuff but the idea is that you should have something to go off of and not just start coding this is gonna make it super awkward the next time I run into Brian in the hallway and I'm gonna be like hold on let me bust up my spreadsheet because I need to map out this conversation well yeah do you put that amount of preparation in because I promise you I am now self-conscious about being able to have a conversation Frank is like most of us don't know how to have conversations of like yeah of course why else would I host a podcast I have no idea how to have a conversation but what you're saying is we need some sort of flow of dialogues perhaps in the form of a dialogue flow exactly would you like that lead-in by the way I thought it was gold working on it for like three days so tell us a little bit more about what dialogue flow actually is dialogue flow is Google's tool that is powered by natural language understanding and natural language processing to create rich and natural conversations and what I mean by that is it makes this process simpler and easier when I said I can ask for coffee and thousand different ways depending on the day and the mood and the time and all of that right it's nearly impossible to get there all of those ways in which thousand people are going to ask for coffee but in a broader term it's easy to just lay it out and what dialogue flow does is you put an intent in seeing most common ways in which people ask for coffee and then it would apply the natural language understanding and NLP on it and comprehend some of the other ways in which people can actually ask for coffee so I can say I would like some coffee and I can give like 10 examples in there and say I would like some coffee can I get some coffee it would be great to get some coffee right now amazing to get some coffee right now ah coffee sounds amazing right these are some ways in which I ask for coffee depending on what the day is and what my mood is I'm pretty sure Marc has some very interesting ways I mean you're very polite to your coffee maker feel bad I usually just yell coffee at mine and it's not voice enabled I just am yelling coffee while also wanting with deep apologies to everyone listening to this before they've had their confidence ya know I mean if you haven't had your coffee please pause go grab some ideally while yelling the word coffee and then come back to us the power of dialog flow is you provide these intense and then it would map some of the others on its own because it's powered with natural language processing and understanding it would understand the other ways in which people are asking for coffee so you don't have to provide those thousand examples you can just provide a few and it still understands the users intent so that's one and then the other power of dialog flow is you design your part experience once and you can enable it for multiple different interfaces and that is the biggest thing because omni-channel is a huge requirement for enterprises because you want to make sure that the experience of the brand is similar on every channel that the users interacting you with so whether they're coming from Facebook Messenger or slack or Google home or existant or just a web chat the experience should be seamless and similar a across the board so that's the other power that you get from dialog flow there's also languages right so it's not that you're only going to support English or one language in which you're doing business today you have to think about global expansion and have multiple languages supported so if you're doing it by yourself it's going to be really hard to support all these different languages dialog flow comes already with 20 languages and we keep adding the support based on our text-to-speech and speech-to-text offerings so that is again very powerful and then it comes with analytics and that's always very useful the other a very important aspect is small talk and the pre-built agent so small talk is as you can imagine like what's the weather like it comes with pre-built small talk so that you can just plug the small talk portions and intense into your bot experience so you don't have to think about all the ways in which people do small talks really chatty chat BOTS exactly do people respond well to the small talk e4 chat BOTS um it depends it depends on what the persona of your bot is and that is HUGE topic around persona of the body and you kind of define that before you start building your bot whether your body is gonna be Kiki or chatty or serious and once you define that persona you know it might sometimes make sense to have small talk experience in there it usually makes it a little bit more chatty but more friendly we make a bot that only the small talk welcome home there's been a war isn't there you've certainly changed okay so I'm inspired to kind of play with this and and see like some sort of coffee experiments with BOTS and I'm sure other folks listening are also kind of interested in digging in here how would you recommend people get started like learn more about this yeah so multiple different ways and avenues to get started the first is definitely some documentation that we have on www.osho.com/copyright osho the series of videos that I've started from basically 101 called deconstructing chatbots it is on our YouTube channel Google Cloud YouTube channel there you can actually get started from like what is a button how do I design one to actually building one by yourself and then there are labs that are in there as well that you can follow along that point you to code labs and then the series is ongoing so you can catch up and get to a point where you can start to build not just basic conversations but also interact with more Google Cloud machine learning content so the episode that comes out I think in the next two weeks or so is actually building a bot to understand invoices when a user uploads their bill it's interesting and you can create these while you are working through videos along with me and you get the positive Orion links as well so I would say that's a good way to start I foresee Brian in the next couple of weeks making small talk with his coffee pod I'm just gonna try to see if I can get it all the way to grunt equals coffee in my case if I'm honest it's gonna be hot tea oh well I mean that's that's you know that usually serves a similar purpose oh I mean if I get up and I'm just like yeah I want that cup of coffee right there ready for me we may have discovered a deep deep fundamental philosophical difference well with the power of dialog flow I'm sure you can generalize it to say like hey I want my breakfast drink and then the AI will know there we go that yeah so I think we're just about out of time Priyanka is there anything else you want to mention I mean we'll have a link to the deconstructing chat box playlist in the description below the show but is there anything else you want to mention before we head out I would just say that these are really easy to build experiences so give it a shot just like Brian is going to in the next few weeks I'm signed up okay everyone please give it a go and thank you very much for your time for yoga Thanks thank you okay that was a great conversation with Priyanka you know I've played around with a few of these things thankfully she's got that deconstructing chatbots playlist so I followed that and there's some code labs on there as well that have kind of helped me play with it but there's a lot of aspects to really thinking about how people engage with chat pots and you know what modeling that looks like I keep coming back to all the different places where you can interact with the same back-end that you build once so that just seems really powerful as somebody who's used to having to kind of write different versions for every new kind of front-end that might show up yeah much more flexible and a cool way to think about creating a system like you said and then reaching all these different end points which is great to meet users in a lot of different ways yep meet people where they are speaking of meeting people where they are we also have a really cool way that I think will help a lot of people run some more very common tasks in the cloud and the question is if I have a script like for instance a Python script how do I run it in an automated fashion right like a recurring script whether it's every morning three times a day how do I do that in the cloud oh right so like the kind of thing for all like on a Linux box you might use like the cron script scheduler for like hey every third hour call this thing right I mean you could spin up a compute engine and then put crowd on there but then you've got to worry about what happens if someone wants to shut the Box down or you're wasting resources I mean that doesn't seem like a very scalable way to do it who schedules the schedulers there's a terrible terrible superhero out there that I'm sure I don't think Kron Man is a very good but you know what he's always on time okay let's move to the meat of this what is the recommendation in this vlog well I think that the question is you know using this Python script how do I run it and it looks like if we run this with functions we've got some options to use both cloud scheduler and pub/sub but can you tell me a little bit more about how cloud scheduler works cool okay yeah this article is written by Caitlin Ardath who's one of our strategic cloud engineers and it's really basically saying you cloud scheduler handles the scheduling part of it so that like a task happens on a regular basis and functions is the thing we want to run in this case and using pub/sub our messaging queue that's both high throughput and very durable including retries and things like that so it doesn't get lost if the function has an error or something like that and so you use pub/sub is the kind of connection between the two which is a really powerful model for distributed systems in general you've got a thing that is in charge of policy a thing that is in charge of making sure that like it happens at least once and then the thing that does it seems like a really great set up so it's a very nice succinct walk through of this pattern that is really common exactly right it gives this example using specifically a Python script that runs bigquery but at the same time you've got your manage cron you've got a flexible events handling system and then you can pretty much do whatever you want to do on the actual execution side so this is a really starter architecture that can go out in a lot of different ways in this case they're using pub/sub but you know you could also have used HTTP for the functions but I think that authentication will be a lot harder for that right it is now supported in both scheduler and functions to use the new basically a service account you get the token from the environment and kind of pass that through the HTP but I think that going through pub/sub is a much more general pattern and I think it lets you plug other things in like in this case like maybe you're not going to necessarily do things off the same policy of like every other hour or twice a day or something maybe you are and then you can add additional things kind of listening to that same you know pub/sub event yeah very flexible in a good way to start working on something in the first time you build it you might be saying well I don't know if I need all these pieces right why not just keep it very very simple but as you extend outwards I think you're gonna find that having built it in this flexible way is gonna make it a lot easier down the road I kind of alluded to it at the beginning there's some obvious stuff that's great you know if you have a direct call and for some reason there's a timeout or something goes wrong that's a temporary error if you're making the direct call it'll never happen again if you're working off of a hewing system and actually kind of responding to those directly it'll make sure that it retries it you know after failure doesn't like very cool so all those details are in the blog post well before you wrap up here Brian what are you doing where you go and do any fun travels so actually I'm based in Seattle and I'm gonna be spending the next while kind of hanging out here in the office thinking about compute engine it's just just kind of sitting and meditating on compute engine [Music] that a slice of a computer I slice with data center oh no wait no no those are deep questions too much too much oh well I'll be traveling to Austin next week to record with a customer hopefully which will be a podcast not too far from now sticking around the Bay Area to work on some up-and-coming training videos which I think will be or the subject matter there I'm super helpful I know I can't say like what it is until it's out so I'm always like oh I want to talk about it but I kind of can't but looking forward to as always creating some really fun content awesome well thanks for hanging out with us all the way to the end everyone very very cool and we'll see you all next week [Music] 