 Multilingual capabilities are the very heart of artificial solutions. I guess you could say that multilingual is a key part of our DNA. Now we've been implementing multilingual solutions for nearly a decade with some of the most complex sophisticated natural language solutions that are available and in that time we've been able to build a unique corpus of conversational data made up from over a billion man-machine conversations and we've been able to use this conversational data to build our Teneo Language Resources. But what are they? Well you could think about Teneo Language Resources, or TL R's for short, as a vast network of NLU, or Natural Language Understanding blocks, that can be put together to build really powerful conversational systems. They cover virtually every conceivable way of expressing a language. The relationships between words and phrases, contextual understanding, synonyms, in fact a whole range of different elements that go up to make a language. One of the major drawbacks of machine learning when it's used to build natural language systems is the vast corpus of data that you need to learn from. What these systems are trying to do is analyze the conversational data and learn from them, but what if you don't have that conversational data? Well, with the TLRs we have that data based on over a billion conversations that we've been able to analyze. But that's only part of the story, because when you're deploying a solution in multiple languages there are other factors at play. For example, when you are deploying a solution in different geographies you're likely to have different business processes in those geographies. You want to use the same main knowledge base but you want to be able to tweak the implementations for different geographies. You're likely to have distributed workgroups so you need the ability to be able to check and check out conversational flows, so that multiple people can work on the same solution at one time. You need the ability such as automated testing and rollback if things go wrong, you need the ability to be able to deploy both on-premise and remotely. These are all the sorts of features that have gone in to the Teneo platform to build its enterprise strength and, more importantly, to ensure that we are a truly multilingual technology. 