 Hello Vital Sine! Today we're going to talk about  a graph operation called the Mycielskian of a graph and why it's so interesting. The Mycielski graph  of an undirected simple graph G, with vertices v_i , is itself an undirected simple graph that contains  graph G as a sub graph, along with the vertex u_i   for each corresponding vertex v_i in graph G, and  one additional vertex w. We're not done yet though; now we have to connect the rest of the vertices  according to the following rules of the Mycielski  construction. As stated previously, there is a copy  of graph G in the Mycielski graph of G, so all of   the edges from graph G are present between  the v vertices in the Mycielski graph of G. However, there are also new edges formed in the  Mycielski graph according to this rule: for each   edge (v_i, v_j) in graph G, there are edges (u_i, v_j) and (u_j, v_i) in the Mycielski graph of G. In this example, the edge of (v1, v2) in G  produces edges (u1, v2) and (u2, v1) in the Mycielski graph of G. The edge (v2, v3) in graph G produces  edges (u3, v2) and (u2, v3) in the Mycielski graph of G.   The edge (v3, v4) in G produces edges (u4, v3) and (u3, v4) in the Mycielski graph of G. The edge   (v4, v5) in graph G produces edges (u5, v4) and (u4, v5) in the Mycielski graph of G. And finally,   the edge (v5, v1) produces edges (u5, v1) and (u1, v5) in  the Mycielski graph of G. Note that the vertex u1   is connected to the same v-vertices in the  Mycielski graph as v1; that is, vertices v2 and v5.   And, the vertex u2 connects to the same v  vertices as vertex v2 (that is, vertices v1 and v3).   This is another way of defining the connections  between the u and v vertices in a Myicelski graph: the vertex u_i corresponding to a vertex v_i  connects to the same v vertices as that vertex   v_i. This will be important later in the video.  The final step in determining the connections   in a Mycielski graph of G is to connect  the vertex w to all of the u-vertices.  There we go! This is the Mycielski graph of the  graph on the left. Notice that there are no edges   between the u vertices. To summarize, here are  the rules for finding the Mycielskian of a graph. First, list out the vertices of your original  graph G, labeling them v1, v2, v3, and so on,   and then include these vertices in your Mycielski graph. Then for each v-vertex, include a u vertex.   And finally, add the w vertex. Then connect the v  vertices according to their connections in graph G,   forming a copy of graph G among the v  vertices in the Mycielski graph of G.   Next, connect the w vertex to each u vertex.  Finally, for each edge (v_i, v_j) in graph G,   draw an edge (u_i, v_j) and an edge (u_j, v_i) in the  Mycielski graph of G. Note these rules mean that if   a graph G has n vertices and m edges, its Mycielski graph will have 3m + n edges and 2n + 1   vertices. Feel free to pause the video  and work out why this is true for yourself.  So you might be wondering: why is the  Mycielski construction so important?   It's important because it allows us to  prove a powerful result: that there exist   triangle-free graphs, that is, graphs without a  three-clique, of arbitrarily high chromatic number!  Now let's think about that result  first, as it is not at all obvious. If you start with a triangle-free graph, and you  increase the size of the largest clique in that   graph in order to increase its chromatic number,  very soon the graph would not be triangle-free, as any clique on three or more  vertices contains a triangle,   and you would need a 3-clique or higher to bump  your graph's chromatic number up and over three. So how in the world can we make the chromatic  number of a graph arbitrarily high without   somehow introducing a triangle (3-clique)? That is the genius of the Mycielski construction.   Let's see why this construction lets us prove  this result. First we'll need two smaller results: one, that the Mycielskian only creates new  triangles (that is, triangles that were not   in the original graph) if the original  graph had triangles of its own, and two,   that the chromatic number of a Mycielski graph  is one greater than that of its original graph.   These two results would allow us to start with  a triangle-free graph of some chromatic number k,   and then apply the Mycielskian over and over,  increasing the chromatic number of the graph   by one with each application, while creating no triangles. Let's take a look at the first result. Think about the definition of a 3-clique, or triangle. It is defined as three vertices   that are mutually connected. Now think about  the adjacency rules for a Mycielski graph.   There are really three types of edges in a  Mycielski graph: those between u's and v's,   those between v's and v's,  and those between w's and u's.   Could the edges between w's and u's be a part  of a triangle? No, because no u's are connected   to each other, so there can be no triangles formed  with the edges between vertex w and the u vertices. Now think about the edges between v vertices and  v vertices. The v vertices and the edges between   them constitute a copy of the original graph G, so the only triangle between v vertices are those   that already existed in the original graph G. If  there were no triangles in the original graph, as   in this case, then there are no triangles between  v vertices and v vertices in the Mycielski graph.   And finally consider the edges  between u vertices and v vertices. Remember that a 3-clique, or triangle, requires  that all three vertices be mutually connected. That   would be impossible if two of them were u vertices,  because u vertices are necessarily not connected,   so the only possibility for new triangles would  be those with two v vertices and one u vertex.   Think back to our rule now for  adjacencies in a Mycielski graph: For each edge (v_i, v_j) in graph G there  is an edge (u_i, v_j) and (u_j, v_i) in the Myicelski graph of G. This means that  the vertex u_i in the Mycielski graph cannot   connect to both v_i and v_j in the Mycielski graph, because u_i is not connected to v_i,   so we would need some other vertex u_k that could  connect to both v_i and v_j, and of course v_i and v_j   would have to be connected vertices in the  original graph G. Now what would this imply?   According to our rules, it would imply that  both v_i and v_j connect to another vertex v_k   in the original graph, so that the edge (v_i, v_k) would create the edge (u_k, v_i) in the Mycielski  graph and the edge (v_j, v_k) would create the  edge (u_k, v_j) in the Mycielski graph. But hang on! That means there's a triangle (v_i, v_j, v_k) in  the original graph. In other words, the only new   triangles that can be created through the Mycielskian (that is, triangles that are not merely copied   from the original graph) are those of the form (v_i, v_j, u_k), and that the only way these new triangles   can be created is if there is a triangle (v_i, v_j, v_k) in the original graph. So if you start with   a triangle-free graph, the repeated application of  the Mycielskian will never give you a new triangle! Now for the second result: the Mycielski graph of  a graph G with chromatic number k has chromatic   number (k + 1). Think about it this way: there  is a copy of the original graph in the Mycielski  graph, so we know right away that the chromatic  number of the Mycielski graph has to be at least   the chromatic number of its original graph. In this example we needed three colors to properly color   the original graph, so we'll need three colors to  properly color the copy of the original graph in the Mycielskian. Moving on notice that vertex w  is connected to all of the u vertices. This means   that if the u vertices can be properly colored  with k colors, the vertex w must be colored with a   completely different color, as it is  connected to all of those u vertices,   meaning that the entire Mycielski graph can  be properly colored with (k +1) colors. Note   that while the u vertices are not connected to  each other, we can't just color them all the same   color, because they are in fact connected to the v  vertices, so the colors we apply to the v vertices   determine how we color the u vertices. And, we  used k colors to properly color the v vertices. It's not too much of a problem though; we can use  the very same k colors we used on the v vertices   on the u vertices. Each vertex u_i corresponding to  the vertex v_i will be connected to all of the v   vertices that v_i is connected to; we assumed that  we already properly colored the v vertices with   k colors, so by definition of a proper coloring,  v_i does not have the same color as any of its   adjacent v vertices, and since u_i is not connected  to v_i we could give u_i the same color as vi   and u_i will not have the same color as  any of ITS adjacent v vertices either.  For example, u1 is not connected to v1, and  IS connected to the same v vertices as v1   (that is v2 and v5), so we can color u1 the same  color as v1, and repeat this for each u vertex. In other words, if you have a proper coloring  function, c(v_i) that assigns a color to each v   vertex, then there is also a proper coloring  function, c(u_i) equal to c(v_i) that assigns a   color to each u vertex. Remembering that the  w vertex is connected to each u vertex, and so   requires a totally different color, then since we  can minimally properly color the u and v vertices in at most k colors,  we can minimally properly color the entire Mycielski  graph, including the w vertex, in at most (k + 1)   colors what remains now is to prove that  we cannot properly color the Mycielski graph   in any less than (k +1) colors. One way to prove  this is to assume that the u vertices could be   properly colored with less than the k colors used  on the v vertices, and then show that this creates   a contradiction. For instance, if we could properly  color the u vertices with just (k - 1) colors,   then the unique color used for the w vertex would  give us k colors for theMycielski graph instead   of k +1. This is not possible however, as we'll  see in a minute. If we could properly color the u   vertices in less than k colors, it implies that  we could also properly color the v vertices in   less than k colors. Here's why assume that the  chromatic number of the original graph is k   and that we've properly colored the v vertices  in the Mycielskian with k colors and the u   vertices with k - 1 colors. Now turn your  attention to the v vertices. For every v vertex   colored with the k-th color, we could color it instead  with the color used for its corresponding u vertex. Why? Because as we said before, u_i shares the  exact same v neighbors as v_i, and as assumed we   colored the u vertices with (k - 1) colors such  that none of the u vertices had the same color as   their adjacent v vertices, therefore whatever color  we used for u_i (which must have been one of the k - 1 colors we used for the u vertices) could  be applied to the vertex v_i with the k-th color.   And, we would still have a proper coloring of the  v vertices. And then for every v vertex with one   of the earlier colors, we'll just leave them  the same. We found a proper coloring for the v   vertices with just k k - 1 colors, but that is a  contradiction: the chromatic number of graph G was   k, therefore we cannot possibly properly color  the v vertices with less than k unique colors. Summarizing, we found that the u vertices can't  be properly colored with less than k colors, and  they can be colored with exactly k colors, so the  chromatic number of the Mycielskian must be k + 1. The Mycielskian Construction adds exactly  one to the chromatic number of its original graph.   The beauty of this is that we can start with  a triangle-free graph, say the singleton graph,   and then apply the Mycielskian construction over  and over, giving us new triangle-free graphs with   arbitrarily high chromatic number. In fact, the  sequence of graphs you get by starting with a   singleton graph and applying the Mycielskian  over and over is called the Mycielski graphs.   That's all for this video. In my next video we'll  take a look at some other graph operations, like   the power of a graph, the complement of a  graph, and the lexicographic product of two   graphs. Thanks for watching! Please subscribe, like, share, and comment. Have a great day! 