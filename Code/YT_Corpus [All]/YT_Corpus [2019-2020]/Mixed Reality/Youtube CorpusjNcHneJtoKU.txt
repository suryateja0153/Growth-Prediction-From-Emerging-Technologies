 good morning good afternoon good evening wherever you may be thank you for joining us for build 2020 and thanks for joining us for this session entitled building mixed reality applications with azure my name is matt fleckenstein i run marketing for our mixed reality group here at microsoft and i'm going to be co-presenting with colleague of mine tyler adams tyler you want to say hello and maybe introduce yourself hey i'm tyler adams i'm the lead program manager on the mixed reality developer platform team awesome so i'm going to kick things off and give a little bit of an overview of what mixed reality is and how we got here and then tyler's going to come in and talk about some of the exciting things we're doing to make mixed reality development easier by leveraging some of the tools offered through azure so let's go ahead and jump in i think we can all agree that cloud computing is arguably the biggest secular trend in computing over the last decade it's fundamentally changed the way that we build manage and deploy applications and they're probably even more important than that it's really enabled every company to become a technology company and while the cloud has gotten us most of the way there it's not without its limitations in particular when we think about the basic laws of physics as we get more and more devices out into the world we have billions of connected devices and billions of connected people there's an important need for ultra-low latency computing that is embedded and imbued with mixed reality and ai to light up the next generation experiences perhaps the best example of this is what we're seeing today in this fourth wave of computing where mixed reality is really enabling ubiquitous computing at the edge that blends the physical and the digital worlds if you go back to the 1970s really when the computing era started business users had access to compute power for the very first time through mainframes but they were literally tethered to their desks in the 1990s we saw the rise of personal computers which extended computing power into our homes and eventually through laptops gave us some level of compute power in the go but it wasn't really until the 2000s when smartphones became ubiquitous around the world that we had the power of a computer in our pocket that we could literally take with us anywhere and we started to get some notion of the power of contextual awareness in computing things such as our location in time and space but with mixed reality we're taking that to an entirely different level and this kind of blending of the digital and physical world opens up a whole new set of opportunities and those opportunities while exciting are not without their challenges i like to kind of refer to this great quote from a good friend of mine um from our portfolio company of ours called azure uh called spatial um he talks about these challenges um that it really they're facing and all of us are facing when we're trying to connect the digital and the physical worlds and as we talk about it he often comes forward and says hey this is not for the faint of heart and while we agree that there's still certainly challenges to overcome in terms of creating this seamless blend and these incredible immersive experiences there's a lot that we have going on here at microsoft to try to make that easier for developers such as yourself and so with that i'll actually turn it back over to tyler who's going to come in and talk about some of the exciting stuff that we have that will make developing these immersive mixed reality applications much easier for you tyler thanks matt yeah and as matt mentioned um there's a lot of challenges in merging the digital and the physical world and i'm really excited to share today a lot of the work that we've done to help developers address those challenges it starts with our mixed reality toolkit which is a set of components that helps accelerate your development that toolkit is available in world leading 3d creation engines unity and unreal i'm then going to show how you can easily add azure to these applications to increase the power of these applications you're creating so let's start with a brief overview of the mixed reality toolkit the mixed reality toolkit as i mentioned has a set of components that helps accelerate your development one of the challenges that developers may face in building mixed reality applications and merging the digital and the physical world is how do you take the powerful capabilities of hololens hand tracking and eye tracking and voice and enable users to easily manipulate holograms with confidence in a world where there's no haptic physical feedback and so mrtk has done a lot of work to help make that easy for you so let's jump in a great place to get started with mrtk is our sample scenes these scenes let you explore what's available in the toolkit and envision the different types of things you can create with it all of these different components are highly customizable so you can tailor them to your experience an example i give is the keyboard that you can see there which is a customized version of our button and as i mentioned these are based on years of iteration to help make it as easy as possible to leverage the full power of hololens to easily interact with holograms with confidence and so you can see some of the visual effects that help show you that your hands are in proximity and that you've grabbed these objects i'm also going to show how to easily leverage azure in these applications to increase the power of those applications there's two azure services that i'm excited to talk about one is azure remote rendering which is in private preview azure remote rendering enables you to render high detailed contents on azure and stream it down to the device so you could imagine construction scenarios for example where you might have a lot of different information in detail and that detail is really important to your scenario and azure remote rendering enables you to render that detail the other service i'm going to talk about is azure spatial anchors that's in general availability today that enables you to store and persist the location of holograms in the real world so you can share that across users and across devices to create multi-user experiences where all the users can see the holograms in the same place awesome tyler hey you know i'm a big fan of actually all of the different components that are available in the mrtk toolkit and of course i love seeing our mixed reality services that really leverage the power of both the edge computing capabilities on a device like a hololens or your mobile phone as well as you know the power of azure right the cloud but let's talk a little bit more about how you can use these building blocks uh in you know creating real world 3d content and immersive experiences why don't you tell us a little bit more about what you can do with these uh these capabilities in the 3t 3d content tools that exist out there for sure uh and that's a great segue matt so as i mentioned these components and services are available in world leading 3d authoring tools unity being one of them so let's jump in and show how to easily leverage these capabilities inside a unity project so here i have an existing unity project that already has the mixed reality toolkit uh installed and it has the azure service plugins installed as well so i'm going to go ahead and search for the object manipulator script which is part of mrtk and just drag it on this hologram this script enables the hologram to be movable rotatable and resizable with one or two hands i'm then going to drag on the near interaction grabbable script that enables you to have those interactions close up to the hologram so we're going to go ahead and hit play mrtk enables you to simulate input without a headset so inside the unity editor you can validate these interactions that you've just created and so we'll go ahead and use input simulation to move the hologram around rotate it and test out these different interactions you can then go and find the perfect place for this hologram and if we wanted to persist that location so we could share it across users and devices we would we could add an azure spatial anchor so we'll go ahead and search for the azure spatial anchor manager and drag that into our project this enables you to configure uh azure so you can set up your account id and key we'll then go add the anchor module script and this is the script that you'll use to create the anchors and so to create the anchor what we'll do is we'll just add an mrtk button to the scene search for a pressable button and we'll go ahead and drag that into our scene i'll then zoom out so you can see it there it is so we'll go ahead and select the button and we'll just change the text to say create anchor and then let me show you how easy it is to set this up we'll just go ahead and select the pressable button and scroll down to its on pressable event that event is triggered when articulated hands press the button and so we can go ahead and drag the linear module into this which has the azure spatial anchor script on it and then just go ahead and create an azure anchor we're also going to do the same thing to the on click event the on click event is triggered by additional input sources so it's triggered by voice and eye tracking and so it's just that simple just drag in the object and select create azure anchor now i should highlight that there's actually three steps to create an azure spatial anchor you'll want to start an azure session create the anchor and then end the session i just showed you the second step creating the anchor the other two steps are as easy to set up awesome that's exciting stuff i love actually how you can you know you set this up very easily to leverage azure spatial anchors to take advantage of both uh you know your own hand motions as well as you know sight and voice um which is awesome to see hey i know i have a lot of gamer friends who uh many of which actually do some development in unity many of them also um you know use unreal why don't you tell us a little bit about kind of how you can do similar things and take advantage of these mr services in an engine like unreal definitely so actually i'm really excited to announce that unreal just shipped unreal engine 4.25 which includes production ready support for hololens development support for azure spatial anchors and alongside unreal 4.25 we just shipped the initial preview of mrtk and unreal so let's dive in and take a look at what that looks like first i should highlight that in unreal uh you can build applications using c plus you can also build applications using unreal's blue blueprints which is a visual scripting language that lets you create logic without writing any code and that's what i'm going to show you today so here's an existing project for a test board i'm just going to go ahead and hit play and you can see we support the same input simulation in unreal that we support in unity to enable you to validate interactions without a headset so as i mentioned uh we support unreal blueprints so we'll go ahead and create a blueprints class and we'll subclass that simple button which is an mrtk button so we'll go ahead and create that and i'm going to rename the button for the purpose of this demo reset position we can then go select the button it's a little far out let's zoom in there we go and now you can see what the button looks like so what i'm going to do is in the components window i'm going to select the button and then on the right hand side we can go ahead and add a button pressed event so let's go ahead and add that there and that'll add a button pressed event node to our visual script i'm then going to create a variable in the visual script and connect it to a chess piece and that enables the script to access that chess piece and so we'll just connect it to an existing chess piece that's on the board and i'll go ahead and drag that variable into the script so that we can reference it in the script the chess piece has a function on it reset position that's already created so i'll just drag that out and add the reset location node to the script and then it's super easy just drag on button press to reset location to have the button trigger that function i'll drag the button into our scene and then just set the location and size of it so we can see it scale it up a little bit set its position so you can see it there we go and now i had i'm gonna go ahead and hit play and then we can use input simulation again to validate what we just set up so go ahead and grab the chess piece and move it to a new spot and then press the button to reset its location using the visual script that we just the blueprint script that we just set up and now if this was a multi-user experience that we were creating we'd want to be able to store that chessboard's location in the real world so that multiple users could see it in exactly the same location and we'll go ahead and use an azure spatial anchor for that in unreal local anchors are called ar pins that enables you to pin a hologram to a location in the world but only for a single user on a single device we'll go ahead and store that up on azure with an azure spatial anchor so we can then share it across users and devices so all the users can see the chessboard in the same location we have documentation online on how to create ar pins i'm not going to go into that today i'm going to go into how to convert those to an azure spatial anchor and store them on the cloud so let's go back to the same project and i'm going to open up the blueprint for the chessboard and when this blueprint starts on begin play i'm going to create an azure session and then let's go add a node to configure that session where we can add our account id and account key so you just go ahead and add in the azure id and account key that you can get from azure when you set up your account and so now let's go create an error pin oh actually let's start the session sorry yeah we'll start the session and now we'll create the error pin starting the session collects the data required to create the pin and so we'll create a pin and then we'll set that pins location to the root of the chessboard so we'll go ahead and grab the chessboard's root and we'll grab the transform of that root just to grab its location in the scene there it is and then we'll connect that to create named ar pin and so that creates a pin at the location of the chessboard we'll then connect the chessboard to that anchor so now the chessboard is now anchored to that location and then finally we'll save it up to the cloud to save it as an azure spatial anchor which we can then recall later or share across users and there you have it it's that simple in unreal engine to leverage azure spatial anchors in order to store the location of holograms and share them across users that's really a high level overview of how we've helped provide tools to address some of the challenges of mixing the digital and the physical world with components through mrtk that are available through world leading game engines unity and unreal and how you can easily add azure to those applications in order to increase the power of those apps for more details go to docs.microsoft.com mixed reality development hey thanks a lot tyler hey do me a favor go back go back to that last slide for one second i you know we're getting a lot of questions as to where people can kind of go and get these tools and how to access them and so i'm just going to emphasize it again it's all about docs.microsoft.com backslash mixed reality development right so go check it out we'd love for you guys to do that i do have a bunch of questions and uh looking at time it seems like we've got uh some time for a few of them um so so let's uh just kind of pick a few of these and um um you know basically okay first question where can we get these plug-ins at guess where you can get them at docs.microsoft.com backslash mixed reality development so go check it out we'd love for you to do that um there's a question here on mrtk specifically looks like it's maybe from somebody familiar with hololens one uh can you talk about some of the biggest differences between mrtk for hololens two versus for hololens one yeah some of the biggest differences is really imp embracing the new capabilities of hololens 2. so providing components that enable you to fully leverage fully articulated hand tracking and eye tracking to enable you to build experiences where you can leverage those capabilities to interact with holograms with confidence awesome hey i see a question here about does this work for mobile devices and it goes on to talk about spatial anchors right and so um you know there's also another question here in terms of um you know can you leverage any of these tools for vr so maybe you want to just talk about kind of the cross-platform story a little bit and then we can get into a few more specifics uh based on some other questions folks have yeah absolutely so azure spatial anchors is available on mobile in addition to hololens supporting ios and android um so that's absolutely available to you and the mixed reality toolkit is also available across platform and includes vr and ar support awesome and again you know i think if you would actually uh if you're interested in vr development there's some other tools that are out there as well like maquette is a nice prototyping tool that we have and so again just refer you back to that same location docs.microsoft.com to kind of go learn more um so are the azure plugins compatible with the latest unity editor uh 2019.3 or do we need to install a preview and i'm not sure exactly what they mean by plugins but let's just assume they're talking about kind of the whole thing here right the toolkit components as well as maybe the ability to use spatial anchors like you demonstrated the answer is yes uh azure spatial anchors is available in unity2019.3 um and i'm assuming they're referring to the manager scripts that we have that help you set that up and yes those are available so that's awesome cool um so another another quick question here which is um you know specifically do spatial anchors hold when the lens is occluded ah so the spatial anchors themselves are actually stored up in the cloud and persisted um so once you store it the spatial anchors hold now if the lens is occluded in some way it's you know possible that it might impact your tracking and and it could impact hologram stability but the anchor itself will be stored and persisted and then the moment they're they're unoccluded i assume kind of you know you're back to normal and being able to kind of uh locate where you are and find them as normal is that right tyler of course of course awesome cool hey uh there's a question here in terms of um uh you know just talking a little bit about um you know the the unreal and unity and in particular um you know any kind of vision or any kind of foresight into maybe some future stuff that we will have going on with them i know we're limited in terms of what we can talk about but lots of interest in particular around any plans we have for uh unreal uh five right which has been announced yeah so i mean as you mentioned on both sides um there's only so much i can share we're certainly absolutely in planning conversations with both unity and unreal to envision the future um unity did just ship ar foundation support for hololens 2 which enables you to use the same code that you'd use to write a mobile ar apps to also write hololens apps and mrtk has shipped experimental support for that so we're absolutely working with unity to provide great support for their out of box ar development story in terms of unreal five um a very exciting announcement that they just announced and all and we're very excited about all the new features that are coming there um but we're pretty early in conversations with them and so nothing to disclose yet um stay tuned awesome hey tyler i've got a question here can you also target oculus right oculus devices i'm not sure necessarily the context of that but you want to talk a little bit about again kind of i think our story um as it relates to vr and devices like oculus as well yeah so this is actually a very common request particularly for mrtk to make our components uh available to oculus developers and what i can say is it's a request that we take very seriously and uh we're looking into it so also stay tuned got it so i've got a question here what is the road map of azure spatial anchors and when will it support unity uh 2019.3 oh uh it supports that now yeah and so in terms of the road map look i i you know i don't think we're ready to disclose any specific things on the roadmap but as tyler said you've got that support now um it just as of uh today actually was now generally available so anyone can go and get it on on azure.com you know the other thing i'll say is um this whole area around being able to um you know kind of persist and share 3d content in space is certainly a hot area and i think you know without going into details of specifically the types of things that we'll be releasing in the future you know we do talk a lot about the need for us to continue to build out a spatial services portfolio and so really building on top of the work that we have with spatial anchors you know you can imagine us doing things to make it easier for developers to take advantage of things like wayfinding and navigation in those applications or you know a lot of this has to do with understanding when you're using spatial anchors you know the scene in which the uh the um you know the anchors being kind of persisted which gives you an ability to kind of create a digital twin of a space and there's some other sessions out there that build around digital twins and so that may also be something where you know i think you'll increasingly see investments from us in terms of making it easier for you as a developer to reconstruct spaces and leverage that map for all kinds of different scenarios so um you know just kind of stay tuned on that lots of exciting stuff coming up in the not just in future is there a way to search uh the tools from mrtk um like button faster like how do they find kind of those tools is there an easy way for them to easily identify uh different tools available in mrtk yeah and so as i showed in the demo if you know the tool you're looking for you can just search for it in the unity editor and find them however a great way to explore what's available is actually the sample scenes which sort of shows you a breadth of different features that are available in mrtk and can you know help you discover those those sample scenes are also open source um so you can go and look at the code see what's available see how things are set up and and leverage that in your own way awesome hey here's one tyler about um azure again another question about azure spatial anchors um this one has to do with what are the big differences between azure spatial anchors on mobile devices versus on on a hololens device um i can take i can take that one to start with and feel free to weigh in um you know i think look essentially it's the same apis we're using the same azure service uh to enable these kind of cross-platform experiences you know there are some minor differences in terms of some of the results and performance you'll get just based off of the device you're using you know when you've got something you know as robust as a hololens that you're leveraging you have a tremendous amount of data points um around exactly you know the scene around you and exactly where you are in time and space and so oftentimes accuracy can be higher perhaps than on a mobile device and so you know again it's the same set of services we've tried to kind of make it easy to basically build your application once and then really run it across platforms again depending on the device you may see a little bit of kind of differences in terms of performance due to just the native platform that you're building on but overall you know really committed to kind of making it easy to to do this cross-platform uh here i've got a good one i want to trigger uh an audio when inside a proximity to an anchor um are there proximity functions yeah i'm so inside uh both the 3d engines you can easily set that up using the tools that they provide so you can detect both the location of your hands and the location of your head and you can use that to sort of trigger uh proximity so an example i might give is in unity you could put a collider which is an object around an object that you wanted to trigger and as something entered that collider you could then trigger something like like audio to to light up got it uh here's a good one so uh now that azure spatial anchors is entering general availability will it continue to be free uh so look i'll take this one if you go to if you go to azure.com and you visit the azure spatial anchors page um it's been updating it's been updated with a pricing tag and if you click on that pricing tab what you'll see is uh pricing we plan to announce pricing in the coming weeks and we'll actually start pricing for azure spatial anchors um on august 1st is when pricing will actually kick in and so you've got a little bit of time to go out and continue to kind of use it use it for free while we're not disclosing pricing at this time i will say that you know we've tried to price this thing in a way where um you know basically you've got a certain level of usage for free and then when you actually get into higher volumes of usage you do have to pay for the service but try to price it at a relatively kind of low cost point because the goal here is really to get as many people adopting this as possible so look for more on pricing know that it will be coming august 1st but as of right now it's uh it's still free so we'd encourage you to go check it out uh any plans for web xr tyler oh there's a big hairy one yeah yeah um we're absolutely uh deeply engaged in the webxr community um to help move forward that open standard uh to support mixed reality development um so lots of plans underway and in fact uh coming up later this week there's several sessions uh at mixed reality dev days um that cover some of our investments in in the web xr space highly encourage folks to go check that out so hey i see a question here from john right that's basically asking hey can we download anchors for times when the internet is not available and maybe even just take that up a level and say hey how you know how do you leverage things like spatial anchors when um you know wi-fi is spotty or those types of things yeah so a spatial anchor is really just converting a local anchor so that you can store it up on the cloud but that local anchor is still there once you get the anchor you then set it as a local anchor so you can absolutely store that locally and recall it but to share it across users and to share it across devices you'll want that connectivity got it so here's one similar similar kind of path right this one comes from torin it can can temporary and temporary is in quotes azure spatial anchors be used in unity uh be stored locally rather than in azure um or is there an alternate alternative for local shared space multi-user content that doesn't need to persist after the session and so maybe you know i think you can kind of go back to kind of what you know the example used with ar pin but i think this one is specifically for unity right and you know how do you think about kind of using stuff locally that you don't need to persist yeah so in unity we support local anchors as well um if you were to create a multi-user experience you would want some way to share that across users and azure spatial anchors is a way to do that you can also set the you know the timeline that that is stored up on azure and so that is configurable yeah i think my timeline you know what i think you know tyler's talking about is there are some controls with spatial anchors in terms of how long you want those anchors to persist you've also got the ability to you know control who has um you know the ability to kind of access um those anchors as well you know based on tenant id or whatever uh for some of our enterprise customers um and it looks like we've got uh time for maybe just a couple more here um can mrtk support and unify development of ar core and archet um like uh you know the the the xamarin for mixed reality so um mrtk itself is built on top of cross-platform extractions so for example in unity as they just announced air foundation support for hololens which is one common api that enables you to build experiences that can run on ios on android and on hololens mrtk is experimental today and available in an experimental way built on top of that so that you can leverage mrtk in these cross-device scenarios so so here's one more tyler you know kind of coming back to um you know basically guidance you know relatively new to this space um how would you encourage somebody to kind of get started with all of this yeah so i mean call out again to our mixed reality docs online there's lots of great getting started tutorials there so effectively i would go in pick your path unity or unreal or try both and then there's some great getting started tutorials that can help you get set up the other thing that i showed earlier was the mrtk sample scenes which is a great way to explore what's available in the toolkit and to envision the types of things that you can build with it got it hey tyler lots of nice kind of comments on your presentation and what you went through i do have a couple of requests for your contact information i'm not sure if you've got a twitter handle or something that you can share with folks or if that's possible but if so you want to throw that out there uh i don't have one that i want to necessarily share immediately but one thing i will encourage folks to do um we're very uh proactive in engaging with the community and actually mixed reality toolkit is up on github so please file feedback and questions there and myself and my team will absolutely uh get back in touch with you and and stay engaged awesome hey i think you know we're just about at time any kind of parting thoughts for folks before we kind of wrap up this session tyler uh i my biggest thing is i'm just super excited to see what people build with these tools and what you create with them and also highly encourage engagement in the community so as i mentioned before feel free to jump in on github and provide feedback and help us make these tools even better than they are today awesome hey you know just in kind of closing here um you know a lot of questions about azure spatial anchors i'm turning right around and moderating a session um there and so if you want to kind of watch that feel free to check it out thank you very much thanks everyone 