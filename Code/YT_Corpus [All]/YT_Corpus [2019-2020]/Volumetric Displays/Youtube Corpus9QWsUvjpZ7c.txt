 the graphical user interface GUI is a form of user interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation instead of text-based user interfaces typed command labels or text navigation GUIs were introduced in reaction to the perceived steep learning curve of command-line interfaces CL eyes which require commands to be typed on a computer keyboard the actions in a GUI are usually performed through direct manipulation of the graphical elements beyond computers GU eyes are used in many handheld mobile devices such as mp3 players portable media players gaming devices smartphones and smaller household office and industrial controls the term GUI tends not to be applied to other lower display resolution types of interfaces such as video games where head-up display HUD is preferred or not including flat screens like volumetric displays because the term is restricted to the scope of two-dimensional display screens able to describe generic information in the tradition of the computer science research at the Xerox Palo Alto Research Center topic user interface interaction design designing the visual composition and temporal behavior of a GUI is an important part of software application programming in the area of human-computer interaction its goal is to enhance the efficiency and ease of use for the underlying logical design of a stored-program a design discipline named usability methods of user centered design are used to ensure that the visual language introduced in the design is well tailored to the tasks the visible graphical interface features of an application are sometimes referred to as Chrome or GUI pronounced GUI typically users interact with information by manipulating visual widgets that allow for interactions appropriate to the kind of data they hold the widgets of a well-designed interface are selected to support the actions necessary to achieve the goals of users a Model View controller allows flexible structures in which the interface is independent from an indirectly linked to application functions so the GUI can be customized easily this allows users to select or design a different skin at will and eases the designers work to change the interfaces user needs evolve good user interface design relates to users more and to system architecture less large widgets such as windows usually provide a frame or container for the main presentation content such as a web page email message or drawing smaller ones usually act as a user input tool a GUI may be designed for the requirements of a vertical market as application-specific graphical user interfaces examples include automated teller machines ATM point of sale POS touchscreens at restaurants self-service checkouts used in a retail store airline self ticketing and check-in information kiosks in a public space like a train station or a museum and monitors or control screens in an embedded industrial application which employ a real-time operating system rtos by the 1980s cell phones and handheld game systems also in loyd application-specific touchscreen GUIs newer automobiles use GUIs in their navigation systems and multimedia centers or navigation multimedia Center combinations topic examples sample graphical desktop environments topic components a GUI uses a combination of technologies and devices to provide a platform that users can interact with for the tasks of gathering and producing information a series of elements conforming a visual language have evolved to represent information stored in computers this makes it easier for people with few computer skills to work with and use computer software the most common combination of such elements in GUI is the windows icons menus pointer wimp paradigm especially in personal computers the WIMP style of interaction uses a virtual input device to represent the position of a pointing device most often a mouse and presents information organized in Windows and represented with icons available commands are compiled together in menus and actions are performed making gestures with the pointing device a window manager facilitates the interactions between windows applications and the windowing system the windowing system handles hardware devices such as pointing devices graphics hardware and positioning of the pointer in personal computers all these elements are modeled through a desktop metaphor to produce a simulation called a desktop environment in which the display represents a desktop on which documents and folders of documents can be placed window managers and other software combined to simulate the desktop environment with varying degrees of realism top post wimp interface smaller mobile devices such as personal digital assistants PDAs and smartphones typically use the wimp elements with different unifying metaphors due to constraints in space and available input devices applications for which wimp is not well-suited may use newer interaction techniques collectively termed post wimp user interfaces as of 2011 some touchscreen based operating systems such as Apple's iOS iPhone and Android use the class of GU is named post wimp these support styles of interaction using more than one finger in contact with a display which allows actions such as pinching and rotating which are unsupported by one pointer and mouse topic interaction human interface devices for the efficient interaction with a GUI include a computer keyboard especially used together with keyboard shortcuts pointing devices for the cursor or rather pointer control mouse pointing stick touchpad trackball joystick virtual keyboards and head-up displays translucent information devices at the eye level there are also actions performed by programs that affect the GUI for example there are components like a notify or d-bus to facilitate communication between computer programs topic history topic early efforts ivan sutherland developed sketchpad in 1963 widely held as the first graphical computer-aided design program it used a light pen to create and manipulate objects in engineering drawings in real time with coordinated graphics in the late 1960s researchers at the Stanford Research Institute led by Douglas Engelbart developed the online system NLS which used text-based hyperlinks manipulated with the then-new device the mouse in the 1970s Engelbart's ideas were further refined and extended to graphics by researchers at Xerox PARC and specifically Alan Kay who went beyond text-based hyperlinks and used a GUI as the main interface for the small talk programming language which ran on the Xerox Alto computer released in 1973 most modern general-purpose GUIs are derived from this system the Xerox PARC user interface consisted of graphical elements such as Windows menus radio buttons and checkboxes the concept of icons was later introduced by David Canfield Smith who had written a thesis on the subject under the guidance of Kay the Parc user interface employs a pointing device along with a keyboard these aspects can be emphasized by using the alternative term and acronym for windows icons menus pointing device wimp this effort culminated in the 1973 Xerox Alto the first computer with a GUI though the system never reached commercial production the first commercially available computer with a GUI was the 1979 PRQ workstation manufactured by Three Rivers Computer Corporation its design was heavily influenced by the work at Xerox PARC in 1981 Xerox eventually commercialized the Alto in the form of a new and enhanced system the Xerox 8010 information system more commonly known as the Xerox star these early systems spurred many other GUI efforts including Lisp machines by Symbolics and other manufacturers the Apple Lisa which presented the concept of menu bar and window controls in 1983 the Apple Macintosh 128k in 1984 and the Atari Street with digital researchers gem and Commodore Amiga in 1985 Visayan was released in 1983 for the IBM pc-compatible computers but was never popular due to its high hardware demands nevertheless it was a crucial influence on the contemporary development of Microsoft Windows Apple Digital research IBM and Microsoft used many of Xeroxes ideas to develop products and IBM's common user access specifications formed the basis of the user interfaces used in Microsoft Windows IBM os/2 presentation manager and the UNIX motif toolkit and window manager these ideas evolved to create the interface found in current versions of Microsoft Windows and in various desktop environments for unix-like operating systems such as Makos and Linux thus most current GUIs have largely common idioms Topic popularization G were a hot topic in the early 1980s the Apple Lisa was released in 1983 and various windowing systems existed for DOS operating systems including PC Jem and PC Geo's individual applications for many platforms presented their own GUI variants despite the GUI z' advantages many reviewers questioned the value of the entire concept citing Hardware limits and problems in finding compatible software in 1984 Apple released a television commercial which introduced the Apple Macintosh during the telecast of Super Bowl 18 by CBS with allusions to George Orwell's noted novel 1984 the goal of the commercial was to make people think about computers identifying the user-friendly interface as a personal computer which departed from prior business oriented systems and becoming a signature representation of Apple products Windows 95 accompanied by an extensive marketing campaign was a major success in the marketplace at launch and shortly became the most popular desktop operating system in 2007 with the iPhone and later in 2010 with the introduction of the iPad Apple popularized the post wimp style of interaction for multi-touch screens and those devices were considered to be milestones in the development of mobile devices the GUI is familiar to most people as of the mid late 2010's on Microsoft Windows Mako's and the X Window System interfaces for desktop and laptop computers and Android Apple's iOS Symbian blackberry OS Windows Phone Windows 10 mobile Tizen palm OS web O's and Firefox OS for handheld smartphone devices topic comparison to other interfaces topic command line interfaces since the commands available in command line interfaces can be many complex operations can be performed using a short sequence of words and symbols this allows greater efficiency and productivity once many commands are learned but reaching this level takes some time because the command words may not be easily discoverable or mnemonic also using the command line can become slow and error-prone when users must enter long commands comprising many parameters or several different file names at once however windows icons menus pointer WIMP interfaces present users with many widgets that represent and can trigger some of the systems available commands GUIs can be made quite hard when dialogues are buried deep in a system or moved about two different places during redesigns also icons and dialog boxes are usually harder for users to script wimps extensively use modes as the meaning of all keys and clicks on specific positions on the screen are redefined all the time command line interfaces use modes only in limited forms such as for current directory and environment variables most modern operating systems provide both a GUI and some level of a CLI although the GUI is usually receive more attention the GUI is usually wimp based although occasionally other metaphors surface such as those used in Microsoft Bob 3d WM or file system visualizer topic GUI wrappers graphical user interface we rappers find a way around the command line interface versions CLI of typically Linux and UNIX like software applications and their text-based user interfaces or typed command labels while command-line or text based application allow users to run a program non interactively GUI wrappers atop them avoid the steep learning curve of the command line which requires commands to be typed on the keyboard by starting a GUI wrapper users can intuitively interact with start/stop and change its working parameters through graphical icons and visual indicators of a desktop environment for example applications may also provide both interfaces and when they do the GUI is usually a whimp wrapper around the command line version this is especially common with applications designed for unix-like operating systems the latter used to be implemented first because it allowed the developers to focus exclusively on their products functionality without bothering about interface details such as designing icons and placing buttons designing programs this way also allows users to run the program in a shell script topic three-dimensional user interfaces for typical computer displays three-dimensional is a misnomer their displays are two-dimensional semantically however most graphical user interfaces use three dimensions width height and width they offer a third dimension of layering or stacking screen elements over one another this may be represented visually on screen through an illusionary transparent effect which offers the advantage that information in background windows may still be read if not interacted with or the environment may simply hide the background information possibly making the distinction apparent by drawing a drop shadow effect over some environments use the methods of 3d graphics to project virtual three-dimensional user interface objects onto the screen these are often shown in use in science fiction films see below for examples as the processing power of computer graphics hardware increases this becomes less of an obstacle to a smooth user experience three-dimensional graphics are currently mostly used in computer games art and computer-aided design CAD a three-dimensional computing environment can also be useful in other uses like molecular graphics aircraft design and phase equilibrium calculations design of unit operations and chemical processes several attempts have been made to create a multi-user three-dimensional environment including the croquette project and Suns project looking-glass topic technologies the use of three-dimensional graphics has become increasingly common in mainstream operating systems from creating attractive interfaces termed eye candy to functional purposes only possible using three dimensions for example user switching is represented by rotating a cube which faces or each user's workspace and window management is represented via a Rolodex style flipping mechanism in Windows Vista see windows flip 3d in both cases the operating system transforms windows on the fire while continuing to update the content of those windows interfaces for the X Window System have also implemented advanced three-dimensional user interfaces through compositing window managers such as barrel compiz and queen using the AI GL x or x GL architectures allowing use of open built to animate user interactions with the desktop another branch in the three-dimensional desktop environment is the three-dimensional GUIs that take the desktop metaphor a step further like the bump top where users can manipulate documents and windows as if there were physical documents with realistic movement and physics the zooming user interface zui is a related technology that promises to deliver the representation benefits of 3d environments without their usability drawbacks of orientation problems and hidden objects it is a logical advance on the GUI blending some three-dimensional movement with two-dimensional or 2.5 D vector objects in 2006 Hillcrest labs introduced the first zooming user interface for television topic in science fiction three-dimensional GUIs appeared in science fiction literature and films before they were technically feasible or in common use for example the 1993 American film Jurassic Park features Silicon Graphics three-dimensional file manager file system navigator a real-life file manager for UNIX operating systems the film Minority Report has scenes of police officers using specialized 3d data systems in prose fiction three-dimensional user interfaces have been portrayed as immersive environments like William Gibson's cyberspace or Neal Stephenson's Metaverse many futuristic imaginings of user interfaces rely heavily on object-oriented user interface I owe you our style and especially object-oriented graphical user interface oog UI style equals equals see also 