 Welcome to Part 1 of our tutorial on rendering light fields from the Stanford Light Field Archive using the free and open-source COLIBRI VR package for the Unity game engine. In this first part, I'll show you how to download a sample light field dataset from the Stanford Light Field Archive, and use COLIBRI VR to automatically transform the provided camera information into a virtual camera setup that can be used for rendering. In this tutorial we'll be using the light field dataset called "Amethyst", but feel free to use any other dataset from the archive, the process should work exactly in the same way. So first off, to download this dataset, we can simply go to the COLIBRI VR documentation website, click on the "Datasets" page, and type in the name of the dataset, so here "Amethyst". We can then click on this link, and look for the corresponding download, so here we're going to take the "Rectified and cropped images" zip archive. Once the file is downloaded, we can navigate to our Unity project, create a folder called "Data" next to the "Assets" folder, and copy the downloaded zip archive. We'll then extract the files here, and once this is done we'll slightly change the folder structure inside. So let's call this folder "Amethyst", and inside instead of "rectified" we'll call this "images". Now that this is done, let's go into Unity. Make sure you've downloaded the COLIBRI VR package. Then what we'll do is create an empty GameObject, and add a new Component called "Stanford Light Field Helper". This component is designed to read the names of the input images, which contain the positions of each input camera, and use this information to create the virtual camera setup in Unity. So first off let's specify the path to our "Amethyst" folder, and this should make the label here change to indicate that it has found our 289 input images. Then we can just leave the parameters of the component to the default values, and click on "Parse and save", and here in the Scene view, we now have the virtual setup appearing as a set of camera gizmos. So this was the objective for this first part of the tutorial. Let's now go to Part 2 to see how to render this data as a light field in Unity. 