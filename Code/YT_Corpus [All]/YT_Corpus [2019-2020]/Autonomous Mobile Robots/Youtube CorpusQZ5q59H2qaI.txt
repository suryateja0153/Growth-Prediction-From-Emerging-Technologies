 hello ROS developers how you doing I'm here waiting to start with the with a class of today I'm very happy to come here again and I'm having my coffee yes always and I'm getting ready for you know mentally ready for the class and today we are going to continue in this series of life classes that are we are doing about the robot navigation in different sensors so today what we are going to do is to mix the information from an odometry sensor and an IMU sensor in order to produce a better odometry this better odometry is sometimes is required for example I remember when I was working on part robotics we were both building those human sized humanoid robots that have to move along the space that the work was very crowded because they were that kind of protocol robots they have to interact with the people so we were using the slam techniques for that we created a map and localization but what happened that it was so crowded there that actually the map that we built was useless at some point in time it's a point when the robot was crossing those areas with many people because the laser cannot detect their parts of the wall you know because it was occluded by the people then where we Dumanis was a system for the robot detecting that is in a crowded situation and then switch its navigation system from a map base to an odometry base so when the robot was moving around and then it was detecting the wall so good very good we go Looby here we go there at some point in time this is Oh too many people around me and they are clearing my laser so I cannot detect the walls and see the map ok let's switch to odometry there from that point in time the robot wants moving only based on odometry so he could move in the same way could go to places but it was based on odometry and you know what happens when you're moving odometry way well that some error is going accumulated over time so if you keep your robot moving in odometry for a long time then at the end it will be completely lost so at that point what we wanted to have is to have a very very good odometry because the better the odometry then the more the longer the time that you can make the robot move based only on odometry okay so that's just an example here that happened to us and that's one application but there are many so I will leave that to you for making applications that need this fusion of odometry with I am you in order to get a better and more precise odometry okay guys so let me see who he is here on the chat and I can see that there is so hard at saying hello hello Jana Hiro June John as always and Diego also has always commander Sisko of course and then yeah let's go Nate give you - yes Stefan hello Thomas and Mario gross child hello everyone and all the others that are for these people at the class right now and I'm happy to have you here and then there is one question I can see here that the other that is what is odometry okay that's a very good question yet I should have to start from the beginning so I suspect I was thinking that that that was already known but of course these life class is not for any level so if you have those questions that please ask me because then I will know that you don't know then I can provide you an answer and you can follow well the odometry is basically is the computation that makes the robot of how much it has moved so the robot is moving is is here then it what it does usually it has some encoders on the wheels that they take how much the wheels have rotated there based on that measurement of the sensor of the encoder then there are some mathematical equations that can compute how much robot has moved from the initial position where you switch on the robot so you you start the robot you press the power on bottom order over here that's the zero of the odometry and then it starts to move the robot it uses those computations and then it says ok from the original location you have moved one meter forward and half a meter to the right or to the left whatever so that's the computation that the Adamo tree and this is very prone to errors so many many errors I hope that this is more or less answer ok so more people here come in rafael hello we can look at of course Lucas it in white light/white life very nice very nice nickname Vishnu Prasad hello and we Sara okay we have them say hello to some of the people hello to all the rest and let's go to the work what are we going to do well the first thing is to get the raw set of today's class you know the Russia the one that contains the code the simulations the notebook we instruction so you can follow with me right now you can do the same steps as I am doing it ok by using the rod here so what I'm going to do is to put a rush yet link on the chat and then you click on that link and you'll get a copy of the material that I'm going to use myself right now on the explanation and of course you reproduce at the same time the in the steps that I am doing on the camera ok mm-hmm so let's go to that to work on let me share with you my screen so you can you can see what I'm doing in order to share so let's go here many buttons this is too many buttons and then let's start sharing a screen so here you can see my ROS development studio I was working on it of course I'm Tilly last minute you know this is so much work to prepare those left classes and sometimes things work and then at the end we have some changes in last time well anyway so this is a project of today okay left class 51 how to fuse odometry and then this is the Roger that I have created for this class I'm going to share that with you how do I do that by clicking on this icon here that says share and then I will copy the link that I have here and put it on the chat so now you you are going to see if you go to the cat now you are going to see that I'm putting their link there you only need to click on that link and you will get an exact copy of my material the one that I have here okay so far so good so let me close my previous tab so we'll start with you so once you have this this copy just press on the image okay press on this image that you will get and then press open project if you press that you are going to get this kind of a screen that I am having here okay so it's initializing the computer getting the files and preparing everything and get in there in the meantime I can have some coffee and also I can see in the tab if there is any question any problem or else remember that you can ask me questions during along the this this life class and then I will be keeping more or less an eye on it and try to to answer the question so do not worry about the questions you can ask whatever and I will try to whatever related to the class I mean please don't ask me about how to do a robotic manipulator right now because because it's not it's not the situation now it's not the subject of today the mnemonic is asking which I am you are you using Oh so we are using the summit XL robot and then for that yeah well that's taking too long I don't know why it should have already opened well and then in any case if we go to the summit XL robot it's a robot that is built by a company called Robotnik and then you can check the specifications of the robot here I have a link on the notebook okay so here oh yeah okay so we have already opened then but anyway let me show you here that this is a company those are our friends from Robin is super cool guys very professional and very cool robots and gross material that they are producing and selling so I highly recommend that you buy your your material there for your robots or even the whole robot then here you have the data sheet that you can download and then you will get the data from the GPS in our case here today we are using just an IMU simulated IMU in gazebo so I mean is there so it's it's a simulation only so it provides very good values and all that stuff okay any other question before everybody is on a some time and then that she says how can we calculate automata using I've used a linear ass package available you cannot compute the odometry using the IMU only you need something else and then is because the odometry the IMU is not providing is providing only the accelerations and the rotational speed so you don't have enough in order to compute the odometry in then you need something that is provided you are changing the position in some way in some way so for that do you need either an encoder on the wheels either you need a camera that can you be sure odometry or you can use a laser that provides computer odometry also based on the laser so yeah so that's that it okay let's go guys there are no more questions then let's go fear is for the material that this is the notebook okay that comes with the rush yet I hope that you all of you have it in case that you closed it for whatever the reason you can close it here oh where is my number where is yours go to tools and then select Jupyter notebook again and then you will get it here so it's as simple as that okay so here you can have more notebooks if you want you can put all of them there and that case we only have one is like a glass 51 press on there and it will load it will load yeah okay so far so good then what are we going to do is well the first thing is is why it is needed to use sensor data for navigation I already explained that to you it's because the odometry has a lot of error so you would like to have a better odometry then you can use other sensors in order to improve that odometry and get better odometry for navigation so in this case we are going to use the IMU in order to identify if the robot has actually moved or not but actually we are not going to see how it works in the inside how it works is in the in turn is by using a common filter and this common filter is the common filter is the one that we are using to fuse both sensors data and it is already implemented here in the robot localization package that's an amazing package that provide us these common filters already done so we only have to provide which topics are we going to fuse from information in which conditions which from those subjects which information are we going to use and then at the end we get an odometry filtered that is a better odometry okay so that's the robot localization package and today we are going to apply also to the Summit XL robot by Robotnik as I explained to you and it has older this robot has apart from the IMU it has some other sensors like the camera or the GPS deidre by the way the robot localization package is the one that you would use if you want to do GPS GPS based localization so these dramatically station package is like Swiss AMI AMI knife for localization it can it takes everything as you are going to see here in a drawing and this well just to let you know that this is a rush yet what we call here is a Russia that contains this notebook contains some some code it also contains some time simulations and everything is packaged in this this system that we call a rush yet and that you can open it remember that you can download this information at any point in time so you go to tools open the IDE and then here you have all the files that these reject contains so for example I have included here an RViz configuration file I have tear in the notebook here are the images and the text that I have created for today is notebook data set there is nothing but hearing cackling okay space there is a pack a package that I have created to add noise to the odometry of the simulation we are going to see that in a minute so all that you can download you press here and then download then you will get all the code and you can run it in your computer or move on remember that okay well let's go so yeah so what I wanted to tell you already plain but here is this kind of in order ok so why do we need to few sensor data well because this is a very nice drawing that shows the odometry is trajectory and you can see that is going in the drama to theater is going like crazy just in a loop then the robots actual treasure is the one in blue and you can see that is quite different from the from the odometry at some point in time so it's because odometry is an arrow that is gets accumulated over time so over time over time over time there is more error more error it's more different from the actual position of the robot and then you have in red it's a particle filter okay particle filter is not the case that we are doing here today about the better odometry it's even more powerful okay it's by using a particle filter for implementing and a SLAM algorithm that that uses the laser extra information from the outside to correct the error of the odometry but in this case we are not doing this one we saw this in previous live class today what we are going to do is to do a better odometry so this error is a smaller still we are going to have an error okay so by doing what we are doing now it's still we are going to have it but in some situations like the one I explained you at the beginning of the class it is that is enough for make the system work so it's less complex system then what is the robot localization package is a ROS package that you can check the documentation and it can do many many things but basically what it implements it's a Kalman filter for fusing data from many things and here you can see two of the things that this this package can do one is to mix information from localization systems and get a better localization or even use a GPS for localization and the other option is to produce a better odometry based on different sensors that are producing information related to the allama tree that's a case that we are going to touch today okay in this case we are going to mix IMU and wheel encoders that odometry basically odometry of a wheeled robot but you can you could also get odometry from visual odometry from a barometer from a laser so those are options that you can apply the same concepts that we are seeing here today okay so first thing let's start let's launch the summit XL simulation because it's a one that we are going to use today so that is very simple go to simulations and then here in the list of robots go down until you see the summit XL that is here and press there then the simulation is going to appear here okay let me put it here for example then in the meantime let me check if there is any question what are many questions many many questions okay can you talk about transforms okay commander Sisko please be more precise about that hello thanks for these videos manual also okay thank you all / - she says are we fusing jaw and go from I am you and your one go calculated by individual wheel velocity and then use it for the to calculate X I via xvi of the robot yes oh yes you are going on the right direction you are going to see by the end of the other notebook which which components of the audiometry and of the IMU that we are going to use so the only ones that make sense for this kind of robot remember that this is like a differential drive robot so some components are not necessary of the IMU because never are going to produce any data the Mario said does it make sense to fuse GPS into an EKF to produce a llama tree or is it a better approach making additional use of GPS yeah doesn't doesn't make very sense for that so because GPS is not a dhama tree remember that an Adama tree something that is intrinsic to the robot it means is something that the robot computed by itself without sensing outside let's say without sensing outside so GPS is more like a global is from the outside that says hey you are here because all those satellites around the earth that are providing telling you a you are here so GPS sorry GPS it's a direct it's a localization system and the robot localization package shows you how to use a GPS for localization if you have a GPS then very good you are safe let's say are we going to use UKF for ekm it doesn't matter actually for those results and if I have to be sincere I don't really know the difference in practice of those two of those common filters one is the extended Kalman filter all the apps and send and come Kalman filter so we are going to use here today the e K F but you could use the other way and you will get the same results basically and Mathew already answer about that that's good Thank You Matthew you are right which one is better for localization yeah okay already answer Danny does is late Danny that you are late now are no problem Danny you can take check the link above on the chat and then what else will subscribe to daily content okay thanks Matthew you're welcome okay we are up to date okay let's continue let's go let's go so we have the simulation now let's let's have a look at how the odometry looks at present okay so for that we need to run RViz the odometry that the robot is already creating publishing so let's run the orbit visualization system for that we need to have a shell go to tools and open the shell then on the shell you open the shell then you have to launch this command that is call rosrun rviz rviz and then the RViz is going to start and I probably you know ready but let me explain you cannot see the RViz here appearing here because this is a web interface oh it's something a little bit just a small more complicated but not so complicated in order to see the RViz window you we have provided here a tool that is called tools then go to graphical tools then okay sometimes these happens just press login and then we should see here the RViz yeah here we have let me put it in be whole screen here okay if you got this like it's not centered the RViz you see that is not centered you can do a double click on the blue line and then it will Center automatically but anyway let's load the configuration file I have included here it's in order to go faster okay so go to file in the RViz and then say open config here if this is not the directory that the config file is we need to go one directory app then use this button here to go one up and here you will see the odom config RViz select that one and then open you can discard we don't need anything and here we have okay so I have already configured all this in order to show us the different odometry that we are going to see today here and the first one that you can see is the odometry provided by the simulator by the robot in the simulation and as you can see is like a fixed odometry is there is I am here is say okay the robot is super sure yeah because in the odometry in the in the simulator is why of perfect it's almost perfect so what we are going to do is to make these last perfect I have included here let me put this instead of full screen I'm going to actually I'm going to detach this and put it into another tab in order to detach the whole graphical tools window you press this button here the first icon from the left and then it creates a new tab and you will get this message but this is because it's something still we still need to improve you need to close the previous one okay so go to the original tab close that one and now you can come here and press login okay so that's easier isn't it so we have the our base in case that you have two screens you can detach the step and put on the other screen and that's super cool it's very it's very nice to have in different types but now let's go back here again so let's launch a noisy odom package this is a package I have included here it's very simple ROS code okay I have it created in catkin workspace here go to source and then you can see here the noisy odom package that it contains a Python program that basically what it does is is very simple it just subscribes to the odometry topic then gets the odometry then add some random uniform noise into the into the XY components actually only onto the into the I why sorry and then it publishes these noise with noise or nama tree into another topic that is called noisy odom so so we do that in order to get some noise and see how they I am you inside the robot localization is filtering all that and helping to have a better odometry so let's launch this in order to see the noise they are odometry that is been having noise because now if we go to here to there are bees you can see that is very stable yes okay so let's go and launch this package how do we do that we need another shell because this one is already with the RViz and we cannot close it but let me minimize this remember that when you minimize you can come here and you will see here the the icons that you have launched it already well now we need another shell so go to tools shell and open here and let's launch this package how do we launch in this case this package I didn't create a launch file I create just the Python so we need to use a rosrun command then you can do you have the rosrun command there I'm typing at the same time so rosrun name of the package is noisy odom and the name of the Python file a Python note add noise yeah at noise dot pi let me check if there is it's easy strange because it's not recognized sing got PI okay so you have some now maybe I forgot to to provide the permissions for executable yeah so the sorry for that guys we need to go to the add noise package and provide it with execution permissions so this is not explained on the notebook please go with me you have to do roscd to noisy odom slash source then here we have our Python package ok Python code sorry then you have to execute this command chmod space plus X this means change this file with execution permissions then we have to indicate which file add no install hi that it now we can do the rosrun so if I go back rosrun noisy odom add knows and there it is there it is has already started and is generating this how do I do that well because if we go to the graphical to the RViz window you can see that now all those are my three values that are randomly generated so now the robot doesn't actually know where is exactly on the y-axis okay so only on the y-axis well that's just an example okay imagine that your noise is your odometry is very noisy so that's an example great so far so good let me check channel questions okay somebody says their compute hello you are here great then it says Matthew says I had to run draw school to get RViz to work that is not correct Matthew is that you are suffering that it means that you haven't launched the simulation or you had a problem with the simulation because when you launch the simulation it will run a raw score so then check that then about problem of the chmod yeah okay maybe Python executable yeah so we are a business great let's continue then so now let's let's make the robot localization code to work so the good thing is that robot localization is already working the only thing that we need to do is to configure properly for our robot here we are going to see an example for this summit but the same steps apply to your robot ok it's very simple you just need to change the name of the topics the the type of sensor those things so ok we are going to see how to do that then for that in any case we need to create a lunch file and then we are going to put it inside a package ok well I want to do it properly great so let's go let's open another shell because this one with a noisy odom is already taken so I'm going to minimize and launch another one shell yeah you know you are working with ROS you need a lot of shells we are working on an improvement for the system where you will be able to launch several shells in the same window so you don't have to be going to tolls and having separate windows in kind of terminator for the web but we'll see okay so let's go where do we create this package well we have to create any package it has to be inside that tasking worker space and here you can see that we have the simulation workspace the notebook worker space the data set worker space and the catkin worker space and AI worker space so where do we put the code that will run on the robot the code has to be inside the catkin worker space okay the others are for other worker spaces for other things so inside the canteen working space we need to go there inside source and create our package for that you have all the commands here just follow the hose I'm going to go move myself a little bit so in order to reach the the final goal so just execute those commands that go to the proper location then use caffeine work at space attack in create package and then the name of the package has to be like this summit on the score odometry please use the same name okay otherwise it won't work then let's go inside the summit odometry and create two directories one for a lunch file and then you use this command m KD lounge and another one for a config for it's a directory where we'll put the conflict okay so so far so good so we have created a new package and two directories inside a package then let's go to the IDE and I'm going to do one thing with the IDE I'm going also to put in another tab okay so I'm going to press this icon and then it should show here great then here if I see here the source you can see here inside the tank movies page we have the summit odometry so open it and then inside concrete first inside lunch sorry inside launch create a new file and this file has to be call like this let's go here to the notebook back and close this one this idea we don't need it so let's call it like this star and the score filter dot launch okay copy that name and go to the browser and say a new file with this name ok so there it is and it's empty what are we going to put there well the commands necessary to launch the robot localization package so come here and then copy all that I'm going to explain you what it is ok so just copy the content of this cell and go to the user to the star filter launch and then paste it there there it is so what does it does let me see how can I make this bigger so this is the new this is the new IDE that we have integrated and now let me see how can i I don't remember where we have to okay sorry so that I don't remember where to increase the size of the of the of the phones so that's what we have today I will figure out the next day so then what do we do we launch just the note of the package drama localization and then which one of those well inside the robot localization we have the EKF localization note of the UKF in this case we are launching the EKF so it's an a KF common filter I mean an extended Kalman filter ok so that's it so the only thing that we do is to launch this from the robot localization and that's the name ok we are assigning to the note that a name then additionally we are loading a file that contains the config operation for that note this is a configuration is where we are going to specify for our own robot ok so let's go and let's create that what are we going to create there well this file as you can see it has to be located inside the summit odometry package is large conflict ok so we are great because it is just here so we need to create this file EKF localization yum file inside the config directory go there right click new file and copy this oh I didn't copy before let me copy here or you can go to the notebook also is there so I'm just copy the name of the file then I'm going to config do a new file and put that name EKF underscore localization odium please respect the names otherwise is not going to work at the end great well do you have the name here ok also of the file you have it here in the notebook I'm going more or less following the notebook you know but the thing is that I have written myself so I know what is is in there and so maybe I will skip some things but you can come back always because this is material that you already have it's for you always so you can come back and use it and check it so what is the configuration file going to have well it's going to have everything that is here in this cell so what you can do is to click here select the whole content of the cell select that and copy then ctrl C and then go back to the EKF localization yam and then paste it there ok so I have pasted it here and that is it so now we have you can see that there are some question marks around there that's the things that we are going to need to fill along this class ok yes so far so good ok great let me see if there is any question huh Wow it's this is starting to become with a lot of questions and we'll need to figure out a better way of answering because every time that they come here to the chat there are so many questions that I get lost I don't know from where to start mm-hmm Ricardo could you please explain what are exactly the pink are rose okay yes that's a good question Diego yes so let me I understand that they are noise but why there isn't a single moving arrow okay yes so that's a very good question okay and I see that Epson is answering and afterwards it says Diego changed the key value of the noisy odometry to a smaller value about five should do the trick yes very good Epsilon hello epsilon that you are there nice to have you back on the class and if some for all of you who doesn't know he was one of the interns of at the construct and almost was working for the company in full time it was almost but at the end it was not possible but he was one of the creators of some of the notebooks of the previous life classes and we were together there so nice to have you here on the on the life class Epson so your question is Diego it's about why so many pink yes that is why this is because this parameter here that says keep so you can put keep one for example and then you will get the light latest noise see Adamo tree so that is that you can see that is moving then because we said key then we got all the one last 100 where printed or only the last 100 so that is why and then in pink is the it's the arrow that is representing the current position the the current odometry in the noisy that we been I see topic okay so is the the actual one the red one is the Obama tree that is computed by the simulator it's perfect is there and then we have created this noisy version and it's pink one okay so that that you can see many many there there was a matter of visualization and this is something that you have to master in Ross okay you need to master how to play with all those parameters in order to get the information that you need to solve the problem okay so that's also important well anyway let's continue and let's go for the next thing so in order to to fill this file remember we have to modify the the question marks okay so for that first thing is to indicate the reference frames so those are the frames from which we are going to measure and some of the measures that are there the first one is the base link frame and that is the frame that is the center of the robot itself then in this case we know that the center of the robot is called base link hmm so we I have written here okay so you need to specify where is the center of the robot where is this the frame that is at the center of the robot that's a base link so we should put this on this file config file so go there and check what it says basically okay is the second option here but just do it so right based and the score link so how do I know that this is like that is because if we go to our base we can add for example the TF to the our base if I go to add I'm going to check the TF TF okay and then all the links of the robot are going to appear there and then if you move around there for example and another trick for better virtualization is to make the model of the robot quite transparent so if you go to robot model here and open the configuration you can see for example is the alpha value that is one but you can say for example 0.3 and then you will see that is quite transparent ok so then it is not bothering you to watch the different frames and also you can see that there are so many frames there that they don't allow you to see everything so you can come to TF and then check which ones do you want to see on the frame so you wolf down go to frames it says all enabled I want to be all them printed there so just remove that and then you have to check which one could it be the base link frame based on the names ok so that's how it works and then you say oh based me that's quite suspicious that base link should be based link please call me Sherlock because this I'm so clever for that then you can click here and check it it's actually the base link and then in this case you can see that it is sorry right hey confuse the key and there it is so it's almost at the centre of the robot so that's our base link then the same procedure you do with all the others like we need here another one is the odom frames this is a frame that is used to report the odometry and it's called odom you follow the same procedure and you will get a tea solo then the map frame this is the frame that any localization system like the ones that we have launched it on the previous classes it's running and is indicating the global position of the robot in a map in a kind of map that will be also possible for a GPS data okay so in this case we don't have any so we don't need that one it's because we don't have a localization system running and then finally this is the world_frame a frame that is going to be used for referencing in an absolute coordinates system oh it's like there it's like oh I don't know how to say without say in the world the word world but it's like the frame of the world in which you are going to measure your robot because we don't have a map frame then our world frame has to be the odom frame is the only one that we have that is measuring in absolute coordinates not in relative to the robot I know that this is quite confusing and it would take a long time to explain that in better way so just take this rule if you have a localization system then the wall frame has to be the same as this one if you don't have it then the wall frame has to be the same as okay this is too simplified now okay so now we have this configuration let's go to our IDE and do it then warframe we are going to say odom frame we are going to say problem and then map frame you can just remove early or we're going to put also odom yeah Wow now I don't remember if it's needed let's remove it yeah let's remove it but they let you move it I think that it's it's going to work like that then what else do we need so we need to complete the odom configuration and the IMU configuration so for that what is that so now we need to add the sensors that we want to fuse in our caves we want to add the odometry and the IMU but we could add more things as I mentioned before so for any sensor that you want to add for your fusing for fusing the information then you have to create a section like this okay so a section like this then on the first thing you have to indicate a is the topic is the name of the topic that provides you with this information in this case for the odometry we know that is / autumn then then you have to provide this config matrix okay for every one of the sensors that you want to add one for the odometry and here we are going to do the same for the IMU okay stay with me for that so how does this matrix work those values well it looks complicated but it actually not oh sorry sorry I made a mistake here and that is why I have written here because in my test I was doing the same mistake it's that actually we are not providing the odometry from the odom topic but from our noisy odom topic okay so come here and change it yeah of course because we know that the odom is already great odometry now we want to see the effect of the filter on the noisy autumn okay so great so we put it there and for the IMU let's let's put that one is mu / data so you can do it like this I am u / data okay so what about now the the matrix well it's the matrix that matrix is representing these values here so first is the position in x y&z in the space second is the draw pigeon jo rotations of the robot so the orientation of the robot in the space then is the speed in x y&z of the robot also the angular speed in each one of the access and then the linear acceleration okay so one can't meet matrix S is for each one of those values you have to indicate either false or true if you indicate to it means that this variable is going to be taken into account in the Kalman filter if you indicate fault then this variable is not going to be taken into the common filter to mix with the other signals in order to get a better odometry so that's basically then for an odometry provided from a wheel encoder the proper matrix is the one that shows here so it means that we are going to take into account the velocities in X the velocity in y and the angular velocity in Z okay why why is that that's a little bit complicated but let me let me try to explain okay so the odometry from a wheel encoder it's providing two things it's providing the x y and z values and their velocity in x y&z yes so that is right how do I know that that bit well because if I go to the topic of the here of the odometry and do a ros topic echo minus n1 just to check then I do along then you will see that we can have the twist that is the speed and then they pose that is the position in all that information then what happened here that both data is actually being generated from the same encoders so because we don't have a sensor of speed in the robot so this speed is computed from the post changes in the wheels so is the same information both of them so for the common filter is no need to provide one of them and then based on experience it looks like if you provide the velocities is better okay so then we have to provide the velocities here and we are not providing the Z velocity because the robot cannot move up so that's nonsense and also the robot if you know oh it's a differential robot it can only move in X direction so why do we provide this because we know that in Y is going to be zero so we provide that in zero it's even so in order to civilize a little bit okay so we provide the X and y in velocities and linear velocities and then Z in angular velocity because the robot can only turn in the Z angle so that is why we have here this true and all the rest is going to be false so you can directly copy this and put it there on D actually the whole thing and substitute here the matrix of the odometry okay great so now we have to do the same thing for the IMU data then how would it be in that case for the IMU we have the angular velocity in Z that is they of course because the robot is rotating and this is measured by the IMU and then the linear acceleration in X linear acceleration in X there because the robot is only be able to move to accelerate into the x axis because it is a differential robot then so what how would it be there there matrix I haven't put it here but you should say something give me any answer there give me some answer in the meantime and drinking some coffee it's a very very cold but okay so then do you have China you have the problem that you cannot find the executive all is because you don't have D you don't have the the permissions in the file and then Sheryl is providing you with the commands that you need to do in order to provide that and we ODS K says that all the entries are false except the last role almost almost real almost but not remember we have to provide something in angular velocity and something in linear acceleration so there are two rows and actually we are only interested on the angular velocity is only in Z because the robot can only turn in Z and linear acceleration is only interested in X because the robot is only moving forward or backwards in the x axis that means okay so I see no solution here then let go because it's getting late then what how it has to be well it has to be angular velocity which one it corresponds angular velocity it corresponds here to the fourth row and then in that case it says it's in Z so that would be the same case like this row in in the odometry only for that for that row is the same as for the odometry and then we have the linear acceleration in X so that will be that this one is true and all the grass is false and the rest is everything falls that for the odometry okay so let me in order to make it simpler I'm going to copy this and just modify okay and let me show you how it looks so if I go here then it's everything is false this is even false this is even false except this component here that is true that this is the angular velocity in Z okay and then this one that is the linear acceleration in X this is true also so everything is false except on the fourth and fifth row on those values okay I hope that it is clear okay and then okay so that's it then we need to specify also those matrices yes so those matrices are provided in order to better compute the noise the first one is for the noise of the data in the the noise of the data in the in the energy of the data in the the sensor values this one and the second one is to is the covariance of the initial state of the robot then I've never used this and never actually tuned it and use it only this default configuration in most of the cases it is true that I have always been working with their simulations but I haven't seen any body that is reporting about how come changing those values have they improving anyway but they are provided here in order for you to tune so if you get into trouble you don't get good results then you will need to tune those mattresses and that's a heavy work that's having work and I'm checking that I see here that looks like there is a problem here because there is a kind of comment so this is not right this you see that there are some commas here I don't know how to say in English well this symbol here after process noise covariance so you have to remove that because that's not correct in any way so please remove it because otherwise it is will have some errors okay so we have everything configured now with many default values that are not getting into that so you will have to go into the robot localization documentation to get it and now it's time that we launch this code remember we have created this summit odometry package and this lunch file that is going to load this config file sorry this config file that we have created here so let's do it then in another shell this one that is not being used we can give lunch Rox launch summit and the score odometry summit odometry and then start filter our filter yeah there it is so let go let go sorry I had some delay here okay let go great so now it's starting here and it's loading the EKF localization here we have we're not really central of the configuration for topic autumn expected type 7 expect at 7:00 ok ok we have an error here don't get confused by this warning here does nothing related to it but it says that could not set range sensor update configuration ok let me check what do we have here okay I'm checking if there is any problem and then we see I don't know it looks correct everything looks correct here so it only says this error this error but it's not indicating let me check if this let me check if it is actually publishing so let's open this but it looks like it's not publishing so we should see if there is a noisy filter on filter at topic that is being published let's see so let's open another terminal and let's check its opening and here any question any checking here on the chat then says the Quixote says if the robot sleeps will it not move to the Y - yes that's a very good question finally odd Panagiotis but that would be an error so that has to be filtered and then yep sorry but the odometry will not measure that so you get you will get an error in Y and but the odometry will not be aware because the odometer is not able to compute movements to the Y so but these will be detected by their I am you and that is what the Kalman filter is doing fusing those two informations and this movement to the Y is being detected by change in the acceleration then Hannah says didn't we forget about your orientation in IMU config metrics hmm no why why this wait wait a second too many things are so getting some problems here in their system okay come on anybody is getting any different result please show me so here I have the the terminal let me see if we have the topic of the see if it is actually working the running the the note and then we should see the odom filtered and acuity is the other filter let's see so the topic has been published but it doesn't mean that it's publishing data properly so let's do a cross topic echo of odom filter along slash filtered and let's see if it is publishing any data but is actually not so this means that it is not publishing data and the question wait so what is sensor to not read sensor update configuration for talking peak autumn zero and let me see why it's not but this is correctly noisy problem maybe I wrote this incorrectly zero atom zero config IMU zero mu zero config yeah that that is correct yes and those parameters are by default so they are already correct so they it's it's working properly so I donno let me reduce a little bit the frequency of this and try to launch it again but but I don't think that it's that is the problem I cannot publish the FTF I don't convey zero so here looks like something strange here and we see if by copying this I have introduced any any strange character something I don't see it looks to me like it's correct everything yeah so to go need to go to their documentation let me check and and I have to I'm taking here that your question just to see if you have any comment related then Cheryl easy is saying I get the error invalid friend configuration the values from map for a model frame and base link must be unique okay so yes so Cheryl you probably have a problem in the frames so you haven't indicated proper frames in my case I have removed a map frame and I think that that's it that's okay that is okay didn't we set us out on frame autumn base link frame base link and wall frame autumn that is correct that is correct but and what did you say in map frame sherry Diego is reporting that is getting the same result as me okay so let's see this is correct this is correct okay let me do one test I'm going to check this I put only odom but it's complaining about the whole the both of them so it looks like there is something as strange there and we check yes if it's complaining for autumn but here is complaining about the both odom and I am you and it's strange that is complaining about those two okay let me check is message let me see if they for some reason those type of messages do not correspond to these ones here let me check so rostopic info odom it has to be navigation message odometry so that is correct type yes of course because we have been plotting it and for the IMU data the same IMU beta is the same sensor message IMU that is one of the acceptor this is the list of accepted type of messages that trouble localization is accepting okay so that's correct also so and both of them they are probably because we check and let me check Paloma tree no no see well we have been seen that already so noisy autumn it's polishing yes and the same for I am you it's nice data see yes it's polishing and it says frame ID please footprint oh okay okay wait let me see it's let me change this instead of base link let me change for base footprint but it's not that's not correct because there is a transfer between base link and base foot tree but because I don't know what is the problem so I have to check you know I have to test different things and let me see let me say if that works in the meantime let me see any suggestions here check the first line of odom zero config says Epson and Estill IANA says in other country you need to have false or Falls you need some commas okay that could be yes okay let me see it says oh yes that is right of course there is a comma here at the end of every one of course that's it very good as TV huh knows very good very good yes so in all of them actually in IMU in all the sensor so we need to add this comma there then I'm going to change this back to base link save and then come back here and launch it again and in the meantime see share you you're still getting your error okay and then Diego is also reporting the same thing then also Benjamin is also reporting the same thing very good very very good at the details guys super cool super cool thank you very much for helping me on that and yeah so we have it there now let's say it's actually probably Sheen Cheryl I'm going to go with you okay don't don't don't think that I forgotten you so with your problem so let's see Andres topic Aiko of all unfiltered oh it's not publishing ok and here let's see in this case I have also included another conflict for the atom that is showing the auto filter okay and it should appear in blue so we should see an arrow in blue and we don't see that so because it's not publishing of course and let me see then here looks like it's correct let me check if I have also modified something here in the meantime and I didn't properly okay so here is it odom I have to change back to no see dom it's your own and I am you I am you data that is correct okay so let's go let me keep it yeah but it should have been in these are these change that I just made is not the one that is causing this pair or that is not publishing so still nothing still not publishing because it should appear here and it doesn't complain about anything and let me see if there's here some problems here and no it is correct this is correct and okay guy so I don't know what is actually happening and I need to I need to to have some time to find out the error for that let me see if I'm missing something if I'm missing something is here no there may check let me check out an example of robot localization config file if I am doing something wrong here but in theory it is it is correct let me see here okay is long trial and basic robot localization it okay so guys I cannot find the error right here right now and then I will need to check a step by step every one of the parameters here because I cannot see where is the the problem I cannot see there was a problem here with two hyphens and I'm checking here that the matrices are correct but the system is not complaining so actually she produce this data if you produce because their topics are producing they are correct here and yes no I don't know I'm going to add a map frame also I don't know if just this stupid removing this and and set us the odom also and let let me test that but I don't think that this is the the problem really let's see and otherwise I will have to yeah invalid frame here the values for my free modem so this is the error that you are having cheerio this is the error that you are having and this is indicating because the map frame cannot be set to the same as the other two so that is why I remove it because otherwise I have to put indicate map but map doesn't exist if I add the map frame I don't know I'm going to test that but I I don't think so so probably show you what happens to use that you have the map frame is still there and you have said to another another already existing frame try that check that you don't have the map okay so now it's already running but still not not publishing the odometry still not publishing okay so it's getting very late and we'll have to close here let me see but we feel to it yes you say that it's aa odometry filter it no way don't tell me that that is the error for dama tree filtrate you 