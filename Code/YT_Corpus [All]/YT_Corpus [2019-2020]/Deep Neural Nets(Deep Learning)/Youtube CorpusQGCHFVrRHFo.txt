 hello i'm kobayashi from sony in this video i will describe the process to build a convolutional neural network that achieves a high level of image recognition performance in this tutorial we will use the windows version of neural network console our integrated deep learning development environment to build this network links to other videos that cover deep learning in more detail and tutorials on using the cloud version of our software are provided in the description please see the videos if interested in that content first i would like to spend a minute and discuss the configuration of the convolutional neural network cnn we are going to build using newer network console if you are interested in learning more about cnn make sure to check out our other video titled basic of designing neural network the cnn we will build in this tutorial processes an image of a handwritten digit to determine which number was actually written in this example the cnn takes a 28 by 28 pixel monoform image of a number nine and outputs one neuron that represents the probability that the image is a 9 instead of a 4. this c and n can be expressed by combining the following functions the first function called convolution generates 6 output images by applying 6 5x5 filters to the input image next the max cooling function is used to have the vertical and horizontal image resolution then value is used to convert any values less than zero to a value of zero a second instance of convolution is used to apply a total of sixteen six by five by five filters on the 6 12 by 12 pixel images to generate 16 output images a second instance of max cooling is used to have the vertical and horizontal resolution again and a second result is used to convert any values less than zero to zero the next function is the affine fully connected layer at this point a total of 256 neurons four by four by 16 are input and processed to generate an output of 30 neurons then reboot is used again to convert any values less than zero to zero because it is fully connected the less instance of a coin can take an input of 30 neurons and generate an output of one neuron the final function sigmoid performs the conversion on the applying output to generate a probability value between 0 and 1. now i would like to describe the procedure to create this kind of cnn in neural network console the convolution max boolean relu and other functions will be arranged and linked from top to bottom in the following order here you can see some properties for settings of each layer in the arrangement for example the outmaps property which represents the number of images to be output by convolution would be edited to match the design of the neural network let's now create a new project in neural network console click new project to create a new empty project now let's load the data sets as with the two layer neural network we trained before we will load data set so that the network can determine whether a handwritten digit is a four or a nine to load the data set click on the dataset tab and then click the uri button select the small mnist four or nine training dataset to load the 1500 images of data used for trading then load the 500 images of data used for validation all the datasets we need for this tutorial are now loaded next we will build the neural network use this component and add them to the network graph to replicate the functions that configure the cnn as previously described first we add the input layer then build the first convolution layer including a max boolean component and relu component we need another function consisting of the convolution max pooling and value components instead of adding all these components manually though we can select and copy multiple components and then paste them to make this easier now that we have built the second layer of this cnn we need to build the fully connected layer [Music] add an affine and relu followed by a final layer consisting of an affine sigmoid and binary cross entropy which is a lot function all the functions we need are now added to the project next we will edit the properties of each layer to create the desired neural network first let's edit the number of outmaps filters for this instance of convolution this is set to 16 by default but according to the initial design of this cnn we want the number of images produced by this convolution to be 6 so click on out maps enter 6 and then press the enter key the number of output images is now set to 6. let's now look at the number of neurons output by the first instance of a file this is set to 100 by default but we need this to be 30 per hour cnn design enter 30 and then press the enter key we want the last instance of a fine to output only one neuron that represents the probability that the handwritten digit is a 9 so we need to edit the out shape property enter one and then press the enter key with that we have finished designing the neural network now click the run training button to perform the training process a message appears telling you that you need to save the project before running the training process see the project file under any name wait a few moments for the training process to complete once the training process completes press the run evaluation button as you can see we can achieve an accuracy of 98 with this convolutional neural network in comparison to an accuracy of 95.2 percent with the one layer neural network we built previously we can see that we can quite easily achieve a high level of accuracy with cnns we can also modify various parameters of this convolutional neural network for example we can try changing the number of images output by convolution to something other than 6 we can also change this kernel shape parameter which represents the size of the filter used by convolution you can also try experimenting with other variations such as changing the number of convolution leaguers the number of applying instances for the types of activation functions i think you will find it interesting to keep trying different settings to discover configurations that produce even better results 