 Regards !! In this opportunity we will carry out an industrial integration with Ubidots Some recommended previous Tutorials ... They are very interesting implementations Using Known Hardware with Unknown Hardware A few months ago I made visits to some industrial plants and note in some boards that used the LOGO! from Siemens these are the simplest and cheapest PLCs that Siemens has I see them perfect for Domotic applications or basic automation These equipment are very complete, robust and safe, German design 1. LOGO! 12/24 RCE reference 6ED1052-1MD00-0BA8 Ethernet 2. Raspberry Pi 3 B or B + with previously installed Node-RED 3. Have an account in Ubidots Industrial version architectures have been determined for this application in general This is the application that we will do next I recommend to see previous tutorials on the revision to our LOGO! The logo! requires configuration and programming in block logic and has software "LOGOSoft V8.2" I recommend this tutorial how to program, configure and download this is the example we will execute, 3 digital outputs change to 3 colors the LCD The communication between LOGO! and Node-RED Locally I recommend this communication tutorial and S7Comm protocol from Siemens and TSAP with Node-RED Technically there are already some nodes created by a group of developers, thank you! That emulate the S7Comm protocol to communicate with LOGO! PLC Families 300,400, 1200 and 1500 the addresses and registers are required, they are an open development, without guarantees since they are not official. This is a simple warning of its use, given that I do not know how it works in complex applications during my tests they worked well Communication between Node-RED and the Ubidots platform Ubidots already has communication nodes Technically they have simplified the MQTT connection with the Ubidots platform Installed Ubidots nodes Ubidots has detailed information for MQTT communications between the Platform and Node-RED In our test we will use both methods I recommend the documentation to not fail in the attempt In this opportunity I will present and explain the results Our Dashboard Node-RED I will explain a bit how the application works This is a node for reading data from the LOGO! Towards Node-RED Configuration for communication using TSAP the IP of the LOGO! List of variables or registers, digital inputs - outputs and Analog input This is the method of individual reading of registers This is a method of mass reading of registers Technically we take the JSON from LOGO! we filter and adapt and send to Ubidots all variables LOGO! inputs and outputs are in this (JSON Object) to Ubidots I only want to send the digital inputs and analog inputs and remove digital Outputs the JSON Object The logo! sends Boolean data and Ubidots supports Integer data (int) with a node we change the (Bool to Int) simply replace we change the True, false to 1 and 0 but we converted the JSON to String before and finally we convert again from String to JSON and Ubidots receives the LOGO! All this can also be done in blocks of (function) but I found it better to use own node-RED blocks to learn This is the node that sends the data to Ubidots These nodes are for individual filtering of the LOGO! it is an additional this method saves a lot, since from a JSON I read and filter data This last part is the one that reads from Ubidots and writes in the LOGO! This is the configuration of the Ubidots node for Reading I have also decided to use the MQTT nodes to read data from Ubidots both options are the same, only with the basic MQTT nodes it is more extensive here we perform a conversion of records from (int to Bool) We also use the writing nodes in LOGO! We will write in its 4 digital outputs to Relay READ UBIDOTS WRITE IN LOGO! READ LOGO! WRITE IN UBIDOTS These nodes above are only basic examples, they are not used how to send a JSON with variables to Ubidots We have our LOGO! and we have connected 2 digital inputs and an analog input 0-10V 8 digital inputs 0 - 24VDC and 4 are configurable from 0-10VDC 4 digital outputs to Relay Allows I / O expansions MicroSD card for datalogger LCD screen and it has embedded a WEB server, also apparently with Modbus TCP / IP Analog input variation from 0 to 1000 points ethernet network configuration connect to the network We have created this dashboard to control and monitor our LOGO! 4 Digital Outputs 2 digital inputs and the value of the analog input We can see the change in the LCD and activation of the Relay output the first 3 outputs control 3 colors the fourth exit is not associated with any action in the LOGO! Change digital inputs with a selector Finally the change of the value of our Potentiometer 0 -10 VDC Additionally we have made a control Condition if analog input (ADC) 500 for more 1 minute = activate output (OUTPUT02) Color Red LCD start control ... We have configured it in Events can be created conditional by changes of values in variables change to red of the LOGO screen! active event we determine schedules for the event we configure the conditional and the time for activation the "trigger" has many available actions, calls, emails etc. in my case I have used variable change, complete documentation in Ubidots if the ADC &lt;500 the variable returns to the initial state This was the test we did, although basic has previous steps. in theory you should easily add more LOGOs although it would be too much processing for a single Raspberry Pi I would recommend using a server with Linux (Ubuntu, Debian, Lubuntu, Opensuse, CentOS) with Node-RED Possibly a better processor and RAM memory will allow the addition of devices Perhaps the only limit is the S7Comm nodes since they are unofficial, but I do not doubt the quality of the development. This possibility is a bit more complex, but not impossible, although the LOGO! Use the S7Comm protocol specifically the TSAP by TCP / IP with IP addresses, does not support "host" or "hostname" Even so it could without requiring public IP addresses or DNS, VPN then we will investigate The logo! in the dashboards there is to indicate events changes of colors and others created with "CANVAS" html, javascript and ajax in future implementations we may try with modbus TCP / IP apparently this version supports it Perfect integration of an industrial device and the IoT Ubidots platform, documentation, more tests applications and downloads at PDAControl sites (pdacontrolen.com and pdacontroles.com) greetings 