 Hello, everyone, and welcome to IoT Show Deep Dive. We're excited to have you all viewing in. If this is your first Deep Dive, Deep Dives are interactive events where you can ask questions and we also have an on-demand. So these, we get to Deep Dive into specific topic, a new feature. So this is a great way to upskill into the different products and services across Azure IoT. So today, we're focusing on building IoT solutions with IoT Central. We had a lot of announcements at Ignite, and so there was a big request for us to run a series of Deep Dives that goes over Azure IoT Central. So today, we will actually focus on the IoT Edge Support, and then in future Deep Dives, we're going to focus on multi-tenancy, the APIs, the industry focus solutions. So look for those Deep Dives. All right. So let's go ahead and get started. Ranga, I'm super excited that you're here with me. We used to work on the same team, and I had to bring Ranga and for all things IoT Central. Did you want to describe what you do it on the Azure IoT team?  Sure. By the way, thank you Pamela for having me here. So I'm Ranga Vadlamudi. I work for Azure IoT and focus on a central solutions, and as of today, I've been focusing on Central Edge basically enabling the Edge capabilities in IoT Central.  Yes. Then I'm Pamela Cortez. I'm your host. I'm on the Azure IoT team, focusing on being the developer advocate, creating demos, technical workshops, and upskilling our partners and customers. So all things developers I focus on. All right. So for this particular Deep Dive, what we're going to do is cover an overview of the updates of IoT Central. I mentioned them earlier but a little bit more information there. Then we're also going to cover IoT Central support with IoT Edge, just an overview. That way if you're building a solution, if you've worked with IoT Edge before just to help your memory about the different elements of building with IoT Edge, we're going to have a white-boarding sessions where Ranga is going to go into the templating experience with Edge in Central, and then we're going to have a bunch of technical demo walk-throughs, which I'm really excited about. This is going to be a jam-packed Deep Dive. With that said, feel free to ask questions. This is on YouTube Live. So you can go ahead and be on chat. I will get to your questions, and as Ranga or I answer them myself depending on what the question is. So definitely be interactive in the discussions. All right. Then we'll close off with resources.  Sure.  So we're going to go ahead and get started. For those new to IoT Central, we have a lot of videos describing what IoT Central is, a lot of great documentation. But really, I just wanted to just give that high level overview again. When you're building an IoT Solution, there's so many elements of it. If I was going to build an IoT Solution today using our PaaS services, I would normally connect the device to IoT Hub, maybe connect to device provisioning, provisioning service to securely connect those devices, and then there's other elements too. There's Azure Stream Analytics. If you want to do processing, storage like Cosmos DB, depending if you want hot path or cold path storage there's different options. There's Azure Maps. There's a wide range of things that you have to think about. On top of that, you need to think about going to scale as well. So starting from a proof of concept going into production and managing those devices and also putting your business integration into an IoT Solution. So you can see through this slide that there is a lot of elements of building an IoT Solution. So what we really wanted to do with IoT Central is be that app platform that you can build with to easily be able to design, deploy, and manage your devices and then also be able to connect to your actual business integration. So you can see with IoT Central, you can securely connect your devices easily. We have new predictable pricing. I think that's actually one of the biggest things I hear is trying to understand the pricing when you're building an IoT Solution. I think when you go from PoC to production, sometimes calculating the pricing can be very difficult. So having predictable pricing, IoT Central helps you out with, and then also we have a lot of great templates to get started with when it comes to industry focus templates. Then also the high availability. I think that's really important especially when you're building these solutions and going into production, you have to think about high availability. Well, IoT Central helps out with that. Yeah. All right. So I mentioned before the new capabilities. If you want to Ignite, you've probably heard of the new capabilities in IoT Central. If you didn't, that's okay because I'm going to cover them quickly now. You're able to white label and this is great. You were able to do that before, but I want to give that mentioned out. So imagine that you're a partner and you have multiple customers. You want to be able to really make IoT Central a solution for that customer. So being able to add their logo, being able to add their branding, it's really important to make it not look it's just IoT Central, but it's your solution that you are producing for the customers. Then also we have app templates. These are industry align templates, and I'll go through that in just a moment. Also, we have access to public APIs. That one's a really big one. I have a Deep Dive coming up in the first of the year that we're going to be going over those APIs. Next is actually our multi-tenancy support. This is perfect for the solution builders who have multiple customers that they need to to have dedicated areas for them. So for the app templates, if this is your first time looking at IoT Central, let me go ahead and go into IoT Central. You're going to see is a nice experience where you can actually see what IoT Central offers you, and then also you can see the different industry templates you can start off with. You don't have to start off with these templates, but it's also really nice to see something that relates to something that you're building. So for example, for retail, what I did was get started and add it an actual template. So I did the Connected Logistics one. So I have that up and running already. So what it does, it gives you a template of this solution, and you can see that it's got some example of dashboards. So simulated devices for you already. You can see that you can start seeing which your temperature readings from humidity, pressure, temperature. So you can really actually start playing around with IoT Central and then adding your own devices as well to help you with a connected logistics solution. We have a lot of different types of industry related solutions. So if you're working in retail, or energy, or government, or even health care, we have templates just for those different industries. So they're a great starting point and actually really I like it because it helps you visualize what is possible with IoT Central, and then also be able to connect your devices. All right. So we're going to keep on going. I'm actually going to hand it over to Ranga.  Sure.  Ranga is actually going to be going through the Edge support before we jump into the whiteboarding.  Sure. So Pamela, just to summarize the overall feature set which you would describe. So width Central, what you get is basically the app development experience, as well as you don't have to worry about, Hey, do I scale my application as my devices grow, as my telemetry grows etc. It's on Microsoft. So we carry the pager, we make sure that your high availability is there. If there is disaster recovery required, we take care of that.  Yeah.  Also, with the industry templates, what it gives you is basically that experience of what is possible in different industries, like retail, energy etc. The APIs give you that extensibility. For example, you have a mobile app, you're trying to manage a device from the mobile app, the APIs open up that experience for you so that it's extending your mobile app into managing your devices through Central.  Exactly.  Overall, there is lot of feature set which came out in public preview, and I'm going to go over, especially focusing on IoT Edge.  You brought up a good point that what you're going to be talking about now with IoT Edge, it is in public preview. So it's not [inaudible]. So keep that in mind when we're going through these demos with you.  If you look at this, as far as what Pamela went through, on this slide, what I'm going to actually focus on is basically the Edge support is what we're going to talk about in the next hour. Also, if you have heard of plug-and-play, I think Pamela did some sessions with my colleagues [inaudible] Chris. They went deep dive on the plug-and-play. How do you actually take out device which its model is described, it's in the catalog. You just switch on the device which is plug-and-play enabled and it lights up the dashboards, and that whole experience is go from taking a device into actually getting insights in taking actions. So what we have done with Edge with Central is we have actually built on top of that templating experience, and bringing actually the Edge devices and manage them at scale in IoT Central.  When you say Edge devices, you're talking about both the Edge devices that have our IoT Edge runtime?  Right.  Then Edge devices that might not have that runtime?  Right. So what we have done is we have brought in this gateway experience, and I'll talk about that, which actually focuses a lot on our Azure IoT Edge runtime, which runs on the gateway or devices which are by themselves, and also devices which are not running Azure IoT Edge. We bring that gateway experience so that you can build relationships, what are the child relationships? Etc. I'll go in detail on that.  Okay. Perfect.  So if you look at this, if anybody has not tried Edge yet. So this is the experience. So you could have downstream devices, you could have an Edge device which is running the runtime, which is connecting into the Cloud, which is IoT Central in this scenario. What it does is it basically Central managers that command and control of managing the devices, the provisioning etc. Also, what you do is you build bits on the Cloud, like your AI models, your machine learning, or streaming analytics, etc, and take those same bits, package them up, and send it to the Edge. If you look at this pattern, what it does is it basically you take the bits you've built on the Cloud. So you could actually require a lot of compute power on the Cloud to be able to actually build your models. Then once you have it and you want to start scoring them, you can score them on the Cloud, you can score them on the Edge, right?  Yeah.  What you do is, you basically rebuild that standardized model of actually building containers so that you can run it anywhere.  Yeah.  On the Edge, we support Windows, we support Linux versions. So if you look at this, you containerize them and then you basically store them in a Container Registry, like Azure Container Registry. You could go to Docker Hub, however you want. Once you have that containers, you basically build a deployment manifest. As of today, with Central, you'll have to use VS Code, you'll have to use Visual Studio to be able to build that deployment manifest. We have tooling around it, where you go to the extensions of VS Code, download them and start using the tools. Once you build that deployment manifest, you basically bring it into Central. What that gives you is, it standardizes a deployment for you for a fleet of devices. If you have devices which are similar but at scale, you build one deployment manifest and push it to thousands of devices. So once you have the deployment manifest, you basically send it to your Edge device, and the Edge device what it does is, it reads the deployment manifest, it knows about containers, it knows about how to run those containers, and so it brings those containers down onto the Edge, and you're up and running. You can do this at scale from Central.  Yeah, I love that. I love the fact that IoT Central can make that experience a lot easier.  Right. So that's the pattern. So if you look at IoT Edge features, basically what we have done is, if you look at the provisioning and connectivity, we have always had a Central powered by DPS, the Device Provisioning Service. What it does for you is it standardizes how you provision your devices. We have always had a group enrollment where you could, actually, if you have tried DPS, basically under the hood we are powered by DPS. So we support that group enrollment with X.509 cert or symmetric key. What we have done with enabling Edge with Central is, we have brought in also individual enrollments where you can actually take an individual enrollment and apply to one device, and it could have TPM. So we support TPM right now. So overall, all three paradigms are supported. You can do symmetric key, you could do X.509, or you could do TPM. One of the things we have done is, especially with IoT Edge runtime, there is a release candidate right now which actually supports X.509, and Central supports that. If you want to test that out, you'd go get that release candidate which is 1.0.9 version, and start testing it up in Central. Then if you go into the actual command and control and device management, so what we've done is we've brought that module management and deployment manifest management into Central. So you can actually now take Edge devices, connect into to Central, and along with the module management and telemetry ingestion, what we get is we basically, so you can do telemetry ingestion at the module level. Once you get the telemetry, then you can visualize, you have insights. We'll go through demos on how you can stand up a device, connect into IoT Central through provisioning a symmetric key and start looking at insights in taking actions.  Okay, perfect.  Then again, if you've played with IoT Central width IoT devices, what Edge brings you is you have to basically bring in telemetry, etc through a module. So IoT Edge works in such a way that there is something called a module twin, which represents a module on a device in the Cloud. Then you can do command and control. You can do Cloud to device, device to Cloud, etc.  Yeah.  All right. Yeah. Another thing what we have done is we have brought in something called relationships into Central. So if you look at this diagram, basically Azure IoT Edge could be a gateway device, that means it has downstream devices, and you can choose to show these downstream devices in Central or you can choose to just show the gateway. If you have a factory scenario where you don't want to expose your downstream devices, all you show is your Edge device. If you want to show downstream devices, then that becomes a gateway at that point and both of them show up in Central. Then we have another paradigm where you can actually take your modules, like a Modbus module discover downstream devices, and both the downstream devices and the gateway shows up in Central. In this diagram, actually, I'm showing two different modules: Modbus module discovering its own downstream devices, BLE module discovering its own downstream devices. Then there are downstream devices which are Wi-Fi enabled, but are connecting through the gateway for offline scenarios. Let's say, there's a truck driving in a region where you lose connectivity for a couple of hours, and there's fresh produce in the truck and the cooler is down, the driver still has to get notified. In those scenarios, you can actually connect these devices which can connect to GSM etc, but then you want to go through the Edge device for offline scenarios.  That's great, and that's one of the biggest benefits of using IoT Edge runtime is for the extended offline capability.  Right. Right.  So that's perfect that we have that for IoT Central as well.  Then now, another thing which I want to talk about is these are the three general promises what IoT Edge gives you as a security promise. So what we give you is we give you a framework on how to deploy secure solutions end-to-end. If you look at this diagram, basically, we give you that secure element promise, which means you can store your credentials, you can store anything which you need to be secure in a secure element technology. That gives you that secure element promise so that nobody can actually steal your credentials. Also, there is that trust anchor where a device identity itself cannot be separated from the device, so that's the secure element promise. Then, there is the secure compute promise, which is basically, what it means is if you have a compute like a billing, like an AI model which you don't want anybody to tamper with, you want to run that compute in a secure way. So that's where we have a partner, Scalys, who has a trust box and what they give you is to basically build your secure compute which could be anything. It could be a billing module, it could be your AI module, and put it in that secure computer, and nobody can actually tamper with it. We're going to do a demo around that. That's the whole promise we give you around the secure storage and the secure computer.  Okay. Perfect. We have passed deep dive that talked about the TrustBox, and Open Enclave SDK, and everything. So if you're interested in confidential computing, we do have deep dive that happened a couple of months ago.  Right. So from the past two months to now, what it extends is basically taking the same TrustBox, connecting it into Central, and you get that automatic dashboarding, you'll get to be able to control that TrustBox from IoT Central.  Wonderful. I think we're ready for the whiteboarding. So we're going to go ahead and roll in this whiteboard. Ranga is really going to go over the template experience. I'm going to keep monitoring the chat to see if there's any questions.  Sure.  Yeah.  So from the past deep dives, especially with the P&P, you must have heard a lot of these concepts, but I want to just go over some of these concepts because it's very important for us with the IoT Central and Edge. So if you look at the IoT Central template again experience, so basically what you do is you start off with something called a device template. You basically start building this template. As of today, what you can do is you can build a template for IoT device or you can build a template for an IoT Edge device. Before, it costs a little bit because the Edge concepts have some extra features which you'll have to work with as far as the Edge device is concerned. So once you start building the template, what you do is you basically start off with something called DCM, which is a device capability model. So what this basically tells you is DCM helps you describe what your capabilities of your device is. With that, you'll actually create something called interfaces, and the interfaces are the ones which will actually work with the command and control as far as how do you bring in telemetry, how do you actually manage properties on communicating back to the device, as well as how do you actually work with commands, like if you want to send a command to the Edge device and how do you work with this. So what we have done with the Edge is we have added the concept of a module, DCM. So for every interface or what you do is basically for every DCM, you start off creating one-to-many module DCMs, so a module capability models. So you could have 10 modules running. Each module gets its own capability model and this module will now have interfaces. So let's say, you have an interface here which is describing your telemetry, your commands, and your properties. So telemetry is what you are basically sending from the device into the Cloud, commands are basically you're sending commands into the device from the Cloud, and properties are writable properties. You basically take, let's say, you have worked with device twin. Previously, if you if you look at like IoT device, now, you're actually working at the module level, so you have a like a module twin. Each module capability model actually describes these three. If you take these three concepts, basically, this is the command and control of the Edge device. So if you look at it, so this is the concept of a DCM where you're actually taking a device capability model, and then you are creating many module capability models. For each module capability models, you describe your telemetry, commands, and properties. Then what you do is you extend this DCM, and basically, you create the solution for your Cloud. For this, you basically create views which are your dashboards, your forms, if you're having any properties which you want to extend from the device which is not coming from the device, what you do is you create something called Cloud properties. Then you extend them. So you create forms, you can actually do data entry in the Cloud. Then as telemetry is coming in you basically attach or augment that telemetry with these Cloud properties. So overall, what you're doing is you're basically taking your device capability model, and your solution model, and combining them to create a template. So that's the overall feature set what we created. Also, what we have done is, I will probably take this. If you look at another thing what we have done is we have created something called inter-relationships. So for example, if you have a gateway device, we have added relationships where you can actually create one-to-many downstream device relationships. So this is your downstream device. So you're basically telling hey, these are my downstream device DCM or Device Capability Models, which will actually help connect into my gateway. So that one relationship what we have created. Another one what we have done is we have actually extended these relationship to modules. So in my diagram previously, I've shown relationships where you can connect downstream devices into the gateway, or you can connect downstream devices from the modules into the gateway. So this is the relationships what we have done. We have taken downstream device DCMs to be able to establish relationships with Gateway DCMs. Also we have downstream device DCMs which can connect into the gateway DCMs through module Device Capability Models. So this is the overall behind the scenes. If you look at how modeling is done, and I'll show you how it's done through central as we walked through some of the demos.  Okay. Wonderful. This looks great. We don't have any questions online, so I think we can, I know we have got a live demos to do.  Sure.  Maybe we can jump start on the demos.  All right. So I'll be switching computer.  Yeah. So we're going to go ahead and switch to Ranga computer to showcase the next demo using IoT Edge support.  All right. Okay. I think we're going to go.  All right. So if you look at IoT Central rights. So you go to apps.azureiot.central.com. You can start creating your basically apps for central. So if you go into the build capability you can do a custom app. Right now, IoT Central Edge features are in public preview. So you basically have to create that preview application. Here I'll quickly show you. You can say My IoT Central Edge Deep Dive App. You basically go select your subscription, and select your location. Right now we're in US Central and Europe. So you basically based on your location, it'll go and create it in that location. Once you have this app, you can basically start your whole templating experience. So what I'll do is I'll quickly jump into one of my applications which have created. So here, I have a few device templates but I'll start off with actually showing you how you create that device template. Right. So you start with a new template, and here is where you actually get that choice. Whether you want to create a IoT device or you want to create an Azure IoT Edge device. So let's go with the Azure IoT Edge device. Once you select that, here is your choice. Right. So do you want to make this a gateway device ? Where you want to establish relationships. Or you want to make it like as a leaf device which runs on its own. There could be downstream devices, but they don't show up. So as of now for this demo lets just pick a leaf device. So I talked about bringing the deployment manifest into Central by creating it in VS Code and Visual Studio. As of today that's our experience, in future we might look into authoring the deployment manifest in Central itself. So what you do is you basically go and select a deployment manifest which I've created. So here is one of the deployment manifest I'm working with. So it's very similar to if you've played with IoT Edge with IoT Hub. It basically has the system modules which is Edge Agent, and then the Edge Hub. Basically, those are the system modules which the run-time works with. These modules help you with orchestration reporting the health of the Edge into the Cloud etc. Then also what I have is I have a few like custom modules which I'll show you overall what I've done. Right. So if you look at this once you have created this deployment manifest, you basically go and start uploading it. So I have an IoT Deep Dive deployment manifest. Once you upload it validates whether it's confirming to the schema, if there are issues, it basically tells you that,"Hey, this is not ready. Go back to your authoring of your deployment manifests make sure that it's all validated.'' The Tooling helps you with that. The Tooling tells you ''Hey, there is issue here,'' so that you don't have to really make those mistakes as you're uploading it into Central.  That's a nice feature especially when you are trying to debug.  Right.  Yeah. Then once you click "Review" this is where it actually tells you what type of device it is. It's an Azure IoT Edge device and these are the modules. Basically I have a temperature sensor module, have a Stream Analytics module, and I have a filterfunction. So basically those are the three which are working together to complete your end-to-end solution. Once you click ''Create'', this experience which I talked about, here is your device template which is at the top element here. Then here are the module. So these are the module DCMs. So you get like three module DCMs, there's the temperature sensor, there's the steam analytics module, and then there's the filter function module. So one thing you see the difference between a temp sensor and a stream analytics module is it already has an interface. The reason is this deployment manifest actually has properties or desired properties which is bringing in. So we already know that there are properties which you want to actually describe and we pick those up and create it as part of the overall templating experience. Otherwise, what you do is you basically go and start creating an interface. So what I'll do is I'll add an interface and I'll basically import one, which is the temp sensor interface. So what it does is it basically brings you that. So what I've done is I've created this previously, exported it out so it creates a JSON, then you can bring that back in here into another template or you can start creating it here from scratch.  Okay.  One of the feature I want to call out here is if you look at this machine, it's basically an object and it's a complex JSON object. So we have the experience to be able to actually create the complex object and break it down, go more granular. So for example, here is telemetry properties. We have the temperature and pressure and you can keep adding them. You can say, hey, I want to add humidity and then you can basically keep describing it. So that's one of the features we have added with this public preview is that complex objects, and you can start creating. So here is some of my interface capabilities. I have telemetry, I have commands, so commands are something which the edge modules respond to and also, I have properties which are writable properties. So you can set something like, hey, I want to set the temperature for all the buildings in Redmond to, let say, 68 for fall it basically goes and updates that scale to all those devices.  I know we're really great at acronyms at Microsoft. DCM.  Yeah.  Did you want to explain what that is?  Yeah, sure. So DCM is the device capability model and basically what it does is it actually describes what your device is. It describes basically what is the device, you can describe modules for example, your edge device, what modules it runs and also the relationships. In general, what downstream device relationships it says. I think we're starting to run out of time. So what I'll do is I'll actually show you on this, I've created a device template. So here is edges as a leaf device. So here I have like three modules, basically the temperature sensor, the stream analytics, and filter function. If you look at for example here, I've shown you how you can describe that capability model for that module and then you can actually extend whatever is coming from the device into the Cloud by adding Cloud properties. So you're adding that metadata. Here what I've done is I've added the customer name and last service date so that if an operator is looking at that device, at a certain point, they can actually see which customer that device belongs to and also what was the last service date if they get a call from the field.  These properties are only in the Cloud side, it doesn't get deployed on the device?  Exactly, and it's not reported from the device. It's basically managed by the operator. Then you can customize. So for example, if you are importing device capability models, you might want to change the naming or the semantic types whether it's the temperature etc. Then you pretty much can change like for example, if I want to go and change this to information you, can basically go and update your property names etc. So once you have that, then what you do is you go into the whole dash-boarding experience. So you can go and create dashboards. So for example, here I've created a dashboard which actually reports some KPIs, some telemetry device info etc. Also I have some forms where I actually want let the operator enter the details like the customer name the, last service date so that they can manage it from the Cloud, right?  Makes sense. Yeah.  Once you have the template, you go publish it. So there is the publish feature. If you go to here, right now it's grayed out because I've already published it. If you want to publish it again you have to version it. So once it's published, then what you do is you go to the Device Explorer experience and here I have a template which actually there is a device which I have created from the Cloud. So Central allows Cloud-first provisioning where you can actually prepare your devices ahead of time. Or you can let the device come in and connect and then we can work with template and you can actually attach templates later. So once you have this device, so here is the device which is running. I'll show you quickly if I go to the "Portal", I have a Linux box which is actually in the marketplace. It's a great test tool, you can actually taken Azure IoT Edge enabled Linux box from the marketplace, stand it up. So here is a Linux box which is running IoT Edge and I'll go into the "Console" and show you exactly how it works. So once I have this here, what we have done here is we have actually provisioned this device already and the way you do it is you go into "Configyaml file" and you basically, if you have played with IoT Hub directly connecting IoT Edge devices, you probably would have done manual provisioning. With IoT central, you have to use DPS. So here what I've done is I've actually enabled the DPS provisioning with symmetric key.  Yeah, and DPS is device provisioning service?  Yeah. Then if you look at it I have a Scope ID. So if I go to "My device", it actually, if you go to the "Connect" feature, it gives you the scope ID, the device ID, and also the primary key and how do you get the primary key? It's a derived key, so if you go into "Administration" under device connection, there is something called Edge devices which basically gives you the master key for the edge. So if you do view keys that's the master key for all your Edge devices and what you do is for every instance of your edge device, it's a derived key from this master key and the same works for X.509, [inaudible] etc. So once you go here, you just go and provision. So what you do is you do system CTL restart, IoT edge. It goes in provisions., your device, I'm not going to do that right now because we don't have time. But if you go and look, I have a Edge deployments which happened when it goes in provisions because it has a template on IoT central. It automatically pushes the deployment manifest onto these edge device. Then you have pretty much all the modules which are being pushed here and what you can do is, for example, if I go and look at logs on temp sensor, it's basically showing you the logs of what is being sent into the Cloud. So quickly I'll show you what you can do is if you go back to this device, we have a lot of experience of how Edge devices show up in central. So here for this device, it gives you a real-time health experience of how the device itself is doing. So if you go into "Modules", it actually gives you that same experience what I'm seeing on the Linux box of what modules are running etc, and you can actually send a command. So for example here, let me restart this.  So restarting the module and if I go and look, I can actually go and reset the temperature for once it comes up. Sorry.  Yeah.  The logs are filled up.  Slow logs. Yeah. Come on. Yeah, so once it's here, what I can do is I can actually control that right now the temperature is at 23. I can actually go and issue a reset on it and when I run the command, it basically the device receives it. So if you look at it, it received the call and it actually go bent and reset the temperature back to 21.  That's great.  All right.  It's not just connecting the device to Cloud, you actually can make sure it's Cloud to device messaging.  Right. Exactly.  Yeah, can send commands.  Right. So if you can go and look at device details, there's dashboarding experience. So there's like you could do Line charts, you can do KPIs, you can look at device info, and also the overall dashboarding, right? You can actually bring in many devices. So here I have a bunch of devices with Azure maps. You can actually locate your devices and look at telemetric.  One thing especially when you're going from proof of concept to production is thinking about that CICD pipeline and so we know when you're working with our past services like if you're working with IoT edge, we have support with Azure DevOps and even Chinking support for doing CICD. So anytime you want to do version control with your modules and everything like that, we offer support there. What is the best advice that you can give now when it comes to IoT central and where it's at in this public preview for updating modules and keeping with that version control?  Right. So as of now, if you look at central naturally with the device templating fits into that at scale deployments. So if you go and version your device templates or let's say you're adding a new module for a fleet of devices. You just go and template your version you are templating.  Okay.  Update your deployment manifest, and you now have a new version of let's say module five. Right? You had four modules, now you have modeled five, and one of the experience which central naturally gives you is, there is this migrate option here. So you can actually control. An operator has that control. Let's say they have 5,000 trucks which have Edge running but there are 4,000 trucks which are probably ready for an update but their truck 1,000 trucks which are not ready. They've critical workloads which basically they are on the road. So the operator can actually control by migrating only the 4,000 which are ready and have that versioning experience and I think that naturally brings into central but what we'll do is without APIs extending that capabilities overall through our APIs we would look at how does DevOps work into this whole experience.  Okay.  That is probably a future.  Something on the road map that we're looking into and how to create a better experience where people who have their CICD pipeline, they can add this and have a better experience and with IoT Central. Perfect. I think right now our live feed has switched and so we're working on fixing that at the moment. That's not us. You're viewing right now. It looks like it's talking about the data center and so we're working on getting that fixed but in the meanwhile we'll continue to go ahead and with our demos and talk about the support for edge. Why we're working on getting that switched back. I'll talk a little bit about the next demo.  Yeah.  So we actually have support for IoT Edge integration with deep stream with NVidia. If you are familiar with NVidia deep stream are not familiar with it. It says actually SDK that is a scalable framework for high-performing, streaming analytics on the edge and then deploying those applications on GPU Focus NVidia devices. Looks like we're back. Great. That was so fast. So thank you. Thank you Channel Nine for fixing that for us. So I'll go back to going to our our new demos. So on the table I have the NVidia Nano Device. If you haven't played with this, I'm actually a huge fan of this device. Is $99. It has a GPU. It's part of the Jetson Line. Cloud chord. Arm Cortex, A57 processor, four gigs of memory. But what really makes the Jetson Line really shine is that it's high performing but low cost computer vision that you could be doing with these GPU devices and so what we have here, I'm going to go ahead and if we could have the camera, go to the Monitor and showcase that. I have eight cameras that is or video streams that's happening on this device and it's actually doing object detection at this moment and so why is doing object detection? I'm going to go ahead and go to "My screen" and showcase that this device is hooked up to IoT Central. Okay. So let's go ahead and look at this experience and the reason why we're showcasing this demo. It's going to be a quick one or two minute demo but we want to showcase that you can even do custom vision type of applications. It's not just temperature and humidity type of applications that you can really do with IoT Central. So you can see that the modules running on this device. So I have it hooked up right now on this Nano Device. You see the modules, you see deep stream as running their module, you also see the Camera Tagging Module is running and then edgeAgent and edgeHub which you always see when you're building an IoT Edge solution, those are the standard system modules. Next we're going to go ahead and we're going to manage one of these modules meaning that I'm going to go in here and you can see that right now there's different types of video streams inputs that I can do. So what I'm going to do, I have two cameras actually set up in the office. So hopefully, people are working because we're going to be updating this module video stream. So we're going to make those active. I'm actually going to no longer look at the card demo. So I'm just going to change that to a different input. Now, I'm going to go ahead and save. So what it's doing is actually updating this module to go to these video stream. So we're going to look, it's still synching. But soon, once it's done synching, we'll be able to see the update on this device that's showcasing that there's two cameras in the office. Why is doing that? I'm actually going to go ahead and also showcase that, I ran this earlier, and we're actually able to see the different object detection, how often, and that first eight camera video feed that we were showcasing, how many detections were showcased? So you can have that dashboard experience here, and also get information on this particular device. So you see that the device model is actually Jetson Nano device, who the manufacturer is, operating system, all the things that you want to add on there that talks about this device. So it looks like it says it synched, synched, synched. So soon, once it's completely ready, we're going to check the screen soon. So it takes a little bit to update. We can actually see our video stream. So these are two cameras set up in office. So all I did was update that module to go to the other video stream. If we zoom into this, I actually wanted to do this one to showcase a security application. So I set something down on this tool, but it really just looks like we're just spying on our coworkers. But you could use a for security applications. But this just really shows that you could easily switch. The operator can easily switch between video feeds, update this device without having to go to the device itself in person. They can do it over Cloud and make those changes. Yeah. All right. So I think you're ready for your demo?  Yes. I don't know if you have showcase this as far as the trust box. So I talked about the overall security promises we have on the IoT Edge, right? So this device is basically an Edge device which is actually running Azure IoT Edge, but it can allow a secure compute. So you can actually take a model, put it in the secure compute, and nobody can actually tamper with it. So here is a an example I have where, let me go, sorry, gave me the wrong. Yeah. So here is the Smart City Application. Actually, we are demoing this in Smart City in Barcelona, and I have a device here. So what it does is basically, it's taking one of these pictures, and as I send us a number like a sample zero, one, or two, it's going and recognizing what that picture is, right?  Yeah.  I'm able to control this from the Cloud, so I'm able to send a command on what to actually analyze, right? So here is the device which I have for the Deep Dive Show here, this is sitting on a table. If you look at, I've connected through [inaudible] , and here are the modules which are running. So there's the Edge Agent, the Edge Hub, and there is a number recognizer which is a module which is actually running in the secure compute. So I'll send a command, and basically, I'll say I want to sample zero, right? It will actually go and send that command to the device, the device received it. You can see it reacted to it, it actually analyzed that picture. If you look at the history, you're able to actually get a response back. Then when I go back to the dashboard. So here are the modules which are running, which actually mimic what is running on the device. If I go back to the overview page, it actually got back at a two. So I sent a sample zero. It basically said, "Hey, I read a two from that picture." So that's the overall. It's a simple demo, but it's pretty powerful as far as how you're able to actually take some model which you built on the Cloud with the power of the Cloud, package it up in a container, put it onto a device, and put it into a secure compute and execute it.  That's great. Thanks for showing that demo, Ranga.  Sure.  I think since we're close to time, I think we can go ahead and showcase how people get started.  Sure.  Yeah. So a couple of different places. We're going to go ahead and showcase my computer that showcases our different resources, but you can go to our tech community, our IoT tech community. There, we're going to post the slides. We're actually going to post links to actually samples, and how to get started, and the demos. Also, we included a couple of reading materials too on about IoT Central. Also, that DeepStream integration or the IoT Edge integration with DeepStream, I link to a video that was shown on IoT Show, so you can feel free to go there. Then also, if you have any ideas for upcoming Deep Dives we do have on Twitter, you could just use #DeepDive, #MSIoT. We're monitoring that, so if you have ideas, always feel free to ping myself on Twitter or use those hashtags, and we can go ahead and take your ideas and feedback, and make sure that we cover those topics in future Deep Dives. Ranga, is there anything that you want to close with, with everyone who's watching about IoT Edge support with IoT Central?  Yeah. So basically, where we are right now is we support the GA version of IoT Edge. With that experience of module management, and you can connect devices into Central being and extended with dashboarding capabilities, etc. As with the time constraint, I was not able to show some of the features like, how do you actually add relationships and manage relationships with a gateway. So there's a lot more. We'll publish some of the documentation will be have on online. Also, what we are doing is we're working on bringing some of the tutorials, especially the demos I've shown you into MS Learn and also into some of our tutorial aspects of our Docs Variety Central.  We just published some new ones on Microsoft Learn. If you've been learning on IoT School right now, check out Microsoft Learn, because it has a lot of great content there on how to get started. Then let's continue this Deep Dive and talk more about the Edge support, and then also multitenancy and the public APIs, and what you can do there because this is, as we mentioned before, is in public preview, there are stuff that could be features that are added to support that. We want to hear that feedback from all of you on the support that we could be adding to make this a really great experience for all of you. So thank you everyone for tuning in, we really appreciate it, and excited to see you at the next Deep Dive. Thank you.  Thank you, Pamela.  Thank you, Ranga.  Yeah.  Yeah. [MUSIC] 