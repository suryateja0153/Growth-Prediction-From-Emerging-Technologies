 Welcome to today's edition of This Is My Architecture. I'm Li Nanshan,  solution architect from AWS. Today, we are glad to have Bruce, technical director from iRootech, to share with us  their architecture in AWS cloud. Bruce, could you share with us the entire iRootech architecture and  the process on AWS? Sure. Thank you. IRootech is dedicated to  creating a universal IoT platform. Let me briefly introduce  the entire architecture of this platform. At the bottom, we use gateway for device access. There is huge device access, around hundreds of thousands now. Wow, hundreds of thousands. Yeah. The devices go through  the IoT gateway in M2M module and undergo  the IoT gateway authentication. After that, the data is  transmitted to the M2M module. So the EC2 on this side has  the same function as M2M, right? Yes. Some of M2M's micro-services, a micro-services cluster for things like authentication and processing. After the data being briefly processed by M2M micro-services, it will be sent to Kinesis.  It is a queue. Right? You should know it well. It's an  important AWS technical component. Right. After a short buffer in this queue, the data will be sent to the cloud. So now you... for example, With over 400 thousands devices connecting to the cloud, how do you handle such a high volume of concurrent access? Right. After data entered this Kinesis and is stored there briefly, it will be sent to the cloud. Similarly, there is also  a EC2 cluster in the cloud. This cluster is designed for micro-services responsible for  handling the data sent here and distributing the data  to two channels. One of the channels is  what we call real-time channel. - Real-time channel. - Correct. The end point of this instant channel is ElasticCache, which is a Reids-based Cache. The Cache service. Right. Exactly. Then the data will be stored in Reids for front-end's use. And, the other channel,  which is the EC2 cluster, will distribute the data to  what we call historical data channel. Yes. The historical data channel  has again two branches. One of them is responsible for what we call  the historical data spot query, such as retrieving  the trajectory of the past. The histoical data query. Right. This data will be stored in S3. The other channel is what almost  all of our customers need, the BI reports function. Via this EC2 cluster, this part will send the data to EMR,  the Map-Reduce cluster. Map-Reduce will send the generated  and finished data to RDS to store and to be used for  RDS front-end in the future. The end users will access  the data through ELB. Exactly. Generally, ELB plays the role  of a basic load balance function. And then,  it distributes the received requests to various micro-services. I would like to know, since we have hundreds of thousands of devices accessing the iRootech platform simultaneously, how to handle such a large scale  of device accessing the platform? To address this issue,  there are two key components or functions. One of them is Kinesis. Because the data flushing in is huge, as you mentioned, hundreds of thousands of devices send data to the cloud simultaneously, the volume is gigantic. There are moments  when the cloud could not react timely, those are times  when Kinesis comes into play. Kinesis is used to decouple  the capabilities from both sides. It decouples the capabilities  of both sides. Exactly. Also, it can store the data to decouple the computing capabilities  form both sides. It also has Cache capability. Yes. What's more, for example, data from the 400 thousand devices is not sent to the cloud without changes. It might be, say, only 50 thousand devices are online during the night, but much more in the daytime. So, a very important function  we need is Auto Scaling. This function can  help us to allocate a cluster with 40 virtual machines to handle  the computing in the daytime, while at night, it might allocate a cluster with just five virtual machines. That's why we have obvious  peaks and troughs. By using Auto Scaling to cluster and keep expanding and contracting, we can achieve a high ROI. So for a platform  of such a large scale, as well as  a huge number of device access, it's safe to say that  there will be, for example, access from Europe, the U.S. and Asia-Pacific. How to make sure that the devices  from all over the world can access the iRootech platform seamlessly? We benefit from the fact that AWS can provide good infrastructure services in all the economic hotspot regions. Therefore, our common strategy now is the access by proximity. - Access by proximity principle. - Right. For example, we'll let customers in Germany  to access to German AWS. The Frankfurt region. Yes. So customers in South Africa might access directly to the SA AWS. This also avoids the issue  of cross-border data transmission, hence dodging the restrictions of GDPR compliance. Yes. In Europe, we comply  with the GDPR regulations. Right. Aside, we now also... because some customers run international businesses, we are trying to converge  data from different sites, so as to provide a unified international  interface to global customers. Awesome. Thank you very much  for Bruce's sharing today. No problem. Thank you for watching today's This Is My Architecture. 