 [Music] we're gonna go through our experience kind of how we got to be on GCP and what our experience has been when we got there and a lot of things that we learned we're also going to talk about I guess some of the things we might have done differently if we had our time again there'll be plenty here for everyone I think really happy to be here with a couple of my teammates I'm Marco dilatory I'm the CTO of derive systems over in the blue shirt is Scott Nelson who's a director of software and deejaying this event is Jim mountains who's our data science team lead so we can have some really fun demos from these guys talk about architecture and also just get a sense of how we fit in the world so I thought I'd start out just letting you know what we gonna be up to so a bit of a primer on our industry we're an automotive IOT so we put little devices inside vehicles that do really cool things they're all te connected they collect all sorts of data from vehicles and they also rewrite the software of vehicles so one of the things that sets us apart is that we do vehicle write access to make vehicles more capable than when they get to you from the factory so we'll talk a bit more about that give you a sense of kind of what the market opportunity was that we went after obviously do some fun demos cuz that's what everyone's here to see and then talk a little bit about the tips and lessons learned that we had from doing all this so we'll start out a little bit I'll talk a little bit about our industry just give you a lay of the land for those of you who are about to or have already started building an IOT platform a lot of this is going to apply directly this will just give you kind of the surface layer of how our customers are special to us but obviously all the firmware cellular connectivity mobile apps the data flows that's probably going to be really familiar we hope it is because we want you to learn as much from our experience as you can so this is a little bit about the history that precedes us that derive so really dates back a number of decades as things started to become connected and smart and digital so starting out with going to the PC and more recently our connectivity becoming linked to smartphones even our homes going smart how doorbells are smart now this is one of my favorites our ovens are smart now it's pretty cool shoutout to anyone from June oven who's in the room I think the only one tops that is their cell toothbrushes going smart this is really something that the social media networks are trying to sell me right now I haven't seen toothpaste GU smart yet but I think that's probably next so the question is why is the biggest appliance in our lives maybe one of our biggest assets in our lives also one of the least smart connected or integrated and that's a these little guys on the right-hand side why are these things static after we buy them we get to choose the paint maybe a couple of options we drive them off the lot they never change again in fact they drive off the lot not even knowing how we're going to use them are we gonna be using them for law enforcement or for delivering packages or picking up groceries or dropping the kids off at school the OEMs don't know so they build them all the same a little bit about the industry we've playing and moves very slowly there are about 270 million vehicles in operation in the u.s. today so a lot of vehicles on our roads each of those vehicles has a lifespan at about 11 years so if you do that math now it takes a real long time for the industry to change the vehicles that roll off the lot today gonna be out there for a dozen years it's gonna take 15 20 years for the industry to change the entire set of vehicles that are on our roads just to highlight that some more the first modern vehicle appeared around 1901 you can debate what modern vehicle is but that's about right well we had about 95 years of that 96 the first electric vehicle happened here in Silicon Valley we think a lot about Tesla we'd hear a lot about Elon and his folks man it's been more than 20 years since electric vehicles started and now there are little over 1% of the industry so this industry moves really slow while it's moving slowly we love the idea of everything going autonomous and electric and maybe flying or who knows what the reality is these vehicles are out there with incredible networks of processors running software that we can upgrade so what we've gone about to do it derive and what we offer to consumers and to fleets is the ability to modify the software inside vehicles to make the mission specific so that means whoever you use that vehicle will give you the software that does that mission best okay it's something we've been doing for consumers for a long time it's something that we've just recently in the last few years started doing for ana pliers fleets and were the only people that do it and we do that through an IOT device that goes in the vehicle and that's a real big differentiator for us because we're the only ones that write the software so we're going to talk about the platform that kind of powers that differentiator first just to give you a sense of why this works so if any of you out there ever use kind of a Fitbit or a health device I built one of those one time yeah humans really difficult to change this software of you guys so we think about this in terms of enterprise fleets what's happening out there our devices are collecting information about vehicles so for example how fast the vehicles going or who's driving it fleet managers are coaching drivers like hey I see you're speeding out there be great if you didn't do that tomorrow it's just like the Fitbit like hey 9,000 steps today how about 10,000 took like really hard to change the habits of humans right so we're out there trying to coach these drivers drivers are doing the right thing about 50 to 80 percent of the time and by the way each year about 20 to 30 percent of the drivers in a fleet leave so you get to start again with that 20 to 30 percent so it's really tough to win this battle in the automotive industry I think the biggest thing that drives failure here is that these behaviors are at odds with operational KPIs so if you think about drivers in a fleet that have to make a number of stops each day sorry got to make eight stops today so I don't know picky on you you're just closest to me you got to make eight stops today to get your paycheck okay but you're not allowed to speed well if you get to stop seven and so most the end of the day guess what you're doing if you get stopped eight you're breaking that speed limit all day so one of the challenges is that operational KPIs are directly at odds with how people drive the vehicle so because we have right access to the vehicle we're thinking about this a different way we modify that the way the vehicle operates so it doesn't matter how you drive it so for example I can stop that vehicle from speeding you can put your pedal to the metal it's not going to speed so here's a case study that kind of talks about these three things saving lives lowering environmental impact and technology that pays for itself for these big appliances this is a big major national fleet that we work with so let me just walk you through this real quick there were two lines here are injured Blue apologies those of you who are color blind but I'll walk you through it it'll be obvious anyway the blue line represents that control group so these are vehicles that we didn't upgrade the software on at all and as you can see over time being the bottom axis now these people keep speeding speeding violations just continue and these folks were coaching their drivers telling them not to speed pleading with them not to speed and humans just keep speeding the orange line is a test group so this is the set of vehicles that we modify and you can see at the start man I wasn't doing so well I started out in the sim applies the sped a lot we upgraded the software those vehicles so they wouldn't speed at a level the fleet deemed unacceptable as you can imagine if the vehicle can never exceed that speed violations go to zero so that's the difference between trying to change the software of humans and changing the software vehicles bit of a video about us [Music] [Applause] [Music] [Applause] [Music] [Applause] [Applause] [Music] [Applause] [Music] all right thank you lay of the land so for those of you who are building IOT platforms or thinking about being building IOT platforms that's kinda world in which we live building IOT devices that go inside vehicles that have a really unique differentiator that connected this is our product market opportunity so think about your product market opportunity it's gonna fit a lot of the same things in our case we deal with these vehicles that are running generic software we live in a commoditized Tim telematics industry so this is just folks who are out there measuring GPS location and not able to write to software vehicles that's about an 18 billion dollar industry we brought mission specific vehicle software upgrades it's a big differentiator but of course we also offer telematics and all the commodity features as well and we built a platform it goes after this and brings it to market and we're gonna kind of walk back through how we got to that but ultimately combining those four things meant three key features for our customers one being fewer collisions just drivers out there having fewer accidents and if they're having accidents they're much less severe secondly having a small smaller carbon footprint so we reduce the amount of gas that vehicles use which has a huge sustainability benefit and lastly lower costs by reducing the amount of gas that fleets are consuming in their days they're spending a lot less actually pays for the technology itself so nice little market dynamic there where by making the fleet less expensive to run they can afford to buy our technology and then some when we looked about this product market opportunity and selecting a cloud vendor the kind of three main criteria we looked at first was speed to launch we saw this huge market opportunity in this 18 billion dollar market with this unique engineering capability we wanted a partner that could support us to get right into the market as quickly as possible we want to go capture this thing well were the only ones that could do it second thing we were getting huge market demand signals because no one else was offering this to enterprise fleets so we wanted a partner that could scale with us so not just launching quickly but then being out to meet the demand that came with that and lastly we're putting connected devices inside huge machines this has got to be secure from board to cloud and back again so these were the three main vectors for us and obviously we chose Google so I'm going to kick it over to Jim Jim's gonna talk about how we went from really nothing to standing up our first fleets athletes typically send about 20 million data points a day and Jim had to stand that up from scratch making it happen so Jim no video hopefully I'm coming across I had to move the mic good about a turn maybe he's still getting a little bit of that it's really impressive that all the tools that Google and GCP provides especially to those that are trying to get started with IOT the communication to IOT as some of you may know I know some arms that went up in here earlier but is MQTT there are open-source libraries through PAHO and documentation on getting devices registered and set up in the cloud really quickly it was important to us to get a proof of concept and have data coming from whether even they be virtual devices and getting those push in the cloud and have that just that pathway established to understand how we would take that same technology or that same methodology and bring that over to the firmware so for this particular I won't go too deeply into it but I'll take a one of these open source PI Python files and slightly modify it and then send some data up currently just to show kind of end to end will first off take one thing that's nice about this the Stata script is or this particular Python script is that it establishes MQTT connection and sends that data up into the cloud that we can then verify like I said we'll change a few things when it comes to the data payload this data payload is very particular to us is something the types of things we care about especially when tracking a vehicle so we're talking about latitude longitude speed those types of things we're not gonna get too creative but we will update the time and maybe we'll change the latitude as well or we can change the course in this particular time all right so again this script is simply going in and pushing up the the payload that we've selected for given virtual device and then we would like to verify that that data is gone out here we have our demo next device 19 now our process for this is sending data into bigquery it's from bigquery that we pull all data for analysis and any other processes that we're going to do analytics further on down the road as we can see we've recently sent the most recent message the data we know is coming through this is not just helpful for proving that we have a simple data pipe going from end end but this proves particularly useful when you're doing development further on down the line when you're trying to do testing trying to do any sort of scaling testing anything along those lines trying to do it here before you're actually trying to push these changes into something much more complex such as firmware or these IOT devices their insight vehicles of course the GCP console gives you access to many many things from being able to track devices that are inside your system or being able to track monitoring of said devices of course we went from a development environment to looking at what is actually production for a fleet that is an existence that is sending out up to 20 million messages in a given day you're able to try Trant traffic or monitor the traffic for MQTT traffic device operations errors which are luckily quite low byte traffic and what is the billable data that is being sent across in our particular model we're sending already to IOT core and then that data is being processed by serverless functions or cloud functions is a case maybe again we said we tend to see a similar kind of pattern in this case where we get to see the traffic or cloud functions that are being instantiated over the course of a week for ourselves we see that there seems to be a particular kind of and this is particular to our our art IOT use case in which a case we have drivers that are in in a fleet and their typical traffic is peak for mid day across the United States and then in the evenings we see quite a decrease in traffic refer ourselves personally even those these devices aren't sending on a quick regular basis as if they were actually in traffic or actually moving our device to still send data even when they're not active necessarily just to let us know that where they are and how they're doing and then if we look at something on the weekend we see less traffic which is pretty expectable one hopes again there's a wide range of information that you can pull from different cloud platform graphs and charts understanding how many different instances are being served up to handle the kind of traffic that's coming through one thing that's really important to us is looking for spikes spikes are what tell us that possibly something is going wrong or there's something that when we're sending data whether it be to bigquery or a third party endpoint for collection and other processing it's those spikes that let us know that there's there's a problem and kind of alerts us to some sort of action another important tool especially if your days being passed through cloud functions is to watch for any errors that might be going across they require further investigation a lot of the times when you're sending twenty million packages in a day you're gonna get errors whether that be possibly internal connection errors to where you're trying to save the data or external errors to where you're trying to send the data to one thing that's really powerful about IOT is that for pub/sub which is what IOT feeds into is that if a message doesn't int reach at endpoint if there is an error it isn't lost it's sent back to the beginning and generally speaking this is what you see with spikes is that data didn't reach its endpoint and it's gone back to the front of the queue and we'll try to go again at a later time metrics and ability to observe what's going on within the system goes much deeper and typically this is within stackdriver stock driver allows you to set very specific parameters on what you may be wanting to watch whether that be big query reads big query rights or anything within the entire GCP platform that you need to monitor what's more powerful than that and has proven useful time and time again is being able to set alerts within stackdriver such case might be that SQL usage is reaching a point that it might cause problems and people who have developed on GCP know that there are set limitations resource limitations and api limitations and you can set alerts and policies within stock drivers that allow you to be know a problem before it occurs before it stops and causes problems within the system and with that awesome shameless round of applause for Jim for a live dinner brave cool so that gives us a sense of just how to how we went from zero to getting the backend going and we'll come back to the architecture a little bit ago to walk us through that but once we got the back-end working got the data flowing in our system to support this volume for our fleets we started to build the user experiences so obviously now building the data flows is great but a customers have to have something to work with so here's some examples of things that we've built and we're building for our customers so obviously starting out with web and modal did mobile data so ways for drivers to interact with the system as well as fleet manages through dashboards and visualizations we offer distracted driver prevention so when the vehicle comes out of park we lock the phone down so drivers can't be sending SMS or making calls it's one of the leading causes of collisions and we just take that right off the table by making sure that if they're in Drive or they're in reverse they're not texting see pocket enforcement we're really excited about this is one where it prevents the vehicle from even starting and the seatbelt is on we know that most collisions in a fleet happened within a really small radius at the start of a drive that's also the time when you're least likely to have put your seatbelt on yet and for a driver in a fleet that's making eight stops a day or 12 stops a day it gets kind of a hassle to take that seatbelt put it on and off every time so they tend to skip that well that's why they get an accidents and hurt themselves and others so we're taking that off the table by making sure that that seatbelts on every time and lastly dynamic speed governing so we can offer fixed speed limits for vehicle so that vehicle just never goes above a certain number we're starting to do dynamic speed governing as well so looking at the location and heading of the vehicle and applying the speed for that road or speed relative to that road to the vehicle nobody needs a delivery vehicle doing a hundred miles per hour down their street to get to the next stop so we stood up the back end we started to build the user experiences and it took off we work with many of the nation's largest fleets now including one of the top five and that one fleet generates about twenty million data points per day and has more than 25 thousand vehicles so even as we just started to build this thing the demand was there and it's only taken off since so going up to that higher level of experiences turn it back to GM and show us kind of how we turned that back end of IOT core and pub/sub data flows into user experiences for our customers so of course just establishing the data is kind of getting from point A to point B isn't entirely that useful bigquery proved to be one of our best tools for identifying devices in the field that might be causing problems or just not behaving as we expect them to you identifying individual errors with logging while at times was useful it didn't give us the kind of insight to help us dig on particular issues being able to find specific vehicles and how they're behaving was a simple thing to do within bigquery there are other types of queries that prove to be quite useful like trying to identify devices that haven't reported GPS in some amount of time all these devices that we have they have LTE they Bluetooth and I have GPS connections so while is your maybe also have GPS the device is supposed to be reporting its GPS at the same time there's a number of reasons that that might not be happening you may be in the city scape or a valley that doesn't have GPS or at the end of the day the driver takes the vehicle and parks it in a garage or it gets taken in for services and so for all intents and purposes this device kind of disappears to the fleet possibly so being able to find these vehicles that aren't reporting as we expect them to is something that's particularly important we can then go in and try and track down what's happened to those devices now all these tools very useful for ourselves internally while we're in this development process while we're trying to go through these steps of setting up this fleet of 25,000 vehicles or any fleet that we're working on but it doesn't really add much value to the user as Marco said that's what we're really trying to drive towards is get something that's useful that for them for tracking data for being able to track their fleet manager fleet gives them real value we were able to do this relatively quickly with again using just a Google a Google product being able to pump data from bigquery into data studio which allowed us to without using bigquery and it's something that's better 211 internally in some cases be able to track down specific vehicles when they last reported when they last pulled information that they were expected to fall but then we wanted more than that and so for that we needed kind of library on our architecture of hill back to the slides thanks Jim this is drives Google cloud architecture it's simple but when we started it didn't feel simple for us we had excitement we had confidence but we didn't have experience for building architectures that will handle twenty five million messages a day we took a very iterative approach to this as marco and jim has mentioned and I highly recommend building this in layers and building layers upon it mr. strategy we did during development and trying to get to market quickly and it's a strategy we leverage for our roadmaps and for further capabilities that we had and I would like to walk through the flow and sort of highlight some of the big milestones I'm starting with our device in the vehicle so as Jim initially demoed a big milestone is is working on your ingestion and storage and getting this set up in a proof of concept to really start seeing your data that you wish to flow through the cloud and get the tools that you need to really visualize it this was empowering for us from a development perspective this let us check off a lot of architectural considerations that we had IOT core really proved out the scalability and security pub/sub with the reliability being able to handle data spikes that we see from time to time in cloud functions with the stateless execution of horizontal scalability on bigquery bigquery is a tool that we leveraged a lot the sequel nature the ability to see data in very cost-effective queries is a platform that we really developed to to really see what we were trying to build and enable quite a few things it enabled us to really dive deep and try to visualize what we wanted to create in applications and identify data integrity issues is our is our devices do they have issues with the metrics that they're streaming and it helped identify missing metrics for the capabilities that were trying to capture and this is a milestone that allowed us to iterate and do full stack changes in a pretty efficient manner so as we start seeing more metrics and ingesting them we can work with that without really impacting the rest of the stack the next piece that's pretty critical that for us has been a challenge and is ones that we were excited to continue to work on these data processing so for our our messages from vehicles these are very specific events in time and we need to process that and start having some higher abstractions for us that's trips that's seen a individual a driver for a window of time go to different locations it strips and it's the insights that we want to show about trips specifically that I'll get to and when I show off a little bit of Mission Control when I'm with data processing we actually went through a couple iterations of it it was definitely a learning for us on how did this cost effectively and there's quite a few tool sets that we haven't leveraged yet but we have in our future when it comes to the actual applications itself this is a little bit more in our wheelhouse this is what we've been developing for years so it's really the data architecture pipeline that at least for us with our experience has been a great learning experience so for Mission Control this is our dashboard this is our web application and what you're seeing here is our first insights that we built the graph in the upper left is showing insights on engine idle time this is a fleet and the graph shows the total amount of time vehicles were idling each day it's a very simple powerful visualization and for this specific use case we have a positive outcome of the idle time decreasing the this is caused by a couple of effects one is leveraging our ability to upgrade the software on vehicles to help reduce the auto time and in the second is just more visibility in cannibal with individual drivers if they understand their patterns and they do have an opportunity to try to optimize set and similar to our layered approach of our whole data architecture pipeline it comes up all the way to the end-user applications as well when we built this we didn't have other visualizations we didn't have data processing that went deeper than this and as we added more capabilities to Mission Control we continued to add what we need this is the sort of opposite approach the set of insights this is going into high fidelity and this is looking specifically at a single chip so this is more of a real-time and detailed representation of our data processing system and in this one we're still highlighting a little bit of the value out of the system with showcasing not just the GPS locations but the amount of idle time during that trip and from that I'll pass it back to Jim to really highlight some of the lessons learned and not not on the demo but actually just on the slide today oh yeah you got it so I think one of the biggest lessons learned for us really had to do a lot with the how best to most cost efficiently leverage bigquery bigquery is an incredible tool to cheaply store data it's a great data warehouse and it's simple enough to pull data from it but we had multiple systems both from trip processing to just simple mapping that we were trying to do that the times could be pulling thousands of queries in a minute we had to change that we had to optimize a lot of the ways that we both store data and change data if anybody has worked with bigquery when you start getting into the terabytes of terabytes of data on bigquery some of the most important things to keep in mind is make sure you use partition tables so that when you're pulling data in you're only pulling the data you want ultimately when it comes to cost that's the biggest thing with bigquery typically you don't need access to all of the data that you're possibly storing for us that can be particularly true when we can have hundreds upon hundreds of columns of data that we're storing for any given event that comes across so partitioning particularly important and making sure that you leverage your queries against those partitions sometimes we still see that happen within our own where why did that one cost that much why did that one singular query cost that much so trying to limit that another really great thing to do is denormalization the data a lot of us come from the background of relational databases and in that kind of an environment you're thinking oh it joins or no big deal we'll do that but again when you're running lots of queries against huge data sets you don't want that you want denormalized data just have it in one table so you're not doing joins on many many many queries on top of that again trying to make sure that you you're only pulling the data that you absolutely need stackdriver is your friend it's a great way to keep you from running off the rails it's all too easy that's the it's all too easy in GCP to kind of shoot yourself in the foot they give you all the power you're willing to pay for it and so using stackdriver which they give you you can set things up to keep you kind of on the rails and alert you when things when you've possibly done something wrong things we've tried to avoid very similar to that you know leverage leverage stackdriver to try and avoid hitting or going over quotas before you find out because your services have started to stop just shut down because you've hit your quotas and another thing is especially in environment it's important that you that you have a good devops group or that you have some sort of a devops operation because again it's really easy to set things up in your environment on GCP and you can forget that they're running and they're not necessary so yeah and again about the same really leverage the tools within the infrastructure to to help you keep things in track with what you expect there's a lot of different services and they're always changing and they're always adding new features to help you and and that Google is really quick and responsive when you come into issues that you need to deal with one thing that's been very helpful to us it goes beyond there's the initial billing that you have but you can take all your billing information and you can load that into bigquery and you can load that into Data studio and really do deep drilling to understand what the costs and usages within your entire organization systems are and there's a summary that's a peck DeMarco Jim thank you very much yeah we've actually just started piping the data back into from billing back into bigquery it's it's been a huge asset to us so maybe that's for a future demo but would really encourage everyone out there doing these kinds of initial builds to make that one of your out front priorities it's helped a lot just to run back for a moment I know a lot of you are sort of thinking about or initially building would encourage you to look at this architecture and kind of consider it as a reference or a resource and if it's something that you're looking at in terms of building a connected device and standing up at initial architecture we'd love to help so come talk to us about our experience I think I'm set you know we had some lessons learned but all in all was a pretty smooth experience and especially when it comes to support I think that's one of the things for me that I would have changed about our experiences to lean on the Google folks earlier and more often I think we were probably a little bit overconfident in terms of building things and once we lead on them a bit more that was a huge support so please take note of this architecture it's working great for us and we're extending it from here and if we can help you with yours don't hesitate to reach out so I just wanted to kind of end on a summary of our experience I guess we needed a cloud partner we had a pretty amazing opportunity and a unique differentiator when it comes to our feature set so we went out and kind of shopped around we chose Google for those three vectors kind of speed to launch and and it's been less than a year that we were from kind of a vision on paper to a platform supporting some of the largest fleets in the country support for scale which is now something that we're thankful for as we do that and then obviously security which we didn't have as much time to touch on but something would love to talk about as well we have launched successfully and with some great user experiences for drivers and with dashboards and visualizations which we're really excited about and we're growing the business from there with Google we learnt a ton most notably that the reasons we selected this platform in this architecture actually bore out to be true so it's easy to hear this stuff up front it's really relieving when they actually turn out to be real and with huge support from the Google cloud team they've really been pretty amazing about this next up we're really excited about kind of exploring more of the m/l side of the platform we're collecting a huge amount of data now and we're kind of doing with it what we know best which is working with fleets directly showing them their reality and then upgrading their vehicles to get those benefits so they don't have to rely on driver coaching but we're excited about what we're going to learn from this data that we don't already know so really excited about that and really appreciate you kind of letting us walk you through from our first kind of idea through the initial building of the backend through to the user experiences and where we are today and happy to answer any questions or what to get and help you guys build yours too so thanks for the time [Music] 