 hello everyone I'm her char from the University of Washington and today I'll be talking about the system called I plane that I've been building with my advisors Tom our win then I don't so the basic motivation for our work is that today there are several instances where it's useful to know what exactly is the performance you get on some parts of the internet for example in certain applications such as p2p applications you like for clients to connect to peers that are providing good performance on the other hand ISPs would like to know what exactly is the performance clients should receive in the connect to their customers but the problem is right now there is no good way really to predict performance on any path unless you actually use the path and the reason this this is a problem is I guess known to all of you out here is the routes routes in the internet traverse several ISPs and so there is no single point in the network where you can predict performance between I need to end those further though any ISP can control routes going out from it it does not really have control over incoming routes and so there's path asymmetry out there and further both routes and traffic workloads change over time and you don't really have any static estimate that you can make on path performance so to address this problem given these challenges we have built this system called AI plane in that in a nutshell what it does is it predicts path properties on the internet between any arbitrary source and any arbitrary destination and the way - though is we have control over a bunch of vantage points around the internet from which we continually issue measurements and based on measurements from these vantage points we not only predict we predict the path properties such as latency loss rate and bandwidth along paths that they are not even measured and so currently we have this system continually measuring the internet daily from several locations around the internet and all this data that we gather is available online at this URL so first let's look at a high-level overview of how I plane works so as I said we have control over a few Vantage several vantage points around the network so right now we have planetlab nodes in around 200 locations as well as around 500 public traceroute servers so from these few hundred vantage points we issue trace routes daily to all prefixes in the internet and based on these measurements we build up this topology topological map of the internet and once we discover all popular links out there we partition these links into access links at the edge and links in the core and separately measure properties of these links such as loss rate and bandwidth so this map of the internet that they build up annotated with link level properties we call this the internet atlas and we basically use this Atlas to predict properties between hosts that we don't have control over so let's see how exactly we do that so say there is some source and destination between which you want to make an estimate and we don't have control over either the source or the destination so we don't really know the paths between them through the internet all that we have is control over a few vantage points and from these vantage points we have performed trace routes to some representative destination in the same prefix as s and the same prefix as d so the thing we capitalize on is that by composing segments of these measured paths for example in this case by composing Si and ID you can get a path that is pretty similar to the actual path so in this case one candidate path for the path between s and E is s ID which though not identical to the actual path is pretty similar both the challenge here is there are several other intersections possible between our measured routes and we have to choose among these candidate paths as to what exactly is the right path between s and E and the way we do so by using several properties of how routing works the fact that BGP tends to prefer shorter race paths and that most many people do early exit routing so we use such properties to infer the path between any source and a destination so to estimate the path properties between s and D we basically used this technique to predict the forward path first then predict the reverse path and then compose the properties of the links on these predicted paths to infer end-to-end latency loss rate and bandwidth so here's one particle example of how our path prediction works so I was in Rio last year for the internet measurement conference and when I was there I did a trace route from the hotel in Rio to the web server of the US Embassy in Romania so the map on the Left basically shows the actual route from Rio to Romania as given by trace route and the RTT measured by the actual trace route was 298 milliseconds and the map on the Left shows a map on the right shows the path predicted by plane between the same source and destination so you see that though the path is not exactly identical it's pretty similar to the actual path and since it is pretty similar even our latency estimate is close to the actual value to evaluate our path prediction more rigorously what we did was we considered our atlas of the Internet to be comprising only measurements made from planetlab and use these this atlas to estimate paths measure from public race road servers are on final of which we use so this graph essentially shows how well our path predictions work the x-axis is the AAS path this is the similarity metric which is basically symmetric we use for comparing to a s paths all that you need to know is when the metric is 0 both paths identical and the y-axis is the cumulative fraction of paths so here you see that for around 2/3 of the paths in our evaluation set we're able to predict the a spark effectively right so given that our path predictions are reasonably accurate we then evaluated how well our estimates of path properties such as latency and loss rate are given our path predictions so here are graphs plotting these estimates the graph on the Left plots the accuracy of a latency estimates the x-axis is basically the absolute error in our latency estimate compared to the actual latency and the y-axis is the cumulative fraction of paths the similarly the graph on the right plots the accuracy of our loss rate estimates so in both cases you see our estimates are reasonably accurate but not perfect and to diagnose this we further broke down a path path set into two partitions one for which we once the one set of paths is those for which we actually we're able to predict the a spot perfectly right and the other for which were unable to predict the s path correctly so we see that our estimates for properties such as latency and loss rate are significantly better when we do get a spot right so our hope is that as we improve our measurements to improve our mapping of the Internet and also I put our technique for path prediction our our estimates for restock path properties will improve further so now that I've told you that Africa needs you that there the data that I plane gives us reasonably accurate how exactly can you access this data so firstly all the measurement data that we gather daily is available online at this URL and further we also run a query server on this host which exports two interfaces one is a Sun RPC interface and the other is an XML RPC interface so you can basically issue queries for any source destination pairs you like for example suppose you want to determine what is the performance some set of clients out there received to your customers you can basically input though your those sources those source destination pairs as a query and you get back predictions of what exactly is the pop level path from on each of these source destination pairs and also what is the latency and loss rate estimates along these paths so currently we have one query server running on this host and we hope we are applying to host a few more query servers that you would have pretty soon so one interesting result we have found while doing our evaluations is that our our estimates of path properties are significantly better when suppose you want to estimate the power path robbery's for some particular source destination our estimate is significantly better when we have access to a few paths from the source and the reason for this is that there is path asymmetry out there in the Internet and the outgoing paths from the source are not necessarily reflected by the paths we measure into it from our vantage points so in fact in our experiments with public trace road servers we have seen that by just adding ten paths from each server we can get significant improvement in accuracy of our estimates so it will really help if you guys can host more trace route servers out there we can basically scrub the webpage on a one and include those in our measurements and give you better data for to my plane so right now we we also have a interface by which our query server can accept trace routes as input and all that you need to do is upload the raw output of trace route to a TCP server and even that is documented at the URL so in summary today I presented I a system called I plane that we have built and in a nutshell what it does is gives you predictions aprox approximate predictions of thoughts as well as path properties between any two end hosts out there in the internet and if any of you are interested if you even think this information to my plane is useful and you're interested in using it please drop me a mail and also if there's any other information you think I plain wood should provide I would be glad to hear Thanks 