 we weren't announced figures but mrs. Steven house and he's our first guy about work hey thanks for coming along I really love speaking at this event it's kind of a bit of a venting session sometimes it's chance for me to get off my chest the things that have been frustrating me all year and hopefully give you a pointers and tips and tricks on how cannot make some of the mistakes I've been making trying to run and set up and configure some demo so there's a few war stories here I apologize if you don't learn anything new I will be thankful if I learned something new out the session that's one of the reasons why I give these talks and please be patient with me cuz I'm trying to use slides and I now use my phone instead of a clicker so it's interesting so I'd see this works so is this a data center in your pocket actually I've given this talk internally inside Red Hat it was actually called is this a cloud in your pocket but some is a bit overdone with clouds and you know many of us run data centers still for what it's a data center in a modern context it's all about cloud technologies now so there's a bit of a cross over there in terms of what the content is about now let's see if this works so why am i giving this tour I have to build demos and show off technology to partners and customers on a regular basis I also talk at logs and other events and when I'm doing that I've got to find a way to get this technology up and running really quickly in a repeatable reproducible manner that's a common theme today and one way of talking to this and I'm skipping the wrong way now is I like to say no sometimes you say you've got an itch you need to scratch in my case often have problems which are my scratch you know those problems that you've you've got on their lingering and the hanging around but you no longer bother with them because you kind of got to work around or you've got a you just tend to forget about them they've always been there so I'll just say I've got to scratch I need to itch I need these scratches to become that annoying I will actually go and solve them and so around that is how do i do these things quickly how do I avoid just having a simple tech desk procedure many of you in operations the desk procedures you're going to do every day I want to automate those des procedures so I apologize in advance if this talk turns into a session on teaching you how to suck eggs but hopefully you'll get something new out of it hopefully you need you only take out one thing you go oh my god I must never do that that will really give me pain I will suddenly find out have no hard drive or similar circumstances so our friend goal the egg sucker what does he ask you always that's what have you got in your pockets and that you know one of the things around this is what do you have in your pocket could we run the quill and the data centers worth of technology on your mobile phone I mean that's the most common thing we all have one of these in our pocket more most of us in the room I think do and look at the power you're carrying around your mobile phone today quad-core octa-core we're starting to see 64-bit processing in our phone imagine if you can go into a customer session going to a demo at your local log and be able to show off although technology just using your mobile phone you know we still see mobile phones appear with a little mini projectors and all kinds of other add-ons the eponymous raspberry pi is a great piece of tech I meant to bring one with me just pull it out it will literally fit in your pocket I really want a few of easier the Intel Knox asrock have got their little bee box it's a great little pieces of tech and we can get an awful lot of your hypervisor capability into one of these units or something I've been playing with is I'm often trying to bootstrap a new piece of hardware so I've got here is a USB three base memory card reader so I can stick a range of memory cards in this one's got an install a rel seven letting pretty much boot any piece of hardware in any data center on as long as it's x86 whether it's UEFI secure boot or old school by us-based boot and I'm often our capacity so we're own sometimes used for demos is an external hard drive like this which I am to stick an old 128 gig SSD in of a USB 3 it's got more than enough performance for me to run a reasonably sized virtualization stack but the meat and bones of the session we're going to cover off are playing with nested virtualization or fun and frustration with nested virtualization some tips and tricks around using thin lvm so that i can use things like that 128 gig external hard drive and make it seem like its many petabytes or terabytes at least of storage snapshots a little bit around pulling up technologies like Rdio she's a build of OpenStack on thin lvm using snapshots doing it really quickly tearing it down again and if I've got a bit of time I can also talk about something called atomic which is a lightweight cloud-ready environment and some stuff you can do with that around q cows snapshots so along the way we're going to discuss choosing and building right kind of base images a few gotchas a few tips and tricks and where am I going next a lot of what I'm doing in this space is still largely old-school bios MBR based environments because that's the way most virtual infrastructure works so what I want to do is re tool this to be UEFI based because that's the way the hardware is in the data center now so if I'm going to pretend my VMS of physical machines I want to pretend that the running UEFI and I want to play with arm 64 because that's coming into the data center in the next few years big time hardware now what hardware do i use to run these demos in these environments if your primary environment is a map you might be able to take some of my learnings unless you're going to run linux natively on it everything am doing here is about using limits as my host environment using libvirt using lvm snapshots working an apple in its ecosystem so whilst my focus is around centos fedora or when I'm with customers using red hat enterprise linux a lot of this I hope you can quickly retool around using technologies like Santos and debian and arch and all the other popular Linux Labour's so my environment here is a Lenovo ThinkPad and normally I'd be using my external hard drive more on that in a moment and for the purposes of the demos here I've built or everything using centos so it's something that you can go away and use yourself now if you can't read some of the technical detail all the slides will be available everything's copy and paste able so you can do all of this yourselves after the session so along the way there will be dragons you know big hairy scaly horrible dragons things go wrong one of the reasons I'm not using my external hard drive is actually one of those dragons playing with in lv m can have some interesting side effects so first nesting ah nesting no um nested virtualization why would I do nested virtualization if you do it properly a modern hardware much more performance than using qemu based software virtualization a couple of pointers if you're going to do nested virtualization use an SSD use plenty of RAM don't try and do it on spinning disk you just in for a world of pain so if you're going to set up nested virtualization most modern intel and AMD processors are capable now depending on your processor type you might not have all of those Intel options up here because some of these r xeon specific so if you're doing this on your laptop you may not have them all there's no obvious side effects of setting up your modprobe options this way it will only enable the options are available on your core I actually have machine at home that's AMD base that's the only option I typically use on it to give me a nested environment along the way we're going to have power tip so kind of skipped ahead early one of them always use SSD a second one I love HD power minus T it's really dumb but it's great because I know straight away if the hard drive is misbehaving if the USB bus has decided to connect it two instead of three if there's other things happening in my environment I can see it really really quickly and that is do a reboot tidy things up because honest you don't want to do this over USB 2 based attached hard drive not very good so I create a base environment that I'm going to use for all my snapshots going forward I might use a virtual manager I might do it the command line once you've got it set up you typically got to edit the configuration and enable vmx and your CPU features otherwise you won't get nesting in your VMs one thing about nesting is when the machine comes up it will try and set up a virtual network if you're not careful the virtual network will be seen in the same address range as the virtual network you're using your host again interesting side effects things don't behave well usually libvirt won't start so either use a different base address range in your host like 192 168 1 2 3 or change it when you build your vm environment you're going to start using for nested virtualization and how many of you here have played with in lv m I'm impressed some of you still got her I lost mine it's gone so yet do it on SSD in the case of this I'm doing actually on my local internal hard drive I kick some stuff out made enough room to create a thin poor so relatively simple i'll create a thin pool i'm going to use for all my Thin environments that's a fixed size that you can configure lvm to grow dynamically if there's free space left on your SSD and then I'm going to create a 40 gig environment that I'm going to use for myspace centos install that weather then use for all my demos thin on top of lvm make sure you fix your lvm config to do issue discards otherwise trim on your underline SSD doesn't quite behave nicely we run Lux encryption thin on top of lvm on top of Lux encryption still not quite got that one working if someone has got it right and yeah okay come and see me later please we'll discuss its I'd really not lose my main environment while I'm at the conference though so maybe I'll do it next week so next thing we need a base environment we're going to use for spinning up all of this so a base OS image I've usually got one for fedora 14 sent us one Pharrell k so they might spin one up for in a bun to environment and I tend to update the base regularly whilst I'm spinning up environments office there and i'll be building and i'll be updating them every so often because everything to do is repeatable I'll kill all the spoon up in forums and I'll just refresh the base it helps keep the storage use on your thin environment under control and again about dragons how do you build your base image thin may go wrong I've hit really interesting odd issues with USB based attached storage metadata corruption having a hard drive attached on my dock and unplug my laptop and walking away is a really good way to cause corruption on thin so I always use a kickstart therefore I make sure I can quickly rebuild and recover a base image or I can reuse it elsewhere or casing Lee just like come and talk to me i can give you my kickstart images to play with i also think about your main use cases that you're going to be building demos are using these environments for one of my primary ones of light has been doing things like OpenStack and darker and kuba Nettie's so I want a decent-sized it environment so that I can actually install some put some images into the running OpenStack environment actually use it properly so again all of this is available afterwards do partition table I tend to reserve some space for cinder in advance rather than have sinned to set up a loopback environment so I can keep that under control I keep my environment fairly small but not micro because I'm going to be using this for a lot of different things so on a baseline that kind of makes sense I poked in my standard SSH keys as part of the kickstart and enable young cash because I'm going to be patching this and then what I like to do is make sure I've got a local cache of everything I've been pulling in to these VMs I'm playing with and our last thing is apparently kickstart doesn't like having a volume group with a dash in the name and open stacks pack stack installer that when a demo want cinder dash volumes to be the volume group it uses for cinder storage so have to fix that up at the end of the kickstart so next thing patch the base because we'll have installed off an ISO or a pixie or something and we make sure that that's current and then I like to keep a Content cash as I mentioned so what I'll often do when I'm first thing this opposes just use arcing I'll sink you know VAR cash yum blah blah to my external environment I'll sink it back in again every so often we want something a bit more elegant use tools like em repo so what I'm doing my rail installs now actually have em repo configured I'm actually running a local yum repository so when I update anything it will go for my local cache I had to go to the internet which for using my internet connection at home makes life a lot less painful if you've got operational management tools if you're using things like satellite or katella on Foreman or some other tool that can provide you with a repository great use them keep content local make this repeatable and fast as possible so the first thing you do patch the vm pull the changes back into my local cash so that i'm ready to do it another time now this is a good one let me just pull so if actually here this is was a clean environment it's just done a upgrade and i've just installed our do which is a community build of OpenStack try to help support and i've just installed packed stack which is a tool for initiating an OpenStack environment so this is just created before you all came in so what I'm just going to run which I'll come to shortly so we'll leave that running and we'll come back to this so that now I'm going to basically be running and installing OpenStack in the background while we're giving the talk hopefully demo God's be kind so send about your base image I like pizza agarwal fight pizza oven at home I make good pizza you're not going give me a call and have pizza if you're moving in for existing environment too thin lvm you need to kind of clean it up a bit how many of you here have good part x foo how many of you here know what part x is I've ever used it oh that's quite good part x is really neat because we want to basically mount the image go and use FS trim to go and clean things up and actually you'll notice if you keep an eye on your lvm sizings you'll notice that the image starts to shrink down as you run FS trim so we want to slim it right down so that's our starving pool before we do anything in anger and even when you've done some patching and tidy ops it's worth every so often doing this because I've found occasionally pass shoes not quite working deletes not going all the way down the staff particularly as I'm running encrypted hard drive if you're using vert manager it won't always detect thin exists it's really hard through vert managers GUI to kind of add thin partitions in or specify them so in theory when you're going through the goofy using that to initiate a new vm you should be able to just edit the field and add passing you know their volume blah all good no not good what typically happens is it can't see it properly so it deletes the image that you've just spent all this time creating and creates a brand-new lvm volume not good so if you're going to do this manually you can use vert manager to create the environment but use versa to edit the config file and update the XML otherwise you're in for a world of pain so now snapshots and snapshots of snapshots of snapshots and things start to get really interesting so overall our found the performance on modern SSDs fairly good for running thin lvm with snapshots I can easily create extra environments any time I need them a tip out give you is you sensible names for the snapshots your building I keep discovering I've got squeezed of environments and its version one version to version 3 and I can't remember why I created them one thing with thin is thin lvm a modern distros doesn't auto activate this is a good thing because when it goes bad it goes very bad and if you've got a half a dozen thin volumes active and you lose power hard drive something goes wrong you may be hoping for a world of pain so now when you've done the create you need to activate it before the volume is actually accessible and you can do anything under libvirt like do versus start so when I'm going to build cloud we're going to start off with our center base first we're going to do is disable network manager it just gets in the way in an OpenStack context we're going to update our content cash went through this quite quick sore the notes are here and I'm going to use our do which is a great community build of OpenStack to do the install so our do impact stack how many of you use dev staff how many of you used just puppet modules and general things to install open stair if any of you use fuel so pack stacks a nice way for operators and users to try our OpenStack it will build an environment to a certain scale it's very simple to use it has an answers file so you can like configure Network a particular way very accessible so the first thing I'll do is update the environment you've already done I'll install OpenStack pack staff and then all in one basically means I'm just installing it in a vm on my laptop I could actually define a multi-node environment with separate Nova compute minus mind the cinder volumes create equal n means it will actually it's a bit counterintuitive it means it won't create a loopback device it will go and look for the volume group and use that instead and when I finish we'll do is I'll arcing all the changes back to my local rap house I've got a cash for later I keep lots of notes whether it's pen and paper whether using g edit g no VI Emacs somewhere my favorite places i like track I've talked about it other conferences so I have a little private instance so when I come to give a talk I list everything I've done but all the notes all the pointers all the trips all the doctors learn firewall d commands in modern like CentOS and rail environments or fedora environments if that's what you're using usually packs that gets it right and opens up the right holes sometimes no I'm actually going to stick sit this skip that bit so what I've got right now is some of this completely repeatable but it's not entirely automated so what I could actually do is wrap a bit of ansible I could just do with the shell script I could actually automate this to the nth degree but part of it is actually going through the process because often where I'm doing is I'm trying to a new release of OpenStack or a new release of dr. aku benetti's or some technology so you want to see what's breaking what's going wrong well you know it works then automated don't try and automate it when you haven't even tried it out but it means I packed my base environment I can reimage my base very quickly and it means they can experiment a lot so we started to play around with things like software-defined networking which if you don't get the network configuration to pack stack right in the first place is a world of pain to configure after the fact so being able to blow the environment away and recreate it in less than 30 minutes and have a full OpenStack store with the right networking is critical so some people said to me why am I using lv my don't just use q can you count those snapshots it does thin it does a lot of these things I don't know I like lvm elvia makes sense for me but when I'm playing with something like atomic which is a very very lightweight environment design for containers that's when I will use q care of snapshots if you're going to play with things like atomic how many of you use cloud in it now using clouds in it with liver is kind of fun and interesting learn it there's a really good guide here up on our website I believe this one's completely public not a lot of effort you know you create a metafile that specifies the name you have a metafile when you inject some data and then i create an iso file off that metadata and then i use qemu to create a snapshot a working environment of an upstream atomic this could be atomic out a red hat atomic for fedora atomic for centos could be another environment you're working with the talk I gave yesterday I pull down appliance image for a tool called manage IQ use the very similar cute qmu command to create a working environment and then start it let install specify the cd-rom device that are the cloud and it data and away we go and we're good to go so I can do this and quickly spin up three or four or five of these microenvironments to play with minimal luver had minimal disk use all good one nice thing is that you can rien it the base dis any time so as long as you do a shutdown of the vm that you're running just reading it the base disk don't worry about the cloud and it disk you don't need to recreate the vm just restart it everything comes up you've got a nice clean environment you can also do things like snapping your snap don't do that when you're running do not do that shot a qk instance while it's running not only will you lose the instance that you think you're creating you lose the instance that you think is safe you'll lose both ends unless you've got something inside the image that can acquiesce and quiesce the environment world of pain so it's great i can play around with these technologies really really quickly because atomic already has darker and kuba Nettie's and flannel and all these things ready to run just really easy if you're trying to operational e stand up and play around with containers this is a really simple entry point to that n is a couple of really nice play books workbooks on this again these are completely public so if any of you in the room 1 i'm going to have play and try out and try and understand how kuva Nellie's interacts with dr. i see these URLs are all be published afterwards but this is a really nice step-by-step how-to guide you can easily reapply this on your distribution of choice but it's a really nice start so kind of coming back to where we started you know why am i doing this and I said you know scratches I need to itch so the next one for me is very much about you fi how many of you deal with you fi hardware at the moment how many of you don't you will at some point I mean my laptop's UEFI you walk into a data center now it's you fi unless you're purely living in the cloud you don't care about Hardware you fi is what you're going to have to deal with tens that you can do you fr into the bios space poo in kvm it's not very elegant right now virtualbox team have also been doing a chunk of work around you fi I don't tend to use virtualbox I don't like what it does in terms of kernel modules so but this is that kind of the next step is I want to be able to do a lot of these things with full secure boot enabled I want to treat it like it's true hardware the other thing I mentioned there is might at us be ready ufi ready USB key you tried to build a bootable image on a USB key that will work on you fi hardware anyone done it good it's it's interesting because you end up you go you know format the environment and in GPT mode your force the environment to only boot in bios mo because you try and boot a USB key it will try often to boot it in MBR mo old school mode so unless you force it you can't even install the key so what I wanted was a live image that will work on bios and you fi so first I had this all working on you fi but you need different layout there's a few other tips and tricks to get it working on an old-school MBR environment as well so I do mind kind of simple rail seven install this has got a efi partition table install grub 2 and i have to boot now in legacy mode and make sure everything's working so there's some pointers there for any of you who want to try it it's in the guide but you should be able to do this with fedora and centos as well as you can basically have an environment or work on any class of hardware so next what next so I'm going to rework all my demos to buf I based at some point I want to possibly have a look at doing this with full encryption support as well I want to fully script I was hoping to have that ready for today the the coup benetti's and ansible and docker stuff I could probably use ansible now to automate although what I'm doing around standing up rapid cloud environments the one thing I really want some hardware to play with so things like this new pine 64 board and some of the new arm gear that's coming out I don't want to play with this right I want to play on proper enterprise-grade arm because the kit is getting smaller and more powerful all the time we have to remember that the future in the enterprise isn't this silly x86 so I'm going to start looking towards that so any questions and I need your details to talk about yes like I'm motherboard we're happily gives the option good food so it's wonder were you finding some hardware will you be the option and somehow they destroyed if there is a legacy option so some say you so the question was about the issues of had booting you fi versus old school by assembly are based and it really does vary from hardware to hardware so we were playing around with some cisco gear which really was outright refusing to ever boot an old-school mer in modern mode everything was going old school and we had to pretty much disable everything we could find in the the firmware to do with mb are based booting if mb I was even vaguely turned on as soon as you put a USB key or a CD image in it would boot that way same with found with the lenovo laptops that I've seen at least a tea for four or five series at 24 25 series even like the x1 carbon like you're really careful you suddenly find you've got an old school environment you haven't gone for an EFI environment and then gets really interesting with my wife's laptop it's a full efi based install but it's gaaray out of Colonel broadcom driver and so a current line secure boot any more questions ok so I'm around all week if these notes will go to Simon most of the pointers and tips and tricks tend to go up on my blog inside red hat as well yeah sort of all right thank you you 