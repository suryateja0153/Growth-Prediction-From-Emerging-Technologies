 welcome this is an introduction to tensorflow my name is Jack Brzezinski my background is mostly artificial intelligence and machine learning I've been involved in a number of research projects and industrial applications relevant to data mining of high dimensional textual data natural language processing question answering conversion conversational interfaces I'm also interested in interface design and recently I've been involved in robotics projects analyzing sensor data spatial information for navigation purposes reasoning and and so on so this is going to be an interesting topic for me since tensorflow is one of many new tools are quite exciting tools that are popping up and are helping us to deal with many new challenges resulting from the volume of data available resulting from the new applications that are increasingly essential to the new economies and tensorflow is really one of those interesting ones we will talk for about ten minutes on the following topics we will try to look at applications we will look a little bit into the interface and what it brings to the table and try to compare tensorflow to other available tools out there okay so what is tensorflow I guess it depends on the point of view what is really important to the the person that is using it well if the user interface is the key aspect of of that tool then I guess we can think about categorizing tensorflow into an integral integrated development environment category if the algorithm is really the focal point then perhaps we could look at the left hand side of this figure and kind of look at the many tools listed here related to statistical computing machine learning and so on if we are really going really enter the directed graphs then perhaps the visualization aspect of the of the algorithm is going to be a key aspect for us so I guess tensorflow brings to the table a few interesting very useful features that might be important in complex data analysis there is no question about that right so the tensorflow is really a library for building graphical interfaces building complex deep learning algorithms and I guess if we look at tensor flow from deep learning that's really what is the key aspect here because deep learning in itself is not bringing anything near to the field of AI and machine learning deep learning in my opinion is really a name for more complex analysis of data that requires not just an application or of one or two algorithms not just some sort of ad-hoc data pre-processing deep learning is really a term that describes what we are dealing right now with a large amount of data heterogeneous data structured unstructured that requires a lot more than than just an ad hoc approach so if we need to build some sort of a systematic learning system that can handle various problems inherent to the current you know landscape you know in the data analysis field then you need to that we need to build something much more complex than just just a library that will be hosting some sort of a neural net application trained for a specific task so so deep learning is here and it requires a new approach now using a graphic graphical interface is not the only approach there is nothing that stops us from building you know C++ libraries you know that will deal with problems at hand but you know having a graphical interface is really an advantage because it's kind of allowing us to be more systematic and you know besides we all know how well we design code usually it's not a primary concern so if if we are working at some sort of a time time crunch situation then sometimes designing code which might involve you know graphical representation of what's going on is sometimes not a primary objective so so being forced into a graphical interface is I guess advantageous also a tensorflow is associated with you know those current difficult problems that we are facing from natural language processing image processing so I guess those kind of problems are forcing our hand in on being a little bit more user friendly I guess during the data analysis process so personally I am a programmer and I love to write code however there is there have been very exciting tools for you know a long time around and I guess one of the first ones that that I really liked was you know the the Clementine data mining package which enabled us to build deep learning networks we could put multiple stages of data processing we could put into the network multiple algorithms kind of compare them we could even devise our own algorithms and kind of put them on inside the graph there is currently there is other tools that we use visualization in the field of data mining or AI but in other fields like for example in robotics you know PLC programming is mostly a graphical in the endeavour so what you see here is a ladder logic graphical interface to writing code for programmable logic controllers so I think that graphical tools is is really a good way to develop code and especially if it involves really a lot of modules working together to accomplish something so it's really it's really an advantage all right so what are the other characteristics well in the name of the algorithm there is the word tensor right so high dimensional arrays have been around in in many applications you know like for example in engineering tensors are important to express the state of a material under stress or something like that so so tensors are here kind of being promoted to enable us to layer various aspects of the data into you know tabular representation which no which is probably a must in a lot of applications portability is another advantage so you know the network's that we develop you know user Intel flow can be moved between computers really easy and other characteristics is that you know there is a Python interface but underneath there is a C++ implementation which probably is an advantage because you know there's so much C++ code around there and it's really something that is efficient and brings to the table a lot of advantages from the programming perspective and also no GPU support you know GPUs you know highly parallelized computers you know when within our you know desktops are really you know the way to go for a lot of computational expensive applications so that's really a really a big plus right so obviously you know the application is deep learning and what we are looking at is kind of a very good representation of the problem at hand so you know at the bottom you'll see you know some sort of a collection of pixels depicting something and we need to find a way to convert those pixels and that's where the tensors come into play in a way that is convenient to process and then we need to devise algorithms that will quite possibly in many many steps arrive at some sort of a conclusion that you know there is so you know man sitting and that's the representation of of the you know unstructured or semi structured information in the image so in order to get from the bottom of the graph to the top of the graph it's it's quite a task and deep learning is really the way to go and graphical interface is really hard all right so there is some that is many tools around and I'm sure that there is many more tools that will be developed in the near future you know I'm I'm guessing that there's going to be two directions where the tools will be a kind of going one direction is going to be similar to tensile flow where you know the regular quote/unquote PC architecture is going to be is going to be used and the parallelism of graphical the video cards will be taken advantage of to handle the sheer size of data so that's kind of the PC route and probably the other route for the data analysis or data mining tools or deep learning tools will be going into the direction of cloud and hard opened and those those things were you know you know if you are facing terabytes of data then you know there is some difficult decisions to be made regarding how do we how do we make the data analysis process effective so but one way or other you know the primary question is that you know the programmer doesn't have to be a data scientist and you know the programmer doesn't have to be a machine learning wizard and conversely a data scientist or or somebody who has a deep understanding of machine learning doesn't have to be able to handle you know video card programming or cloud computing programming so I'm seeing I think a big push towards kind of making making the the tools widely available to the data analysis community and and I think it's a good good approach to allow the programmer to kind of be a programmer and focus on the implementation and focus on the platform and focus on on on so many challenges that result from they have hardware and software applications and allow the data analysis to be a little bit more streamlined and user friendly for for for the other group of people in viol involved in data analysis so thank you very much for your attention and I'm hoping that in the next presentation I will be able to perhaps get under the hood a little bit more and show the basics of the tensor flow algorithm I'm also planning on putting together some presentations that will explore that will present other algorithms used by the deep learning community thank you 