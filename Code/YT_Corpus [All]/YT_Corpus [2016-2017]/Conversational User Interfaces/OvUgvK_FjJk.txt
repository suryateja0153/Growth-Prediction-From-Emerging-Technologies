 Welcome to Web Systems. Today we are going to cover a bit of history about UNIX We know the Web's a gigantic network of computers; networks of networks, routers switches and devices; as well as applications of course! A lot of these operating systems in fact tend to run an operating system called UNIX, or Linux, in our case There are many common operating systems out there at the moment For example, we have our classic Mac and iPhone  background based on BSD. We have Linux like RedHat, Solaris, like that rerun system. We have Windows 7 and Windows 10, Windows 2008 and so on We even have operating systems that run on Nokias. I've mentioned quite a few so let's look at Linux & Unix. Unix has been around for ages. Let's have a quick look at Unix. Unix has been used continually since 1969. Probably before your parents were born! It's used on most of the computers running the internet - for example: on web servers, domain name servers - probably not as much as mail servers as a lot of online services now for example Google, Microsoft Outlook, Web Access. Web hosting is very popular as well. And you'll find that most people say "Yeah, this is great! We run servers - this is the server side stuff. It's not good for ordinary users!" Well that's actually very, very wrong because Mac has been based on UNIX for a long time. The user interface is fancy but the underlying system is UNIX: its based on a system called "Darwin". And it's also the basis of Android phones and Netbooks (Chrome books), your router, so you've used it a lot but you don't necessarily know that you've used it as one of these interesting things about operating systems: they are "behind the covers". There are many versions of Unix.  For example the original version came from AT&T (I'll show you a chart in a moment) and branched off to many different ways. So notice one thing: I've actually mixed Unix and Unix-like so when I say Linux I mean UNIX. When I say UNIX I mean Linux! In the beginning, in1969, Linix was developed as a research project in a group called Bell Labs. These guys - Ken Thompson, Dennis Ritchie and so on also helped develop a language with a guy called Kerningham. They developed a language called C which they used to compile and develop UNIX itself. Because it was a research project they let a group at Berkeley which is the University of California, Berkeley take some of their source code and develop a separate research version of Unix. A few years later Microsoft, of all people, got involved and they actually developed a version of Unix for basically x86 operating systems A bit later, since Bell saw that there was a lot of interest in UNIX, they commercialized it and they sold their commercial arm to a group called UnixWare (or SCO) which apparently is partly owned by Novell now. These other versions you saw became Solaris - a company called SUN took a copy of AT&T's Unix and made it their own. This is on "rerun" at the moment so that's the current system we use to access remotely. A few other  systems we use as well include HP-UX, AIX IBM and HP's versions of Unix. What happened next is that there's a guy called Richard Stallman who believed in open source so he developed a version of Unix completely separate from that research Unix done at Bell Labs. (that's why we have dotted lines here). He made it separately. A bit later a guy called Andy Tanenbaum  develops a version of Unix called "Minix" which literally fitted on one floppy disk (720Kb) basically. He fitted an entire operating system on one of these little disks and he used it for teaching Operating Systems. What happened then Linus Tovalds got a copy of both and developed his own operating system called Linux as I guess a play project which became the Linux we all love and know today. Be aware that there's many other versions of Linux around (or Unix, I should say). FreeBSD and OpenBSD based on the original development it's very possible security researchers and Steve Jobs when he was kicked out of Apple in the 90s  developed a company called NextStep which developed the user interfaces we see with OS X. And that became Apple OS X when he rejoined Apple. So this is Steve Jobs' revenge. He formed a new operating system called OS X which really stood for Operating System 10 (the old version was OS 9). And he open sourced it as well. Darwin is the basic kernel of the Mac and it's open-source - you can download and compile it yourself. It's just the user interface is different and that's the version of OS X. What we really should mention OS X divided into the iPhone version and the Mac version. So keep that in mind. Now Unix has been around for quite a while since 1969. So you've seen the history - it came from many different sources. Now the key thing is, because that happened, there are a lot of Unix variations: the scripting languages all varies, you'll findings called "Bash", "Shell", "Ash", "K- shell", "Seashell" - lots of different languages they use out there and the commands aren't exactly the same. Take a look at Solaris on re-run: the LS command for example has different options on Unix vs Linux vs Solaris. So that's quite an interesting problem. So things get really confusing: which Command Option do I use? etc So we tried to standardise it - IEEE tried a standard they called it POSIX And all they did was say what the commands, what the system calls were etc. It kind of worked and kind of didn't. Castle is very complex and nobody could really agree on it that ended up in the 1990s "Unix Wars". As you saw, in the 1990s, that's when the number of Unix distributions exploded; Linux started; FreeBSD started; NextStep started. The commercialisation of Solaris started as well. So different companies did different things and even sued each other just to try to get out of that. Strangely enough Microsoft even wrote a POSIX interface for Windows NT. Weird things happened everywhere.  Anyway, in 2002 they finally got together and agreed on a non license thing called a single UNIX specification known as "SUS". So if your operating system met that specification it could be you're Unix if not Unix-like. So Linux technically is actually a Unix-like operating system. I've mixed it but, well, as far as we're concerned, it's the same. There's only one Operating System that's been around longer than Unix and that was actually by IBM. One of the very first Operating Systems that I ever dealt with in the commercial world it's called "VM". Really weird thing about VM it's very much much like your virtualized operating systems you have through VMWare. For example, the idea is you run virtual machines and you run an operating system on top of it. Strangely enough IBM even ran UNIX under Linux, in fact under VM. So ... why has Unix been around for so long? Since 1969 - it's a long time, it's a lifetime away, two lifetimes in fact. The main reason it survived: no-one owned the ideas.  Nobody patented UNIX, they didn't even copyright it. All the fights were over a few headers, a bit of source code that had the words "copyright AT&T" Its really a set of ideas, that's why it can be rewritten. The concepts are there and anyone can redevelop their own version of Unix if they wish. So the thing is, all the law court cases were just over a few lines of code in a bit of software that it had the words "copyright Solaris", "copyright AT&T" or something like that. Very blurred at the moment. It's really very simple, a very simple concepts and you wouldn't believe how simple the concepts could be: Files, Processes Permissions and Users as a file. So even hardware devices such as a mouse is a special file in a directory called "dev" in a a special file called "mouse". So as far as Unix is concerned it's reading and writing files of some kind. So you can incorporate new technologies like we didn't have "Flash" for example in the past, or video cameras and things like that. They are simply files. The other big benefit is Unix is very portable because it's not tied to any particular language like C, it's not tied to any particular CPU so we don't need to worry about it. We can actually re-compile for x86, we can recompile for other things like, for example, ARM which is used by the the processor in iPhones for example. So it's the same technologies. Anything new that comes, we can redevelop it.  No problems - just re-compile it. It's mostly free - not always, but mostly. There's been free versions since 1994 - Linux and FreeBSD. The good thing it was developed to run on cheap PCs Intel based. They start off as the the pentium computers all the way up to the latest core systems. All works fine So you can dump Windows and install your own version of Linux if you wished. It's very efficient. A really good thing about efficiencies is it's small and simple, fast and stable. For example, Linuxgym.  That system has been running for probably about two or three years without booting at all. A lot of core system routers, for example, haven't been booted at all since they first started up. Literally for decades some cases so it's really really stable. It's also designed for security, from the ground up You have owners, you have security permissions so it's quite hard to make viruses for Unix. It's becoming possible now, people find flaws in the system but from the ground up its always been more stable than Windows. It's also a set of tools approach: we make things small, and build up.  Very simple commands, we add commands together, we get more complex commands. You can pipe output from one command to another to make a complex tools. You can use I/O re-direction the less than (&lt;), pipes symbol, the greater than ( ), you can make your own commands by scripting (you'll do that in Linuxgym chapters 6 and 7). So at UTS we use 2 versions of  Linux - UNIX - my apologies- Solaris written by a company called Sun (now owned by a company called Oracle), and we run a commercial one version of Linux called Red Hat Enterprise Linux. You can run that it's available open source from Sentos.  Just beware there's different things you can do but we used a commercial one because we like to have it all supported on our hardware.  Linuxgym, by the way, is based on Debian. It's actually running Debian 4, an ancient version of Debian but, still, it's based on an old distro. So, an interesting introduction. If you can have some time to try this exercise, log on to rerun - use ssh. Notice its userid is your alphabetic eg. minus CHW. Don't log on with your numeric userid. Don't do that. Try a few things like, again I mention the word LS. Try to look at the root directory: very different structure from Linux but the thing is you'll understand the concepts at the high level and that makes it so easy to use. I hope you have enjoyed this short history of Linux.  We'll go onto other topics shortly. 