 the Cloud Foundry foundation is our sponsors here for our podcast from the cloud foundry someone in Santa Clara California our discussion the path emerging as organizations move beyond the confusion of disruption and take the journey to transformation will explore the new concepts of multi-cloud and how it relates to open source app development and management at scale clap foundry gives companies the speed simplicity and control they need to develop and deploy applications faster and easier learn more about cloud foundry at Cloud Foundry or Lee calcote here with the new stack we're happy cloud foundry summit I'm joined by a handful of very interesting individuals both from Dinah trace and from pivotal Casey and Cornelia alois and Michael Lewis I've been practicing your name from yesterday so I I feel like I've conquered that Cornelia is uh I I think I'm okay I'm spot on but but I thought we'd just go around the table real quick and let the listeners get to know who you are and you know which organization you're with yeah I'm Casey West I'm principal technologist for cloud foundry at pivotal so I spend a lot of time with our customers and with the broader community trying to talk about platforms and DevOps and transformation and the entire ecosystem great and I am one of casey's colleagues my name is Cornelia Davis i work at pivotal i'm a senior director of technology there have been working with our very important engaging customers for the last three years on Cloud Foundry and am now starting to focus a great deal more in on Cloud Foundry + data so there's going to be a lot coming on the data side as well my name is Alice Maya I'm with the diner trace Innovation Lab and I'm technology day leach there for cloud and container technologies and right now I'm working closely with our customers and R&D on bringing monitoring to cloud foundry environment so I'm Mike villager I'm one of a Louis's colleagues at Donna trace so I used to be part of the product specialist group that was a technical overlay for the field sales engineering team and now I'm a part of strategic business development some focus pretty heavily on I'm cloud and DevOps related technologies no very good like I said just a very interesting mix of folks here this is this is fantastic um you know we've been I'm having a few podcast podcast today and we're talking a little bit about multi-cloud and that being kind of think part of the theme of the summit and so wanted to throw it out there to you guys about what that means both to either your your products your offerings your the services you offer but also just you know customers that you've engaged with and whether or not that's a that's a real thing or customers you're using multi-cloud is that part of the story with Cloud Foundry yeah I mean absolutely customers are using cloud foundry and in even greater numbers planning on using the multi club part of cloud foundry so we have in the canonical example for multi-cloud is in the e-commerce space where we want to burst out in the United States we have varied the very famous black friday and cyber monday where there is a great deal more load than you need the other 100 363 days out of the year and being able to burst out into a public cloud whereas maybe most of the time you're running on your in your private data center is an absolutely essential use case it turns out that e-commerce isn't the only industry many industries have their their big work their big workloads we have industries that have every monday they're closing out books from the weekend type of a thing so there's bursty workloads in every industry but then the other part of multi-cloud is being able to have ultimate flexibility the infrastructure really doesn't matter anymore when you're working with Cloud Foundry the focus is on the application and the value that the application brings to your consumer base and so multi-cloud allows you to say i can truly just ignore the infrastructure and focus on the application and if there's a better infrastructure five years from now either more cost competitive or more performant or a better feature set or better customer service I can make that change yeah businesses are able to make strategic decisions around not just cost but but the security from the perspective of having flexibility and choice because Cloud Foundry is an excellent interface where you don't have to care about the underlying infrastructure it's managed and automated for you you can make better choices about where you place your workloads and if you have several options available then you can make those choices based on cost or location or ultimately the security concerns that you may have around your data or your applications totally agree so for us we see we have a lot of customers using multiple clouds so in today's keynote there was like the guy talking mentioned that it don't really like the differentiation between private cloud and public cloud because cloud is everywhere it's just another command I was computer right and so what we see is like having customers around cloud foundry the build they are stacked on top of Cloud Foundry but they also have like another cloud foundry clustered another it will availability zone somewhere else and they also ran an open star cluster for something else so it always depends on their on the use case and the applications you want to build and you want to provide for your customers and so that's basically nothing really new but here at the cloud foundry summit it's I like the topic like like the overall topic of the summit is like multi-cloud because that's it what happens right now ah in practice yeah I like the whole idea of multi-cloud kind of almost as an alternative terminology for hybrid cloud rank is once again you know why why really differentiate between which one it is especially when you when you see the trends and the is providers where you know let's look at Microsoft there's going to be all that convergence from an is perspective between you know Asher versus what's on prem right it's going to be literally the exact same thing right so you're going to have these past platforms that are running on top of six different I as platforms I'm personally have PCF environments you know running locally running in telco clouds right knee ec2 running an azure I mean it's it's it's all over the place and when you have one common experience between all of them one common feature set one common API points that the value there is astronomical clap under users are in a particularly privileged position where the automation is already completed for you organizations that don't have something like Cloud Foundry in place have to worry about automating all this infrastructure and attempting to place a consistent interface on top of various providers various and they've all got its own API and you know even when they try to implement each other's api's they don't always do it right and you know all sorts of shenanigans ensues so Mike I think you made an interesting point about kind of the connotation that some of these terms take online like hybrid versus multi in your mind you know has that has have used you know outside of you expressing that just now I have either customers or just folks that you engage with in general you come to that same type of a conclusion about so so I would say that that the distinction actually literally just popped into my head when I said it so that's it so there's not a whole lot of thought behind that so I should be brutally honest there but you know from a customer perspective I work a lot with our customers in the field right and in having a multi / hybrid cloud environment is something that everybody is doing simply to protect themselves so that they don't have locket you know so I mean it it completely is it's completely sensical to have that whole I a slayer abstracted out so abstraction is part of that Canada's promises for how you how you get to multi-cloud but that is his promise to sort of you know avoiding vendor lock-in the case you were talking about that the portability as well of workloads and you know even policy and governance is sort of cloud brokering or some other concepts that can come to play as people go to figure out where they want to put their apps in their workloads how much you know just understanding that that pivotal has been for a long time helping people get to you no boundary and just consulting engagements at large different patterns that you guys is seen with with respect to the types of organizations are the types of applications that that leverage a multi-cloud approach that's a good question my experience is that neighbor customers almost regardless of their industry and having very consistent patterns amongst themselves so you end up talking to a company in financial services and then you go and you talk to a government organization and while the technology the terminology for regulations or specific security constraints tend to bury my industry a lot of the times the patterns end up being relatively consistent across these industries and it's interesting to be able to go in there and say well you're not alone a lot of folks have problems that present themselves in a very similar way literally every customer that I speak to at one point in the conversation says well you need to understand there's something unique about our company and then they go on and they say we have a culture or we have this kind of process in place and I always smiling not my head and say every single one of the customers I talk talk talk to have that exact same use case have that exact same pain point absolutely and and some applications lend themselves to running on the cloud and in the way the Condrey works best in some don't so you walk into a conversation say with a mutual fund trading company so I spent some time with the company a few months back and you know at some point somebody stopped me dead in my tracks and said have you ever run a trading system before and the answer personally is no I have not I would not do that on day one on Cloud Foundry either but well that is at the core of your business and it slightly optimized you probably have a great deal of software around that core business that can leverage Cloud Foundry be run well in a cloud native way and of course they had no choice but to agree because that's another consistent pattern yeah Emily and what's and those kind of represent two extremes which is to say a trading platform maybe don't put that on Cloud Foundry right away but all the new stuff that you're building around it you do but the reality is that there's a lot of workloads that can move over into a cloud foundry environment with some change perhaps and so one of the misconceptions sometimes is that Cloud Foundry is just for net new green field applications in it absolutely is not and we have many many customers who are taking some of their existing workloads again maybe not the trading application to start but they're taking existing workloads and they're bringing it over onto the platform because the platform isn't just for developers it's not just to help the developer of noon the new application there's a tremendous set of operational benefits that come out of it in addition to multi-cloud there's the ability to do monitoring across an application across it a heterogeneous infrastructure or a very very distributed infrastructure and so the operational benefits are just as great and so there is value in taking existing applications that are running on maybe more traditional server-based infrastructures and adding that abstraction layer in between which affords you all of those other capabilities like monitoring that's right and you get consistent operational characteristics when you're running your applications on Cloud Foundry whereas in bespoke infrastructure and disposable spoke configuration management of your production environment you tend to see inconsistencies and a difficulty to understand how things work I suspect that Dinah Tracy's this a lot with the customers that you work with too yep so you know so a lot of the patterns that I see in terms of migration are art I personally am not seeing a lot of like wholesale lift and shift of ven tional were close but what I'm seeing literally more often than anything else is the carving up of existing monoliths and then starting to transition those monoliths into 12 factor applications and they're doing that piece by piece yep right so they're not taking the whole thing and doing it all at once they're taking a certain subcomponent you know an example would be something like a reCAPTCHA right on a banking application you're not going to take your bank's entire mobile web platform or something like that and my great that the cloud foundry in a day right but you can take out certain pieces and start to move those over and then it's important to understand the ramifications of that change when that's happening so that you have you know that end-to-end view of that transformational aspect of what's happening to ensure that this leap of faith that you've taken to pursue a more modern development and deployment methodology to ensure that that's not negatively impacting your musicals you guys at nine a trade so probably in a fairly unique position to be able to really have some insights on just you know on how people are your where applications are running in their enterprise infrastructure versus and other data centers public clouds and things just you guys from an APM an application performance management perspective have got just traceability across all of them any interesting patterns that you guys have seen in terms of you know on that multi-cloud story that we were talking about so so if you Ella Neese is about to open his mouth but I do want to i want to lay one thing on the table because I was actually talking about this at lunch today so you talked about the unique value of something like a like an industry conference like this is the unique conversations that you have when you're when you're sitting around you know eating a burrito bowl at lunch so I was talking to a couple of folks from el Toro stand IBM and and one of the things that I laid on the table that I talked about is here's a pattern that I've seen is got a custom you know you got a customer with a with a cloud application running in the in the public cloud it's a mobile app it's the app stack in the public cloud then transitions it the same transaction mind you transitions into the private data center and then eventually hits the mainframe all in the same transaction we see that align so literally you're talking about an application on your iPhone the most modern modern technology hitting a mainframe under the covers which you know I don't want to say not the most modern of modern technologies but me it kind of is you know so it's really you know so when you start talking about you know multi hybrid environments like I mean it really runs the gamut especially when you get into these long-standing enterprises that are pursuing a transition in a phased approach and they're not just like diving it right to passive you know one of the things that I just noticed is that we've got three speakers I'm sitting around the table here and I guess I'm just dying to know you know some of the topics that you guys are are talking about I gave a talk earlier this afternoon on build the bill pack model of building and managing containers for cloud foundry it really allows you to do heterogeneous architectures on cod boundary in a really painless way we talked earlier about having consistent operational characteristics for your applications and that's what we really want regardless of the environment framework language you choose it's also important not to have walk-in into any specific little where stack or any specific technology decision that you made for one portion of your application architecture when you may have many and you may be able to use the right tool for the job Condrey allows you to manage that so again to cornelius point not just about the developer experience but very much about the operator experience it used to be that you bake a golden image for a specific application stack and then you live with that for the rest of your life because to bake a new ones and figure out the operational characteristics of ruby or net or something else is a whole new world but that world is almost entirely automate for you now in cloud foundry where you don't have to have middleware lock in you can have portable applications you can have consistently built containers run on the elastic runtime and that's what cloud founder gives you so that was my tub yeah well my talk was a little bit different and thank you for the opportunity to talk about that a little bit so I spoke this afternoon one of the things that the cloud foundry foundation is very passionate about is making sure that it's a diverse and inclusive and open community and so I spoke at the diversity lunch we have had diversity events at the cloud foundry summit for like this was the fourth one and so I did a talk on kind of a personal story you might have noticed if you're listening that I am a woman and women are very underrepresented in technology in especially I am a technologist I still cut code and so we are an underrepresented group and so I brought a personal story and in that personal story really just kind of challenges us all to look at our own internal implicit biases and study those and and really be part of making a change in the cloud foundry Foundation has made that commitment from an organizational perspective and then we as individuals I'm asking and challenging each of us as individuals to make that personal commitment as well fantastic the gauntlet has been put up the challenges is out there okay yeah very good very good so so my talk was on performance metrics driven see I CD in a nutshell right the nutshell part is because it was a lightning talk so I only had five wild and crazy minutes up on stage to deliver what it was that I was talking about but one of the things that donnot race that we like to talk about a lot is we've all got this great idea of pipelines right so we have our continuous integration pipeline and developer cuts code and actually commits it into their source control and then a build happens and there's unit tests and if that release passes then it moves on down the pipeline and graphs gets automatically deployed into a later stage in the pipeline so one of our ideas in kind of our thought is that if you're not collecting some additional metrics in that unit test phase you're actually wasting some of the effort that you've done to commit those unit tests and you're possibly wasting further engineering time if you move bad code throughout the pipeline that while it might be functionally sound it might have architectural or performance regressions so the whole idea then is to use an APM platform to do things like you know count the number of sequel calls that are occurring to fulfill that particular unit test you know one of the things that we found in talking to our customers is that even as we move to microservices some of the same problem patterns still occur right so the n plus one problem that has plagued us for a very long time now that's happening with applications that are making micro service calls right so this the same problem patterns continually rear their ugly head and it behooves us to try and kind of capture that information earlier on in the life cycle so that we don't have to waste our time you know maybe deploying that to the staging environment and running a two-hour-long performance test when you know it's not going to work you know I can only imagine that that problem just gets gets worse with with the number of services that come out and exactly exactly you know so it's it's it's something that's near and dear to my heart personally because I you know been in the performance engineering space for a very long time and I was that an organization that was pursuing an agile transformation right and with that agile transformation I went from having you know one release that I had to execute performance tests on you know every every couple of weeks or so that now I have 17 different agile teams giving me a bill and there's no way that you can get through it all number one so I was a huge bottleneck and then number two so you know I've literally probably wasted six to eight weeks of my life you know cumulatively not all at once but over all this time I probably wasted 68 months of my life I'm builds that it should have never left to developers workstation what's interesting to me about that is that you said you said something about being the bottleneck so as you as they've gone through that agile transformation or kind of looking forward into the way that people will work increasingly moving forward how did you eliminate that puddle neck so the whole idea then is actually to scale out the effort right to make more metrics and more tooling available to the other the other you know team members right so instead of me being the single source of all that information and all that tooling some of which was expensive the idea was that to make sure that you were using your your your tool budget in a in a meaningful way so this was actually once again this is this is from before my time at Diamond trace when I when I was a customer to use an APM platform to provide those metrics and then that having those metrics eliminates a lot of the test scenarios that you might have had to execute in the past but I would write I wonder also is it an element of enabling the developer rather than somebody being the person who you've got to pass this through once the developer is completed with their work that is exactly correct yes self service enabling the developer so that they can get the APM capabilities that they need during the development cycle yep that is that is you know hitting the proverbial nail on the head because you know having access to that tooling kind of enables that the true agile idea of you know in an agile team this person isn't a tester this person isn't a performance engineer much to their chagrin this person isn't an architect right everybody's wearing the same hat you know what you know so the whole idea is to this scale those efforts out and provide the tooling everybody so that they can self service whether it's agile transformation or trying to decompose monoliths into microservices visibility and access to data and information is absolutely critical if you don't have it you're really flying blind you know one of the ideas of decomposing an application along its natural seems and AP is and contracts from a large monolithic system to a micro services is the idea that you start to get some of that visibility but if you don't put the work in and have the tools in place to achieve it you're still just as blind and not rather than being blind one large system you're blinded maybe 500 very tiny systems and that's easily as bad so things like distributed chasing are a must-have you need to have an idea of where your requests go being able to model the network interactions between your biker services and have this ability there is critical too so it's a very interesting thought I'm just that you know I know at least we talked a little bit about the notion of tracing before and be kind of watching those transactions particularly in a micro services framework and I go from n den I think you were talking about that happening up starting on the iPhone a mobile phone all the way through I was at ausa con last week and sat through a session on open zip zip caen along with spiga there was actually another project there it wasn't being talked about but we had called pinpoint and new Casey I don't you know just as you guys have taken customers along some of those transformations are they're kind of go to tooling that you found that really works well and sort of helping you neither helping find some of those seams and break up those contracts or absolutely so on top of cloud foundry I was recently asked to give a tutorial and a toscana on delivering microservices with cloud foundry and spring so we spend a lot of time at Vivid all with companies who are building on the Java stack and so because we make spring we spend a lot of time with that as well and I was asked the question on top of the core capabilities of the platform what else would you say should be there in order to really enable developers and specifically within the context of microservices I said you need distributed tracing you need circuit breaker pattern and you need a good service discovery tool so within the netflix open-source stack which is part of spring cloud services which you can one-click install on pivotal you've got all of those capabilities available to you as tools in your toolbox in order to build out a solid microservices strategy but i think if you don't have these things you know to to your point Michael before if you visibility then you're flying blind and you cannot make good strategic decisions one of the things I like now is that as of this week we can one-click install diner trace integrations with your application as well can you explain that Michael how how does how does that work what the how is Dinah Tracy so yes so that's a that's a great question so so you know the both the doctor asap mine as well as the dentures rucks it products are available in the build packs right so we along with you know our customers are going to utilize those services kind of the same way you're utilizing the cloud foundry in the first place right so we've created a pit bull off on your tile that pivotal column cloud foundry tile deploys a service broker to make the to make the environment aware of Dinah trace related configuration information you know where we're endpoints are you know credentials all that kind of stuff the same way that a lot of other service workers operate and then what happens is if you have an application you can consume a service and bind that service to the application and when you do that the platform handles the installation and configuration of those APM ages you know something that you used to have to do by hand is now handled by the class so it's it's it's actually it's it it's almost magical how well everything kind of comes together at that point because within like three commands you can basically deploy an application deploy your APM agent and then have that visibility in your APM platform in actually you know looking at that information either the Dinah trace at monitor the rucks our product and so that feels to me like it's a key enabler to what we were talking about a moment ago which is developer selfless self service what's enablement since everybody's all sir that's right i mean is that I yourself service is also applicable to everybody that's due to see I'm pushing pride as well developers and operators you have a great point when people get access to this it's like getting in a time machine and going four years into the future on your automation projects sounds magical like just like Michael Cassetti oh well that's fantastic I just I really appreciate you guys joining us today it's been a good conversation they were about halfway through I think that the cloud foundry summit so hopefully you guys have a good rest of the the show thanks for the opportunity thank you guys thanks thank you cheers the cloud foundry foundation is our sponsors here for our podcast from the cloud foundry someone in Santa Clara California our discussion the path emerging as organizations move beyond the confusion of disruption and take the journey to transformation will explore the new concepts of multi-cloud and how it relates to open source app development and management at scale clat foundry gives companies the speed simplicity and control they need to develop and deploy applications faster and easier learn more about cloud foundry at Cloud Foundry org 