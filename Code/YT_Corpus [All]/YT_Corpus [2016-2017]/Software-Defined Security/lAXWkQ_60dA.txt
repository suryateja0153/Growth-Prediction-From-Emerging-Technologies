 Shalom and welcome once again to a checkpoint joining bytes checkpoint training bytes is where we bring you advanced training on different products features and blades my name is Manuel King I will be an instructor in this module we'll be looking at core excel and this is part 2 of core excel technologies ok so let's get started let's take a look at the agenda of this module the first thing we're going to do is discuss the open performance architecture we'll discuss what these architectures are and then we'll discuss core Excel secure Excel in cluster excel and how to optimize and improve performance and security by using these open performance architectures and then we'll discuss the processing path how a packet flows has its being processed by the different architectures and also we'll look at some best practices some best practices when combining these different architectures are breaking up these different architectures and also we'll discuss a user space processes how these user space processes communicate to the different architectures and then we'll look at some limitations like VoIP limitations and also we'll look at VPN limitations and we'll discuss how to optimize and enhance and work around these limitations let's talk about core excel core excel is part of the open performance architecture open performance architecture is a framework of technologies designed to accelerate and optimize security performance and these technologies uses the secure Excel cluster excel and also core excel technologies and so you can use these three technologies independently or combine the three technologies and make them work together to gain advantage of each technologies for optimal security and performance so let's discuss the three components these three components are as we know a secure Excel secure Excel could be either a software acceleration done at the driver lab or a hardware acceleration done on the ADP cards or just sand cards and secure Excel we can have packet rate acceleration which is also called throughput acceleration and we can also have acceleration for a connection rate acceleration also commonly called template acceleration but as you know certain traffic cannot be accelerated and so we bring core excel into the picture core excel as mentioned before it uses parallel security gateway kernels running in instances in each instance is running on its own dedicated core and so we're leveraging the modern processor architectures and we can take advantage of what we call medium path which I'll explain coming up in a few slides and so we can combine both secure Excel and core excel technologies in addition with cluster excel technologies that allows us to do load sharing in an active active clusters or a high availability solution for security gateway resilience and so let's review what we discussed on the previous video in a previous video of core excel we talked about firewall instance the firewall instant can only run on the specific CPU you cannot have multiple firewall instances and that was because only one CPU could actually process data at one time and this was due to a monolithic lock that was needed to preserve and protect data structures and so a multi-core system platform actually behaved like a single core system so in some instances that the customer does not have multi-core systems he can still get acceleration by using performance back or secure Excel secure Excel comes in two models we have the software model and we also have a hardware model in a software model are actually drivers that you install at that kernel level and at the hardware level we have two cards we have the original ADP cards the original ADP cards came from the Nokia purchase and you can install ADP cards on the IP appliances and we now have the newer cards which are called the Sam cards secure acceleration modules and the secure acceleration modules you can install these on the newer 2012 appliances so depending on the traffic profile of the customer depending on the certain traffic the traffic could be accelerated performance pack level or as you know some traffic cannot be accelerated at the secure Excel level and so those traffic needs to go to the firewall for processing now in some environments depending on the customers traffic profile a lot of traffic will might need to go to the firewall for processing and so in those cases the customer would be best served if he purchase an appliance that could support multi-core systems and then in addition he will purchase core excel and so you'll have multiple firewall instances and in addition with multiple cores you can combine core excel with secure excel so the traffic could be accelerated at the sector excel level a certain traffic will be accelerated at second Excel level and other traffic will need to go to the firewall for processing so now let's recap what we've discussed so far in this example here I have four cores the dispatcher is going to be running on one specific core and we have three firewall workers and these are what we call firewall instances and these instances will be running under each independent course and each firewall is actually an independent firewall running the same policy and so the dispatcher is installed on one core that traffic that coming into the Nick's will be assigned to the same core for processing as the core that's running the dispatcher now if we enable secure Excel and add secure Excel on top of core Excel secure Excel will run on the same core that's running the dispatcher so the dispatcher and secure Excel Performance Pack will run on the same exact same core and so this is core is what we call the snd secure Network dispatcher to secure Network dispatcher is the dispatcher plus it's doing security for secure Excel so the secure network dispatcher maintains a few tables at the dispatch level it maintains the global dispatch table at the secure Excel level it maintains the secure Excel connection tables and a secure Excel templates tables plus other tables like the drop tables of templates tables and so the secure network dispatcher must forward all packets of a connection to the instance which handle the first packet and this is important not only for functionality but also for performance so the secure network dispatcher is responsible for three things the first thing that it's responsible for its processing traffic that comes from the network interface card so all traffic coming to the interface cards need to be processed by the secure no dispatcher the second thing that it needs to do is secure accelerated packets and so if a packet needs to be accelerated at the performance pack level you will be accelerated by secure note dispatcher and the third thing that secure network dispatcher does is distribute non accelerated packets amongst the kernel instances so it must distribute all non accelerated packets amongst the firewall instances so let's take a look at another example here to help clarify secure network dispatcher let's assume that the secure network dispatcher is assigned to core zero and there's a lot of traffic coming in to eth0 and a lot of traffic leaving eth1 and so we have high CPU on core zero so one thing we could do is change the affinity of core one instead of having core one assigned to firewall work or two we can change it to also run a dispatcher so now that the secured network dispatcher is actually running on two cores and so because we have two cores we no longer have high CPU issues for inbound packets and any traffic that needs to leave on let's say that traffic needs to leave on eth1 any traffic that needs to leave on eth1 could be processed by either core core zero or core one this is what we call automatic affinity automatic affinity means that traffic could be processed by either core automatically and so every 60 seconds and runs an algorithm and checks the load on the cores and redistributes the load depending on how busy they are another point I want to make sense I did not make it already is that the firewall instance and the secure Network dispatch instance actually should be running on two separate cores they should not run on the same core and this is important to note because when you set up CPU infinity or Simha finiti you don't want to mix them for example the CPU infinity when you're setting up viral instance you want to be sure that the firewall instance is actually running on the core that's not running secured our dispatcher or if you're setting up process affinity you want be sure that the process of Finity is running on its own core and not a core that's shared with the dispatcher but the reverse is true when you're setting up sim affinity when you're setting up sim affinity for interfaces you want to be sure that the interface affinity is assigned to a core that's running the dispatcher and not to a core that's running the firewall instance or process instance there is one exception to this rule an exception is if you're using two cores appliance if you have an appliance with only two cores then it's not ideal to have the dispatcher running on one core and the firewall worker running on the another cord I mean you could do it but it would not be efficient because you might run into issues where traffic needs to be accelerated and so the core Excel might be the bottleneck or traffic might not need to be accelerated and so traffic will need to go to the firewall for processing a better or more ideal solution is to actually share the cores so core zero is shared with 500 workers zero and also the secure Network dispatcher and core one is also being shared what firewall worker instance one and also the secure Network dispatcher let's take another example here of a packet as it comes into eth0 eth0 needs to interrupt the CPU assume that we have automatic affinity enabled it's going to interrupt the least utilized core assume that core one is the least utilized core so eth0 is going to be processed by core one the packet arrives at the dispatcher the dispatcher also uses core one for processing it looks in the dispatch table that connection is not known so it forwards it off to the firewall for processing the firewall needs to process that connection again it uses the same core core one it assumed that the packet was accepted forwarded back down to the dispatcher up-to-date to dispatch table about that connection then the packet is going to leave let's say on ETH one eth1 again it interrupts core one process that connection and forwards it on its way so let's talk about best practices when we talk about kernel instances kernel instances are also known as firewall instances so if you have a system with one core core Excel is disabled means you have one core and one call is running the firewall but you can't enable core excel if you have two cores then two cores are actually enabled for core excel and so both of these cores are actually using firewall instances on both cards and also dispatching on both cores if you have four core system then ideally you would use three cores for kernel instances and one core is left over for the secured network dispatcher if you have a cores you want to use six cores for the firewall kernel instances and two cores are left over for the secure Network dispatcher and if you have a system that has more than eight cores the number of cores do you want to use for kernel instances is the number of cores in total that you have minus 4 these are the equal to the firewall instances and minus 4 is for the secure Network dispatching now let's talk about cluster Excel combined with core excel if you're using cluster in conjunction with core excel you need to have the same amount of cores on both cluster members so if one member has 4 cores the other member should also have 4 cores now it is possible that physically one member has more cores like let's say this member has 8 cores and another member has 4 cores that would also work as long as the core excel license only allows 4 cores on this system and the core excel license allows 4 cores on this system and so it physically they might have different course but license wise they have the same amount of cores 4 on each side now I've seen the reverse of this a situation where the customer had the same amount of course but license wise he only had a license here for 2 cores and the license on the other system for 4 cores even though physically they have the same amount of course license wise they don't match and so you can run into issues and the reason is that each instance firewall instance 0 has to sink with firewall instance 0 on the member cluster and firewall instance one has to sync with that member firewall instance one firewall two instance syncs with firewall two instance on that other members and fire all three will sink with firewall three on that other members cluster now just to clarify something there's only one sink interface both sink interfaces are connected to each members either a crossover cable or through a switch but that firewall instances are actually being synced through the sink Network one is being synced through the sink Network and firewall three is being synced over the same sink Network so let's analyze a cluster excel with core excel a little bit further under the hood let's say we have a packet that came in and a packet came in to member a members a dispatcher is going to look in his local dispatch table to see if that connection is known it does not know about this connection so he needs to make a decision it makes a an arbitrary decision to be frank with you it uses more than an arbitrary decision it actually uses the four topple information for top of information that it uses is the source IP address the destination IP address it doesn't use the source port but it uses that destination port and also uses the IP protocol IP protocol number like six for TCP 17 for UDP and one for ICMP keeps track of this information makes a decision where to assign this packet and it's going to assign this packet let's say to firewall to instance running on memory firewall to instance is going to process that connection look in the rule base to see if it's a rule allowing it and if the rule allows it once it updates is local connection table it's also going to update the global connection table and process that connection and forward it on its way and let's take a look at this it actually is going to sync what member be firewall instance to a number a is going to sync what firewall instance to on member be so firewall to syncs with firewall to on member B look what happens on member B member B is going to update its connection table it doesn't need to process that connection it just updates it in its kernel connection table and at the same time it also will update its global connection table so now both members know about this connection because they both have it in their global connection table and also have it in their local connection table so now take a look at this the packet comes in this time a comes into member be member B is going to be the member processing that connection at the dispatcher receives that packet it looks in the dispatch table to see if that connection is known and this time it is known because it was originally processed by firewall worker too so the dispatcher is going to assign it to firewall worker to fire worker to is going to look in its local connection table to see if that connection is there and it is there so it's going to need to process that connection and forward it on its way so now let's do this again and this time we're going to use cluster Excel core excel and secure Excel this time we've added performance pack at the secure Excel level and let's assume a packet comes in and the packet comes into memory so just the first time this connection comes in and so it's not going to be accelerated at performance pack so it's going to go to the dispatcher the dispatcher is going to make a decision this is going to looking dispatch table connection is not there so again it forwards it to one of the firewall instances firewall file instance zero it's going to process that connection and then update it in its connection table at the same time it's going to update the dispatcher about that connection plus if this connection was accelerated it will update it in the secure Excel table now as potentially this connection can also be templated it so we'll create a template for it so when member a firewall instance zero updates it in its local connection table it's going to sync that with member B's firewall instance zero and it updates it in its local connection table the local connection table updates that global dispatch table and the local connection table also creates a secure Excel entry and the templates entry so all subsequent packets will be accelerated through the secure Excel table on member B or if they go to member a they'll be accelerated as secure Excel table now let's assume that a packet comes in and this time the packet comes into member B this is a different packet but this packet actually matches the templates table so the templates table is going to create an entry and it updates it in a secure Excel table now the secure Excel tables do not sync with each other so how are the secret of self table on member ayk going to know about that connection that was templated on be well if you recall on smart dashboard there's an option to start synchronizing connection after a certain amount of seconds the default is 30 seconds so only after 30 seconds will the secure Excel table update the firewall local table and the firewall local table will update the global dispatch table and member be firewall instance 0 will then sync that connection with firewall instance 0 on member a local dispatch table and the local dispatch table will update the global dispatch table and will also update the secure Excel table and so all subsequent packets could be accelerated at members a secure Excel table or accelerated through members B secure Excel table now one other point I want to make is before member B synchronizes the connections with number a in a secure cell table those entries won't be here obviously what happens if the packet arrives here before member B has a chance to synchronize with members a now this connection won't be in a secure Excel table and so if you go to the dispatch table again it's not a dispatch table the dispatcher is going to need to assign it to a firewall instance the firewall instance is going to inspect the packet and it's going to see that the packet is out of state and drop that packet and so when you're setting up clustering you might want to use high availability to be sure that the connection is always assigned to the same machine or if you use a load sharing load balancing solution you want to be sure that the connection is either sticky or that you decrease the synchronization clustering time out so the next thing I want to talk about is what we call firewall path firewall path means let's say that the packet came in the packet came in on eth0 it's going to go to secure Excel to see if that packet is known it is not known so you goes to the dispatcher let's see if that packet is known again it's not known he goes all the way to the firewall the firewall is going to process that connection and this is what we call firewall path the packet had to go all the way from the interface card all the way up to the firewall for processing so this is called the firewall path we can also call it slow path it's slow path because it has to go to the firewall for processing and so after the fire will process that connection it's updated in the dispatch table and it's also going to update it in a secure cell table and for that traffic through now because now it's in a secure Excel table any connections coming back let's say this is a this was originally a syn packet now this is going to be the syn ACK packet that's coming back for the reply and it's going to find a match in a secure Excel table and so when it finds a match in a secure Excel table this is what we call acceleration path so now we have the packet is being accelerated and not going to the firewall for firewall path and so when it's accelerated we also call this fast path because it's fast because it's being accelerated at the secure Excel level let's assume that the packet is fast path so the packet comes in and it's going to be accelerated at the secure Excel level but we need to do deeper inspection we can't just accelerate it because acceleration is just going to look at the source IP address destination and the 5-tuple and for that traffic through this secure Excel but we need to go deeper down at the packet level and inspect that packet maybe this is HTTP connection and we've enabled an IPS some HTTP signatures and so we need to go deeper down at the packet level for inspection and so checkpoint has come up with a solution called medium path so a medium path refers that the packet is found in the secure Excel table so the packet is found a secure Excel table but we can't just accelerate it because we need to do deeper inspection and so what we do is we send the packet up towards the firewall but it does not need to be inspected by the firewall because the firewall has already looked in the rule based and allowed that connection that's why it was here in the secure Excel Performance Pack level and so we just need to do deeper inspection and so some of the blades like the IPS blade or the app control blade will be running on the same core that is running on the firewall and so the packet comes in it doesn't need to go to the firewall it's just going to be inspected at the IPS level or inspected at the app control level and so this is what we call median path and so a packet that's process by median path is being processed by the P a cell pass a streaming layer the passive streaming layer actually collects all the packets for deeper inspection so the packet streaming layer we also call that that pxl for packet acceleration and so pass a streaming layer or pxl layer is only available when you're running core excel if core excel is disabled then median path does not exist only when you have core excel with multiple cores can you run it in medium path and one other thing I want to leave you with as I mentioned already slow path is also called firewall path so slow path and firewall paths really means the same thing and I mentioned also that fast path and acceleration paths really meant the same thing and so she said the packet is being accelerated in acceleration path you're actually meaning it's being fast path it also if you're talking about medium path you can actually say pxl but in addition if you're running some diagnostics commands you might find information relating to F to F F to F refers to forward to the firewall forward to the firewall is referring to firewall paths or slow path you might also see f2p FTP is referring to forward to the passive streaming letter so forwarding to the past the streaming letter is the same thing as medium path or pxl the next thing I want to talk about is some of the best practices with regarding to secure Excel core excel and cluster excel should you use always use these three products together in some cases you might have all three products running together in some cases you might only want to have one or two of these products depending on your traffic patterns and traffic profile of your network in some cases secure Excel has limitations core excel has some limitations and cluster excel have limitations with regards to different packets different traffic profiles for example a lot of traffic cannot be accelerated at core excel and so you might not need to have a lot of core excel instances you might want to have more secure excel instances or vice-versa there might be a situation where you might need to change the affinity of let's say this this core and have two cores assigned to the security Network dispatching and so there are certain commands which I will show you later that will help you identify high CPU utilization on your appliance so as an example maybe your secure network dispatcher has a lot of a high CPU so what you could do is have more cores for the security Network dispatcher so in this case I actually have four cores that are being used for dispatching and that could be because I have a lot of traffic that needs to be accelerated traffic needs to be accelerated maybe I have HTTP traffic TCP traffic UDP traffic a lot of that kind of traffic on my network that could be accelerated and can also be templated and so I want to accelerate this traffic over secure Excel and so I might need less CPUs for my firewall instances but the reverse might be true maybe I don't have a lot of traffic that needs to be accelerated so some traffic will be accelerated through secure Excel but most of my traffic needs to be either firewall inspected and it has to go to the firewall for firewall to inspect it or it needs to go up to the passive streaming layer for maybe IPS inspection application control inspection or other deeper inspection so for example maybe I'm not using secure Excel and so if I'm not using secure Excel I don't need multiple cores to run secure Excel and so most traffic is going to be dispatched at one core and being dispatched to my firewall instances and going to my fire Linden TSA's either for firewall inspection or IPS inspection or maybe I have a cluster and a lot of my traffic is needs to be synced and so I might need an additional core to run this patching because these core is also doing the syncing in the cluster now so far I've only been talking about the kernel the kernel is where the firewall instances run firewall instance zero firewall instance 1 also where the dispatcher runs plus the secure Excel also runs at the kernel level either at the driver level or at the we're level and so so far I have not talked about the user space level above the kernel level is what we call the user space level and at the user space level this is where we have our firewall diamonds are FWD Damon or fwm Damon VPN Damon etc I have another diagram here to help us clarify this a little bit better and so all these Damon's do have to communicate to the file all instances fire one since zero and fire instance one now at the user space level we run a user space process called the fw worker 0f w worker zero is a process at the user space level that represents the firewall criminal instance at the kernel level and fw one worker is the firewall worker that represents the instance for file one instance and this is good because it helps us identify what user space processes are using a lot of CPU so if I look at the user space process maybe I use a top command or the vmstat command to identify what are the most utilized processes I can see that if the FW worker zero is actually the instance zero that's using a lot of CPU or not using a lot of CPU the same thing if I see multiple workers and worker one I can identify how busy the worker one is at the kernel level by looking at the user space level process called FW workers and one other thing I need to stress is that that user space processes are not replicated and so there's only one user space process and if those user space process needed to communicate to the kernel which kernel instance will those processes communicate to for example I want to see what the firewall version is FW space ver I hit enter which kernel instance is going to process that request well the default is always going to be processed by kernel instance 0 kernel instance 0 is going to process the the request and if need be firewall kernel instance 0 will also communicate to the other kernel instances make their requests to those kernel instances those kernel instances will provide information back to kernel instance 0 and then kern zero will provide the information back to the user space level let's take a look at another example let's say you want to view the firewall tables FW tab to view the firewall tables you type that at the shell the shell is going to request that information from the firewall worker zero instance firewall worker zero is going to make a request to all the other instances and then it's going to aggregate all the information and provide information back to your shell let's take another example let's say that you want to push the policy so you go and push the policy the FWD process needs to enforce that policy and push that policy down to the firewall instances and both instances or all instances need to enforce the same policy if the policy fails to install on any instance then all instances will revert back to the older policy and so only if the policy is successful to be installed on all kernel instances will this new policy be enforced and so another thing I want to point out is some limitations some limitations for example with VPN VPN state is perc tunnel and not just per connection and so per tunnel you might have a bunch of connections and so how is the dispatcher going to keep track of all these different connections that are established through one tunnel and so the solution is to keep all VPN traffic running on firewall instance zero fire olinson zero will have all the VPN traffic and all connections through the tunnel will have to go through this instance now that can lead to some performance issues obviously if you have a lot of VPN traffic all DP and traffic will be assigned to instance zero and sometimes you have other instances that are underutilized also another issue that sometimes you might encounter is if you have a lot of voice over IP traffic voice over be traffic also has to be assigned to the same instance kernel instance zero because voice over be traffic has different sessions like the signal session and also the media session and it's a very complex protocol because you also have in addition to the different sessions you also have the Berndt streams like your audio stream and also your video stream and these streams and in sessions and connections need to be assigned to the exact same core because if it was assigned to different cores then you can run into issues where packets are getting dropped either out of state or latency issues but there is some good news there is a kernel parameter that you can change so that you can assign all the VPN traffic and VoIP traffic to kernel instance zero and distribute all other traffic to the different other kernel instances and in addition starting with our 7720 we do have a VPN fix for SSL traffic and so now you can distribute SSL traffic amongst the different firewall kernel instances and in future releases we're also coming out with a fix for apes ech VPNs where we can distribute if SEC traffic amongst the kernel instances so okay so let's summarize what we discussed in this chapter first of all we looked at the open performance architecture these open performance architectures or the secure XL core excel and cluster excel technologies and these components can work together combined together or separately to improve performance and enhance security also we talked about core excel and secure Excel and cluster Excel how these components work when they are merged with each other and also we talked about the processing path the processing path is where a packet has to go through all the way to the firewall for processing and this is what we call the firewall path the firewall path is also known as slow path slow path means that the packet has to go all the way down from the NIC card to the firewall for processing also we talked about fast path fast path is also called acceleration path and so fast path is where the packet gets accelerated through the secure Excel level and also we talked about medium path and for medium path the packet has to be accepted by secure Excel level but we need to do deeper inspection of the packet so we have to forward a traffic to the passive streaming layer where it assembles all the different packets that are outer sync once and assembles them in order for inspection and I also mentioned that file paths slow path is also known as forward to firewall fqf and the median path past the streaming Lehrer is also called f2p for for or to pass a streaming Lehrer and in some places you also call it P XL for passive acceleration and also we talked about some of the best practices now depending on your traffic pattern the traffic profile on your network depending if the traffic is being accelerated through firewall path you might need to have more cores being utilized for firewall instances or the packet might need to go through the secure Excel acceleration and so we talked about having more cores for the security network dispatching and also depending on the blades is that you've enabled like IPS blade application control blade you might need to have the packet go through median path for a deeper inspection after the packets have been assembled and we discussed how median path works in conjunction with that cores that are also processing the firewall traffic also we talked about user space processes and how user space processes need to communicate to the kernel using the firewall instance zero and firewall instance zero will then communicate with other firewall instances and aggregate the information and forward it back to the user space processes that needed and we also talked about the policy and how the policy needs to be pushed to all kernel instances and if any kernel instance fails then it reverts back to the previous policy and finally we talked about some of the limitations we talked about some of VPN limitations and also some avoid voice over IP limitations and we also talked about some parameters to make VPNs and voice over IP traffic being assigned to Carnall instance zero and other traffic will be assigned and distributed amongst all the rest of the course and that's about it those are the highlights of what we discussed in this chapter we'll see you next time bye for now Cheng boy we secure the future you 