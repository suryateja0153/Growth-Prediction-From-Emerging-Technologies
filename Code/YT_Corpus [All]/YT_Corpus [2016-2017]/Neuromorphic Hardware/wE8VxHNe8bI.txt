 hi I'm Caroline woo without Tara corporation here on the floor of milcom 2015 I'm here with my colleague been Esposito Ben can you tell me a little bit about what we're demoing here today yes we're going to demonstrate our synthetic aperture radar reference design synthetic aperture radar actually forms images from radar data set we're showing is a hardware acceleration of the global back projection algorithm global back projection algorithm is actually a global standard for demonstrating the golden standard rather for back projection it's very computational intensive and difficult to implement up until now okay can you tell me a little bit about what device holy place that's part of it today we actually have hard floating point in our area 10 20 nanometer s SOC FPGA in addition to the departed floating point we actually have a dual arm a9 processor inside so the combination of the ARM processor as well as the hard floating-point enabled us to do this type of acceleration in the FPGA then can you tell me about how this design was implemented yes we offer two different high-level development environments for this design the first target software engineers software engineers who are used to designing an open CL to standard parallel computer language that it's typically used to target a multi-core CPUs or GPUs we also have another tool called DSP builder advanced block set that's actually targeting DSP algorithm developers in either case opencl or DSP builder we automatically generate the HDL from these high-level tools thereby eliminating the need to write low level HDL constructs for these complex algorithm one last question can you talk about the backplane that's being demoed on this for today yeah so the back projection algorithm were demonstrating today is actually using the Gotcha data set from the RL airports research labs it actually is a by 12 but live 12 image set of successive radar data pulses the data is transferred from the host PC through the ARM processors into the back projection core the core is then processed the data form an image the image is then read out from a buffer back through the hose onto the display the design itself is actually programmable in terms of the number of columns as well as a number of cores per column this allows you to scale depending upon your need within a device or perhaps if you want to also spread across multiple Isis to actually increase the throughput in this design itself with the REO 10 arm as well as the hardened floating-point is actually enabling 16.2 billion back projections per second loading point or 255 million back projections per second for jewel rather inside the device what does I translate to that translates to about a 17 X power efficiency advantage over G use so with area 10s SOC fpga which includes our embedded ARM processor and hard floating-point by the most power efficient implementation of a back projection algorithm possible today well thank you so much Ben I'm Caroline whoo thank you for watching thank you 