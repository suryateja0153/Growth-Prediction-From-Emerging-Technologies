 the other co-founder of punch medications America automated Network device management but especially network configuration and for more management software and we're going to talk about the actual issues that you William chillin trying to drive devices in our loaded right so at the risk of stealing a book eps times really large numbers contribute i smear with responsibility for large numbers of anything that must be individually managed is a real pain he actually tone that down the original language was a lot worse if you want a large enterprise or a large network then what you're looking at all the time are a lot of individual things you need to go to touch it's really time consuming that's really irritating and it gives you a lot of chances for people to fumble finger gives you a lot of chances to find out that the real environment in the world that doesn't resemble what you thought it was and in fact a lot of your operational time is spent going determining what am i actually looking out on ground yet we've enjoyed talking with all the providers and all the enterprise we deal with either they have a lot of different things whether that different constituencies we're looking for different services from them whether that different pieces of equipment including the three from the five different vendors have gone out of business over the last decade do they have a whole lot of that if they're still supporting from dealing with a lot of different staffing issues the previous panel talked about and also being exposed to a lot of attack we eat a lot of that security so we look in a lot of our time looking at the security implications of operational models a lot more than they might the other two additional challenges they're sort of orthogonal to just the environment running a large network or high employee turnover and the fact that you've got a lot more folks in there then you have folks who really understand be put that they're working on all the time so you've got to be able to deal with a lot of good communication help good communication inside your organization let's take a look at the normal sort of network you're looking at on this may be a familiar sort of a picture that your core somewhere the rest of the internet is coming off of it to a certain point and then regional pops and observation knocks control knots and you know customers are eventually strung out on the other side of this pomp we drill into that a little bit we see that while conceptually we think that they're being a single router between the core land and original top is actually a lot of equipment tied up there you start out with your core routers in virtually a reasonable case those will be heavily paralyzed you've got great you've got additional switch fabric sitting there for load balancing and to provide additional services inside you're not perhaps providing some additional layer to services and then you've got access routers means the access routers we're thinking things you put a lot of cards and really big cables from the telephone cables and somewhere way out there are customers and so we die agnostic process in your configuration process are looking at all of these devices possibly including ones all the way out of customer cramp and trying to orchestrate that this screams for automation you have an automation system the points i want to show you here are specifically we use plug-in logic to do device manipulation in the public space you see something very similar although it was bogging Lee implemented with rancid the tools have been around for a long time everybody knows about tickle expect except for some unfortunate circumstances i actually found people who was doing manual pearl device management recently they were very frightening and the rest of these slides are going to be about how you actually make tickle expect work for you to control device as well where the gotchas so their hands are basic problems you're trying to fight with instead of idealized world you can say well what do i do when i change the device when i take a configuration I log into it it gives me a password challenge I type some stuff that it may be I tell the copy of config files as I don't really believe in configuring things die nana way if I can avoid it and hopefully I keep a good trail somewhere when you try to automate this you suddenly find it's a lot more complicated because there are a lot of bad events that music human are just dealing with gracefully that now you have to teach this poor little chunks of tickle and expect to deal with the most serious of those that we've seen are the ones listed here best erskine device prompts tiny and reset behavior terminal servers and other exciting things that can happen between your control channel and your control source and your device dealing in firmware mostly in the context of I'd really like to automate managing firmware to hi there lability other bad things happen to control channel and then dealing with existing configuration because you everybody's got a network running now you're starting to automate you want to start with the information already on ground props people use all sorts of prompt many of them are evil you're sort of ladies expect site again so as well if I see a pound sign at the beginning of the line then that's probably a prompt problem is the definition of beginning of a line is pretty squishy often you'll see things like somebody says authorized users only and has lots of a pound signs in it because that's a good clue for humans you may have differing custom prompts to indicate what state the device is in may even want to employ in custom process in a lot of organizations try to embed location information into the props as an expert cook to make sure that when you're talking to a device it's actually the one intended to many of us have been on the wrong end of the you mean that wasn't the router in this customer site anymore and it's not fun so your logic has to be able to deal with the custom prompts that means you either need to know what the prompts are and you'll rigidly control them which works great until you get somebody else's network connect of yours or you need just watch be very flexible so the strategies we recommend first that you rethink early and often with unique text you're generating and potentially that you're using time tracking as an additional thing here's an example of synchronizing the bus first thing there to be known text in the buffer coming back most devices unfortunately don't let you say echo so it's not like with it with a shell you could say echo sunscreen I'm looking for so what we've done in the example here is we've actually forced a known response from the device that it's just interest special text we're sending a request for a usage love me and you note the use of command looks like you get it back we back up to say okay I know that I have now forced the prompt and by the way if anything times out here I need to scream bloody murder and distant help moving on speed and timing devices often have bad reset behavior and I mean by that in this context is not trivially predictable you know if resets takes three and a half minutes per device that Lisa takes three minutes per card so that's really bad and it's in control when I do it but the real problem is when a reset could take anywhere from 20 seconds to three minutes and I don't know before the fact you also may find that devices don't disconnect when you think they would this is particularly horrific on large cisco routers unfortunately when you tell them to do a reload of a large config they start doing the reload work but they'll still accept incoming connections because after all you should you should route packets for as long as you can and that's pretty good except for the fact that it also means except control connections while if you're busy doing all of this homework and housekeeping to restart so that means if your logic just says I'll go clipping along I wish you a real earth says now I want to restart the machine with my new shiny configuration and then I'll reconnect it hasn't been shutting down yet still wearing a new the old see fig which wisely give you the same save config it was near moments before and you'll say oh okay I'm cool I'm cruising along in my control session and then you'll get a disconnect from space so your logic needs to look around to find out what favor you actually in the other related timing thing is that many devices don't feel well just getting data faster than they wanted I don't know why a lot of router for hardware that feels very well with very very high speed connection it's really cranky if you start pumping data to its control channel at 44 till maybe but I've seen it happen a lot now to some degree you can slow that naturally again you've got a lot of prompt thinking going on hopefully and that's going to slow things down a little but that's not enough particularly if you've got intermediate devices whether that terminal servers which were going to talk a bit more about in a second or whether that's interesting tunneling between you in the control channel to drilling into speed if the first and foremost thing you need to do is really just put in good sleep conditions put in weights where they make sense actually take a look at devices understand what that class is device want I know that seems like optimizing away from the general case but it really is what you need to do you actually need to go look at what your actual devices view so that back in your script you'll need to make a few decisions when they put some logic in there to understand am i dealing with the 2500 am i dealing with 7500 and I dealing with the newest fastest thing from Jennifer but your set of decisions are pretty small and it's really easy to get to track yourself into well I'll do something really clever and find that you're clever logic is harder and harder to maintain particularly as you go from one device family to another you really like for that chance of code you wrote two years ago to drive 7,500 to be pretty easy to turn around and drive to universe today or to drive we had continuity boxes again you really do need to take advantage of the expect commands to control typing speed this is one of the really cool things the expects we'll talk about it a bit The O'Reilly expect look about dealing with slowing command space there's a lot of rich with older communication devices get very very unhappy and you lose skate completely unfortunately it's device-specific Weatherly's state means it stops accepting commands initiatives you an infinite number of control G's or remembers the last 40 characters you types and does something basically random terminal servers terminal servers are exciting lots of people set up these beautiful little pop structures with terminal servers running to all of the devices that they got remote control of power and consult it's really good strategy it means that you can go and unwritten law of cases that otherwise you'd be putting somebody on a bus having to drive a truck out that's expensive it's time consuming there's a lot of so what's really wrong while they're getting this the downside of that if you're doing a lot of nation around it is that you don't know what who the last guy could touch the terminal server was you don't know what state they left the device in you know what your run book tells them to do but in fact maybe they lusted in the enable mode maybe they got to unlogged in on a vow to enable that I got to walk away and find out there's one other piece of data and then they got hit by another interrupt so your logic needs to deal with I don't really necessarily know what state I'm connecting to and it also has to deal with the fact that terminal servers themselves are known to do kind of random things on occasion notably if you need to read that the terminal server it may helpfully take every device connected to it with it so we've got some discussion in here some examples of how do we deal with that so first you know you go looking for what take the device again based on the prompt you get back as soon as we connect and that suppose a matter of synchronizing into the mode we expect it to be in and dealing label security policy some organizations figure hey we've set up these terminal servers or so our operations organization from get out of the connections themselves are very well controlled may be off to a secure tax plus server or something like that deals that are state you find it in look around as part of your your state acquisition other organizations say if you ever connected the terminal server you find the device has been less than enable knows try to track down on paper even at last and go deep them up about it and if you find out that they didn't leave it you've got a security event and so again your automation logic needs to make sure that it's using the device in a state that's expected and that it's triggering the same way your organization would if it finds the device in a SCADA didn't expect so we go and you know do the normal sort of login thing doing the parameterised logging to deal with maybe we're living in a tax world maybe we're living in the world where you get no password challenge at all maybe you're living in a world where connecting to a 1900 where you have to throw it from from menu murdered into command mode and once we get it into basically the access state we expect then we try to start talking to it and there's a little bit of logic in here I can gesture some of you at least we'll look at later to deal with things like what if there's no password what does this password and I didn't expect one most of those are conditions where you really want to not only have your logic catch it and error out properly but you also want to alarm off your user is up to your operator organization properly the other fun thing about terminal servers is that they're often the devices version of the crew console the device will be cheerfully sending output to them whether you want it to or not helpful things like my line has just gone up and down well that's what it should be doing when configuring a new line a new interface settings and what this means is that your scripts are going to be getting from their point of view spurious messages interspersed through a real output that they actually want you may also have pagination if the device is desperately certain that every terminal in the world explain hoerlein than it's going to give you a more prompts whether you want it or not so what do you do about that the first thing you do is you try to suppress the output you don't expect if you can narrow down what the device is going to say back to you then your logic becomes a lot simpler you end up having nice expect lots to say I expected a username challenge I'm going to give it one rather than having blocks let's say I expect the username challenge but maybe i'm in a weird mode much like the one you saw a couple slides ago um so you try to turn off everything that might be randomly being thrown at you but fundamentally the device is going to do with the device wants to do some product manager somewhere found out that the one organisation was building this product for always use 1330 line terminals and you can't turn off from you all so at that point yet need to actually do some interpretation of the data to make sure that it looks like what you expect and it's the general way you're following here this good old fashion networking rule be liberal in what you accept and conservative and what you send nach suspect as closely as possible but understand that somewhere someone somewhere will decide that it's really important for a device to recording human readable terms instead of nice consistently formatted machine readable terms somewhere some organizations we talked to have really got a pretty good handle on firmware management they've got some automated scripts that you basic updates of all the equipment's they've got a lot of and they keep the records they put everything on tftp servers and make sure that those are accessible other organizations have tried a couple of times in a row and decided it's just too hard and you've got to sort of to sort of sets of concerns one our configuration file issues what do i do if my underlying command language changed between two different versions of dealing with that mean commands have been added or removed that meaning that there's semantic differences that meaning that you need to do a wholesale change like going from catalast iOS ideally your structure will be able to deal with that kind of process where you're going to need to connect possibly late and you can say perform an update possibly now later new config because the world may have changed this instructor in here the other set of concerns and these are purely operational or transfer concerns first and foremost distance is not your friend the farther away a device that you're trying to manage is from the point that it's being managed whether that's tftp server the console station your tell netting two from the not then the more exciting things can happen that are unfortunate while you're trying to manage it in your normal config session this isn't a big deal because they're short and have small volumes of data in a firmware update session where you can have many megabytes potentially this can become a real problem on the system slides we solve this by doing stage rank and actually using bigger hosts with bigger discs because of that on the device side you need to deal with a budget increased tftp server is closer by putting some other sort of control infrastructure really close to the device you're also trying to deal with pilot error this part of the biggest reason that you want automate something like for more updates you want to remove the possibility of accidentally giving the wrong image to the device and of accidentally giving a valid a valid file but just hasn't happened even to be an image of all these are those things that happen in enough in real operation servers right leg back again they involve someone has to go and physically mutilate the device to bring it back to life generally next couple of slides about failover most things in your and your operation that you care about you've got more than one of them are in parallel and that's going to range from devices that don't have any innate sense of parallel ism to devices that are very strongly coupled so looking into the pics sort of our perfect example of something strongly coupled your first and foremost automation problem is they have a notion of which one's active and which one standby and of which one is the primary and which ones secondary and it may not match yours because of course your script is been written assuming I'm in a normal fertile world and the device when you're connecting to it it means still be in the failover that it's cutting to three months ago when one of your lines without so you need to code defensively similarly if you're going through terminal servers and they find the devices don't really match the identity that you thought they did because they've they've been swapped you can also encounter change voluminous and they're going to more in the next slides and you can encounter new config commands that are specific so this is an example of some code that is actually trying to go scope out what's happening on the failover device for making next to it so you know connect then it says show failover and now you see a lot of time out logic in here trying to deal with all of the ways the device can choose to come back in a good way maybe it didn't actually get the connection maybe it didn't actually get the cable status back hopefully at some point though you get an actual sort of strange would say this is what's device is currently configured to do and at this point you actually need to go interpret that just set your own your scripts expectations about the secondary who's the master who am I talking to you right now and you're receiving example of some code that actually goes through that process step setting again this is an opportunity to cry for help if what you find on the ground is too far away from what your logic is prepared to deal with what your organization is designated as the operating policy so once you're finally actually starting to talk to the device you get the next set of constraints and this is a real issue with tightly coupled failover we found in the pics case that many versions of tips if you give it more than about 200 commands while I configuration sessions with a failover device as soon as you try to write that it just goes away because the primary and secondary devices are talking to each other and they've learned a stack buffer somewhere important so your logic needs to expect and deal with well known limitations of the device like that what we show here is an example of actually ratcheting down how many lines we find out and making sure that we're always sending right right configuration commands at the right time control channel problems bad things that happen between you and the device on the most common that people code around is loss of connection yeah you know I do a temporary disconnect that happens all the time when I'm logged in there big deal and they write a lot of expect that sort of naively assumed that those are reliable space on this is often a bad idea because a lot of your configuration commands will leave the device in a state where if you just start typing commands to it again it will now sale in very weird and hard understand ways so what we found instead is that you need to actually be pretty clever about did you get any OS at a time that causes you to not restart your sessions or did you get any of' at a time where you know basically what's going on and you're prepared to go back in to get an eof right after you login well that's the only suspicious if you get three of them in a row which point you say you know there's something really wrong here but if you get an eof in the middle of setting up a bunch of line statements hmm maybe I soft on myself the other big idea that we found is you want to distribute control you want to put the actual point where control is coming from as close the device as possible again that really ratchets down your risk of exposure to the defection failing it also makes the session it vastly more secure we've had various carriers who own their entire layer to say oh no I just assumed my wide area network is secure I don't worry about it much I just you know run bear telnet over it this is horrifying anyone who knows the statistic on what fraction security threats are from inside your organization and by inside we don't mean your operators are attacking you we mean randoms over an accounting get it into their head that they should be able to go find out what's happening in our operational network it's useful so the final couple of wives I wanted to talk about wanted to talk about are about interpreting sound configurations into data and using what's already out there in network so we've actually done a bunch of logic which was our sleeve luminous to put on the slide deck unfortunately to actually go and pull information out of the pecs seeing the pics because is straightforward things sitting in front of it where we actually go out and pull out you know all of the simple stuff you can you can parson interface names security levels and most interface settings out of sound configurations pretty easily you can parse in being you can press out the encrypted enable and access password although hopefully your reign with an F encryption that you can't parse out the original password so in an automated system you want to be able to expose the found configurations retrieve them back is of course part of your goal here is to look at what's changing over time and square that away and then be able to being able to extract some metadata out of that for reports perhaps for a database control system it's really worthwhile it also serves template-based configuration generation where you or you've decided you know I've got a small number of kinds of device when I'm gonna configure and dated with the same way and see them a lot of metadata finally differential configuration some devices live in a world where all configuration statements start with the running state other devices live in a world where you always have to give them the complete configuration what that requires you do is you have some amount of logic support to deal with ni na dare state or am I modifying the configuration already found that means that your logic needs to be able to look at your configuration your proposed configuration and cut it apart a little bit it means that you need to be able to recognize if you've got a bunch of non-invertible commands and change strategy from automating a compte process for example actually copying an infant again now generally this can become really hard really quickly particularly dealing with things like non-invertible command the thing that we've seen though is that the actual problem is a lot easier mechanically than the conceptual problem in fact this is what the biggest idea we found automating device control is if you sit down and look at devices from a math perspective you say hmm a lot of stuff I can configure a lot of different values for those configurations I could really have a big space of things to deal with and so you say hi I got to go and figure out how to edit or interpret all an app that can be hard I'll be back with you in a long time and so then your operators go out what they look you know I need something that's just going to log in and change the community string once a quarter because I've got 10,000 devices and I have to change nice trunks and doing it once every two months when you replace the device once over three years and reflects device is not okay so your operative is off like a little chunk of tickle and comes back and cities a good guy tells nap he tells your engineering team by the way I've got this little chance of sickle to change of the community strings you might want it and they say oh we're trying to get the whole ball of wax go away six months later the guy says well you know I need something changed the password of last resort and the same interchange happens what we've been finding on the ground making automation logic is that the actual things that people actually do with devices are relatively bounded they don't ask for them to set up frame-relay connections on gig Ethernet at least not after the first time when they're deciding how that device should be configured and they remember oh it's rather it's test lab rat or one not test lab rat or two there's a different card set in here so your logic doesn't need to deal with every possible setting that might ever be put onto a device it needs to deal with the way people actually configure things in their operations and policies you're actually and that happily is tractable just give me some example of logic that deals with it this is actually out of our pics driver where we connect to go through a very a set of jumpsuits to deal with me because our terminal server in the way maybe we've got other logic to deal with along the way like that failover logic and then we start actually examining okay what was the old config file I had what was the what was just giving me and comparing it so we can push those and in the proper way or so that we can decide there's just too much difference here I have to give up and load a new context so with that I'm pretty much done I'm sure Susan wants you to fill out your surveys can I answer any questions I guess it's late and we're all ready to go home 