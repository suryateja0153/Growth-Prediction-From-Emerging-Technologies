 greetings is Jeff Johnson creator fingers gestures for unity in this tutorial video you will learn how to use one finger gestures the default demo scene didn't have one finger gestures in it for rotation and scaling so I made a new scene called demo scene one finger that demonstrates these gestures it also demonstrates how to manually reject a gesture if it doesn't start in a position that you want let's dive right in you'll notice that as I'm clicking and dragging around this earth that nothing's happening I actually have two gestures a rotation gesture one finger and a one finger scale gesture they only start if I tap on these buttons to begin with so let's start by scaling starting on this arrow as the Y values go down it gets larger the Y values go up it gets smaller pretty simple again you don't tap on the icon the gesture gets rejected and I'll show you how I'm doing that in code rotation is also very similar if you start on this rotation icon it will use your starting point as an anchor to calculate an angle so let's show you how that works you can notice as I move around in a circle around that anchor point the Earth spins if I move in a circle very close to the anchor point my angle changes rapidly if I go really far out the angle changes slowly again pretty simple stuff here now you can release the gesture start it at a different anchor point maybe up here it works pretty simply so let's show you how this is working in code demo script one finger dot CS is where I've set up this scene it's just about a page of code very simple here's my start method where I have my finger script reference and I add the one finger rotation gesture and the one finger scale gesture and I set the updated delegate for each gesture let's look at these delegate methods the rotation gesture delegate is very simple if the gesture has began but it does not intersect my rotate icon then I reset the gesture which clear its state and starts fresh otherwise I allow it to begin and now if it's changed to the execution state then I rotate the earth by rotation degrees Delta now unity works in degrees hence there's this rotation degrees Delta if you're using a platform like xamarin you can use rotation radians but for unity you'll want rotation degrees Delta the scale gesture delegate is pretty much exactly the same if it began but it did not intersect the scale icon I reset it and then if it's executing I multiply the current scale by the scale multiplier so the scale multiplier simply is a value pretty close to one that you can just multiply by your current scale to increase or decrease let's look at this intersection method here I've got gesture intersects sprite so these two buttons are actually sprites they're not even unity UI elements they're not on a canvas or anything I pull out the renderer if we don't have a renderer then it's impossible to intersect but since I do have a render I can get the bounds of that renderer I can get the gesture position in world space by calling camera main screen to world point passing in the current focus X and focus y-value of the gesture which is generally where the current touch point of that gesture is set the Z value to zero because we don't need it gesture position Z equals bound Center Z this ensures that the Z position intersects the bounce so now we're only worrying about the x and y value intersecting the bounds then we simply say does the bounds contains this gesture position in world space if it does then the gesture can begin otherwise it is reset and that folks is literally all it takes to do one finger gestures or to do custom gesture failing I hope you enjoyed this tutorial please email me if you have any questions thank you and goodbye 