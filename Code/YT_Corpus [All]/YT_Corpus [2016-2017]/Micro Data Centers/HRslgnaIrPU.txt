 welcome to kth the Royal Institute of Technology in Stockholm Sweden I am Safari D professor of computer systems at kth and I'll be the instructor of this course on reliable distributed algorithms as you might know most of today's IT infrastructures are distributed systems from telecom systems and the internet the data centers of cloud computing that follow the current revolution of global IT services example of these services include Google Facebook and Netflix among others at the core of many global services you find distributed algorithms the services are implemented by algorithms that run on multiple computers and communicate only by sending and receiving messages it is crucial for many of these services that they continue to work 24/7 even if some of the computer failed or some messages are lost in transit these courses will give you a solid foundation of reliable distributed systems I will be joined by Paris Carboni on large Crowell who will lead you through the problem solving sections and the programming assignments you'll get experiments and developed a variety of distribute algorithms in a very engaging interactive program environment using a Scala programming language we will guide you throughout the programming assignments and provide you with intuitive examples to get you started in this course you will learn a lot you will learn how to specify a distributed service and how to implement it correctly by distributed algorithms you will get familiar with many core services that are used in cloud computing and big data environments to become clear but implementing a service will depend on the underlying distributed system model in some models it might be easy to implement the service while in others it can even be impossible you will and why this is the case you are going to grasp most of these major concepts and results of the stupid computing in a precise way concepts such as consistency models broadcast abstractions consensus and the caps here finally you will learn and understand many advanced and stupid algorithms a great example is the famous pax s algorithm for agreement protocols if you are interested in designing and implementing this devious system we will find that writing a distributed program is quite different from writing a sequential program the Civic programs are not just functions from input to output rather they are concurrent reactive programs that run continuously and interact with their environment therefore you will need a paradigm shift even professional software engineer will need to change their mindset so in this course you will learn how to program the stupid algorithm in a compositional event-driven programming paradigm this course is based on a course given at kth at the master level for a long time with many requirements over the years at the end I want to warn you that this course is focused on understanding and reasoning rather than just acquiring a new skill set or getting a high level overview of some topics in the stupid computing so if you are brave enough to just jump in the rewards will be great you 