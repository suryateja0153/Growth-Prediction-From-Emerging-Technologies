 Imagine a mad scientist who is trying to create an artificial being indistinguishable from a human and early in the development of this machine, he asks you for help testing the mind. And so he confines the mind to a box. The only way it can interact with the world is by reading input messages and responding by printing output messages. And he presents you with the following challenge, he shows you two identical boxes: the other is connected to a human being typing the output messages. And you are allowed to ask the boxes any sequence of questions you can imagine. Do you think you could distinguish the machine from the human? What would you ask? A triumph of mathematical and mechanical skill, is this great new automatic calculator at Harvard University. Intricate problems in mathematics put through the machine in coded form on tape are accurately solved in a minute fraction of the time required for a human calculation. In the first half of the twentieth century general purpose computers were only just emerging. But speculations were swirling about what would or wouldn't be possible in the near future with robots or intelligent machines. It was a time when many human tasks were quickly being swallowed up by machines. People feared powerful industrialists would soon be supported by great machines. Machines which could do anything. Resulting in a class of poor labourers who would simply toil away to power the machines. In nineteen-fifty, Alan Turing wanted to ground these speculations about machine intelligence using a scientific approach known as a Turing Test. Where a successful pass would mean unequivocally that whatever is in the box could be identified as intelligent. And to this day, no machine has been able to accurately mimic conversation over long periods of time. Historically, the concept of knowledge and answering questions have always been intertwined. Across many cultures, there is a deep rooted belief that the source of all knowledge comes from a higher power. And one way to access knowledge from a higher power is by posing questions and waiting for a sign. In ancient Greece, citizens could take their toughest questions: usually key decisions in social and political life to a medium who would enter a special location known as an oracle. For example the medium Pythia from Delphi would enter the Sanctuary of Apollo ask her question, fall into a trance-like state, and emerge with the answer. Turing referenced this history with his imaginary oracle machine. Inside his oracle machine would be access to an oracle database: a database which contained all answers to all questions. In one column there is a list of all possible sentences, think of this as our question column, and many of these sentences would be meaningless but every question you can think of is in this book. And in a second column: the corresponding answers. If a machine had this oracle database, it would be able to answer any question. But could Turing's oracle machine exist in the physical world? Well the question column alone would contain every possible combinatoin of English words. Even if we limit ourselves to all possible twelve word sequences, that results in 10 to the power of 72 different sentences. Now even if you shrunk every letter down to the size of an atom, you would still end up with a book larger than the size of the visible universe. So the oracle database cannot exist. When we store knowledge this way, by simply memorizing facts, we call this declarative knowledge. For instance memorizing your multiplication tables is declarative knowledge. Music boxes can be said to 'know' a song declaratively. The music-roll declares each note. This works well with small numbers or short songs, but as the numbers get larger and songs get longer you, will eventually run out of memory. So if a machine only knows declaratively, meaning it memorizes everything, then there is a very real physical limitation: space. So if a machine is passing a Turing Test, we know it can't simply be memorizing all possible answers. It must be taking advantage of another kind of knowledge. It must know how to know. Meaning it goes through a process to get an answer. For example knowing the rules of multiplication or knowing how to compose new music. And this kind of knowledge, known as procedural knowledge, is the focus of computer science. How do things become known? (Joe Fowler) 