 good morning everyone my name is Lindsey Homewood so I'm the head of development at the Australian federal government's digital transformation office and we have a little bit of a problem in Australia at the moment which is that there are over 1,500 individual federal government websites that we know about we think the number may actually be closer to about 2,200 at the moment that's a lot of websites and the problem with the way that the information and services are delivered through those websites is that we expect people have a mental model of how they have to interact with government we organize the information and those services and the delivery of that online around the way that the organisations within government are structured and of course people don't care about that people just want to solve a problem and they have to go to the government to do that sometimes and so that leads to cases where you know people who we do research with they just say well I just wing it to be honest I really need the big picture and then building on top of that when people actually go out to start a business they actually end up designing that business that entire process that they go through to minimize the level of interaction that they actually have to have with the government which is sort of mind-blowing when you think about it right and you know when we interview people who are doing similar sorts of things they say well the whole experiences has been a case of scaling back my expectations about what's actually possible and then even worse people end up paying other people to interact with the government on their behalf to a sort of act as an intermediary and navigate that maze and then you know we've got people who were saying similar things they're saying that you know if you've got the experience then it's just going to distract you from actually doing your own business this is better to pay an expert to do something to do this for you and even worse the people that are acting as those brokers for the rest of government still have trouble interacting with government because it's that complicated for them you know we've got cases of people that have been on the phone to different government departments for you know two hours and 30 minutes absolutely crazy so we have a bit of a problem which pretends a pretty interesting challenge for us within the Australian government at the moment which is that we need to try and do the hard work to make delivering services online and using services online simple for users and to do that effectively we need to understand the FEU the what the when the where of people interacting with government why they're even coming to us in the first place and to solve that problem where you sort of synthesizing a combination of design mostly design and a little bit of technology to deliver those services in a way that is clean simple easy to use or clearer simpler and faster public services online and that's what the digital transformation office was created for in the Australian government to help the Australian government as a whole move forward in being able to deliver services in this way so how do we actually make this happen how do we do our work well everything that we do within the DTO is about focusing on what the user need is actually understanding why people are interacting with government and then making sure that we're building services that are able to service those needs and we do that by forming cross-functional teams of people from a bunch of different disciplines not just technical ones as well we have our developers we've got our web operations security but also people who have got backgrounds in service design product management content writing as well as plain old sort of product management your delivery management that sort of thing and so our philosophy is if we get people from a bunch of different backgrounds there they're going to bring a diversity of opinion together and we're going to get the best possible outcome for the users and this sort of harks back to this idea that we have which is that the unit of delivery is the team you know and delivery itself is actually the responsibility of everybody there's no one person that's just responsible for delivery it's the responsibility of the entire team an interesting thing from a tech perspective as well as that we take that to the next level when we say that the service delivery teams who are delivering their service they have the responsibility of owning their own ability they own the service end-to-end from inception to it going live and once it's live as well and so we have this whole process of validating early and often to make sure that the thing that we're building is the right thing for the user doing doing that hard work to make to make it easy for the user so we have like a discovery phase which is really focused on sort of understanding what the journey is that users are going to be taking to be able to interact with government and why they're even coming to us in the first place so we put these you know big storyboards together and we get an understanding about you know what are the life events that have led up to the person interacting with government and then from that we come up with a bunch of hypotheses that we then try test with a bunch of very minimal wireframes and we do some prototyping of an app and then we try and test that with the users to basically validate those hypotheses that we've come up during that discovery phase to make sure that what we're building is actually the right thing before we invest too much effort in building the wrong thing potentially and then from that once we work out what we're actually building we're gonna actually build the thing we take those working wireframes that we've got and we we start filling out the code behind the scenes and build sort of a Minimum Viable Product to deliver that service to people and the key point here is and what we're trying to do as an organization is to innovate on service to service delivery not the actual technology itself and to do that we say that well let's try and standardize a bunch of the technology that we're using to make it easy for people to get on board and actually start delivering services in this way an interesting thing there is that we can take that and build a capability across all of government because everybody has got familiarity with the same tools they all work roughly the same way we have a fairly opinionated way about the way that we work in the way that we use the technology but that leads into a pretty good situation for government where we can actually start to onboard people faster into into the projects that we're kicking off to be able to deliver those services and even better we can actually take those contributions because we have a fairly opinionated technology stack and we can actually because we're primarily using open-source and what we do we can then take what we're doing and actually contribute it back to the open-source community so everybody can benefit from the stuff that we're doing and again this is about making the right thing easy for the people who have to work in the teams to do technical delivery and Cloud Foundry is very much an important part of how we actually make this happens part of that standardization that I was talking about a second ago so what does delivery actually look like within the Australian government so it looks at something a little bit like this it looks like the number of deploys over time increasing so this is a particular project that we were prototyping a service that we were prototyping back in October and you can see there that there's a nice uptick to all the deploys over time and that actually interestingly maps of the number of contributors that were on the project as well so it looks a little bit something like this we've got a bunch of different people who are working and like a local git checkout and they're pushing those changes to github and then github is then kicking off a Jenkins deploy so we have a CD pipeline for all this stuff and then that's deploying everything to Cloud Foundry and then the users access in the application that's running on Cloud Foundry that's it it's pretty simple that's our standardized pipeline that we use regardless of what language the service is actually being written in and then of course we make sure that we have very strong feedback loops throughout the whole process as well so every time somebody makes a deploy there's stuff that's dumped into slack same with log messages monitoring all that sort of thing there's one channel that the entire team is able to hang out in they're able to see all the work that's happening across all the different technical streams and that results in something a bit like this you know this is the prototype that we ended up shipping a couple of months ago and of course true to our true to our open-source spirit nature we've open sourced all that as well and I invite you to go check that out but the interesting thing about structuring delivery like this is that releases become a non-event which is a little bit atypical for the way that software releases are typically Hannity doesn't handle the government and the other interesting thing here as well is that the process overall actually scale quite nicely as we added contributors there were very few challenges that we found when we were adding additional people to the team to be able to keep working in this way we didn't have to retrofit a new process on to on to the way that we were doing delivery and the other interesting thing here as well as those contributions as a whole were loved they were coming from the team weren't purely technical we actually lowered the barrier of entry for other people non-technical people within the team to be able to contribute to the prototypes that we were building and so if you look here at the contributions graph over time you can see it's a number of contributions going up and all the contributions that were coming through here they were from not just purely technical backgrounds in fact you little think about this the top two contributors to this particular project were actually non-technical they're actually content writers so we made sure that we gave the content writers the right tools to be able to work and get but not actually know that they are working in yet and all the changes that they made went through exactly the same pipeline that all of the other technical changes were going through as well and again goes to the idea or the unit of delivery is 10 not individuals so what do we think the team's actually need to be able to successfully do this delivery well fundamentally there's just a couple of very small things that they need they need a way to get their code running in front of users so that we can get those very quick feedback loops and to make sure the thing that we're building is actually the right thing they need some sort of insight into how that code is currently working or not as the case may be when we're making changes very very quickly we want to be able to recover from that and know what was going wrong and then finally we need to be able to get some sort of data to hypothesize about user and system behavior to validate those hypotheses about the overall service design that we're undertaking and all of those three things add up so basically just mean safety in when you're making the changes to make sure that you know it's going to work in a reliable and repeatable way and confidence that what the team is building is actually the right thing for the user so the way that we sort of view it is that there's high-level service and a service is made up of multiple apps maybe we're taking sort of like a micro services architecture where there's like a couple of small front end apps and then API is behind the scenes and then there's a platform that sits that all of this stuff sits upon and so we say going back to that idea that the service delivery teams owned their availability of the service delivery teams owned all of the applications and they and will provide the infrastructure to make sure that they were able to stay up and then we provide an underlying platform for them to be able to do that delivery on and it's not just the Cloud Foundry piece which we'll talk about in a second so the DTO is providing that platform for people within government to be able to do that delivery on and so we're tentatively calling this cloud dr. day you and you can obviously see the illusion sort 18f they're doing with cloud gov don't put this into your browser it doesn't currently resolve but this is sort of a tentative name that we're giving it for the time being and so the whole idea with cloud of data you is that we're trying to make it easy for teams to be able to run change and measure the applications that make a service up as a whole and so there are basically just three things that we're trying to do there we're just trying to make the act of deploying and releasing software it's simple fast and painless we're trying to help the teams by working in the teams and showing them how the tools work make that journey to go live and then as part of doing that work in those teams we're trying to help them understand and impart a whole bunch of operational knowledge that we have a lot of on how to actually build a reliable scalable digital service to table to meet user needs but also stay up and again the whole idea with cloud doc our video is to make doing the right thing easy and we view the platform is something that teams will be able to use all the way from the alpha prototyping that they're doing to the MVP that they're building all the way through to the final live running of that service so what is cloud gov did ru well it's just these four things really and Cloud Foundry you can see their comes in at the app hosting and the database layer so it's it's your very fundamental to the way that we're doing all of this delivering we make sure as well though that that all changes are going through a continuous deployment pipeline or a continuous delivery pipeline depending on the risk profile of the agency and so we can't push changes into production any other way the production have to go through a CD pipeline we also provide a very simple logging service to give those teams the insight into what's actually happening across the stack and we also provide a very simple monitoring service and that's sort of an interesting point because our sort of opinion on the way the monitoring should work is that the teams that are closest to delivering the service the team to their building the servers have to bed have the best insights into what the important things are to actually be monitoring their so rather than being super prescriptive about the sort of monitoring checks that should be run we provide a very very simple platform for them to be able to write their own monitoring checks and actually version those monitoring checks alongside the code that they're writing for the actual application itself and whenever a continuous deployment pipeline build gets kicked off we also build a bunch of monitoring checks and we push that into the monitoring platform as well so again it's about making doing the right thing easy for those teams and to do all of this effectively we have to provide very clear integration points for building testing deploying logging measuring and monitoring and the key point here is that it's about defining very clear interfaces and not dictating an implementation to the teams that are actually building those services their closest to it they have the best context to be able to make the right decisions we enable them to be able to do that we don't dictate how they go about delivering that service so obviously Cloud Foundry is like a really really key point in being able to make all of this stuff happen this is where we're wrapping our first foundation and the interesting thing there is that we're making sure that all you know by it's sort of enshrining that good operational practice that all delivery teams get zero downtime deploys it's just a standard part of using the cloud backup today.you platform and we're also relying really heavily on a lot of the other work that other people in government around the world for using cloud foundry have done so we're taking great advantage of the AWS broker that 18f have done a whole bunch of work on more recently which basically allows us to use underlying AWS resources and expose them on Cloud Foundry which is a great way of sort of speeding up the act of delivery we don't have to deliver all of the different services we can use a bunch of stuff that's already there and provided by AWS and so we're using we started out using Jenkins and with more recently we're moving a little bit towards circle CI which is sort of neaten and so you know I'm Polly get free screenshot we totally use it and for this to work effectively we need to have these clear integration points for building and testing and deploying right so the way that we do that is that we say that all teams have got to drop in two files into their repository CI build that SH and a CI deploy does is it dot SH and so that's the interface we don't dictate the implementation of that and we'll sort of stub out the basics of what's actually required to get the app running in the first place but if things want to be able to change the way that they do testing or the way that they do deployment datas edit the files and their repository and then they commit it and then they push it and that's it they have the power to be able to do whatever they need to do and so the interesting thing about this from say jumping from Jenkins through the circle CI is that we can like rely really heavily on environment variables sort of extract our credentials and that sort of thing into the CI pipeline but of course through this approach it actually becomes very trivial to move between different tools if you define this very simple interface and don't care so much about what the actual implementation is so on the logging side of things we use grey log which is pretty neat and the whole point about using grey log is that we want this traceability throughout the entire stack so we want to know all the way from the HTTP requests being being captured by a load balancer through to the application through to the underlying platform and the database and we want you know all the logs from AWS and whatnot all in one place so the teams are able to see from top to bottom how a request is being dealt with and this helps I guess on two fronts firstly on the debugging and the troubleshooting front but secondly around the security incident and event management side of things so the point that I want to leave with you today is that platform as a service is incredibly important to being able to accelerate delivery within your own organizations but I fundamentally believe that the platform as a service is much bigger than just the application run time which we end up focusing so much on so the whole point about having paths in place is that it's a tool to help you make doing the right thing easy for your users we fundamentally believe at the DTO that the technology is cheap it's the people that are dear to us and we want to be able to optimize that so paths for us eliminates entire classes of problems that we just don't have to think about anymore very simple things like you know how do I make my application available or maybe more complex things like how do I actually recover from an outage because failure is inevitable in these sort of situations so this is our first outage selfie that we took a couple of a couple of weeks into running our running our platform it's like you know everyone said downtime and the interesting thing about this particular incident was that the time to detection when we were running on our Cloud Foundry platform was about four minutes the time to recovery was about 12 minutes overall not too shabby but the most interesting stat in all of this was the amount of human intervention that was required to be able to recover from this particular platform outage was zero the platform itself to self healed and by the time we worked out what was going on it had fixed itself that's a pretty good position to be in from an operational as part of an ops team so pads frees up your teams to be able to focus on the bigger picture and think about the bigger picture about what's happening within your organization is as a whole which is really important to be able to free up the people with really significant operational experience to help the organization as a whole learn what they know so that the organization as a whole is able to improve and hopefully they'll be able to help the organization learn how to deliver clearer simpler and faster services thank you very much [Applause] 