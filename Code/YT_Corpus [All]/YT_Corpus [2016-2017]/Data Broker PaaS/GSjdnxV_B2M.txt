 thanks everyone for coming this will get started if anyone else is still eating or not probably some late stragglers so we've done a couple of dozen of these at this point now so really great to see a whole bunch of new faces in the basis community have a really great speaker tonight folks have not been involved or aware of like all the work that's been going to miss those networking you're about to get a lot of great information it's been a little over a year that a lot of folks been working on this and it's awesome it works and chris is going to really get into some good details about it if you're interested in networking stuff in general chris is definitely the person to speak to overall so really looking forward to this before we start I want to thank yodel for hosting this Meetup and John's going to say a couple words awesome thanks Joe hi I'm John I'm I'm with Yodle as are all of these blue shirts sort of hovering in the back here they were waiting for everyone get their first crack at pizza and they're like free pizza so we're really excited to host the meso smeet up we're using my toes in production here it is our main production sort of the the base layer of the pads infrastructure we're on marathon and docker on top we've termed at MDMA you can draw your own conclusions it is ecstatic but I just wanted to thank Chris for coming thank Joe for the opportunity to host I have to put the obligatory we're running my sews we're hiring actively for developers for systems engineers for almost every technical role so if anyone's interested chat with me or somebody else in the blue shirt or check out our website we would love to have more technical people here and with that I will hand it over so Chris thank you thank you all right everyone well thanks for coming out this evening a little wet but hopefully this will be interesting I going to talk a little bit about networking in May sauce and some of the concepts that we're starting to see in mesa networking and how we implement those at least within project calico so I'll start the more general they'll talk about some more specifics I don't mind these being interactive so feel free to ask questions if you ask a good question i will throw stuffed cat at you if you point out the at least one intentional error in the slides I will also throw a cat at you so there's at least one intentional error in here so if you can spot it the cat is yours it also proves you've got good Mace's foo if you do spot it so uh you know why project calico the Internet's about cats so therefore we had to have a cute logo so it's their calico cat we're going to talk about networking and the integration networking insecure to your policy enforcement micro segmentation how do you micro segmentation in a container environment or anime sis environment in a sane scalable way um and where I talk about this by you know saying that the way you achieve this is by giving every container its own IP address container every pot oh I can no I'm not FDR so IP for every container and more so and let me go back a little bit budget calico just as a scene a little bit about us and what we're doing we're an open-source networking stack we support may so scooper Nettie's docker OpenStack various other things so it's basically an open sac open source project that provides networking in these kind of scale out environments my background I'm the architect with calico and I've run big networks before operationally and and cloud infrastructures so I start come from an operational background now what's the major or one of the major challenges for cloud ah that is annoyingly right in my window here so the issue is the containers we've built infrastructure's we've built even basic virtualized infrastructure space the way we've always built enterprises so small numbers of apps vertically integrated very simple north-south flows fairly static environments the cloud environment what we're doing Mesa snow things dramatically changes that so instead of having applications or servers that now last in Iraq for years running in a single application talking to one thing above them thing below them we now have potentially thousands of containers or hundreds of thousands of containers many of which need to talk to a lot of things east west as well as North South and they may only last for second sir minutes might last longer or not so these things that sort of had issues even at very low scale and very low churn as we go into this environment we have orders of magnitude more churn and scale and things start breaking down if you take a look at the number of events we have had in our industry lately where net things have happened that weren't intentional almost all of these are because somewhere something got into the infrastructure and then someone that that bad actor was able to hop skip and jump all over the infrastructure basically end up owning the infrastructure there are exactly two types of enterprises in the world today those who know they have an advanced persistent threat in their infrastructure and those who don't know it yet there's probably very few people that don't fit in one of those two camps so we have to assume in these kind of worlds that your infrastructure is not completely trusted that there is going to be as we start deploying these things you're pulling source from lots of other places deploying it very dynamically you have to assume that not everything is always going to be clean it may not even be intentional about actor it might be bad code that somebody wrote but yeah the you know there have been a lot of bed big instances and and they're going to be more so you know how did we get to this why do we have that it's because we still practice security like the Middle Ages literally so you build a wall around a city that's your external firewall and you have stuff inside that that well and then you build a wall around the castle that's your second firewall and between the the web tier and the apt here and then you have the dungeon power that is what protects the he's the kingdom which is your database so you basically have this stage set of walls you go through that's basically exactly the model that people still try to deploy today stage firewalls vertical everything within the given firewall is trusted because nothing could ever get through this this Great Firewall I have and it's always kept up to date how many people here I'm sure everyone here is much cleaner than the network's I've worked in before everyone hears firewall rules are completely current you don't have any old cruft in there and somebody goes you know I don't think we use that rule anymore but we better not remove it because we might break something is that ever a conversation anyone has ever had with their security folks yes it's a conversation probably all have had with your security folks you know so there is a problem with that model hard crunchy outside soft chewy Center once you get past that and you will get people past that there's very little to stop people once they're within that wall from going wherever they want to go am I saying anything that annoys anyone yet anyone here who sells firewalls and legacy firewall appliances and they're getting really upset with what I'm saying darn so now you get to a model so okay I had servers back I'll total story won't mention which company it was I was actually in talking to a reasonably sized enterprise doing web scale stuff and their intent was the first two servers in every rack were the DMZ servers so any work like me talk to the outside world would be scheduled on one of the top two servers then there was a firewall in slot 3 and then the back infrastructure below it on each rack and they viewed that that was a fungible infrastructure in this applications will get deployed on the top part of the rack or the bottom part of the rack was a unique model but you know that was an attempt to try and deal with this where we have lots of fun jable resources we want to schedule in a very dynamic manner make most use of resources but still both physical walls well they did it by separating these into separate hardware poles it's one way of doing it I don't know if it's going to get you the skill you want so how do I build this infrastructure on top of that block of walls well you can take their case and in some number of servers are one type and some number of servers are another type okay so you've now beaten the system to sort of still keep that three tier architecture going but now you know there's lots of different application servers and lots of different web servers lots of databases or other processes and they keep multiplying you know I'm sure again you don't have a where you going to use MongoDB and some developer comes on set so you know Cassandra was a really better tool for this year for this one application so you start getting at these different tiers oh it's not a static thing no more and more stuff starts populating and every time you do this in this model you're opening a ticket to get your firewall rules updated or you need to add another Cassandra node and you need to update your firewall tickets and of course everyone's firewall teams update those tickets and seconds after you submit their the security changes right everyone's everyone's ticket responses are almost instantaneous right no it's disappointing man keeps propagating and propagating in propagating why is it doing that because of this thing you guys all like so much schedule tasks put them in there let them scale up scale down start up start up containers or processes based on load and demand everything is fungible that's what leads to what we just saw this is what completely breaks the model we've been talking about because the only way you're going to get hardware-based isolation is to actually have may sews tree each thing differently have separate cluster separate pools how do you do that especially when its descent north-south anymore right so in that previous model the application that was talking for a while to all of a sudden knowns to get a bit of data Cassandra so now I need to update those firewall rules again to allow to talk to the other data store something or some other interesting bit of data is so why don't we just tear down the walls let everyone live happily ever after and just stick a big fire wall in front of it and say everything's trusted behind that firewall again hard crunchy outside soft chewy inside this also is probably not a good security model so um the idea is we have a bunch of components as components sitting in the structure and place wherever they want to be the bomb holes if that's that model fire on the outside everything's trust on the inside you get a black hat process pops up somewhere and it can propagate and hop all over the network some animation is broken applications need to be talked to other components of your infrastructure so I need that connectivity now I could build walls around each of these components so each of these components I could isolate and treat his independent entities provide some policy control but I still need to allow them to talk to another that orange container still needs to talk to the blue and yellow container that I showed earlier so I have to have a way of dynamically adjusting these partitions such that orange can talk to blue and yellow but the bad actor down here you saw earlier can't talk to anything else so this is what we start talking about fine-grained isolation in in container worlds so the idea being that each workload has a policy associated with it and that policy defines who you can talk to who you can't talk to well I'll give an example of this a little bit but I'm going to talk a little bit about one way of doing this one lesson so hold on a second yeah sorry make sure I've got that sorry so that's interesting Sharon stopped and we're back sorry about that okay so one way of doing this is to basically stick a firewall that's policy driven in front of each and every container in your infrastructure so this is what calico does basically every container is connected into the server which routes its traffic and will force a firewall in front of each and every container in that firewall rule is driven by policy so this is the basic calico model will go into little more details so before I go any further the other thing that makes this work by the way is we assign every container an IP address so every container is unique entity on the network this allows us to treat it like a unique entity on the network I'll route it policy control it etc this is some lot of the work that's gone into May so send net modules etc is the ability to have richer networking experience programmed into basis rather than just port mapping basically the ability to assign addresses treaty containers as first-class citizens on the network rather than a process on the server before I go any further yes correct so I'll give an example in this little bit but one of the issues with in fact we have a demo that shows one of the issues of port mapping if my applications all try and bound buying to the same port you know I've got multiple applications they all end up on the same server they're altering the Borg bind port 9000 one of them is going to any others are going to lose and they're going to have to get their ports rewritten to something else which makes a service discovery issue my policies that I want to apply in the network we can't be mapped to a specific process because I have no idea what that process is he's been port mapped somewhere in the infrastructure I've lost the visibility of the two things talking on the network to one another so we're getting a hold on a little bit take a look at the rest of the demo and we'll come back to your question if I haven't answered it another one here correct but actually proxies not required for that right Roxy's not required for that the container can go everywhere you can take its address wherever it goes in this model right so the idea is the man I sick of proxy in front of something that proxy has to be always was just stated a couple of things the proximal must be aware of that application wherever I update the application I have to update the proxy to match that application I also have to update all the clients out in the field to do that if now if this is you know if it's all web stuff and maybe that works a lot of people do things aren't basic web stuff so like Clinton ins be service discovery aware i have to have a proxy that does that and the application also needs to be aware this being potentially port mapped vs so yes you can make that work the more and more complex your things become the more and more complex that becomes the whole idea about doing containers and thing else was last time I checked to make this easy to deploy and create and deploy applications throwing a whole bunch of stuff in front of it that needs to be updated at the same time to deal with networking stuff sort of goes in opposition to that whereas if I can just simply say like IP was originally designed everything has an IP address all of those requirements fall by the wayside I no longer need a proxy in front of these things you put one in front of it if you want but you don't need it I've removed the number of components you need for this thing to be able to talk yeah so a little bit different here in that first of all the blast radius is now contained to a single container yes so there's no way if you there is no way to assume sorry go ahead it is it is still a firewall rule the interesting thing about this firewall rule is it's a tied to policy rather than IP addresses this thing moves as policy adapts with it there's no way I can completely protect all of this well there is exactly one way I can protect this entire infrastructure and not have any thing ever get popped in it it's called a pair of cable dikes and I go to the cable in front of the data center and I go clip and and and not really the the thing here if I build a big domain firewall in front big domain I get in to any one of those points I potentially have free reign across all because there's no policy control once you get beyond that in this case to get between 12 and one dot five I have to go through at least two policy control points if you pop one Tim's policy control point one point five will protect one not two from talking to 1.5 yes the two are not the tour complimentary I can definitely do something to clean you know we the system from an API server is a we've done this an SMP land for a long time SNMP proxies that died on the behalf of saving the SNMP server smtp server so we've done this for a while in the industry so you can do that now you still have the problem of the thing that does the cleansing might get popped but that's not the only thing the attacks coming in through the front door is one thing the guy that happened to build 192 168 1 dot 7 before he built it he picked up a USB key he found lying at the door to your company plugged it in to see what was on it and now 192 168 1 dot 7 has an interesting little gift that you didn't intend your cleansing does nothing to protect that against that so that's possible they take a look there are some folks that are doing cryptographic signatures and traceable trust all the way up that still does not solve your problem as you still have to assume that will not seven might be compromised at some point in time and if you haven't built the additional stuff around it once that happens it's the soft chewy Center problem again go ahead not necessarily so I'm encrypting an untrusted source I'm encrypting an evil actor actually so encryption helps but a shun doesn't actually so serve save you from this problem because I am one got seven which means I'm on the other side of that TLS encryption I have access to those TLS keys so I now sign and say this is a trusted packet because I had the key and I send all this bad actor to the other side the other side is going to trust it because it was signed with the right key because that key was on one not seven they keep the encryptions not going to protect you from that they'll say encryption is only going to enclose the data and say it came from someone who helped us key it does nothing to say that that key was not compromised right so there's a remember remember just because i'm paranoid doesn't mean that everyone's not out to get me so so let's look at a little bit about how this might work so in a calico model I've got a couple of servers I've got a key value store that basically holds the state of the network what should be able to talk to what so I've decided I'm going to create three different containers container a B and C and then attach some profiles to those containers so container eighties can you have two profiles it's a load balancer and it's in the queue a stack completely being and see your web apps the load balancing profile says it allows traffic on port 80 in things that are web apps however many web apps are doesn't matter the web app profile says that it's going to allow traffic from port 80 from anything from a load this code that's a load balancer in the infrastructure the QA policy says I'm going to allow traffic inbound on port 443 from a block of addresses cystic you a robot's somewhere else in the year in your organization and pub says allow for 43 from anywhere in the world so those are the security profiles you've defined and you've attached those profiles to some workloads so what happens when local O'Day shows up so missus launches this lunch is work loading an agent that sits on the compute server looks in the key value storing says I just got work load a what's its profiles and finds out those profiles are load balancer and QA the solid been goes back and says okay well are the load balancers means there's no load balancers the system now so it doesn't do anything with that policy because there's nothing to do but in both a min will allow traffic inbound from QA robots so no work load a it can be talked to on port 443 from QA robots and everything else is denied workload be shows up and it's a web app so Felix goes and says workload be what what is it oh it's a lot about you doesn't says well web apps I need to allow traffic from load balancers or low bouncers yeah maybe a cold cold one so on workload be a while traffic on port 80 from DB eight Cohen cold one similarly I will have a web app so I update the rules on work for work load a that allow it to talk to a web app talk to deviate going on to same thing happens when workload see shows up it's allowed to talk receive traffic from a and a is allowed to send traffic to see so interesting thing to note here is just because aliens to send traffic to see and the rules allow that unless see allows the traffic from a the traffic can't get there so as look let's come and go these rules are all updated dynamically when the workload goes away its rules go away now it's all working you decide that you're going to want to promote this from QA to pub to pub to prod so you simply change the label on workload a to pub when you do that if it looks notes that security policy for a has changed updates its rules to instead of a long 443 from QA announced 443 from anywhere in the world and it's not a publisher service whoops didn't work just go back and flip this roll back and say it's back in QA and it stops being all talk talk from the outside world the idea being here that where were these workloads go I only wonder the rules are necessary to protect that workload where it is and it's dynamic so even if a gets popped it can't do anything with B or C outside yes so the updates so Felix is a fun one it's getting data from at CD in our case is the key value store at CB is a consent ref based algorithm so long as you have a chrome it's going to keep running if etsy d completely fails and restarts the traffic that was allowed in the network when it failed is still going you just can't change policies or update and work with certain workloads until the couple seconds it takes for 4x you need to come back there is no central controller here this is one way to get to scale each server does these calculations by itself and only for its own workloads so it's a Venn diagram the both sides have to agree to communicate this is a way of doing a dynamic policy and since no one has noticed you all lost the key chance to get a cat may sauce doesn't support v6 yet guys so come on I was expecting somebody somebody should have caught that one so this is all iptables so these are all iptables rules they installed on trusted zone so in the opening space on the root container the luton network Ling space that is connects to each of the workloads each of the containers we've tested this we haven't found a scaling problem with the rules yet we have tested up to 16 matches in a row and it's an order 1 match so performance does not get impacted up to 16 that's where some of the fun sauces is how to bobos rules so they're efficient we've invested some on time and doing that um but so that's not so much of an issue we can do this today in container world we've tested up to a thousand physical servers 100,000 containers containers spinning up at 150 containers a second man the system works and at that rate 99% of the packet 99% of the containers have a time to first pang of 10 milliseconds for less that's propagating their routes installing the policies on both sides and everything for ninety-nine percent of those hundred thousand containers it happens in less than 10 milliseconds yeah it's it's up to you so basically their IP addresses what pool or pools you decide you want to give to calico it is certainly possible to send we have two pools and we have a set of addresses in 10 / 8 inside the data center but some of my work loads I want to expose the outside world so I give them I'm a public address pool too and you basically tell calico when you tell mrs. Cooper names or whatever Mace's here we want that workload to be publicly addressed or privately addressed yes so when you calculate lube fails so let's say the server hosting work late a in workload the just blew up caught fire smoking ruin a couple things are going to happen main so this is going to figure that out and launch aim be somewhere else at the same time that's not I don't have to do anything right now so does that or should do that didn't asos will reap in those up felix is no longer there those routes are no longer advertised when mesa says in workloads a and b are gone that gets updated into at CD and in this case the Civil history we could see when we roll along traffic from 2001 DBA Cohen Cohen one because it doesn't exist anymore the little spoons up and it's deviate koolin koolin 54 that will get update with 54 now my load balancers back it's somewhere else they be camping this is an interesting point you have to assume that this is a dynamic world with a high rate of churn by doing this the policies are only rendered for what's existing in the network if that happened and you had to spend up somewhere else and the firewall rules you know didn't encompass the load balancer being on another server because on different subnet GU spun it up and you know sort of still isn't working why isn't it will I have to open a firewall ticket in this case the infrastructure handles that because it's tied to the behavior of the infrastructure itself yes so basically addresses and remember used when we get potable pulled off and that workload goes away that's recorded in that CD so I then returning that address to the pool in I Pam so I opinion something more than another structure within that CD the address assignments maisonette court never chrysler tells us the workload has gone away and then we do the appropriate clean up with in calico so go ahead right so we'll talk about that any other questions I owe some cats to folks so one trying to remember everyone that asks good questions so who wants a cat that asked question I recognize you there you go next who else I've been doing this okay they're over there we've got more cats over here we got the cat gun over there and I got one more before you have to resort to back up over there okay there we go meow ok so there's another issue so we just talked about security and this is how we secure things there is another issue which is mace och a proxy this is the problem you mentioned earlier both those services want to bind to port 80 they both advertise port 80 their poor client doesn't know how to do a Satan is 100 s VR records SRV records well that won't work you can't do that so actually the other application gets screwed and has to bind to port 8080 and figure out some way of telling its clients buying departe dat instead because I only have one IP address out of here so this is a problem basic simple this is this is a problem not just in proxies whenever you do not and whenever you do Pat so I must be able don't try and put services behind port translators because you will end up with these kind of issues also it wreaks all sorts of fun with things that are tied to IP addresses applications are actually tied to IP addresses and ports because now their identity changes so we have a solution for this you just saw it Mason project calico we make all the world better so we'll talk about a little bit about now how we do this in reality the main sauce monster right we listen to the mesas master for data about what workloads are out there when we're close being cleared does it have an address doesn't need an address if so we assign that address and what security policies are what net groups it's in etc those are get fed down to that Felix agent on each server and that Felix agent programs the Linux kernel and the iptables rules so programs IP routing in the linux kernel and iptables roles in the linux kernel there is no bridging there is no switching there is no BS basically all of your interfaces connect directly to linux kernel and there l three interfaces workloads to work loads on the same server training ping one another you're going to see a router hop in between which is the server so all routed all the time if we need to establish routing beyond the server which is most cases we talk standard routing protocols out to your top of rack switches your spine switches so the entire infrastructure knows where every container is named point in time we use bgp has a general rule um it's scalable it's it runs this thing called the internet which i think is probably bigger than any of our clouds some people may not think not but it probably is so we know this sort of works scale if in a public clown we'll talk api's directly to the to the layer to do the the various API for an ends for the different cloud public loves some of that work is still ongoing some tight API work is still ongoing let's talk about net modules workflow so we have an isolator module on the agent we have the master the framework in the Calico plugins so when launched a task from the framework we submit info to the master the master does a lot on launch task for the net info to the agent isolator module the agent isolator module name goes and gets an IP address from the Calico i pan returns out back to the isolator module and then the isolator module calls isolate with the IP that just got in the policy that came out of the framework to the network virtualizer so that's basically how calico and that is what talks to Felix and Felix goes ahead and and instruments the infrastructure and being actual linux kernel appropriately yeah the routes are summarized abul especially in containers and OpenStack we're not quite there yet but it's because the OpenStack ipam that exists today doesn't somewhere it doesn't allow summarization it's going to so we're going to fix it so it does but it opens to what happens in continuing when a given compute so when the first time a workload shows up on a given compute server on a given agent if there's nothing else on it we will go get a block of addresses out of your pool right now it's a / 26 and we assign it to that server songs there's at least one host in that block of addresses on that server that server would announce the / 26 out so now I'm announcing the next sixty three things that show up I don't have to change any routing announcements when I go to container 65 I go get another block at 26 another / 26 in the block of 64 put it on that server and now I'm announcing to / 26 s if I pick up that workload and move its address somewhere else we can still announce that we uses longest prefix match standard IP technology which allows you to say you know this whole block of addresses over here except for this one and it's over here standard IP behavior when we do this for a hundred thousand containers we see about 280 routes at the top of rack in about seven thousand routes at the spine so about any switch can handle this today so that's a thousand servers hundred thousand containers and I walk people through the math if they're interested but so yes we do summarize civilization is a good thing that's how I p works scale just use it makes use me our calico plug-in which is off the isolator module yes implements the isolator so when that gets called our calico plug-in actually programs the rules and then we update the framework say it's all finished and there's obviously a cleanup module that's in there so as things get raped the cleanup module gets called and we reap the resources that we consumed similarly give a little demonstration I don't have the demonstration on my laptop I have been traveling too much I I'm sorry but I have a video of it and honestly this is an actual working video so this isn't hand-wavy this is actually a screen capture of a video see ideas where have an asus cluster with two agents we're on launch of four probe tasks let's bypass all buying the port 9000 and they all trying reach all the other probes so much probes going to try and reach all the other probes we want all these to launch successfully in one and then we want to isolate them into two groups so that two probes can talk to each other the other two probes can talk to each other and they can't talk between the groups so that's what we're going to show so this is how scheduling reports so we're going to launch a cluster and now we're going to show it on the right as we launched an unwelcome we launched four probes and you'll notice that all the probes are trying to bind to port 9000 and you require their ports in the Lotus that tailing didn't launch because I'm launched on two agents you changing any hands one port 9000 so two of them failed in their launch so now what we're going to do instead is we will launch another cluster in this case we're going to there we are no don't launch probes with IP / containers this is with Calico installed so every every container is getting its own each boats games on idea you'll notice if you don't have to define ports because each container has its own IP address it can use all the ports that need once to basis doesn't have to broker that as a resource and when we take a look at marathon they all launched and we're all the full probes in one another's is actual it is what the probes generate is this this data so we have this cute graphic and a is pinging able to reach b c and d and vice versa so everything and paying everything else now what we want to do is isolate them so we're going to launch the probes that are in isolate them and what you're going to see here in a second is that some of them below belong to profile star one and some belong to profile start to sew everything that's in star one should be able to ping other things in star one everything since our two ish build up pain start to and so when we fire it up and look at the probes output we can see that a is pinging B and C is pinging deep if you want to bother you said B is part of start to instead of Starling bc and AVL to pin each other they wouldn't be able talk to anyone be all alone so this is basically project calico working in am asos environment IP per container with strong isolation potentially down to the application or port level any questions oracle before i continue on is this is this interesting is this our people finding this interesting questions okay yep least one thumbs up okay so may sauce would be doing service discovery right so yeah basically it gets an IP address i tell me sews who's the IP address of the container yes yeah how do non containers communicate with the containers non container so things like an Oracle RAC or whatever else has an IP address it's routed it goes to that IP address that this is this is the thing IP basically allows things to communicate so calico updates the routers either by making the API calls or more usually in private environments by talking vgp to the routers part of the switches so the routers normal where the containers are no it talks pudgy p it does so that's part of the configuration when you stand up your infrastructure is the top of racks which ends up hearing a couple different configurations but it's a pairing with the computer servers no basic standard bgp so basically you say ok this rack yeah the servers themselves are 10 dot 64 dot 1 / 26 down 0 / 26 going to the cisco and you say pure with one two three or if you're lucky your switch member you just say here with anything in this subnet when it talks to you so it's basically syrup bgp peering there's nothing special about it that's what I'm saying so it's at day 0 when you're standing up your infrastructure like you configure your switch day you say these ports were on these vlans and said you say here with these IP addresses or in some cases just like I have to configure the switch for anything else that I'm doing in the infrastructure right there no thing config might be a path to do that in the future mom you know net comp might be a way of doing that in the future some switch vendors actually allow you to say here's a block of addresses i'll accept appearing connection from and then really have to configure the propane I can use route reflectors instead of direct pairing with the switches all the things I can do with bgp I know because it's just there's too many variables we're working with someone on their api's I can't talk about who because it's actually development they're doing and were things all of them were either implementing by ourselves or with the cloud provider but they stay tuned for further information the other thing we can do is we can also do a stateless I p.m. AP tunnel if you need to do that as well and I can talk about the tunneling later ideas we don't normally like the tunnel and keep this as simple as possible in some places you have to we have a way of doing that stateless Lee ya know which one is not going to configure your switches or your router's huh John came and configure itself I'm sorry I didn't say that no Neutron does not do that we have might be things like open daylight that might try and do that which is a neutron plugin but you know at that say you're introducing a whole bunch more interesting technology to do something that is really a fairly basic thing which is drop five lines of config on a switch to me that sounds more like an ansible chef or puppet problem rather than a SDN controller problem what ansible shaffer puppet there are lots of people who do exactly that Joe you gotta oh we like your commentary are you this way entire lives you're not playing our money like 10 different requirements you're 24 Joey frisk you a one for staging 14 customer communications all times in great company isolation always it requirements they're kind of complicated you know outside mrs. Kuhn interesting up there p.m. servers and late oh yeah yeah yeahs jodi fetty shelter that pops he said not Jenna says her columns over the stock on hand because silly make you dislike vulture you can sparsity we have no way of isolate ourselves like inside of this big wonderful to me that's really scary price is like really amazing excellent so last pic must slide and I'll shut up and take questions and I get back to beer so we've been met modules when support maces container Iser since maces 26 which supports I paper container IP address management dns based service discovery and network isolation so basically it's there there's the git repo for pulling it down and that includes a step-by-step instruction to repeat this demo that you just saw so you can try this at home and get that pretty graph hanging with one another at home so that's it thank you for hanging here and asking questions and other questions before we call it a night another one yep so I think the first one there is overlain so one of the things we did to make this scale and calico as we separated the two basic things you need to do I need to have reach ability anything should be able to reach anything else if policy allows it it's reach ability and the second is I need to be able to apply policy to prevent them most of the overlay solutions out there have conflated those two if you are in viewing one you can talk to other things in VLAN 1 if you're in VLAN to you can talk to other things going into so they've conflated the reach ability and policy enforcement first of all this is not a lot of extra state i'm carrying around and that state is scheming to whatever the highest amount of scale is for either of those problems 12 that works really well if I'm yourself everything is within one application cluster I never you talk anything outside that but now something in wanting to talk to something into so now I have to build a firewall rule the stitch neolane 1w and two together for those addresses for that port but wait a second i might get launched in any address within that v minutes and i have to open the whole thing up for update the firewall rules each time so all of a sudden by doing an over way that conflates the two I now need to update all those rules and update all that state whenever I want to make a connection between the two and there's two ways that isolation is enforced are you in the right viewing and as a rule lets you break out of that VLAN or that tunnel so when you go to this an overlay model that's sort of what you're buying into another big issue with overlays is when something can't get from A to B I now have to figure out where it broke what layer it broke out you know was it the IP routing between two endpoints in the l3 service in between I was at the underlying transport for the V excellent or was it the VX land state itself so I know you have to go train figure out which later in the network broke before I can then figure out how it broken to fix it in this model how many people here in the hunting is ping and traceroute you can troubleshoot a calico network so when you troubleshoot a calico network is ping and traceroute because it is an IP routed infrastructure the same way you troubleshoot your problems at home or you know today in your office or whatever else is the way you troubleshoot a calico network and we'll have better have more graphical tools that kind of stuff as well but basically it's an IP network it doesn't require lots of additional skills beyond that point yes correct so missus TMS assumes that it owns a zone or something right it mean resource is the thing so I pan is an update dns my sauce dns is doing the service discovery so mrs. TMS is going to do that man you can assign it to be a delegation of your root zone but EMS is separate from I Pam and they're related but they're separate so DNS you would delegate a sub-domain to missus DNS for discovery or allow it to use something else entirely I Pam this is the more classical service provider I Pam service providers really don't care if this is your TV and this is your laptop and anything else they assign you a block of addresses what you do with that is your business so in this case in the enterprise I Pam the folks morning the fabric would say I need a block of addresses in that I Pam you would basically say okay this block of address is assigned to this fabric that block of addresses is given to the Calico I can and the Calico I Pam will take care of assigning it and making sure it doesn't get overused and over signed etc any other questions okay um if you honestly have l2 only workloads that's one use case so if I honestly have something that doesn't talk IP that's a 1 i'd be wondering why you're putting the kind of work loaded mises yes if you have overlapping addresses if you're allowing people to overlap addresses in your fabric most cases in cloud native environments people don't get to pick their addresses are assigned by the infrastructure if you've got a case where people have overlapping addresses calico is currently architected would not be able to support that we actually have an architecture that will support that and i'm waiting for customer tell me they need it as of yet i have not say when we can't deploy this without that but overlapping addresses is one case right now we're in overlay might make sense on the other assignment football and overlay occasionally like I into that earlier sometimes you don't need to tunnel over something because the routers just simply won't talk to you and so you need opaque your your payload packet from those routers so in those cases we actually have a stateless IP an IP tunnel that will work but other overlays might make sense in that case but as a general rule that's usually to get over one thing say between your two clouds and you know corporate IT doesn't want to listen to our routing may have to pop between over those so was it general especially in this environment we don't see it as a many cases where an overlay intrinsically makes sense yes okay so each nude has a block of a dress as a flannel yes so flannel final assigns a block of addresses flannel then normally tunnels that anyway so it's basically a local ipam assignment is all rather than a routed infrastructure they usually still tunnel you don't have to but that's pretty much all cases it's what they do um but yeah we're not the only ones who have done an eye pan for cloud environments you know we think ours is pretty good but you know if you know calico is more than just the eye Pam huh so thank you forgot that the slide that there was another couple slides back there right now what we what we restricted and why what we want to hear from folks or want to achieve by nearly support Marathon Man supporting the frameworks some people in this room have talked about developing helping us develop for other frameworks I expect to hear from them after this meeting but we'd also be interested in hearing from folks is what other frameworks they would like to see supported by something like calico we support the doctor do via the same network modules with mechanism on however right now the darker do use is a different networking model using a doctor's live network which isn't really well integrated with my sews so this becomes a little bit of a race if you're wanting to run the docker container laser it's a bit of an issue right now if you're you know so option a is wait for universal container Iser on which will will be able to use the the regular networking model we've been talking about here if you really really want to use the docker container Iser right now come and talk to us afterwards we've got a couple a couple of options right now because some people can't wait for the universal container Iser that's another wishlist universe container eyes are actually getting out and deployed and i would be useful attending relation of fine during policy control right now a lot of the fine-grained policy control i was shown in the demo I can't really represent today and may so it's not only the API frameworks so we'd like to get that more fully integrated into my Sosa marathon rather than side loaded into our data model be a secondary pal one step in sobbing would be costs something we're waiting on old support for container network interface model so Cobra Nettie's folks have done a really nice networking model called CNI it's also being used by rocket and other things would be really nice to get the same CNI policy model in May sews that would it would nice thing about that is pretty much then everyone minus one major container vendor our container framework would have we have the same networking definition for it which would make things a little bit easier for everyone so in summary run now I paper container coupled with policy control from asos I think this is a really potent way of deploying next generation applications that are scalable resilient to attack and just generally let you get about your business rather than worrying about the network and we do that with the cat 