 I would like to just give you to Chi which are easy pie from let's talk about the depth at the end price nervous because I prica whistle okay great and yeah that's what I wanna talk to you about how we microservices with our customers and of course afterwards I'm ready for discussions I think because it's recorded I think they should do the talk at once and you do a little questions afterwards and so let's get started first and the key messages which my point of view about what you should take away from there it's a problem so the first one is already won many people do not agree so what I say here microservices is to work on right and i will also explain on several slides my that we sing it that right and afterwards we can discuss just Tecna message is what we see is that integration and everything for success um when we build microservices at we don't care if you call it ESP or something else I will also talk about the branding and the terms and product and so on and all these discussions and yes it's a smart n points and that pipes what everybody knows about Mike reserves and that's absolutely fine and no no argument against using products like an ESP or whatever you call it and it's that one I will also talk about the use cases from customers we see what's really the benefit our customers get is when they correlate all these different microservices Monday and combine these events to get added value out of that and that a no opinion is really change our customers where they really add a value after they implemented microservices and then how they correlate them the three things like a lot management like processing and I will talk to you about several different tools so it's not like to cook niche I will also talk about open source tools and also the life evil which I will show later i will use open source products like em Cloud Foundry is platform as a service or some places service which is not typical so you will see a lot of different things and for your channel first a very short motivation about why we are talking with our customers about micro services and really they are coming to us so it's really a libero they are asking us I how can we implement microsurgical then nevertheless i will first talk a little bit about our point of view about an enterprise service bus because especially from a micro service perspective many people and many people have an inter press service person i will discuss here from our perspective because as many others in the worst service bus it's just a technician elastomer like Jane is our HTTP can be many different definitions and then I will shortly defying Microsoft so we understand it in this relation and I think the kiri of this talk today is what we define that I he nature and use requirements when we work together our customers from to make them leverage microservices i will show short life amusing and of course some typical products but also others like cloud foundry and life do we develop and deploy a micro service to the cloud how we scale it also how we monitor it and that stuff and at the end of the talk a little bit about the challenges we set our customers so first um motivation and the key really is that they dig a digital business which we see everywhere and that's really not just on by the analysts at all the enterprises and have implemented on these days so I just want to give you one example of a customer and the sacramento kings which is a basketball team in the US and they are building a new Savior right now 20 or 30,000 seats and what they are doing they are really connecting everything so every seat has an IP for example or they can analyze all the information but it it's 100 interpreter so I'm Sacramento Kings what are they doing and they are really integrating everything but important things it's not just about their team and their company in their software they are also working together with a lot of power restaurants and sponsors and all of that so it really begins when a fan drives to the stadium so when he takes a look at mobile phone in the car and he already gets informed by you should park because where we see this or you should work on that party got something like this and then when he is going to the stadium he gets for example a push message because I make an upgrade for better seat because it's available and after the game when you leave the game you get a push message for example because our restaurant is a lot of three seats and all of that is happening grid I correlate all the information about the different customers and their um what they are interested in and that's in the end only possible by the way which we present or I pressing the nine th saturday and with micro services are you really flexible to do all that and that I think is really key because this was just one use case we have many many others in every different brand and vertical so it bangs it echoes retailer whatever it is in the part we see all these requirements everywhere and the key here really is um so we are not saying corso I mean that's also a ton people still think I mean that might be true fifteen years ago did someone from IBM sighs guys it's just I the MIT go only to go right now that's not possible before so you have to go standards and you can use frameworks for that and the product for that and combine all these things the kiri is that you have to be flexible and integrate all the different channels and context of your partner's like restaurants in this example before and they will also know just what you have to work with them together it's absolutely fine tequila is to be flexible and so on also what we heard in May eight and it's a good site listing for the community for intimate motivation here you guys that applications created today using the good old traditional architecture will be a business constraining legacy before they call me Ted and that's in the end really true and it's been dead again last week epic customer it's not approach it was a 20 million dollar project and now we are informed that they want to replace it in asking us if we can help them and it's not even completed and they already replacing it and we have seen that so many times in the last 10 years with SWA projects because it was a lot of complexity but there were a lot of problems also and therefore i think is worth it customers are also not talking about this microservice idx be more flexible nevertheless unlettered forced us about the ESP the enterprise services as I said many people don't like the term or a product behind them and absolutely fine with that but one thing before I begin is really I have done this talk two or three times last year in Germany and many people said to me i have used on USB 10 years ago it was horrible forgiveness scale the tool was bad and so on so here it would really have to say this change today on these tools works they scale and they are easy to use and it's not does not let it stick or open sores like yourself Italian or any of these though they are also working it's not like 10 years ago that's only very important to understand if you really do not like it is then take a look at an more than piss pee and then it's absolutely fine if you do not like but nevertheless what we see here at our customs is really that I have a lot of different applications its legacy applications its consent job applications new things are coming like in those things like a coupe glasses now everybody wants to your spark and so on you still have the mainframe and host integrate you have the AC based system or ERP you have cloud service like Salesforce they all have to work together and especially the big customs which took owners or IBM Oracle for example my custom has insomnia Lufthansa watch upon which bank which it even comes on really the big ones and they have so many different applications which they have to combine someone to get very old for example twitch upon a charming right away they have 28 different systems which are just used for defining raid arrays with all the different concepts and I wanted all historic to get us on whenever in us so it's really complex city which you have to solve and if you now take a look at the brain is 0 because it's when someone talks about an ESP what do you mean with that I mean here is he seen the past you talked about application integration then now about service integration in the future maybe about integration of everything because there's in tired of things and whatever will come in the future nobody knows they passed by the broker then we today have the ESP the bus in the future or already now many a people people are talking about a gateway and the same for applications which is a service or in a tiny picture via the services and today we're talking about micro services and also got AP is so in the end um I don't see much difference between an API no survey study again that depends on how you define it and so look if you want example about this brainy because it's really important if you talk about ESP you have to think about what do you mean with the term ESP so for example a tip corn we're doing integration even processing for 20-plus years and if you take a look at the past and that's an idiot 2000 and there everybody talked about enterprise application integration eai it was to turn every man def used IBM software gr equal all of them 2005 the change everybody had to use a service when did I detector and sometimes it was also cold and even drove an architecture so the term strange to Lewbert sometimes it was changed a little bit but in the end it was all about integration about message embedded words using different standards integrating all the different applications 2010 and yeah there was still so in a tiny pic children ESP but there were a lot of other things like business activity monitoring or other things like complex event processing came on top of that the branding changed a little bit features under they would still same and if you take a look today or last year 2015 now the windows are talking about API management you have to search through the services and you expose them and now it's called a bre or sometimes call it micro services which we expose via API whatever you want to call it the same story like a typical cosplayer Bella stools or if you take in there if they are old website it's the same and also by the way the business works the integration platform for tip before not 20 years or so was never branded yes but nevertheless everybody thinks about it isn't is that actually about about a branding a little bit and in the end if you take a look at Wikimedia what is on espn's in ESP source software an HMO and they but it is used for integrating the different system some powers and standards or also with the ocean enterprise application integration but now many people think about it as an ESP is really central integration platform and I will come back to that later when we see their micro service definition which is a chorus tunnel it would say with red services on there they criticize exactly that of an ESP that nobody should use on SP because it's the same building in the middle and it's complex with people and all its processes and there's the view of some people of all ethnicities but that changed a lot and since many many years and many usps and again not just take over also getting to look at Natalie nice piece of apple sauce once or jboss they in the meantime they are more central role anymore so they distributed messaging middleware big bones where you can integrate and the different software and scale easily and you do not employ everything is complex application you really implement integration services and deployed by themselves and scale each service by itself so that is what tip stammers are doing for five to ten years they really they implement not big projects but small integration services and they deploy each of them by one so they scale one service how much they need it and so in the end when you later take a look at the definition of micro services it's also what everybody's real estate it's really a key that you think about how do you define the SD and then there's also the hashtag no ESP yeah several people are now we're talking about be there and this one is a really good one I can really recommend it in a building from gartner analyst of your world probably and they have a really good content here to explain why do um customers using ESP what is used for and I will talk about it in a minute but in the end its integration platform and nothing else when I have summarized in one sentence on the other side um there are other windows so for example if you take a look at econo a kind of former so what software they are offering an API management solution and um they say at an ESP is dead and too complex and so on and then if you take a look at their tool their API management solution and what they're doing is going exactly the same like the SP of all the other windows it does graphical mapping it is connectors the different systems and does the orchestration and so on so it doesn't matter we define an SP API management in the end it's about a few things and so it's really now after lot of slides I'm high definition for today for the term ESP and what we see in our customer see so the grinding does not matter so as I said typical business works isn't even Brandon ESB um what were we care about in our customers is really that you use a flexible distribute in a scalable infrastructure where you can really deploy any service by itself and scale by itself using continuous integration and all these things to use today no matter if you use just coding and frameworks or source favors it's absolutely fine but on unif use and ESPN in this term here what would be interesting and SB it's absolutely the same from a development and operations perspective so what do we use on SP for for integration definitely that's absolutely what looks like orchestration or routing correlation that's the things you can use an ESP for easily because it provides the willing to implement that easily um it's about many different technologies so when we talk about microsomes as many people just talk about rest I come to that later again but I think you cannot solve every problem Forest Service it's a synchronous um so it's call in the end and there are other things like my sep sharing with WebSockets or other standards like in qtt and which are built for inside of things and I knew all that styles and therefore in the end it's not just about rest usually at least in our experience that the big customers very complex scenarios and the key i am hearing this from women customers use our ESP they read it below his services independently from each other the first analyst interfaced like rest HTTP like so like JMS or whatever i want to use and they build it integration and all these things you probably also use the frameworks so that's really the end what he understand on ESPN I think that's very important when I go talk about is the ESB def are already fused with microservices dead 3 our definition of a kiss p I think that's that's really important and now we're the micro service meet up so I think I don't have to define it a lot and even for Mike reserves it's the same if you ask five people and play five different opinions about what exactly is a micro service so mine was the ending you really use a micro service implemented a limited set of functions and much more important causes that you develop the glory and scale every service independently there's the key and therefore and you can be flexible because you can change once those are changing all the others and also the same word all the computer up and I said and then let you had a net benefits like Charlotte I'm results and the increase flexibility I think that's really key of micro services and the funny thing now is um well we told our customers the same ten years ago remember some of the basic idea behind so what if you take a look at for example to us urls books there are very famous or books salsa pages they define exactly these ideas and I see it our customers so if you want a really sounds like so is it's one and well I think from the basic idea maybe it is the same very similar um but it's the service under pendek just we see it our customers are much different than they should be and that's the key problem one reason is that the tools when an open source frameworks were not ready for that ten years ago there was no contains Nick ray containers whatever you can use today for me flexibility and ease of use and so on so what what do we see now today what our customers want to implement with micro services and what they also wanted with you 10 years ago they're so up but they did not because for several reasons complexity or tools or organizational problems and so on so and that's really what we see now with our customers implement under the term microservices so they do not commit for any unique technology they will not put everything with typical or IBM s or they choose the right tools for the right job and that's absolutely a good thing and we have no problem with diverse only fine and the key is really greater flexibility of your ID teacher that you can build and deploy its gate every service by itself let's really huge fan and you hand the end of each services its own life cycle as managers product and also the key as I said industrialize deployment continuous integration some already you step off so these things that was not our little 10 years across because the frameworks and also very important point when you talk about Microsoft's okay everybody stares dumb brutes and smart end points instead of a heavy day ESP that's in the end absolutely fine so the key here is nevertheless that you will still have to integrate the different systems as i said i'm usually you do not start from the greenfield if everybody willing no but you start with many exist applications legacy systems and very complex motor lives and all of that at least it'll be customers that the customers regard for cliff and the battery and now i think really keys of how we implement microservices with our customers and make be honest many of them also still call it's war because it's a defined term for them and it's a strategy so defined really important thing is how you realize the contents under the hood so I never start our discussion about is it so noisy is B is a micro service and the real thing is dedicated benefits and a flexibility or yeah as I said now a key point i sling of this talk is today a few tech chure how do we realize that our customers and in the end most of that i will also show released shortly now if you know there's the service contracts have important of course and what's also important for microservices you do not just with new reserves as you also have to expose both services as flexible microservice um the other problem is now you had a micro services and you have to discover them somehow manage them and make them available to others or for usage you I forgot of services we also have to coordinate across different micro services or services you have to manage the complex deployments and what's what's also key in the end what many do not think about the beginning is the correlation across services on so let's take a little bit of people look at all of these service contract I think that's really clear that was always available in different technologies or whatever it was um but material three UFO service provided a service consumer and they have to communicate somehow with each other so I think a service contract whatever it is it's necessary and if it's just just rest HDPE interface in the end that I was also define I do somehow I think have to know how you can communicate with each other and what do we see in practice today um I would say mostly we are still seeing superb service our customers because its many years old and sophisticated in the meantime in the meantime it really works very well and that was a problem long time if all the ws star standards but in the meantime it works very well and I it's still I could stand up for some purposes so for internal communication with also a lot of benefits of so people know I do not wanna snap no discussion so presses residents of what I think it also has its benefits I'm nevertheless of course in the meantime you talk a lot about rest and you build microservices nevertheless also what we see and not just our customers but also in every blog post and so on and it's not the real rest which is defined in this decree dissertation with a was an indie stuff so on hypermedia so I've never seen that like customary I in the end customers define rest service operations which they implemented for gate for post and so on I'm from our perspective that's absolutely fine because it works right now works good morning in it also I'm what i think is very important and i said that before my opinion messaging is getting more and more important because of things like things same source predictive analytics are you had to process millions of messages so for example deposit tool which is called FTL FDL stands for faster than light and it was the engineer will build it and made that name but with that will or messaging framework you can process seven million messages per second so just if you get a feeling about how is changed and this is not really a good thing to implement with restful HTTPS internal scholars and so I think today for Microsoft is usually use rest especially if you do not just do it internally but also on to the external world but I think we will see messaging much much more future also for micro services we will see what what standards and will be most views will be there Soviets or impurity or others but I think we will see a lot of our messaging even in the micro services discussion again I especially talk about our customers where I see those of you might have not experienced and of course we can also discuss this after the tour so after service contracts what I also said um you have not just build new services but also from exposed existing applications and service or as micro service so of course the best cases that you already have a service-oriented architecture you're already using services and maybe put some other services which will coordinate services but also often what again many of our big customers of a lot of my sisters have to do it build services on top of their one application so even technologies like the IBM mainframe are supporting web service know that you can expose parts of it as always to the outside world on this slide again you see em sometimes I'm not so clear about what it when do you use to war or service or micro service API in the end it doesn't matter what what you took whatever attorneys for that in my opinion and what's also relevant to what we see is other services like soft as a service almost all of our customers in the meantime use some kind of software as a service in their enterprise like say this was for crm I think it is every second or customers in Versailles as for Syria and you do not have any control or conservatives nevertheless they have to communicate together the other ones so you again have to integrate them someone and I think what's important here and I mentioned that also the beginning is this public about snore endpoints and dump types like it's defined by Martin fall at these guys and the only problem i hear i begin with because the year you read about this is excited and from the market four o'clock and here you read about the ESB which of users of this dedicated facilities for message routing choreography and so on and what I don't like your redirect one and he's a choreographed using simple rest assured opus relative complex protocol such as WS choreography or people or orchestration by an essential tool and that's why I explained for a long time in the beginning of term ESPN what we understand what our SP is at least and because that's simply not true on this definition SB is a centroid broker and it uses people and WS correctly fee and so on so in your life Tim or later I will show you how can we put microsoft is for example with red services and then i'm in the end to compare or tip korres services with rest service pin with a Java framework and you can also combine and it's are so defined but you use or our customers use our tool to build exactly these micro service which are defined here not a problem they're just using a tool which terroristic code but the basic concepts and exactly the same you just use another tool or another framework for that so in the end yet it's just the summary for I said I'm yes may be defined as defined that this talk has nothing to do with WS our people are all these things in the central program so i will show you a little bit in life do you know what difference in the end is um that our customers often are the same as you probably for the other window system they took a look they take a look at for example a total cost of ownership how long does it take to build and maintain the services what about warranties or scalability about twenty four seven support and so on and then they have to evaluate sometimes use trust adobo sauce forever and pick your own application on the other side sometimes you use a product like from tip or idea to bathe your micro services because you've always it's a trade-off and you have to think about slippery elm and interior of the products like with decorah IBM I'm use their data graphically really the service record is generator and the village um and as I said I mean even if you're building microservices you still have to integrate a lot of different technologies and products so I don't see a customer integrate anything with rest because it has many friends yes big essay p of limitations and many others and here again you can hold everything absolutely or you can use such a tool where we have all the connectors out of the box so and it's always a trade-off you have to think about what's the right one for you i will show you get in and navigating their life table so um the third point is discovery of services and i think that's also very important if you talk about natural services um that here the world is changing in the meantime also at most enterprises i would say today open maybe I economy and if anything is here here is nobody's talking about service or microservice here all their vendors and frames are talking about API is an open API again so the services API it doesn't matter but the key difference is that in the past I'm how do you communicate with partners and with external applications use negative things like EDI EDI fact which is absolutely complex to integrate and communicate with or other p2p solutions or ftp files ever almost all of our customers still are using five runs seven batch processing instead of real-time processing they know that they want to prefer real time processing but it's not so easy because it's a lot of effort of course but they are all going that way to use api's so for example I'm two weeks ago I was a advanced more which annoyed full of cancer and Dave exactly this issue and if you if you already want these loyalty programs and in the end it up for me it's Lufthansa its own hotels and if you wonder why do you get your new points up the two days after three days or if you fight with united or delta and then you get after one or two weeks it's because all the systems are still integrate with the legacy with the oils things and this is changing this place so all the our customers here are changing to this way to use a poke maybe ice instead of the complex integration with batch processing and complex data formats and so on oh maybe I am I think it's really key importance of micro services and three example if or maybe I mean probably everybody knows pay Paul and make all phosphorus just used for ebay for paying transactions in the meantime almost every shop you buy something you can help a point and the business model behind is that I get of every transaction and there are they earn billions of dollars every year the second one I'm not some probably also many of you know and do a merciless implementing everything with an ABI everything as a service on micro service whatever you call it and everybody can use these services to get lots of instances with linux or windows or just storage or a to cluster or so and it's all available as a PR e and they get money for every hour you use it and then you see the next benefit after and that is similar to me when i had in the beginning which is a chrome Kings in the stadium where everything is connected so everyone has these services and api's and you have to combine them to get their value all of it in the Sacramento Kings example they were together with the restaurants with the sponsors and so on and here you see a Domino's Pizza was the first one I'm returnable while enablement are they integrated different api's so they offer their API to the outside world oded for example a hotel can integrate this API the hotel website but under the hood my concepts they are integrating the paper API so here you see all these different abis or services or micro services are combined with each other and that is very reading attend and most benefit than all of it and I was sort of one or two examples about a polygon here so on iphone has built their own solution for API management they built their own micro services and then they have the AP I gateway on top of it to publish this to other ones like you see here to bother go to ebay or to uber and to online websites and that's the end really one part if you implement all these different microservices you have to make them available to us that they can use it and therefore you use what the vendors in the mls today called API management API management is available from different vendors it also source framework such a pose and so on so again or you can pull your own of course nevertheless I'm take a hurry this year first you create your EV is in this winter again too late business works or you wait right your java code for a service or a micro service and then you better proper out of it usually most or customers use a portal or everybody can register to the portal and try out of services and test them and read the documentation and subscribe in different plants and finally then um this API is a distributed depending on the custom of course button for many of our customers worldwide so often that a customer really just cares about the implementation of their business or integration logic and then he deploys it and makes it available to the public and he doesn't care about scalability in about distribution over it so that's what what the tunings are doing for them here again if you see the examples of Netflix and pay point on they are building all of it by their own but most other companies which are not that I can change them they are using either open source framework or progress for them these two together again work work most gssapi management and so if you take a look at these frameworks and tools for API management and the key I think from the end-user perspective is that API portal and under the hood you at the API gateway where you define things like security authentication authorization but also other things like struggling for example that if you buy a product and may only five dollar a month you can only lose one thousand service codes and if you want to use more service quality of pay more and these things like struggling are cashing in subjects implementing the Gateway and usually there's there's that I'm part of its a biologics load it both the service provider and the service consumer can see how they're working with services or micro services which you use the fourth part of the NHL which implemented customers is then when you have a lot of different microservices they have to work together because otherwise it doesn't make much sense usually is over you have to coordinate them and hear it any of the topic smart service I'm damn pipe um no heavy weight is in the middle so that's absolutely fine but nevertheless make your coordinate I'm some and if you use a tool item like an ESB then I'm you again you do that graphically and build your new rest service for example which coordinates other rest services um that's one of the possibilities are here the fifth one um I think that what is already clear because so many people are talking about it managing complex deployments and a scalability that's in the end what you're talking about continuous integration continuous delivery which build tools leg and and may even a grayble and then combined with Jenkins or anything like this very do it automatically I mean in the most projects I see today at customers and again I'm not just with java coding or source code but also with the tools of the Red Nosed typically Oracle usually they combined with continuous integration frameworks and here again we see that a lot um that they combine it with soft words donuts maybe I'm not going to make the proprietary windows say and they've changed a lot so on I started for typical two years ago and if you talk to other people who worked there for 10 years and it was really a proprietary company there were no oh api's you could not extend anything you could not build your own plugins or connectors you either bought it or you choose another winner or something like this and in the meantime is changed a lot so you can live on set with your own life thousand plugins and extend the tool but it's also all of the box support for a lot of different framework so for example what I will show you later I hope we do our services of business works um right now it supports for example a cloud foundry as platform as a service and I'm later this year we will support dog hell and then you can deploy it everywhere using google natives or any other thing that's what you want to use and here really and it's the same for others like IBM for example if you read articles about IBM what they are implementing right now they're doing a lot with open source and add there i'm doing on top of course and to sell something and total eight value but they are working together with open source today not against it and that's really also one of these things when you discuss about vendors at ESPN dayton and with microservices you can combine all of this very well in the meantime or at some times it already uses it so for example I showed you even a minute before example in the meantime use sweater for a definition of Orestes documentation so we integrate two different open source tools or or or make log management and monitoring solution is based on apache camp and elastic search so the vendors are using the resolve of course also because it leverages one more example you have ID netflix again the great thing about Netflix's that you can read a lot of food articles about these topics microservices containers delivery and so on and they describe the same same thing your daddy of them have to innovate continuously and you have to be fast and flexible like in the use cases sacramento kings mistake you have to add new partners or change some api is and so on and that's only possibly if you do things like microservices in combination with continuous integration and delivery the last point um with solidity and correlation across services and this is what I is the most interesting one because it really it's the most value to the to the micro service in IT tech chure and in the end we see two different things here which our customers to the first one is that as we have a lot of different micro servers of different technologies and all that stuff um you have to monitor that somehow and it's all distributed and different technologies and unstructured stuff and so what many customers do in a meantime um they implement some kind of what was holiday past local management in the meantime then I just talked about IT operations analytics but again no matter what's the term um the interesting thing is that you really monitor all the distributed I preserve is this an information with one framework or tool to talk em I always it doesn't make sense because if you have hundred microservices different technologies you have to get the information out of it if there's a problem or if you can add some media center or something like this so you if you take a look at a different framework and so on alternative form of management it open source wants for example elasticsearch looks H gabbana says take many open source of people are using and or great log is another one in my team or later I will use paper trail which is one of the software's ourselves it's very late break and its goal is really to another is many different distributed locks to money for all of them on to automatically send out alerts if something is happening with these distributed microservices and then there are also the let's say enterprise vendors like splunk is especially focused on that or other big windows like tip core idea also I have solutions for that and the key difference here is that usually that is the lightweight software service vendors and there you can do a basic monitoring of distributed knocks and with the enterprise solutions you have first again much better tooling support for it and you can go much more complex correlations and then find out more it's interesting things but in the end its many different options you have depending on do you wanna code use open source or use a product or just a solution or make flower in the second part and that I used is event correlation or even processing screen processing or streaming analytics again many different terms you can use for that in the end what's the goal the goal is that you correlate the information why it is happening so on in the past if you develop some kind of observers who did it change your item in your database and sometimes late how you analyze it sometimes later you find out something happened for example if you find out a fraud yesterday and it's too late because it already happened if a customer already lower left is door then you cannot cross sell anything if a machine already exploded or aesthetic it's too late to replace it because it costs a lot of money and no this is really what is the most added value and you have all these micro services and events and here i explicitly say events again because here often it's not just about soon reverse rest calls but its messaging same source which are sending a lot of information and you have to correlate that while it's happening so to make that a little bit more here let's take a little bit one use case it's about predictive signs on elliptic so that's one of the key topics we see a many many customers in different industries and he experienced about an oil platform and at this all platform they have many different sensors so we will not go into any more detail about this oil platform different sensors and all these sensors send information some every seconds on every minute but it's a lot of messages every all for everything even every minute or second and on what's happening now there are different Microsoft implemented which are sending different information as information about vibration or temperature and voltage a lot of different events and by different micro services and the even correlation and that's really key it correlates the different information of the different micro services to get some information out of it so in this case there is defined like this if by duration spike is followed by a deck static and then a voltage spike and all of the equifit 12 minutes then it's a hive separate yogurt so here you really talk about real time information so here it says within 12 minutes and that's really a sliding window in 12 minutes it's always in real time processing information while it's happening in this use case in 12 minutes in other ones it's in two seconds or something like this so for example financial trading it's a much much smaller window um even sometimes just microseconds that's really crazy but um depending on the use case is different tight sliding windows but you correlate the different micro services to get the Edit value and that's really what we see what brings the most value when you implement the flexible Microsoft's any picture that you can then nevertheless correlate in real time to different information and we see that in every industry retailing for example for cross-selling fraud detection is very important also for retailers for banks and so on predictive maintenance everywhere where you build something like auto mobile or here like oil platforms and select this in kind of things manufacturing so really is used as a everywhere about correlating the different units no thats feel in my opinion the most important i have another slide deck which you can see on my block my dog each other one last year and there i'm really comparing some technologies which are implementing exactly this kind of stream processing so just just a short over you can you still can again use open source framework like a magic playing Santa apache spark screaming apache storm you can use closed source cloud vendors my most like Amazon Microsoft are offering such kind of stream processing frameworks or on the other side again you can use a product like dip your screen base or software chisa Parma I gave InfoSphere streams they let it product again and again the trade-off is and they are much more powerful you have much more features you probably get much better performance and you also get the twenty four seven support four of them the consultants and then you have to do the trade off and we want to find it and pay money for them or do you want to implement it by yourself you can remember everything with both it's always a trade-off what's apparently and this is just one example of what we are usually building a customer's also our real-time UI on top of that so here we are really integrating and micro services as I said usually when here I talk about microservices it's about events so it's not about rest of this is what about message portion because otherwise it doesn't make sense correlate millions of messages and then we build on top of it at you I and here again we have a product which is called a typical life a canard and where you can drag and drop all of that if you use an open-source frame and a javascript and web sockets then you built by your own would of course work the same way so that was a lot of theory now on a lot of information and it now i wanna show a short life to more so to give you a little bit about feeling about how will be one example of we implemented some customers microservices let's take a look at 1i you take just like before I switch the screen so what I will show you how is how you build a different dress services and coordinate different rest services I'm with typical business verse contains an addition contain additional names i said it's really a lightweight a cloud solution which deploys it containers and here i will get there as services and I could be the same way with soap services or integrate anything with chain is a message was over here today official guest services but as you see here again our customers they even do everything with typical birthday use noche azure chava or spring or so also on the same platform as a service cloud in this case we're using cloud foundry and our sauce the caution and that's basically a very deploying the services and I can use many benefits like scalability I can automatically scale and I don't have to care about all of that because cloud family tested from the under the hood so it's out of Bill terrorist services and then I will also take a look at how to love all of we'll use the log management to more in favor of that i will show you a paper trail is a very simple cloud example how you can lock the distributed microservices and then i will show shortly to commercially which is one of these api management solutions which you can use to offer and expose them for others we are a portal everybody can read the documentation and try them out and subscribe to them whatever whatever today is the last part about it then processing demo but that also on as i said i'm an interesting part of it so let's now move to the live demo so we're just yellow is some business works on tonight hie is it seems eclipse-based and what I just wanted was I ever just implement a very simple and resto say to get I a similar feeling about how we do that and here let's say it um it is resources Dublin customers or because I have a customer already so I'm building a custom Eric's all right and i'm here i'm also adding a parameter ID so that everybody let's say in this example um we will get coming for this IT of the customer resource and the resource definition is here a custom x SD so it's a very simple one with three or four attributes but that's basically the idea of the vendors go and so on we also support chains of course you can have Jason interfaces and power said but under the hood the engine under the hood always was xml and your reason for that it not only with exam l and xml schema especially you can do things like practical mapping easily and therefore only windows use it and almost meantime I think are happy with it so because things like performance advantages usually are no reason anything less than other species alone yes it's a little bit slower and so what I'm there for you of the benefits of for example graphical making all this but nevertheless you can also use trans Jasmine's are 144 recipes and social so um let's say here to get dublin customary return a customer so this is really a simple rest service I'm bear a lot clearly a request for a customer ID and then I returned because object information of the customer to keep it sample here and so now it generates a rest service here by the way also if you build a salt web service or any other integration process with jane s or something it always looks the same you just build this in here in the middle and the interface on the outside is here only out of ink generated and um what you typically no duel um if this is a request for a customer venule for example edit from a database or from somewhere else information in this case i will just use log activity i'm here to do something but usually i would here for example use jdbc activity and very a database to get the custom information for the ad huge i hit here um to be honest I have no time to stall the database euro Nemec right now but but the basic concepts are always the same so it doesn't matter no matter if you integrate is AP or jdbc or chain s you always use the same ways you just do it the graphical mapping and that's really and I really wanna hire that it can compare to changes I wouldn't change any time this really works very well even for very complex and angles at least a tip code but I think also add some other members and so here I'm as you see now on the left side here I have the input and which is coming from the get request and in this case um I wanna just I just get the ID because I just have one parameter and so let's write something in the book file under fire videos are function first conquer function I need um just say your first request by custom are and now our second a screaming as the ID so here I poke a clear idea and drag and drop it here you see that so now it maps here and return and this is my rock and but in the same way is that the graphically mapping in zone is always the same no matter what you want you so here I have to output for my for my rest response and here you see I'm here it's in the end the scheme of the customer this is the resource that a customer scheme are identified the custom x SD and so again let's keep it simple here so here just the ID and usually it will implement the other ones for example I would get oil out data from jdbc connection or from a no sequel database or wherever to start or to another rest request or so breakfast doesn't matter so Hank it's really so now it's almost done here's an arrow and that's also um so that wills are really sophisticated meantime so we can do for example here now a couple names and that the the idea is an integer here but i'm getting a string and so let me just click here on the short check and repair and could we fix it so and then automatically as the conversion here and now hopefully it should work and let's now test the service here go to the debug mode and start this application so in the meantime also it's not like like five years or ten years ago and where you really actually Chloe to an external runtime or something like this so here you know really just I'm started SS it's just Eclipse like you write Java code so here you could also integral java code and debug all you together so you could also use the Java perspective and write Java code and combined together debug it in one step that's also possible and now they're in the background it's running and I'm embedded on runtime which is by the way also based on Roy's chair I and hopefully um I did not run error and so I did so what is the same for life famous as much okay then fortunately I've prepared of our kingdom oh it looks the same that's always the problem of life team I've tried to the altar how are going that work so let's take a look at the moment because this is also i want to have deployed to California it's in yet the same as i see it as another looking because i'm looking a host and the pot and now let's try this one so this one is only an hour and when the started on I can as I said on by default we use and swagger as interface language for rest and services where there's an open source framework used by many windows like tables and talent many others and we also use that in our different products and so let's see started a business to me looks better yes there you are elements deployed and now in the browser we see oh yes the swagga face of your casino and tested some rest interface and here I've just an intern I my customer ID 555 and then here is returning informations is implemented for me so now this is a very simple service I said I 41 of course the most integration services are much more complex with linear technology's integrated like as in p in a new brain forever the implementation is always the same it refugee mappings of course for Chinese you have other connection data and for Jane as you have q's and other concepts but a graphical methods and transformations and author is always the same thing and you can also that's also important here for example let's go back to the to the other one right to services so now for example you could also hear if you want to orchestrate different services so if you want to if you have 10 micro services or you have to orchestrate them and you might bid one rest service or social-service over-leveraged orchestrate some and then you can just drag and drop other services in in here and then I'm combine them right here are double click I go back to the other one and this way you combine correlate and all of input and output which you can use for graduated mappings and that's the way you implement all of them so press services chain s and any integration technologies always disc on securities and then the next step now is deployment so let's say we are micro services and then you can deploy them you can use an on-premise engine which is cable yourself in this case I use a profoundly so profoundly as I said some open source platform as a service or you could not have to care about scalability and so on because the provider and dusted for you and but it was a lot of additional features and here so okay so I have different services and I ordered deployed exactly this service which have just seen the load balancer email service and now here you see the service is running on four nodes right now so you don't have to care about scalability so let's say you want up to six um you could do this manually but in the real world of course this is an escape i spritz automatically so if the Lord is in a peak level I'm you simply see a little more different engines and the same way and we closed it down again and platform as a service in this case cloud foundry and takes care of that and you took care about that you just implement your microservice deployed here and the scalability and so on and 0 out of the talks for you and also this is not specific to a platform if others if actually the different maybe but in this case you find other services and my operated here and I bound the paper trail and look management solution so again the log management is you need to analyze the different information of different distributed microservices and in this case I have connected paper trail on C vapor trail here too or my business verse contain addition table and here you see click on it that it's not showing all the box of the different microservices so all these log management tools are the same or we let use a frame of like log stash or a soft as a service and paper trading or an enterprise solution and low blood sugar slang you integrate all the distributive locks of the distributed microservices and by the way along is not always about file but could also be a message even not something like this and then you get all this information together and then with a simple solution like this one you kind of basic searches so for this one it's sufficient so let's do one more call here is it this is a rest service right which I deployed so let's do one who not curl um rest request here and you see here are the different blocks you already see them here a paper trail also coming and I'm not at search for example for customer 123 and year before I I saturated or it's important here I got the host name is a different one because Cloud Foundry is having different instances i scanned it for four to six so right now it's running on six different instances and each one is a different host name go to be a distributed system and with this log analytics tools you can now search for this customer 123 for example and then you see all the different blocks and where this comes in no matter on which distributed notice runs and that's the way I will get the Microsoft is back to get all information back together to analyze it create alerts or to poor correlation on top of that and here is the difference on these basic software service windows they're not really powerful here you can do some basic searches and you can also then create under US and Poisson use case that absolutely sufficient but if you want to do really more complex analysis correlation IPS and then find the root cause for example then you probably need a more powerful tool likes plant contractors or anybody radicals so that's a rock management part where the distributed microservices are again being monitored together and this web package i wanted to show us the API management part because when you all have all these micro services and then you want to expose the daughters and resolution that's very easy our is applause I shall begin to measure and offer but as I've shown before the US market resource and also and here are you see the portal this is where the very end user and dental at api's let's take first I look at where I defined it from service provider perspective so I simply said exactly for this customer API here we have it and here's my customer ID i am with this service and this is again a very simple and mapping i just as you see here configuration I just um in the end it's just a proxy here right so I'm having it one to one but usually in the customer sonars with more complex with more mappings and different rules and security fears of all that stuff shortly and so on and caching but here its reach a stop focusing the engine to show simple example and here i define again it's just a rest service with a get method and then you configure some more things can define things like error handling load balancing if you want to do something specific and all that stuff and after any we have defined the API and you put and pay cash like this one contains different plants and here I've created two planes a basic plan and a premium plan and that's the great any differentiate for example 5,000 service calls per hour for five dollar and then 10,000 for 1000 something like this is the different plants and so this way you expose the vital services and then the end user go in again and here's a Yank user and he can down on use and testy services for example in slow here simply make a call and now I look at my guy customer API and here you see now here I see the different operations in this case it's only 1 i'd only the gap method and what here i can now try it out and someone here is calling it again and here you see the result and then after you would like the API you can subscribe to it sometimes they have 43 isn't a check to pay for it and then you can use this API on by yourself let me just show you four different for examples of custom okay don't then you're deserting yes stay on the same I always think this is not this is just at the pictures this is not relate to it at least hopefully once again inside I guess okay that's a little bit of her because now what I wanted a voice really ap I have noticed is just a customer success story but somewhere you find all the AP is and they are at the same way like here and what I showed you but here you can take a look at the customer is because that goal is really to expose the micro service to the public for example your saber saber is an ticketing system in the u.s. similar to our views in Germany and they are exposing all the api's for flight transactions and for example because they have the information about prices of all the different airlines because saber is the leader in the US and in Europe they are in control in ninety percent of the market and no a knowledge about all the tickets about the bookings about the crisis and they for example our fun oh maybe I where you can compare the cheapest prices right and find out the cheapest flights and websites like fuga de and this one's the expedia they use this API sandpaper to build their own service again on top of that and that's the casing at Yahoo combine different API is expose them someone else puts a product on top of that and then he exposes again to others so for example experiences this information to know which are the cheapest flights and then expedia again makes eighty percent of its revenue by AP ice because experience again integrate into many other applications like Chewbacca for example right and that's the way how this works Microsoft's exposed and used that's the basic if you can i did i'm going to show you said somewhere and we can find a lot of different examples where we can retake it together with okay so i'm almost done just finalized this I told you a lot of great things about actual services and I think it's pasta so the theory is microsoft said of effort and i really recommend this article here microsoft is on a free lunch and that explains the details how complex it is and so the final statement of your article is and considering microservice like I pictures it's really important to not be attracted to a highlight on this one as the challenges and costs are as real as the panelists and that's say the same that super frameworks absorbs and also for attractive cone and you always after speaking about is the value on perfect and think about what you're doing how did the advising the future we will see a lot more and micro services and one reason for it is that their products and friends are getting much more nature out of the box and so I am sure this and we see that especially as i said the customers come to us and ask us ok we can i might do some or the other way around so to summarize again for my opinion i told you today is mike reserves is on a ride home XP ended today from our respective our ESP services or developed by itself scaled independently they deployed by each other a central is people over and integration is the key for success is the left to integrate everything is AP mainframe and also external cloud services kpi's and so on all these use cases very you have to communicate a lot more partners than any past like a lot of things or like the Sacramento Kings Stadium where you have together with restaurants responses and so on and then the real benefit is really and that's really very much the companies will make more money out of clinic seems is the human correlation of the different micro services because that's really what many companies do not have yet and that's what's coming next five years of every okay so it was a laptop a lot of information be much more but i got it i think we can go to questions on any questions or it again i have no problem if our opinions do you see em do you see and ESP as a key to the carnation like you can see the question is will you see a penis be a requirement for the for the correlation and so on the answer is no my ESP back time you can only do a correlation if you have integrated with system somehow so either way from ESP or we have integration framework but just with the rest approach but if you have integrated information care correlated so that's also why most of our customers are just started doing it because before we haven't done all the integration successfully in cal correlated so that's what is always integration and then you do even processing analytic control on your CV system so you have your affectivity how do you determine that garbage routes do you have any supporting tools to learn more exact that's the question is what was Howard we all get information is a pieces that's in something you see here a very senior your CV complex across the ring system and the question is are we get insights over here yeah okay so let's have two parts in the end of it was not the main part of this one well of course and you need to get this inside somehow and the way that works is usually at first if you take a look at least Tory the data and otherwise the data the data is usually starting at to pour some other big data stores objectives and then you use data discovery tools like sport fire or taboo or clicked egg and so on to analyze the historical data sometimes also or even more the meantime data scientists are coming also with our and mark laughs and says to machine learning and find out patterns of historical data of the terabytes and petabytes and then you get a short formula and this commoner we bring into the real-time processing in action but it's the way it works on and for example with tibco video they're really the data scientists can develop an hour strip for example and build a model based on the historical data and without any recording we can put this model into a real-time processing and one example for for fraud detection is that if you take a look at terabytes of data today to find out what might be a fraud and then you have this algorithm and our morning and then we really use this armoni with every new transaction so for example at walmart in the u.s. they have this problem with gift cards and again like many of these customers and they had better processing overnight so only what up in the next days and new boyz you switch gift cards and the issue boarded sup guys were very smart and it was one gift come and went to 21 months and used it all the time but it was only allowed once but again here they only found out after I was done the next day and it was too late and now they use this kind of pet and everything took a look at these patterns of the historical data to find out how the smart guys didn't and when they found it out and I could use this model to implement in real time in now it is implemented each time in a Walmart someone is using a gift card it is processing in real time and using this model to analyze might it be fraud and if yes then they stop this one already used or some scientists okay no more questions you can always contact me via email or so I will not stay much longer today assume Hyrum and feeling like very good today's it's unfortunately today but I owe you like to talk a lot and get feedback afterwards and write the email your questions or things out 