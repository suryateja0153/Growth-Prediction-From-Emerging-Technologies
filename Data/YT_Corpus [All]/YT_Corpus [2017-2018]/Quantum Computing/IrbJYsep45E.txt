 [Music] quantum computers don't exist yet at least not physically but if we peek into the world of mathematics where they do exist we can learn how they might work let's break down the mathematics of a quantum computer into three parts first what is the quantum computer doing second how do we represent it mathematically and third why is quantum computing so amazing part one what is a quantum computer doing the fundamental unit of a classical computer is a fit this have two states 0 and 1 computers take in a string of bits in this example it's a string of eight bits and use logic gates to switch some of the bit like this ok that's kind of a crude description of a computer but it works for our purposes quantum computers use qubits a portmanteau of quantum and bits which is kind of funny because bit is a portmanteau of binary and digit anyway like a bit a qubit can be in state 0 or state 1 and like a classical computer the initial program for a quantum computer is just a string of zeros and 1 but while a quantum computer is running its qubits can also be in infinitely many super positions between 0 & 1 when a qubit is in a superposition it has some probability of being in state 0 and some probability of being in state 1 you can think of a superposition as being a limbo state partway between 0 and 1 but super positions are fragile if we look at it or try to measure it the qubit will collapse into a basic state either 0 or 1 you might know this from the same as Schrodinger's cat thought experiment before opening the box the mythic cat is in a superposition of alive and dead but when you observe the cat it is forced to pickasee alive or dead not both a quantum computer is essentially full of Schrodinger's cat actually cubits are not made of cap Cuba materials are usually things like electrons we're spin up corresponds to state zero and spin down corresponds to state one but I've died grest that's the realm of physics let's see an example of a quantum computation with two cubans there's four basic states 0 0 1 0 0 1 and 1 1 these are the states that two classical bits can be it but there are also infinitely many states formed by superposition or combinations of these basic States each operation of a quantum computation is performed by a quantum gate which like a classical game changes the state the qubits are in let's start our quantum computation in state 0 0 and then apply a quantum gate now the qubits are in a superposition there's a one-minute probability or 50% chance of being 0 1 and a 1/2 probability of seeing 1 0 ignore the square roots I'll explain them in a minute the particular superposition is in is a result of the quantum gate we chose to apply here's one more quantum gates changing the state of our computation at the end of the quantum computation we observed or measure the system but we can't see the delicate superposition remember a superposition is like a limbo between basic States when you observe the computation and look at it from the perspective of G's basic state it must pick one collapsing the wavefunction and reviewing a single basic state in this case they collapse to state 0 1 if you run the same computation repeatedly the final result will be 0 1 half the time it will be 1 0 one-sixth of the time and 1 1 1 third of the time that's what the numbers in the superposition tell you the probability that the superposition will collapse into each basic state so if you run the computation a hundred times roughly 50 times it'll result in state zero one seventeen times it'll result in state 1 0 and 33 times it'll result in state 1 1 this allows you to recover the probabilities and therefore the final superposition of the computation this doesn't seem very efficient with two cubed but as we'll see later it can save you a lot of time with more qubits so what's the math behind all this part two mathematical representation a vector can be a pretty abstract concept in mathematics but for our purposes we'll just say a vector is a list of numbers and the dimension of that vector is the number of numbers in the list here's an important caveat for now to help us get through the first part of the explanation will only work with non-negative real numbers but actual qubits use negative or even complex numbers but I'll get back to that later one qubit is represented as a 2-dimensional vector which is state zero and this is state one and this is a superposition here's the reason for the square root we can visualize the vector on a circle like this the horizontal component is the square root of the probability of being in state zero and the vertical component is the square root of the probability of being in state one by the Pythagorean theorem the length of the vector is 1 each point on the unit circle is a quantum state a classical computer can only point up or right but a quantum computer uses much more of the circle what about two qubits it takes a four dimensional vector to represent the four possible states here's the earlier computation in vector form the formula for the length of a two-dimensional vector easily generalizes to the formula for the length of a four dimensional vector so as we said before all the quantum state vectors have linked 1 the two-dimensional vectors point into a spot on the unit circle in two-dimensional space and these four dimensional vectors point to a spot on the unit sphere in 4-dimensional space which makes it awfully hard to visualize if you have n qubits there are two to the n basic states so the quantum state is represented by a vector on a sphere in 2 to the n dimensional space quantum gates change the system state so they move the state vector around the sphere mathematically this is represented with a unitary matrix don't worry if you haven't learned about matrices for our purpose a matrix specifically a unitary matrix is a block of numbers that describes how vectors move around the sphere when we multiply it by the starting vector 1 0 0 0 we get back a new vector which represents our second state each quantum gate is a different unitary matrix changing the vector which represents the state of the qubit ok here comes the caveat I mentioned earlier we just applied this quantum gate to the state 0 0 represented by this vector and got this state as a result but if we apply the same gate to state 1 0 represented by this vector we get this state as a result what's funny about that this superposition has negative numbers in it and that's totally ok to get the probability that the qubit collapses into each basic state we just take the absolute value of the numbers in fact not only can these numbers be negative they can actually be complex number so if complex numbers are familiar to you notice that the state of n qubits is actually represented on a sphere in two to the n complex dimensions which has twice the dimensionality of the sphere into two the end real dimensions if you're not familiar with complex numbers don't worry it's not necessary for this video okay aside over but what's the value of all this quantum computing part three why quantum computing is so amazing to answer that let's look at the six qubit quantum computation it's computing using a sphere in 64 dimensional complex space because 2 to the 6 is 64 which sounds complicated but here's the important part it only took four steps to find this state if we want to define the same state using a classical computer it could take thousands of steps why the classical computer can only be in one basic state at a time so it has to follow one branch down the tree at a time but the quantum computer processes an entire level of the tree each step so this computation only takes four steps when a quantum computer is in a superposition it's processing a bunch of classical States in parallel but remember what we talked about earlier the quantum computation will only return one state which is determined probabilistically based on its final superposition this means we may have to run the computation a few times to gain the information required but it's still weigh less than trying to compute it classically this small example doesn't really convey how big of a deal it is that quantum computers take exponentially less time than classical computers probably the most famous example of this is Shor's algorithm finding the prime factors of this huge number could take years with a classical computer but with a quantum computer it'd probably just take a few minutes data encryption and security depend in part on how difficult it is Factor big numbers and quantum computers might ruin us but for now your data is safe no one has actually built the quantum computer the problems of physical implementation are tricky like quantum decoherence which means that the environment is constantly threatening to measure and therefore collapse the delicate quantum state before the equation is solved but as we just saw the math is on solid footing and ready for the future see you next time on infinite series hi I wanted to thank everybody who wrote a program computing Goodstein sequences we got so many responses and new are so awesome there were programs in Python Haskell Mathematica Java you guys Rock so well two people leave in the comments well cybernetic ask what branch of maths is this all under that's a good question so ordinal they're usually studied by set theorists and independents results what things rely on what axioms what can and can't be proven up by certain axioms well that falls under logic and set theory is a kind of logic so it's all sort of wrapped up in set theory and logic Eric Dahmer commented that when I asked you guys to try making your own good theme sequence starting from any number he started with the number zero because like any good computer scientist he was trying all of the cases so he'd write to be more precise I probably sort of said try any number bigger than three all right it's a little unrelated to the video but Bob see you left a comment talking about Frances Foods recent speech on mathematical flourishing it's really good I highly recommend it ok that's all for now 