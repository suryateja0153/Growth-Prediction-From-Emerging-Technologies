 I won't say it's good crowd tonight it's probably the biggest crowd I've spoken in front of so bear with me and also for a designer I do a lot of talking so my voice is a little bit shaky at the moment because I've been talking all day and I've signed myself up for even more of that so thank you so this is a story another time tonight it's an experience that happened about five years ago but it's and pretty relevant the the quote of the the title was from someone called Marshall McLuhan he's he's a great source of quotes this is another one and we shaped our tools and after this our tools shape us but sometimes we need to stop replicating old methods with our new tools have you ever had a feeling that a project in working on is just fighting the last war there's something not quite right about what they're doing this is a story about how I changed the medium to hopefully affect our thinking but before I get into that story I want to tell you about the industry I work in so I work for a consultancy called Bob 49 and we specialize in capital markets this this story happens well before I worked for 149 or working in London a little bit about capital markets for those of you who don't know it's basically our economy it's vast so each day six trillion dollars of foreign exchange is traded 2.7 trillion in interest rate derivatives that were if you don't know what they are but it's a big number in Australia in 2015 the turnover was a hundred and thirty five trillion were traded so you can imagine there's a lot going on it's all so fast you might have heard this story our company in the US the private companies spent 300 million dollars digging a tunnel through rock from New York Chicago semi up servers across the road from a from the exchange to save 3 milliseconds so think about that they spent 300 million dollars for 3 milliseconds with pretty big spending back in the day too so Morgan Stanley their matrix platform they believe it was about a hundred million dollars spending they weren't confirmed but that that's the rumors and you can see there by that picture as well that it's sometimes pretty complex and the the interfaces are pretty busy and there's a lot going on and frankly that's why our joint industry I looked at that and I thought look for a challenge that looks hard it's also expensive to access so the Bloomberg terminals which are dominating for a long time twenty thousand dollars Plus subscription annually to access check imagine it it's a lot barriers for people to work in industry has all the screens they're pretty hectic place and some of the trading falls you know I've seen up to ten or twelve screens people have two phones on their desk they have PA systems two keyboards its tactic they usually have laptops as well to have multiple machines so they're going to have enough cards to run everything but not everything is like that we have to cater everything from mobile through to ten to twelve screens at the time it was massive the top one was before 2008 the bottom one was after I was actually working in a place I joined just after 2008 so again challenge yeah quite a mess crashing they're sacking everyone great industry to jump into what happened now about that time there was a platform or so I really like this this framework peace war and wonder so in times of peace in the true market things are pretty stable but you know stability breeds inertia something happens to jump it out usually technology maybe market crash combination of the fear and the status quo is disrupted usually does it fight for survival some people don't know they're in a fight for survival and it's usually played on the old rules and at some point someone figures it out and wonder emerges its new activities emerge based on new rules and new points of value so the challenge the project I was on we were challenged to deliver the following create a platform though is flexible adaptable if we're responsive to customers changing demands and we remember very very demanding customers everyone from yes medium large businesses up through to very professional create common tools and component components I think very very extensive design libraries a rich UI and allows third parties to contribute to the ecosystem so you know they wanted to do a fair bit we've settled into a bit of a structure I was part of the the platform team we serve the number of product teams and then we had distributed teams of across the bank relying on the work that we did and you know the roles are roughly divided between what I like to call the settlers and town planners so the town planners and the platform team our job was to industrialize the application industrializing platform sorry and naval the commonalities and and make it more powerful and scalable and of course work we were working with the product teams who are the settlers establishing applications and working off the of the requirements you know so we after a few months we've settled that in things are going we're starting to deliver but not everything was awesome you know the apps that were being built and being defined so we had multiple apps being built on a platform here think like a little mini App Store they were defined by the organizational structure they were defined by the product teams so they followed the existing product structures we didn't think that they were thinking about how the industry was evolving and remember this is at a time of massive change and then weren't really thinking about how the customers might evolve as well they were really just looking at about how people currently use things and I had a thought where we're just making it easier to deliver the same functionalities more efficiently and is that really what we want we're we just gluing the Lego bricks together for convenience but limiting the the creativity and and flexibility that we're after there's another role to play apart from the settlers and the town planners and that was a pioneer so one of the things that we need to do is also become pioneers so what does a pioneer do they acts in ambiguity in uncharted waters they have to challenge the assumptions of the project they prototype novel ideas and they seek to make future success possible so you can kind of see here where you've got you know pioneers feeding into settlers or even there's actually a flow the other way where they steal from so settlers look at what look at what the Pioneers are doing and saying hey we want some of that we'll use those ideas and use those resources and in sitting in town planners so as a pioneer I have to think how could I challenge the status quo and explore what might come next so we're fighting the war what might actually lead us into the next stage so many activities occurred one of them was prototyping and conversational UI just put some context we had some key challenges that apart from just those ones I mentioned when you've got the very complex screens people got you know all these kind of different windows cracking prices tracking charts news you are fighting for attention and the way that a lot of trade is sometimes think about their screens in every sense every inch of my screen has to worth something to me in dollars I have to it's an opportunity cost for me to remove something else and put your thing on there so imagine when people are spending hundreds of million dollars or even tens of millions of dollars and develop functionality you know it's pretty cutthroat and we had this problem of how do we get ourselves notice how do we go from number three four five and Industry and move our way out of the chain and serve customers needs better so this idea is started with a conversation in Spanish so I was learning Spanish at the time one of my colleagues was from Spain and in a discussion we were talking about how to categorize and how to think about some of the design systems I started to learn more about Spanish and I had to learn relearn English in order to really learn Spanish so hasn't understand structures nouns and verbs a lot better so would I map the grammar the structure of our entire ecosystem and actually I did that without really knowing where it would take me then I thought well couldn't I turn this into a conversational UI and I thought what to do that I'd have to break everything down to a smallest lightest part in most temporal common elements and that's where I did I mapped out all of the nouns and verbs so imagine nouns are you know they're the objects you're acting on and the verbs are the actions you do to them in the most simplest sense and what it did is it gave us for the first time it seems so simple first time a complete view of the ecosystem and it also meant that when people said hey look my case is unique we can point to it and say it is or it isn't and we can say we've already got that noun there we've already got that verb there we know what that does is it really actually knew what also did is that we're allowed to map out in the in the ecosystem within ristic structures we could actually almost have phrases and for those of you familiar with job stories we didn't know it at the time but when we started to phrase these out about these things that were happening they sound a lot like job stories so you know it was a really radical shift in in constraints going from you know something a bit like the top one that wasn't the actual one I can't show you the one that we did in this industry the nba's are very very strictly enforced but you know the idea was concerned something as complex as the one at the top and even more so into conversational UI of course I can't show you the real the real stuff it was pretty rudimentary as they should be when they're a prototype but when I look at it now it really resembled slack and we had the ability to call an app you can sit there and say I want to I want to call this specific functionality in this specific app and and and do something you know you can call that noun and that verb you can trigger actions you had syntaxes and syntax commands and also it bring back controls and charts and other simple things in the flow so what do we learn from this turning something is complex and and you know over time the designers really only thought in complex screams there they have to fit things in and and you know find a place for a button and yeah the sort of current paradigm into this new one well pretty quickly you learn you can't have a button for everything you have to solve that one not everything will be in view you have to think about time and space more you have to think about what needs to be shown here at this time and it might not be the same thing and showing there a second or a few seconds later also space it's a little bit like the mobile first principle you can even close constraint to make you think about applications in more dimensions your existing silos the the logic that the bank used to not only structure but specify what they and wrap the business cases around were challenged naturally when you started to think like this the the barriers of the apps broke down and the flows and those and those jobs you can easily see how they just go through different applications you needed to have a holistic understanding because we're now talking about the ecosystem now talking about the whole thing you needed to know not just what how it was represented in your app and your little slice you have to know about the whole whole piece apart and we also learnt not everything is suitable there's a lot of things you just cannot put into that format it's amazing how much you can do that you have to think about jumping off points at what point does the conversation really stop and you have to say okay I'm going to hand you over to something more capable now what that did was when you do the handover it's in a much better context you can you know you can inject people into very specific places and target more strongly the job they're trying to do then that without that was our initial lessons but most importantly how our thinking changed so yeah one of the big things and these points I realized only earlier today when always reviewing it actually all build on each other so we learned about discoverability you have to be able to discover what the capabilities of the of the system are and when you've got something so complex that's operating across multiple products you can trade things in multiple ways and you're not just doing in or just trading you're doing CLM you're doing account management it fails it's analytics it's all bundled into one there's a good quote by someone called Ben Evans and he said the optimum number of capabilities are one or everything anything else in between you've got some tricky aspects and we means by that is if you've got one capability then you know you know how to command that lights on lights off if it can do everything they're like hell you can just talk to it and it will understand and the state of the industry at the moment is we're trying to act in the middle and you've got a discoverability problem you have to there is an additional mental load to understand what this thing can do and how you can ask it to do things and what you can't ask to do and this is one of the problems with something like Siri is that a lot of the time you don't really remember exactly what it does but it's also one of the benefits of something like the echo where it's much more easily communicated what it does people understand a little bit more they play this music by washing detergent also you need to so it works better in a domain with with confined constraints and we're a little bit of both we had a very very broad application with lots of different things lots of potential commands lots of nouns and verbs but we were able to identify the the elements of that ecosystem nor the best best suited to interacting that way and most importantly discoverability doesn't necessarily have to be there on the screen in front of you and this is something that we realized in it and again it is so obvious in retrospect that when you take away a lot of the UI you realize how much of that navigation in UI is actually just for telling the users what it can do the traders are fairly used to using commands and and doing these sort of things I hope you can see the the keyboard there this is a one of the keyboards that some traders use you can see there's a lot more buttons unusual there's actually three screens on the keyboard as well but the yellow buttons and the green buttons are quick commands well and jump through command will be able to execute something very quickly so the our users in this field were fairly used to doing this already when I talk about discoverability flows from context the logical place we ended up in is thinking about well how do we enter to pay what people want and start to be much more proactive about what we serve up to them and it changed that thinking from I'll just put the button on the screen and be passive and wait for them to click it - I need to think more about what they're going to need and what are these things that will tell me what they need so you then start to think about all the paths that we create for the users should adapt they should actually expand over time as well as you add more capabilities and this is one of the key things when you're building a a platform an ecosystem that you start off with a set of capabilities and it's not static it grows it changes we needed to learn new skills we needed to have a new language to talk about conditional States and flow and they all to not only talk about that with our stakeholders that the other method out and we started to change our assumptions about how we built and integrate applications so rather than you know doing a whole application the time specify a whole lot of requirements a little bit Waterfall designing the application look at the screen and seeing how we fit all these things in you start to think about well if I'm going to design this verb or this noun I want to try and do it once and then whenever I encounter that thing I can start to take advantage of the existing capabilities but then plan for those capabilities to grow over time so when you think about when you needed me to design systems not destinations so it allows us to move from that linear connections those linear journeys through to flowing configurations and you can imagine if you're used to mapping out journeys in even like a fairly hierarchical linear way you start to think about flow and those of you in service design this will be very familiar to you about you know flow in different contexts and it emphasizes that apps are screens and one of the things you often often hear is people and particularly people that say to knowledgeable in in in this area is they start to use apps and screams interchangeably or templates and when you're using this type of model you realize how how that breaks down they don't need to be a single thing they don't need to be something we have to go to and open and then the only get one view they can be something we can call through a Alexa I think you'd be something we can call through a plug into a browser or any number of any number of ways so the primary way of interacting with your app may not actually be through what you think is your app you might actually be designing an API you may be designing algorithms that is then utilized by someone else you might be designing the functions so you get to the point where you think we'll know more cathedrals we're not building something that represents your particular business that that breaks down it just reserves its its building on top of each other in these conversations building on each other and the capabilities building on each other in any number of ways that is much more responsive to the individual and the context and the time and what's going on outside the individual in the context so we have to think much more about modularity because if you're going to be adaptable you need some level modularity and we have to think also about if you add new capabilities we do something new you add a new noun or a verb to the system that you should need to redesign things and this is one of the big blockers we had in the project that you had to either have foresight about all of the ways that you're going to do something or you had to spend a lot of money changing things you know the flow of conversation should get more intelligent and we have to think about how do we actually cater for those changing experiences where all of a sudden you've got a new capability and new thing you can do and you also need to start to think about you know how others how the other partners in the ecosystem might see it into that so they might start to develop their capability or add things in ways that you don't expect and that's the nature of a platform and if you have something news is very complex in its design and very rigid and as a high barrier for you to to create something that can exist in that world that's a high barrier for anyone to participate in your platform whereas if you have it in a conversation UI or you start to consider these things as we did broken down into nouns and verbs with very common consistent behavior and you know scaling intelligence you give people a lot more paths to contribute and it's a lot easier they can just develop a function they can just develop an algorithm that helps something that is existing they might be able to knock new parts so a closing thought and this is another McLuhan quote it's the framework which changes with each new technology and not just the picture within the frame so don't just focus on the artifact don't just do things in the same way you have done them and don't think about you know I'm building a complex platform therefore I've only got one way to do it or I am building this thing for this this industry and this is how they work start to observe the changing structures the changing messages and the changing mediums does that affect the mix and mindsets challenge those and and you know you can basically you know move the game from that that war to the Wonder and then find new sources of value take care of lunch thank you Tom now we have time for questions tell you another question I had a compliment talking but Oh I'll pick one up put up money and able to give any example community within the context of real estate and also yeah like I can talk about generality so I'll bring I'll bring that one back up again so a couple of things we did do is some really random examples but you know we've targeted some of the things are on the mind of the team at the time so one of them was onboarding how do i onboard someone onto this platform and give them a certain set of rights and so you're able to type in just like enable so-and-so with this these these rights and it will come back in to say enable now that doesn't sound that special alert you know previously you think about how many steps you would have to open up the app you'd have to go in locate their name go through locate the the permission start to check things on hit confirm and it got confirmed so that was a very very simple case and we're able to do that very quickly another one was we were able to run some analytics software the return charts a bit like one of the examples there and you would be able to feed in some data it would do some cost analysis on the transactions and come back to you and and give you a chart and see whether you are how much you're paying for certain transactions and whether though I sort of level below average and then it would give you some options that you can continue on into a further analysis or you can share it export it out or share it with someone so that is very much like that example that you know that previously required many many more sets even just launching apps so one of the ideas was to have this as and we built this little widget that was on your home tree we did one that sat in chrome one on a mobile we've tried all different locations but if you just launch applications but launch very specific things so I want to ticket to on the using limited jargon here but I want a ticket to trade you know ten million dollars of Aussie u.s. in you know three days fun and it cut them it cut the time just to get that down to its type it in really quickly or make it at the time we didn't have the language algorithms available that you do now so we'll do it through typing we kind of faked a little bit of a speaking and it will come up and you can just few more clicks and you're ready to go now that's really important because the traders need to be very responsive and also they as I mentioned before that I want you know all these tickets is sitting on their screen blocking up potentially much more valuable information that could cost some millions and millions of dollars but furniture does not even that really highlighted by a TV titrated maybe that is how to uses behavior change over time for today's webinar we will I'm also personality yes in terms of the answer the second one first in terms of personality very little one of the reasons is that at the time or the nice open source libraries that you've got you've got now two pars natural language to be able to understand it and to be able to you know talk back weren't available so we were having to basically create a lot of language trees and it was complex is we can make it so it was pretty robotic and but that actually for our our users was exactly right it wasn't meant to be friendly but it was about business I need to do this I need to do it now and look quicker I can do it and move on the better in terms of how how they change it was less about sort of actually putting it into their workflow because the point we're up here was we were trying to shape what this product was and trying to shape the expectations for that for the program it was more actually targeted towards the stakeholders the people who made the decisions and shape program to say think about what you're doing a little bit differently to what you are we did actually show some people and they got it but one of the things I also learned was that when you're doing pretty rough prototypes and with fairly rigid at the time structures even no matter how good you Wizard of Oz it it doesn't quite feel real for them at the time it was much more about setting up the the mental change in actually mapping out the ecosystem than it was changing behavior of of the end-users funny anyone might be useful oh yes no so we it was only ever in in some test beds and in sandboxes so no but people do that in tickets all the time they do it in trades all the time you can back it out but then that's of course with all the regulations that's record and you have to justify and sometimes that causes slow and effects in the market but thankfully this was just all hypothetical and but since I will mention company called Symphony has introduced something they recently got 65 million dollars worth of funding for something very very similar and message secure messaging for for the finance financial industry and they're starting to do it but they're not doing trading through that yet and that's one of the things we did actually prototype trading scenarios but it is so carefully managed and regulated you have to be very careful what you do but there is a thing Bloomberg has a has chat and what you can actually do and one of the things we did actually plug it into is when traders chat by Bloomberg or even people asking the trader to do a trade you can basically just extract what I say out of there drop it into the window of this conversation you I posit and then bring up the ticket straight from that chat but we will kept well away from the actual actual money flows on this one some of these actually is an in production disease perfect know their pocket that's that's a whole other story but one of the things that is happened since is that we're seeing more and more of this in the industry I think it was a few years too early the concept which we went a bit went further with a concept the idea of breaking it down and all of those other points I mentioned at the end they're all now much more standard in the industry we're working on some ideas where you in order to meet some of the regulations particular new s of presenting something a bit like a chat conversational flow to recreate the conditions of when you do the trade so someone said okay when you give that trade you know what was the customer doing what about for what was their position and the more we can actually design things almost like a conversation now the better we can recreate things to send to regulators or have also noticed that it's much much better for for CRM well you actually start to have CRM trading and other things all merged into one so it's not actually implemented like a actual chat bot but we're using conversational principles now for very diverse reasons but it's correct am I talking down so eat insects what do you mean by cutting corners yeah yes that's a flipside to one of the points I made before where I said you know the one of the things in the interface is it tells you about what it can do when the other things it does is it gives you trust because it has all that information around there that gives context but it is you can check with what else is happening one example is you'll you'll notice in some of the earlier photos sometimes there are the screens are full of blue and red colors and you go all the charts in the different colors and a lot of times they're not actually looking at the details they're just looking for changes sometimes peripheral vision and then they zoom in and that's what the stuff is actually in some cases really valuable to validate that you're doing the right thing and we you implement things in tickets like a a mode for just quoting versus actual trading and we have to like change the whole look and feel so it's very obvious what you're doing some of the buttons you present back when you're when you're trading and have half a dozen or more states it's not just hover clicks there are many many more states so you can do some things like that what we actually found was it was much more powerful for analytics CRM opening applications getting to the place you need so then you can trade so you're saying well maybe trading is not a good idea because of the risk and the trust that I can get to that trading window already configured ready to go and then presents me with those other parts of the picture that gives me that trust much more quick much more quickly so that was where I was mentioning a jumping-off point sometimes a jumping-off point still utilize the the same capability we had in the conversational aspect of it but then you realize at what point in transition and bringing bringing other information so is that it was that balance between what what is appropriate what isn't and we've definitely found out and not everything use but in this conceptual stage we just throw everything at it and said let's see let's see what happens so you for defenestrated for what that's crucial to sisters by natural language group number and yes so in some things it's it's a little bit more open and we looked at ways of doing some of the subject-object-verb in different combinations in the scripting add them with current technology can be much more less than that and we found some of the natural language processing very very easy now for machines to understand what you're saying a lot harder to understand what you mean but we kept it pretty structured and some of the some of the tasks you can you can do a fairly semi structured and then you can start to add more and more structures to say if you're copying something from bloomberg you know that would be highly structured so we can get you a lot further into the journey where something semi structured you have to take a guess and say ok well this is what we think you are now looking for and you can now imagine that our technologies AI machine learning can improve that and when you present information can actually do like a fuzzy Association say you've asked it is but we now can also determine that you need these other things and provide many more onward journeys as well thanks Jay Wow everyone please thank Kate Whittaker [Applause] 