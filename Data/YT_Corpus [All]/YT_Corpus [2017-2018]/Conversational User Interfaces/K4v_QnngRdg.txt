 [Music] today we will be talking about designing deploying your agents across platform and then analyzing them so my name is Ilya I'm the product leader of India today I ate the other day I is Google's platform for building conversational apps or agents for Google Assistant Google home and also all the other platforms through API or integration so you can also build a chat bot with it or add voice to your robot car or well any other like any home device in a few minutes I will be talking about well I will show you how to build a conversational agent from scratch and deploy it across platforms and over will tell you how to analyze it and optimize thanks oh yeah so I'm from the product lead on chat if it's an up-and-coming service that helps developers analyze and optimize conversational experiences and so today I'm going to go over how chat base can help developers with key metrics and workflows that can help you create engaging and high converting conversational agents okay but let's first think why would you start building a conversational agent so let's say you are building a online vagal ordering app or service so now what you will be actually caring about is to get a really great app for like Android and iPhone and probably a popular web service for it but it seems like it's not enough anymore so as you can see analysts predict that like voice interfaces and natural language interfaces you'll be extremely popular so by 2020 more than 30% of all the web browsing sessions will be done without the screen meaning that while users will be asking about well asking the request through home devices or cars or assistants more than 50% of all the website of all the web searches will be done by voice so through again mobile assistance or some other apps and more than 85% of all the customer interactions with brands will be done without a human through chat box or anything else so basically your users will expect you to be able to provide service through a conversational agent and not just a mobile app or a web service so this is why we are working on API today I so what is well important about it it is a an extremely popular platform to build conversational agents across different platforms we have more than 150,000 developers working with the platform it supports 14 different languages so you can now start building your agent for English Spanish Portuguese French Chinese Korean Japanese and we are aging new languages constantly and what is extremely important about it as I already mentioned it is cross-platform so you can build your agent in one place and then deploy it across multiple platforms so why is it important so one thing is which is extremely important is like as you know well there are multiple different platforms out there where well which have audience so you may have like a Facebook bot or a home device or some kind of an assistant and let's say if you are adding a new service to your product like it may be extremely difficult to to to update your agent across like for each individual platform so it makes sense to have everything in one place second and probably the most important thing is training and I mean both manual training and machine learning so if we talk about manual training let's say well you have your agent deployed across different platforms and well you get some logs from real users and you are analyzing them and optimizing your agents so having it all in one place makes a lot of sense because if you will update something it will be available across all the platforms so basically all the platforms benefit from all the interactions with users your agent or product health another one is related to machine Union so in order to train a really good machine during model are to understand what users actually want and support a meaningful conversation you have to provide it provide it with a real-life data like logs that you mark up and if you have the data well in different several platforms it may be much less beneficial than having everything in one place so building a very sophisticated training set are for your agents to well better understand and third well nature language is a unique as a UX media because you cannot really control what users will be asking about so you cannot tell that well my service like well my chat bot implementation of service supports these commands and my like home implementation supports those so users will are not limited by any well like sets of commands reins and so they can ask about everything so you really want to have consistent you have UX across all the platforms but let's switch to the demo and I'll show how to build the agent so this is the developer console so this is where you get when you register with a BA today I I just created an empty agent so and they will show how to build your bagel ordering app from scratch so as you can see well there are two main concepts in it the other day.i one is intense and another one is entities so intense are types of actions that you want to support so like what my user may ask me about and entities are objects that are being used in this intense so as you can see there are a couple of intents that are pre-built one is a fallback in time so if system doesn't understand it will get it will trigger fall back in time so it can say well I don't understand can you rephrase it or something like this and you can obviously customize it second one is welcome and time so this one is triggered when you start your agents from google assistant or facebook boss or like slag bought something else so it also has some pre-built responses I can actually update it and we'll say greetings I am your bagel agent so I save it and then let's just create our first custom intent so for bagel ordering service it will be bagel ordering so I can tell something like also here I am defining how my end users may address it so my end user might just say I'm hungry or something like get me a bagel by 2:00 p.m. and as you can see we do named entity recognition so we mark up to the M as time or let's say I can say something like I'd like to order bagels - 1 2 3 easy straight again it understands it as an address and let's say we'll say something like why don't we order some bagels so if my user says something like this we will return action order and it will also return results parameters so and well let's call it way go order intent and we will reply with something like okay ordered and I save it so as you can see here I'm providing a default response here so if my user will ask - well do it it will just respond ok ordered so in real life you would want to connect it to your business logic to your service so you can implement a fulfillment so you can setup which service to code and so now we can try it so I can say something like well basic like oh I'm so hungry so what what happens is it says okay so this is the JSON that the developer will get so I user ask I'm so hungry and you return action order and run all parameters here or I can try something else I can say something like I want to buy a bagel again it understands it and what is important here what's like the first major here is that well the phrase that invision does not really look like the phrases that I was using in the demo so the system the intense recognition part will try to understand well and try to classify anything that is similar to what you provided so this is like understanding single command but obviously we want to support some kind of conversation with the user so let's make it a little bit more complicated so instead of okay ordered will reply something like okay would you like to have a drink with it I save it and in order to support this conversation I will want to create some intense that work in the context of this question so there is an easy way to do it like automatically so I can tell add a follow-up intent to the bagel order and I will choose select a confirmation and they can also just create a custom empty intent so create confirmation and let's say I'll create a rejection and I'll customize those salt colors like drink confirm and as you can see it has an input context so this is a topic that starts when when user asks to order bagel so we have this bagel order context active now and if user confirm and there are there is a set of well some confirmation phrases then we will reply with something like great your order is on its way so let's save it and then we will also rename our second second intent and your cold order reject I'm sorry drink reject right so you can also create these contacts and manage contacts automatically so let's say we want to make it possible for the user to check the status order at any time so I'm going to my main bagel order in time and I will add like order in context here and it it is possible to set a life span so we are basically trying to emulate human memory so you may have a limited number of topics that are active at the same time and they will expire if you are not talking about it for awhile and they will be refreshed if user keeps talking about something so I save it and then I will create a new intent that will be called order status and it will work in the context of ordering and will reach well and if my user says where are my bagels or like what's the order status then it will return like status action today to the app developer and that developer will implement the business logic here so like let's try it again so I can say something like I want to buy bagel so you can see that it responds with okay would you like to have a drink with it I can say sure and it says yes the order is on its way so this is like really a basic way to build conversations but let's say my user well my agents cannot understand the user because user well is asking for something very different so I can tell them to like they may like what my usual order please let's see if it works yeah so it's responsive is fallback content it has I didn't get that can you say it again so you as the developer you can go to trainee infection see your logs and say that well if user says something like this we will assign it a bagel a bagel order in temp so I prove it and now if I again say my usual order please it will actually will proceed with the bagel bagel ordering routine so but with context you can well deal this conversation but you cannot really think will create a prebuilt dialect 3 so you cannot think of all the possible ways of like ordering bagels so there are some optimization techniques one is slob chillin so let me show how it works but first I will create couple of images so let's say we want to order all add bagel types type so have like a plain bagel and like SDI go bagel and sesame bagel let's say so I say this entity I can also create feelings let's have like Salman here and I can add some selenium so it can be also called blocks for example or I'll have also tomatoes or cucumbers and the final one will be spread so I may have like cream cheese or mustard or Jam okay I save it so now I can get back to my bagel ordering in time and by the way so everything that I'm shown here also is available through API so you can on the fly update your intense and entities you can create an end user specific entities so if it's like say end users lists of favorite artists or an address book you can also take it into account so let me add some more interesting examples so I can say something like I'd like to order five bagels with cream cheese so it figures out that five is a number cream cheese add a spread you can also say well I want and I say I go bagel with salmon so it figures out the type and the feelings and so here um let's say I want to get the type and feeling and spread always from the user in order to order so I can check them as required and let's say I have several feelings so I will say that this is the list so I save it and let's start again so I say something like want a bagel oops take some time to train I'm just I'm hungry so as you can see it figures out that the action is order but there are no parameters field and it start asking me questions like what's the spread and you can reply one by one but it may be pretty difficult to do but it's hard to expect from end users to follow your instructions so they can like all reply in different order they can combine parameters and so on so I can say something like well I I always preferred sesame bagels sesame bagels so as you can see type is sesame now but it keeps asking just asking me what's the spread and I can obviously customize the prompt as well so I can ask them to like what kind of bagel a little or anything like this so or I can also reply something like my mom would like like cream cheese well actually like say lox and tomato again I'm not responding to this question but what happens it figures out that the feelings are Salman and tomatoes and then let's finally tell what's the spread so I say cream cheese is my favorite it sugars out the spread and now all the required parameters are filled so it keeps going with the drink I can say yep and order is on the way so I feel this basic basic agent so next step for me would be to deploy it to different platforms so I can go to integrations and again you can just use API so to deploy it to any type of platform but we have like easy to use integrations to popular platforms so let's start with the say actions on Google of course so I go to create a project in the console so then I go back and say test I'll open the simulator and well I can say something like well talk to my desktop oops I will need to resign in okay so it replies drillings and your bagel agents as you may remember this is our welcome intent so I'll say I'm hungry and it starts asking me all the questions so similarly I can enable a web demo for example I can set a name for it so let's say it's my IO bagel demo so this is my agent again I'm hungry you know cancel and by the way I can also make it much more conversational by enabling small talk so if I say hi now it doesn't understand me I can go and enable a small talk here and I can customize it so let's say if it asks how are you I'm I will reply I'm and I owe juego ordering system safe so if one small talk is enabled I can try it again I say hi hi there friend who are you oops take some time to Train anyway you get the idea so and then um let's also enable some third party platform let's say slack I go to slack say tes con slack enable it for my my group take some time to check the status again that's bot evacuated and yeah so I've got this API bot so same stuff I can say hi take some time to launch it but like let's say I am hungry I guess I was using it for another demo and that's oh yeah yeah oh yeah so it's replies to me now again so this is all good so the what is interesting and what was announced this event is that well now Google assistant is also available for androids and iPhones which actually makes you build agents that will be available to much larger audience which is great so let's say we will build this agent and it is voice on day as you can see it doesn't well reply with some like cards or or anything like this so I can go back and upgrade it so I'm going to my say bagel order and add and actions on Google integration and I will say something like well so for the drink information we will add some suggestion shifts and it will be lecture or nope and then when I'm going in to drink information I will also add a picture here mmm yummy save it and let's try it again okay cancel the previous conversation okay talk to my desktop greetings I'm hungry I didn't say with I guess oh yeah said so I have to reply so let's say cream cheese and what's the time 7e and fillings Salman so as you can see it's added the shore and nope suggestion ships so I say sure and it will respond with the answer and the card you can also add galleries and some other types of rich content involved and can connect connect transactions so by the way this simulator like as soon as you will start tasting it it is also available on your physical device as your new home or or a digital device for example or or Android so this is how you build and deploy reach agents across different platforms but and when the agent is deployed well next step you would want to see how real users are actually talking to it and offer we'll be talking about it so how you analyze it and optimize it okay okay well thanks oh yeah thank you well first I want to apologize for talking about bagels with cream cheese slightly warm all before lunch so sorry about that good news people building agents on API today I now have analytics there's a new tab that is there and it shows you the volume of sessions that you had for your for your agent and also like how deep into the conversation these are went so like the kind of engagement and then per intent for example ordering bagel you can see metrics including how often did the user leave the session right after an intent and so you can really understand what's broken you know and what to optimize so now that's the end of the demo now I'm going to go back to some slides so so this analytic service is powered by chat base and chat bases is this new up-and-coming service for analytics we're currently in early access program and so people can go to chat viscom and request access if they want even more detailed analytics oh and then what I've shown right now so let's talk about the detailed analytics next slide oh there is a clicker there ok so yeah so so chat base is analytics for chat but what we've learned from talking to tens of chat bot developers over the last few months some of the top ones out there is that oh that's what I mean ok and we learned that yeah we learned that traditional analytics just don't cut it that because chat bot chat bots are built differently they're multi turn experiences that are expected to handle variable kinds of input you can't just use a normal website or app analytics product and so talking to all these developers we learn their best practices and put it all into this easy-to-use service so just like API today I chat Mesa is also cross-platform because what we learned is that developers like to deploy on multiple platforms they they don't just do one usually and so being able to compare metrics per platform is really powerful and in the way that developers often use this is they might have let's say a voice agent has good engagement but let's say they're text-based one is suffering you know it's not doing as well you can zero in on that and fix the text one and so now let's talk about the bagel example more so you you've deployed your bagel agent and now you want to know how well it's growing that's often the first question you ask and so we give you some metrics are familiar like active users and number of sessions but also you can see per intent what's going on like the kind of growth you're getting on the engagement side you can see how deep people went into the conversation but also we heard that a lot of chat BOTS drive traffic to their existing website or app so we showed that kind of activity as well in the bagel example maybe we want to see the nutritional details of the bagel you know that might be on the web page so that's captured and then with retention we show you cohorts that you can filter by intent and so you can zero in on particular repeating repeatable actions around specific things in your in your chat BOTS also under attention side especially for text-based agents you often send notifications to re-engage the user and so we show you how those campaigns are doing and you can a/b test it there but what we learn is that the real work of optimizing an agent is really done at the intent level and so we show you those details and you can see in this case with bagels that after the you know a lot of people did the initial ordering 9000 people or thousand and then a lot of them rejected the drink upsell or cross-sell and then left the session they didn't complete they didn't get to the order it's phase and so you can start to see a story of what's happening and you know where people are dropping off and and you can also see response time sometimes people are exiting let's say the the drink upsell was taking forever to get back to the user we show you 50 percentile 90 percentile response time and that can be really useful at the intent level but we weren't even further developers told us that you know this looking at a table can be daunting especially as you have more and more intense and so what we do is we automatically generate something we call the session flow and what what that is is that is the sequence of intents that the users went through and we if we look at the example we talked about you can see that you know the places where people dropped off and and where this is useful is really to help you understand what steps should optimize along the way and also this is that 10,000 foot view of like what are people really doing in my chat pod so let's talk about a one of our early access partners and benefit they saw from chat base so viber is a messaging app with over 800 million registered users and now their own chat bot platform with their own BOTS and also third-party ones and and and they realize that pretty quickly that normal analytics wasn't going to work for them and so they started using us and for one of their top chat BOTS which is like a sticker digital sticker sharing bot you can send your friend stickers of cats dogs and so on they they saw that really popular queries were having high exit rates and so they optimized those and after that they saw 35% bump in total queries in query volumes so you know really excited to hear more stories about how some of you out there will benefit from chat base and in terms of next steps go to API the I and and build an agent you can also go to chat based calm and request access to the early access program we also have code labs so with our online or here on the premise you can try a code lab both for chat base and for API if you're building actions then please join our vibrant community online and at this point we're going to open it up for questions if we don't get to your question please stop by our sandbox right out here in the system space and we can answer it there and also demo for you both products thank you [Applause] [Music] [Music] 