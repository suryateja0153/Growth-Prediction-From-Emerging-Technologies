 with almost 500 sessions at next 2018 it's understandable that you couldn't get to them all so if you didn't see building IOT applications on Google Cloud stay tuned because here's the rewind building an entire end-to-end IOT application can feel overwhelming what devices should I use how do I send my data how do I make sure that everything's secure once data gets somewhere how do I get it into a data store and once I have in storage how do I actually use the data to do anything useful half the battle in creating an app is just knowing what technologies are right for the job this is a pretty typical architecture diagram for an IOT application built on Google's cloud platform this diagram even has a lot going on in it but don't worry it's alright I'm gonna walk us through it on the topic of devices themselves I'm gonna hand wave a little bit I mean when that's done IOT already knows there's a lot of debate going on right now around hard what choice what sort of communication protocol you want to choose what data protocol is the best one to use most of the time some external factors going to make this choice for you like you need devices on the side of a mountain so pick whatever works for the environment that the device lives in and now that you've got your hardware you need a good way to keep track of all of them and connect them to the cloud securely this is what cloud IOT core is designed to do it's a managed service and acts as a gateway for your devices to Google cloud platform it handles registration of devices securely connecting and communicating with them and can even do things like send configuration messages back down to your devices once your devices are sending their talent reuptake or these telemetry payloads get bridged into our event stream manager cloud pub/sub events only stand pup's up for seven days so we need to move them out of there into permanent storage to do that we pick cloud functions cloud functions are serverless methods that can be called directly with HTTP or fire in response to some other event in our case every device telemetry message coming in fires the function which takes the data from our hardware and pushes it into our storage option cloud fire store fire store is a no sequel database with very low latency and for our purposes a special sauce which is that it also has a push update mechanism so our front-end can subscribe to data updates and draw our incoming telemetry data in real time so a quick recap within the recap this set up alone would be useful in terms of during data for future use we've gone from device through IOT core to pub/sub and used a cloud function to pull that telemetry data into cloud firestore so what about visualization let me explain no there's too much let me sum up we built two front dies one an angular to show off how easy it is to use our batteries included JavaScript framework to visualize real-time streaming data and the other using Google sheets backed by Apps Script to show off viewing raw time windowed data we also created a couple of administrative tabs one enabled us to configure metadata in fire store and the other hooked up to IOT core admin SDK which allowed us to send these configurations back down to our devices that we had built obviously there's more than one way to build an IOT application I've run through just the one happy path doing it here and the products involved in our session a cloud next we built this entire end-to-end application while on stage as I talk through what some of the other choices are in Google cloud platform and showed off some of the code that we were writing while on stage I even ran around the room while attached to our sensor device to get some more interesting data if you'd like to see the full talk check out the link in the description below don't forget to subscribe to the cloud YouTube channel for more great next rewind content thanks for watching [Music] you 