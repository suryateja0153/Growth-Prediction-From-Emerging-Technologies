 [Music] welcome to our talk building IOT applications on Google cloud I said the wrong one I am Gabe Weiss I'm a developer advocate for Google on Google cloud platform specializing in IOT also on stage with me we have Calum Barnes he's a product manager on IOT core we have Martine of Varela sorry I'm like losing people's names already developer advocate on startups we have Alicia William uh sorry Rob Wormald next to her he is a developer programs engineer on angular and lastly Alicia Williams she is a developer advocate on G suite and Google cloud platform so given the range of people that might give you an idea of what we're talking about today so now you know who we are I want to know how who you all are so how many developers operators infrastructure people that are doing the work with show hands how many do I have on that woohoo nice welcome thank you who out there our executive sea-levels business decision-makers and some of the same hands are going up so startups yeah all right cool how many data scientists do we have any data scientists good oh yeah nice everyone else do your arms work so now that we all know who each other's our application development there are a lot of decisions that need to be made before you can start laying down code for an application I don't want to fool you into thinking that yes we're gonna be building an end-to-end app today in the 45 minutes we've got but I don't want to fool you into thinking that you can actually do it on stage all these decisions that need to be made we made a lot of them beforehand what I do want you to walk away from this talk with are three things one understanding what what questions you want to be asking yourself about the app that you're gonna be building what are the different parts that are out there what do we have product why is in Google cloud platform that help you build these IOT applications to that it really is from a raw code standpoint easy to build these end-to-end apps there's a lot of moving parts there's a lot of products involved but the actual implementation of each part is actually really easy to do and we'll be showing you some of that and thirdly that what you can put together in this short amount of time is immediately useful the data that you can get from these simple applications can immediately be introspected can be looked at can be used to get ROI on whatever business that you're that you're doing what I don't want you to take away from this talk is that whatever you put together in that short amount of time is production ready it's not product managers don't let your ends teams tell you that what they put together in a day for an IOT app is totally ready for release and ends teams don't let your product managers tell you that hey I saw it Google they put together an app in an hour that's enough time right it's not don't let them tell you that it is so what's the first thing that you need in order to build an application does anyone have any ideas you can shout it out if you're shy it's okay I'll still give you my answer but does I don't have an idea what do you need before you can build an application an idea absolutely first shot nice so you need an idea you need to know what you're building towards in order to build an application I'm gonna walk you through what our idea is and how it dictated some of the technology choices that we made in order to build our application the question that I wanted answered who up here amongst us is the coolest on stage who's the most nervous who's anxious being on stage in front of everyone so there's one really reliable way to detect stress in humans it's a chemical called cortisol you can test for it in your blood and its presence in the amount of it tells you empirically how stressed out you are I asked the organizers and they did tell me I'm not allowed to create a biohazard situation on stage so I couldn't do blood testing so the next step what about blood pressure so blood pressure how elevated is will tell you how stressed you are let's think about a blood pressure cuff it requires that you can detect your heart rate and you have to be able to apply and release pressure in an even way around your arm it's totally doable with IOT but maybe a little ambitious for a 50-minute session so I kind of got rid of that so our last option that I fell back to is this thing called the vagal tone impulse this is your vagus nerve the vagus nerve is what regulates your heart rate it's what keeps your heart rate within normal amounts during times of extreme stress the vagal tone impulse is suppressed so that your heart rate can skyrocket so that you can be ready to do whatever you want the the common you've probably heard about it is the fight-or-flight response so once you're in that mode your heart rate can go up even though physical you're you don't have any physical need for it so for example if your nerve and you want to tear it off stage and run away you'll get your but your body foot your your body flooded with blood so that you can do that faster so why am I giving this biology lesson I could have just said hey we want to know who's nervous on stage and away we go the reality is I'm vamping a little bit I wanted to give my team a little bit of a head start so that we could actually show you as we're building what we're doing so I needed to give them a little bit of time also there's still a monster lying outside so I wanted to make sure that everyone could come in before I'm talking about the technical stuff so architecture here's the architecture in its entirety for the application we are building today we're going to be creating a simple data-driven application using the IOT devices that Callum is building for us as we speak for each piece of this architecture I'm going to talk through the product that we chose the other options that are available to you in Google cloud platform for that piece of the architecture and then show you a little bit of the implementation that we're working on as we speak so first let's chat about this device that we're making it will be able to measure your heart rate and temperature and between those two data points we're gonna be able to tell who's really nervous up on stage heart rate in particular is going to be our primary indicator so hardware and IOT how do you pick what hardware you want to use once you picked your hardware how do you pick what's what programming language what software you want to use on that device there's a problem for those of us that are building out these devices right now and the reality is is who was alive in the 70s it was first question okay good there's at least some of us I don't feel too old yet so in the 70s we add VHS VHS and Betamax today I'm gonna own a Betamax player yeah yeah me too next if you heard about laser discs and I don't hear about laser discs yeah all right so laser discs and DVDs and now we've got blu-ray and HD hopefully most of the room wouldn't know about those so it's the idea of standards each of those technologies eventually resolved into a standard that most of the market could adopt an IOT we don't have standards right now it is a complete Wild West you could pick any hardware and any software and it would still work this is just a small sampling of the options that you've got up there today sometimes an environmental factor will help you narrow down this choice so if you're working on the side of a mountain your options will slim down you've got communication problems you've got power consumption issues that can help dictate what hard your hardware that you're picking the reality is is that for most large-scale IOT installations you're gonna have custom hardware that gets built you're gonna have a microcontroller with custom sensors that really defines the minimum device that you need to accomplish whatever the goal is our only real requirement is to read analog sensors or heartbeat a hurry and temperature sensors are analog they're off-the-shelf so we needed something that could speak analog we also want it super easy to set up we've only got 45 minutes to build the entire thing so I wanted to be sure that whatever we picked would be really easy to set up the Python libraries have everything we need everything that we need to do this end-to-end Python has libraries for them and it was out of the box we wanted something that could run Python so our device is an Arduino so that we could read the analog devices really easily connected over serial to a Raspberry Pi which is super easy to connect and runs Python production obviously for most IOT that's not what you're going to end up using it's not cost-effective but for our purposes just to highlight the technology it's going to work great so let's take a look if we could at the device the columns building could we switch to demo one please what we're seeing here is we can see the arduino chip right here on top of our device and inside this case is the Raspberry Pi the two sensors that we're seeing now is the heart rate sensor which is on a little ear clip and then we've got the temperature sensor this little probe guy so I'm gonna have that temperature sensor in my mouth and we'll see how accurate a reading we can get as I'm trying to give a talk with a sensor in my mouth so before we check out the software that columns got on my device running it can we switch back to slides now please I want to talk to us a little bit about ingesting our data yay so before we can ingest data there's something I want to talk about and it's gonna be the hill that I died upon for IOT and it's a question what does the s in IOT stand for security it's funny because there's no s and IOT you get that so there's a couple of anecdotes I want to tell about security that kind of highlights why you should care a couple years ago a bunch of you may remember that the whole internet large swathes of it went down for hours it was something called the mirai botnet attack and what Mirai software did is it scanned the whole internet for unsecured IOT devices it found eleven point three million of them it launched a massive botnet attack against Dyn the domain services for the whole internet and it took the internet down for a bunch of hours so that's the macro view all of those devices could take down something like the internet for a while micro view last year there was a single temperature sensor in a fish tank in a casino and it was connected to an internal machine so it could regulate the temperature of that of that fish tank and an enterprising young Finnish hacker found that temperature sensor hacked it got access to the neutral machine and pulled out 10 gigabytes of High Roller data from that casino they lost millions of dollars and lost face to all those high rollers so this is why you need to care about security the macro view with the more I bought in an attack in the micro with this Finnish hacker taking all of the casino data I could talk for a long time about how you can countermeasure this how you can secure your devices I'm not going to because on Thursday at 10:20 there is security and IOT talk it's being done by a colleague and a partner of ours that is a really good talk so if you want to learn and go into depth on security and IOT go to their talk because it's gonna be really good for ingestion then back to that this is why I pick cloud IOT core as our choice for that cloud IOT core is the Google cloud platform gateway for devices to send their Kalama tree data up into the cloud it handle things like device authorization that that security piece I'm talking about management it allows you to configure your devices from the cloud you can send messages back down to your devices it allows you to have your devices report their state so you can check the health of your fleet from the cloud without having to talk directly to your device it's a managed service it's just an endpoint that you talk to you so you configure your devices to talk to a URL there's no client libraries so if space is an issue if we're on a microcontroller that only 200k of space so two premium you don't want to have client libraries I have two Cora lets you handle that alright so before I still talk till I show you the the code that Callum is running on the device I want to talk to you about what the other options that you could do instead of talking to I of G core what are some other possibilities you could do you could leave IOT core and talk directly to the message the event queue system that backs it cloud pub/sub so you could cut out our two core I left the management block on here on purpose because if you skip IOT core while you're left with is having to manage your devices you have to authorize them you have to deal with them if one of them goes it gets compromising you have to shut it off you have to now manage all of that yourself in software another option you could skip all of that and talk directly to your data store now I'm not on top of having to manage all your devices you also have this problem where what if your right to your data store fails someone kicks a cable or sunspots or just plain networking problem now all of that retry code to get your data into your data warehouse instead of already having your data in the cloud in something safe like pub/sub now you have to redo it from your device which for devices network is your battery killer if you have to keep running network from your device that's gonna run you're out of batteries and causes this cascade of failure so if you skip all of this and talking directly to datastore your devices or an edge machine is now responsible for doing all of that retry logic so again this is why we wanted with IOT core it's the way to go so we're still almost ready to talk to that code no I lied we actually already talked to the code from calm now so if now we could switch to the demo one awesome and Callum is actually gonna take us through the code that he wrote on the device thanks Gabe so what I've done since we only have 45 minutes here is basically copied most of the code from the IOT core Python tutorial written by another great dev advocate Gus class and what that does for us is make two things really easy connecting and authenticating with IOT core and then sending messages to IOT core over mqtt and those are the messages that are going to contain the data we're going to build our application with so you can see in this Python sample that comes straight from the website we have a create job function if you go to that security talk Gabe mentioned on Thursday you'll find out even more about how IOT authentication works but we create a special jot authentication token based on a private key on the device and this function makes it really really easy to generate that and send at IOT core and then the rest of what we have is basically boilerplate PAHO MQTT code to connect to the IOT core MQTT front ends all i've added in here in the last few minutes is some configuration information about the specific project that martin set up when we got started and then a little bit of code to talk to the serial input from the Arduino and toggle the LED when we get over some limits that we'll talk about later so all of this has been pretty easy to write because I was able to leverage the samples that we have on the IOT core documentation website thanks Gabe so we've now covered kind of the why and how of devices and ingestion in the cloud getting up there next up we need to get all of that data from cloud pub/sub where IOT core puts it into our data storage we've decided to use Google cloud functions to do that cloud functions are our service methods they can be called with either an HTTP GET or post call or triggered from something that happens in Google cloud platform for us we're we've using we're using pub/sub as our trigger so any message that comes into cloud pub/sub will fire off this function since I know Martin's probably already on board since he finished this like in the first two minutes and we're gonna cut over to Martin and we're gonna show some of the code that he did so we need to switch to demo two please yep ask you Gabe so we just finished five minutes ago I didn't have that much time deploying this function that I called telemetry to fire store again as Gabe said what this is doing this function is subscribed to a parts of topic so that every time one of the devices that we are building since telemetry to IOT core that sends a possible message and triggers a new execution or a new instance of this function let's get take a look at the code here as you can see this is written in JavaScript and it's running on a node.js version 6 environment at the top I'm just calling and importing the library that I'm using to write to firebase sorry to fire store and initialize in the app because we're running on this managed environment we don't need to do any authentication that's 100 for us and then the about 20 lines that are next is the actual function the function expects an event from pub/sub I will check if it has data otherwise I'm gonna throw an error then I'm gonna base64 decode the payload parse it into a JavaScript object so it's easier to grab the attributes and then this is where I run right to the DB how firebase works or how firestore works is that it stores a collection of documents and each document can have a bunch of different attributes in this case we're sending the timestamp temperature and bpm as you can see here and this is the path to the where I want to write the documents and then it's just whether it fails for note I'm gonna console.log it just for reference and that's pretty much it sweet thanks martine so this is the glue that joins our event messaging system as the temperatures coming in to our warehouse can we switch back to slides again please so let's try a bit about what the other options if you didn't want to use cloud functions and there's a reason you might not want to use cloud functions for IOT there's really three really good options in in Google cloud platform for this cloud functions cloud dataflow and cloud data proc cloud functions I've already covered their server lists it's a low barrier to entry because it's JavaScript so it's easy to stand up and get going and it fires once per message coming in that once per message coming in that's the catch that's the reason you might not want to be using cloud functions if you're managing a fleet of a million devices and those million devices are sending a message once a second that's now a million million firings per second of this cloud function part of their cost is number of invocations so if you've got a system that has a very high throughput that's why you might want to look at cloud dataflow on day to proc so cloud dataflow and data proc are both managed service they're very similar and what they can do dataflow is our managed service for transforming incoming Batchelor streaming data it can do pipeline development with the Apache beam sdk and it handles very high throughput that's what it's designed to do data proc is very similar to that it also handles it very high throughput it does a lot of the same transforms it's hosted Apache Hadoop and Apache spark so really how why would you pick one versus the other is the platform that you're familiar with so how do you know when you should use one versus the other the answer is it really depends if you're not doing anything but shuttling data from point A to point B you're just taking it from the event system and pushing it into your data store it really doesn't matter that much they're both going to perform really well for you the invitations per second is what I was what I've talking about so if you've got very high throughput that's where you would want to switch over to data flow or data proc for me the general rule of thumb always prototype of cloud functions get your entire end and working find out what you don't know get everything functional and then when the cost starts to become an issue cut over to data flow or data proc all right so we've got ingest we've got devices we've got pipeline next up we're on to storage everyone still doing ok out there yeah so there I I know I'm throwing a lot of stuff at you very quickly I wish I could tell you it's gonna get better it's not I'm gonna continue to throw a lot of stuff at you very quickly because next step is storage and there's a lot to cover so for our application we picked cloud firestore it's a no sequel database it's very low latency and Pyrus and low response time it's perfect for doing the real-time visualization that I talked about at the beginning because built into it a native mode it's got a push mechanism an update mechanism where anytime you get a data change it fires call back it's one of the unique pieces of firestore in our kind of storage options which is why we decided to pick it today it's also really easy to stand up so what are some options if you didn't want to use cloud fire store we have a flowchart for that no need to memorize this it's actually on our websites at cloud.google.com slash storage - options memorized that one so this flow chart is not intended to give you the be-all-end-all option for your storage there's a lot of edge cases that are little gotchas in here but this flow chart will help you things like is your data structured or not are you doing analytics or real-time analysis do you need mobile SDKs that's what this flow chart will help you with cost is the last piece the flow chart won't help you with cost but it's so dependent on your individual applications we have tools online that you can put in things like general throughput amount of storage you need the online tools will help guide you through what your rough monthly cost will be depending on the storage that you pick so there's too many on that flow chart for us to go through all of them in detail but I want to highlight just a few and to speak to IOT there's usually two different things with storage that your wanting to care about for an IFC application there's a real-time analysis if you're doing things like fault detection or automatic inference you want to get a real low latency response or you're doing really heavy analytics so iot often is just a vehicle to get data into the cloud to run analysis on those are the two things and so I put them on on this graph so that I can put our different products on it to give you just a ballpark finger in the wind what the different products are good at so first up fire store I've already pretty much covered it it's very very good at real-time and it's not the worse in analytics but it is a no sequel database if you're not familiar with sequel versus no sequel know some people is not the best at doing really complicated queries because you have to scan a whole bunch of rows and then parse for what you want within it since it's unstructured data sequel is much better for running that kind of query where you can really get at exactly what you want in the query so that's why I fire starters where it is next we have cloud BigTable BigTable is the speediest of our speedy no sequel databases it's incredibly fast and it scales up to really massive amounts of data petabytes of data are not a problem for BigTable the reason it's so far on the analytics left-hand side because it's terrible at it the way that it is so fast is that it is incredibly bare-bones anything that you want on top of it you have to build there's no tooling built into it so it's a kind of a blank canvas no sequel database we would never done it for today because there's way too much tooling you'd have to build that next up is cloud datastore it's much more of kind of an out of the box no sequel solution it's got a bunch of tooling on top of it it's got a very well developed querying API and it's easy to understand and use in function it's very similar to cloud firestore the tipping point for us with fire stores why it's so a little bit better in the real time is that update mechanism that push mechanism we didn't want to have to build something to do push to our real a real time front-end so that's why we picked it over datastore next we have cloud sequel our sequel option it's hosted my suit or Postgres if you need a sequel database this is the option for it it's very low latency it's better on the analytics scale because it's sequel so it can do more complex queries there is a gotcha and sequel you should know about it which is sequel cannot horizontally scale it can only vertically scale so if all of your data fits happily on a single machine awesome use cloud sequel if all of your data will enough for today I could use cloud sequel there's no way our sensors today are gonna overwhelm a single box but I didn't want to highlight a solution that for most i OT applications aren't gonna be doable most IOT is gonna produce enough data that it would overwhelm sequel right away and lastly way down in the corner we have bigquery does anyone know about bigquery already yeah a bunch of you do if you don't get familiar if you're doing any kind of data analytics bigquery is what you want to use hands down no question you should be using it and if you're not doing analytics as part of your IOT application I would ask you why are you not doing analytics as part of your IOT application because it's data and a lot of it and you can get really cool stuff out of it so bigquery is it's unique in the offering and that you use sequel queries against a no sequel back-end and it's amazing which means for analytics it is the best of both worlds you can use sequel statements and horizontally scales it also will scale up to petabytes of data and you can run queries performant for the size against that data now having said that it is performant but it's not real-time I would never ever build a real-time application on top of bigquery because it will be terrible at it if I had more time or in the session today and in a perfect world you would want something like this where that cloud function is pulling your data out of pub/sub and putting it into your real-time analysis datastore like fire store you would also duplicate the data over into your data warehouse like bigquery that way you really get the best of both worlds for the cost of some storage which is cheap you get the real-time analysis you get all of the the low latency of fire store and you get the power in the analytics of bigquery behind it so I've talked a little bit about latency real-time processing something that I haven't talked about yet which I probably I can't is computing on the edge that's kind of all the buzzword right now right you want to compute on the edge be on the edge I could spend an entire talk discussing cloud versus the edge versus hybrid versus fog although fog really is just edge it's just another buzzword it's that whole talk is gonna take up all the time broadly speaking kind of a finger in the wind storage doing the cloud if you need real-time compute low latency do it on the edge you want to do data visualization probably safe doing in the cloud safety checks on a nuclear power plant please do it on the edge don't do that MacLeod so we've covered all of our headless stuff now we've gone from device up into IOT core IOT core bridged into cloud pub/sub cloud functions pulling off a pub/sub dumping it into fire store all of the no visual stuff so we still have not answered my question of who's nervous so let's see if we can answer those questions I could spend a really long time talking about all the front-end possibilities for an IOT application this is like the tiniest of samples up there I do not have a mountain of time to talk about front ends of all of what your options are so I'm going to talk about the two options that that we have picked so we could have just in one front end but I wanted to see how many people we could pack up on stage here I asked if we could do four they told me I didn't have enough pedestals to do four so we settled on two was kind of a negotiation back and forth so my goals for showing you front ends to an IT application are twofold I wanted to show you real-time visualization and timeslice visualization of data and I wanted to show off the front ends ability to modify metadata around a device and I talked about earlier IOT core has the ability to send messages back down to device and configure them and we're gonna try that hopefully the demo gods are kind so first to highlight the real-time display piece I wanted to talk about angular that's what we picked how many of you know what angular is yeah alright so angular is our batteries included framework for JavaScript it has components to do everything that you would need to do in a web app routing animation rendering forms aisle 8 and support integrated testing all of those things you would want to have in a web app we've got in angular so at this point I think we're gonna try and get me loaded up with a device I think I'm ready Rob are you ready to show off your piece alright so normally you wouldn't ever do this in production we would have unit tests we would have integrated tests we wouldn't be using a device that we just built on stage here we just played the demo gods and see how it goes all right so I'm gonna hold this in this hand and we're gonna sliding it alright can we switch to what he won't let demo to and input 3 okay so let's see I'm shaking like a leaf but I think I have decent connection alright so what we're seeing on screen now is the iteration of the devices so all right so we've clicked in Gabe's device hey way to go Gabe where's my device there we go hey Alicia could we change my name to something snazzier Gabe's device is kind of boring I am now the destroyer of worlds Thank You Lissa so umm okay so if we click into that and we're seeing now these latest readings we might have some garbage here because when the heartbeat sensor isn't attached to a finger it just sends kind of random noise on analog so it looks like we're kind of starting to normalize a little bit on device here I'm trying to make sure that I've got it yeah okay I want to highlight two things that just happened so first the angular app that's on stage now is reading from fire store in real time any of the sensors that are getting pushed once a second up into the cloud are being yeah I'm still going are being shown here so you see you know my BPM is about 107 I'm excited and too Alysha made a change to my device in fire store on her front end and it was almost instantly recognized in the angular app and updated live so Rob I do like what we've done here but it's a little it's gonna be hard to tell side-by-side you know who's actually the most nervous can we get all five of us in a graph sure I can give you a minute while he's doing that I'm gonna talk about her second friend app with what Alysha has been working on can we switch to Alicia's laptop so while we're doing this once we're hooked up Mart market in Callum you guys are getting hooked up Rob when you're done with the graph go ahead and you get hooked up to hopefully now we've got Alicia's screen is gonna come up soon okay so well while we're getting her set up here the second friend that we're doing is gonna be Google Google sheets G suite backed by Apps Script so I just do we know about Apps Script a couple do good that's why I want to do this talk so we could highlight the fact that we've got Apps Script going on so we see on screen now is her screen and it's showing the metadata configuration page so this is where she changed my name / - that destroyer of worlds value so I know a lot of you were thinking like yeah and she changed a value it's happening a real-time we just built it it's going from one front dent through the cloud and updating in a second front end the next thing I want to show off is the next tab is the ability to configure our devices in some fashion and this is where we we really see how this is gonna go so right now you are devices we have a value called the heartbeat threshold so if my heartbeat goes above that threshold the LED that's on this device is gonna light up right now it's set to 999 because we knew that when the things aren't connected they send really high values and we didn't want it to accidentally go off early so now let's go ahead and set the threshold down to 120 which both I should be able to hit and I shouldn't hit at the moment so what I'm gonna try and do here is see if I can get it to trigger and get this light to go on hang in there I am really out of shape alright so I heart I love you I love the music choice does alright so now we get to the play of the game of how long does it take Gabe's heart rate to go back below 120 probably a while so how this works from sheets we've got a single cell that when she enters the the threshold into it it rates all over all of our devices and fires off to another cloud function it's a second cloud function that Martin wrote and all it does is it calls the AI the IOT admin SDK and sends that configuration message back down to all of our advices to update them yes I know I'm out of shape so it does the the app script is calling HTTP to call into that second cloud function so it's not a trigger it's actually using that first method that I talked about with the cloud functions the last piece that I wanted to show off when I switch to this the airwheel is this is the time slice data I was talking about so she is fetching the data from the last 60 seconds or so me so that big the the the Jaggi spec that's me running around the room cuz so with sheets you get up to 2 million cells of data so what she's is really good at pulling in large amounts of data so down the the graphing is gonna be similar to the angular but I wanted to highlight it's the time slice not the real time that the angular is so that's what we want to highlight for sheets is that you're looking at historical data not live down below now is we've got some conditional formatting so anytime my heart rate is above the set threshold it's being conditionally formatted in that red so it's a quick way to get just a quick and dirty look at your data by doing some analysis in semi real-time so that you can see what's happening so now I would like to go through the Apps Script code if Alicia would be so kind sure so I think some of you raised your hands but for those of you that don't know Apps Script is a scripting language based on JavaScript with a bunch of enhancements for G sweet to be able to automate between different Google products and services so the first line of code I want to show you is just where I query firestore so I'm using a library that connects Apps Script to fire store and I'm querying for a specific device I had gapes device up there most recent 60 measurements so then I'm taking that return list of measurements and I'm appending a new row to the spreadsheet for each for each measurement and kind of in between there I wanted to know what time slice it really represented because they are sent about once a second but I'm pulling the first and last measurement and just notating that start and stop time and then finally I'm adding some conditional formatting down here creating a conditional formatting roll so that any BPM value over the current threshold is made into a background color of red awesome Thank You Alicia so now we've seen how Apps Script does it pulling and showing the data Rob talked to me how we doing on grass all right so let's switch back over to Rob and we will see look hey it's our heart rates all on screen so each of us has our own color and now I want to know Alysha go ahead and get hooked up to your device that's so she's in yellow that's that like squiggly way up high that's the garbage data that I was talking about so when she gets properly hooked it's already dipping down so what color was i I was blue I want to be the coolest I'm not the coolest Wow let's are you still alive I'm blue I get to be the coolest cucumber on stage check that out we're all pretty close though so um the question has been answered I get to be and I'm an out-of-shape I just ran around the room what's wrong with you people so Rob now that we've kind of seen it let's go into your code and so we've seen Apps Script do the data pulling now I want to show you off the angular app doing the data pulling so go ahead or up okay switch over to my editor so I'm using angular and obviously I used the angular CLI to go ahead and scaffold a project so it's setup tooling and building and all that stuff that's really hard about JavaScript I started the first thing we looked at was our devices screen and that's just a couple of screens so I've got a very simple device list component a little bit of HTML with some angular bindings we're just iterating over our devices and rendering some data one of the nice things about angular is that we have a really really good relationship with firebase so we have a really nice built in firebase angular library angularfire store so it takes a one line of code to talk to firestore extract that data and then I get a real-time display of that we go a little more in depth in Dora you you can see we're doing the same thing we're just using our built-in angular fire service we are just extracting data again you know getting some routing parameters and just streaming the last measurements off of the device so that's kind of basic and a templating that works pretty simply for the pulse graph because that's a lot more complicated we're using d3 which is an awesome graphing library that's open source again we're just talking to firebase getting that device data coming out I won't bore you all the math we're going on in here but basic we're taking the BPM and the timestamp and scaling them so I fit in the screen and just rendering a line across the screen so there you go sweet thank you rob so let's go back to slides yep all right so to recap since the the keynote went a little long so I'm trying to wrap us up so we get us all back on schedule we built an entire app on stage in front of you in 35 minutes that we went to from custom devices custom devices up and through IOT core bridge into cloud cloud pub/sub cloud functions to pull from pub/sub into cloud fire store fire store firing real-time updates to power our angular app Google sheets powered by Apps Script to pull to show us time slice data configure our devices with an LED that will not shut off for me and and what else it and I configured metadata in the in fire store as well that is our end-to-end simple data application all the way through Thank You team for making all of that happen thank you for coming [Music] 