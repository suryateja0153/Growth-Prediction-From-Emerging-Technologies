 So our plan today is to talk about what quantum computers are. How people are building them. What they can do. What they can't do. They're not all powerful god like devices so they do have limitations that we'll get into as well. OK. Without further ado let me introduce our esteemed panelists. Our first panelist is a mathematician, computer scientist, physicist, expert on quantum information theory. She was a professor at Tel Aviv University and a researcher at the CNRS in Paris. Pease welcome Julia Kempe. Our next participant is the professor of quantum mechanical engineering, that's a thing, at MIT. Director of the Keck center for extreme quantum information theory and hopefully will explain why it's extreme to us. Please welcome Seth Lloyd. Next up, our next guest comes to us from the Air Force Research Laboratory in Rome in upstate New York. She's a senior research scientist there and the primary investigator for the Trapped-Ion Quantum Networking Group. Please welcome Kathy-Anne Soderbergh. And finally coming to us from IBM in Yorktown Heights, just north of the city, is the Manager of the Experimental Quantum Computing Group, distinguished research staff member. Please welcome Jerry Chow. So Seth, let me turn to you first. Quantum mechanics: weird or just unfamiliar? Definitely weird. It's, I prefer the word funky actually. OK you heard its. This is the official terminology. It's the James Brown of sciences. How so? I mean why and particularly in terms of computation what is it? What's the special quality of quantum physics? So in quantum mechanics, things that we think of being like particles, like basketballs or soccer balls, have waves that are attached to them. And so you know I have a ball over here and it's got a wave and then I have a ball over here and it's got a wave. But the funky thing about that is that the waves can add up so I can have a ball that's both here and there at the same time. And if you map this to a bit in a quantum computer, so this is zero, ball over here, and ball over there is one, then I can have a quantum bit or qubit that is zero and one at the same time. So Julia, why would that be something you would actually want? Why would this, I want to actually comment on the weird first if I may. Funky please. Funky. Because I think it becomes a, it depends on your point of view coming at it as a physicist with a lot of training in classical physics it's indeed probably very weird, but if you look at it as a computer scientist it maybe becomes less weird because we are not spoiled. Our intuition is still, that it's not, how can I say, biased in any way. And I view it as something which is like probability theory except the probabilities can be negative or they can be even complex that that is not so essential. And so in that sense it's not very weird. It's just gets, requires a bit of getting used to but it's pretty natural. And so for the qubit, why is it useful to have qubits in being both zero and one at the same time? Cause if we have many of those, we can think of having various states at the same time and we can think of computing all these possibilities at the same time. So that leads us to this massive what's called quantum parallelism. So Jerry, can you walk me through like just a quick numeric example, you have a certain number of qubits, what that means in terms of parallelism? Yeah. So I mean one of the, as has been mentioned with regard to these qubits, you have these superpositions. And so you might have some number of bits but instead of bits now you have qubits. Right. And in terms of this parallelism what you can actually have is access to a much larger space of possibilities. So if you have n qubits you actually have, using these principles of superposition and entanglement, you have access to a space of up to two to the n possibilities. And so that type of, that type of exponential space gets really, really large for rather modest numbers of qubits. In fact if you get to around n of three hundred cubits you actually have some state-space that is greater than the total number of particles in our universe. Kathy-Anne, walk me through an extremely simple numerical example…suppose I, in fact we do have, but to take an example two of these qubits. What does that mean in terms of the computational space that we can work with? So if you have two qubits you have a four qubit state space because you can have each one stored as a zero plus one and the other stored as a zero plus one, so you get 00011011. Whereas classically you can only have zero or one. You can't have anything in between. So the computer's in a sense an all possible computational state space. Yes that's right. Now Seth, on the face of it that doesn't sound like such a good idea because you want to get an answer from the computer and it's just basically telling you everything. Yeah and indeed it's kind of dangerous. If I have a quantum bit that's zero and one at the same time and I say yo are you zero or are you one? Well you know you could, OK, so the electron is over here and I bring up a very sensitive electrometer that says, yo, are you here or there? Well it's either going to show up here, say with fifty percent probability or there were fifty percent probability. So it's just going to behave like something that's generating a random number which is kind of useful but it's not, if you actually want certainty for your answers that's not so great. So the kind of the way that these quantum computations work is you set up all these waves and they're wiggling on top of each other and they're, they're performing multiple computations simultaneously. So you can think of an individual wave, a wave of say electron here and not there, that's kind of like a pure tone like ahh. An electron here and not there is like ahh. An electron here and there at the same time is does somebody want to supply the other tone? It's a chord. So it's you, you get the computational power from the interference from the kind of symphonic nature of this. So the idea of a quantum computation: you set up all these waves, they make this beautiful music together in this symphonic way. But at the end of the day you actually want to have an answer that says yes or no, or zero or one, and all the trickery and talent goes into making that happen. So Julia, is that, any problem I care to pull out of a hat or that my professors give me as a homework assignment. Can I turn it into a problem that's amenable to this kind of chord pattern that then reduces to a single pure tone? That might depend on your artistry but in general quantum computers are good at certain things and we would leave, you know, a lot of other things to our normal classical computer. And of course you probably all heard of the problem that a quantum computer can solve very well. And that's factoring numbers, large, very large numbers into primes. And the way it's done, just like Seth was saying and I was saying, you can think of these amplitudes of a quantum computer as positive and negative numbers. We try to arrange these waves in a way that all the bad answers cancel out because you can, you know ,you can have several ways to arrive at the wrong answer. And what you'll try is have some with a positive amplitude and some with a negative amplitude and they cancel out and then you arrive at the right answer and you, voila you get a factor for a very big number. And that's one of the first and most remarkable things that was discovered a quantum computer can do. And I can elaborate on why it's important. Most of you, all of you, I assume, are using credit cards at the machine or over the Internet and you rely on the fact that they're encryption, that they are encrypted. And it so happens that the modern day encryption is based on assumptions of hardness of factoring or problems of that type. And it's these type of problems that a quantum computer would be able to easily break. Interesting. Kathy, let me ask as you to drill down a little bit more here. Sure So when I think of a computer I think of it has, does arithmetic logical operations. How do you, I mean without going into details, we'll get to some of the details later, but does the quantum computer also have those same elements of it can add, it can subtract, it can do logical comparisons of things? Yes, yes you need all of the same similar components to a classical computer to do quantum computing. But the way that you make the gates looks very different than in a conventional computer. And that somewhat depends on the underlying qubit technology. OK I'm going to definitely come back to the details on that later. I just want to establish that it's a computer. Yes It has, you look at it and though it's configured differently, does have the recognizable qualities of a computer. Yes You can program it in C or Java, and it has one additional instruction which says take this quantum bit and put it here and there at the same time, put it in the state of zero and one at the same time. So you supplemented ordinary computer language with just one additional quantum instruction and you're good to go. If you can build the thing of course. Which we'll see in a little bit. Jerry, what are we up to just in general state of the art about how many qubits we have and what does that mean in terms of vis a vis a classical machine. Yeah. So there's many different physical implementations of building a quantum computer. The underlying core of a quantum computer we call a quantum processor. And what you basically need to build the quantum processor is something that follows the laws of quantum mechanics and can have this quantum mechanical zero and one. And in terms of where we are in experiments we're looking at building universal based quantum computers of order of ten to twenty qubits at the moment. And that's, that's kind of where the state of the art is in the field. And just for reference sake, twenty bits doesn't sound like a lot actually, but how does that what kind of power does that endow a machine with? Well it's actually very interesting because although you might have twenty qubits you can actually then have the state space up to two to the twenty possibilities, right? But how much you're actually able to access that then determines, is determined by your coherence time. So there's a metric known as coherence time which says how good of a quantum state can you actually keep in your quantum processor. And different types of technologies varying from superconducting to trapped-ions, like the kind Kathy-Anne works on, have different amounts of coherence time. So overall this type of time times the number of qubits, we try to we try to at least my colleagues that we've only started thinking about a metric for this called quantum volume to kind of describe what is the power of a quantum computer. So walk me through. What's a quantum volume? You can basically think of it as how many steps of these logical operations, or these, these gate operations that you can do the superposition or entanglement steps in the amount of time that before all the quantum information is gone, becomes just classical. And so you have a certain number of steps and then you have a certain amount of depth in terms of the total number of qubits that are connected to one another. So Julia, let me ask this of you. If I just have a phone, a classical ordinary computer and I store information in it, one hopes at least it will be able to retain that for a long period of time. Is Jerry saying that actually it decays away? And why would it do that inside a quantum computer? So the big challenge for a quantum computer is indeed to maintain these coherences or these waves that are spread over, not just you know one qubit but over a collection of, in this case, perhaps twenty qubits. And what we call entanglement these, these correlations at a distance of these qubits. And it is true that this is what nature does on a very small scale when we describe electrons and so on. But it's also true that we don't observe this in our everyday life. I mean when you have a bit you have a big it's either zero or one and the reason we don't observe it is that once we start interacting with the environment, once this very fragile superposition is being subject to the surroundings, it's being subjected to noise. And these very fragile superpositions will start to what we call decohere, so just disappear. And the point is of course that we need to be able to address this quantum computer. We need to be able to talk to it. We need to be able to manipulate it. So it has to be exposed to us, to our you know to the world in that sense. And so we're living in this tradeoff situation where on one hand we need to protect the state. So we would like to just put it in fridge and never touch it. On the other hand we have to touch it in order to manipulate it. And this is the big challenge that, you know, these experimentalists are facing. To battle this decoherence invariably comes along with the fact that we're exposed to the, you know, to the environment. Kathy-Anne, walking into your laboratory, what would we see and then walk me through what that represents. Sure. So I'll talk about trapped-ion technology which is what we work on and I believe Jerry will talk about superconducting qubits in a few minutes. They're very different technologies but they're both very advanced right now in the field. So for ions we track single atoms and we hold them, they're they're charged so you can hold them using electric fields. So first we prepare a vacuum chamber, because as you just heard these systems are very fragile, so you need to protect them from the environment. So these trapped-ions operate at room temperature but we hold them in a vacuum chamber roughly ten to the minus twelve Torr - it's the same vacuum as outer space. So the only thing in there is the atoms that you want to manipulate. And you have a neutral atom source which is just a piece of metal in a stainless steel oven that you heat up and then that creates a beam of neutral atoms which you can put in your, what's called an ion trap, which is just a collection of metal electrodes. Because as I said we trap these using electric fields since they're charged. So you put an oscillating electric field on that trap. What that looks like to the atom is a rotating saddle. So then that looks like a bowl. And if you drop a marble in a bowl eventually it'll come to rest at the bottom of the bowl. The trapped ions do the exact same thing and these potentials. And so we shine the neutral atom beam near the trap and then we have a laser that actually rips one of the electrons off the neutral atom and that makes our ion. So that leaves it charged. And at the same time we have to shine a different color of light in, because coming straight out of an oven the atoms are essentially screaming hot and the trap potential just can't catch an atom it's going that fast. So you have to cool it down a little bit with a laser, its laser cooling. And then that allows you to trap it in this bowl like potential and then we shine yet another color of light on the atom and all these different colors of light create different transitions within the atomic structure. So if you could look in the atom you would see different energy levels inside and each color of light is resonant with a different energy level. And so the detection light when we shine it on. It hits a very strong transition in the atom, which excites it from it its ground state, so the qubits themselves are held in the ground states of these atoms. There's two ground states. And it sends it to an excited state. It's a very short lived state. And when it emits it emits a photon and it does sense that this strong transition it does that hundreds of thousands of times and then we collect those photons on a camera. The ion we're using is ytterbium so it emits a UV. If it was a visible color you could actually see it with your eye, it would be a tiny speck. Hang on. You can see atoms. You can see atoms. See atoms. What do they look like? Just like when you shine a flashlight on a ball in a dark room, right, it scatters light and then your eyes can see it and you say ‘oh there's a ball sitting there’. The atoms do the same thing. They emit, they emit photons that if your eye was visible through the UV you could see them. It would just be a tiny dot on a very dark background. You can see a single atom fluorescing. The darkest, you know that the brightest star on a very dark sky. Unfortunately we can't see in the UV with our eyes so we have to use a camera. But if you were to walk into our lab you would see large optical tables that are about six feet long by four feet wide filled with lasers. Because to do all the different operations you need different frequencies of light. And then you'd see another vacuum chamber that holds or another optical table excuse me the holds our vacuum chambers. OK. So let me just see if I follow. You load your system Yes With ytterbium ions? Yes. And to perform a computation just, for example, how do you clear the memory? What would be the first step in your computation? Sure. So usually you start with some number let's say between two and five ions is what you'd want. So you'd load two or five ions, let's say two for this example. So we can turn the oven on for a set amount of time then we shine the laser that takes that rips the electron off to create the ions and we wait till we get two ions. And then we can see them on the camera. And so we initialize the system to a zero state just like in conventional computing you have to initialize your computer to zero state, and then if we wanted to put those two ions in a superposition we could shine either a laser or a microwave at them and that would create a superposition. So you could think of a qubit on what's called a block sphere, which is just a unit sphere where the up z axis could be your one qubit state and then down z axis could be your zero qubit state. So you're prepared it in a zero, and then we shine these microwaves or lasers on the atoms and it causes the population to rotate, basically. And so you just stop when you get to the upstate and you can look at that, it’s a trace on a scope. So for example I mean a standard operation, simplest possible operation you might have in a computer system is a ‘not’. That's right. So how would you do a ‘not’? So you prepare, you would prepare your qubit in the zero state then you would shine a microwave a laser beam on it for a set amount of time and it would cause the population to evolve to the up state, and that's a ‘not’ gate if it go from zero to one that's a ‘not’ gate. If you let that light or microwave interaction on and it would go back down to the zero state and it would just keep rotating. So suppose I want to do something a bit more sophisticated like an ‘and’ or something that actually combines two qubits. How would you how would you do that? So if you had two qubits in trapped-ions, the nice thing is that because they're charged they want to repel each other, but because there's a trapping potential on them they get pushed together so they find a happy medium where they sit. But they have a shared motional mode due to this interaction. So there are a lot like a Newton's cradle. If you pull a ball in a Newton's cradle you see all the balls move together. That’s right. That’s right. And so the trapped ions do the same thing. If you start to shine a laser beam on one and you excite some motion and actually excites motion in in both ions. And so then you have a databus that you can get the ions to talk to each other. And if you had five ions you could actually use this databus to get one in five to talk to each other directly. So you're not limited to your nearest neighbor interactions in a trapped ion system. And you can use that to combine them. You can use that combined motional mode to get the qubit states to talk to each other and create things like controlled ‘not’ gates, say. Great. So the Jerry, can you kind of repeat that kind of virtuoso performance for your own lab? Yeah, I'll do my best there. But what's it like in there actually? So our lab looks a lot different from what Kathy-Anne described. And that, that the reason for that is because the underlying qubit is very different. One difference that, the main difference is that instead of actually having physical, naturally occurring qubits, in this case ytterbium ions, that you can you know that all of this work is based off of having a really, really stable atomic clocks. What we're doing with superconducting qubits is to actually engineer and build them on a chip. So it's a little more integrated. You're actually using lithographed techniques that you know and love today with your silicon processors. And instead of the materials that are in your, in your in your chipset or in your phone or your laptop we're using slightly different materials to build superconducting circuits. So superconducting refers to materials that, that when they're cold they have basically no resistance. And by using the right kind of superconductors you can actually build quantum effects into circuit elements. So with Kathy-Anne, I have a good picture for what the bit is. The ion is either pointing up, or you know rotating that direction that corresponds up, or the other way so what's the corresponding? Yeah, so the way to think about it here is that you're actually building an oscillator circuit. So if you if you go back to your electrical engineering days think about the circuits that you might build with resistors or capacitors or inductors, these are varied circuit elements. In the case of a superconducting circuit you actually could use an element known as a Josephson junction. And a Josephson junction is basically a sandwich of aluminum, aluminum oxide, aluminum. And what's phenomenal about this this element is that you can combine it with it with a standard capacitor and you can make it oscillate in the microwave regimes, so around five gigahertz and choosing the right parameters of the capacitance in the Josephson injunction you can isolate it to build a qubit state, so zero and one, that that resonates at around five gigahertz. So in your case can you walk through an example. You load your computer… Right. So in this case, in this case where we have a silicon fabrication facility that builds these circuits, we, they come out in large wafer form and then we have to cut them up into smaller chips. These chips are packaged into a printed circuit board like what you might see in inside your phone. But this printed circuit board carries microwave signals and so those the printed circuit board then needs to be cooled down to really, really low temperatures to basically have the qubits function properly. So I said that we use the superconducting materials. And so the materials are niobium and aluminum. And for them to superconduct and for there to be so little noise that we can actually see these quantum mechanical effects at five gigahertz, we need to cool down to fifteen millikelvin. So that's, since you already brought up the space analogy, it's colder than outer space as well. And in fact you know with the microwave background space is around it's a little under four kelvin there, but we're getting down to fifteen millikelvin. Wow And so the refrigeration systems that we built, that we use they're commercially available but it is phenomenal that you can just turn the turn hit a button turn a key and cool down to these these devices to such a low temperature. So in the example of the trapped ions, if you want to execute a ‘not’ operation you hit it with lasers or microwaves. What do you do in your case? Yes. In this case it's more electrically controlled. So you you're placing this chip inside this printed circuit boards, it's inside of the refrigerator, but then you have all these wires that come down through the refrigerator and those carry electrical signals. And so to do say, a ‘not ‘operation, what we're doing is basically applying a shaped microwave pulse that's generated at room temperature, so on the set of electronics that sits outside of the refrigerator, we generate a five gigahertz signal for a certain amount of time say maybe twenty nanoseconds or thirty nanoseconds. That pulse gets sent down into the refrigerator, applies just enough energy to flip your qubit state from zero to one. And then you could do. How would you do an ‘and’ or ‘nand.’ And then with regard to two qubit gates, so our particular architecture connects qubits on the chip. So there's there's other microwave circuitry that is used to, to define particularly interactions between qubits on a chip. But then those, those interactions are again activated using microwaves so just the way that we do the not we might send it we might send pulses at a slightly different frequency down into the refrigerator to induce a two qubit operation such as a controlled ‘not’ gate. So everything you've described is acting on the system. So how does this system act on us to return its information and the result of the computation? Yeah, so in the case of Kathy-Anne they're sending another laser beam to do the detection, and you can see it with the camera, but us what we actually have to do is send a another microwave pulse which is resonant with a detection cavity, so there's actually a resonator on the chip that oscillates at a slightly different frequency depending on if the qubit is zero or if the qubit is one. And so we interrogate this cavity with a microwave pulse and at a very low energy levels, so single photon energy levels at say six gigahertz, and so that that signal goes down into the fridge, gets amplified through various stages and then we basically have to digitize it to determine whether the qubit was a zero or one. Cool. Seth, just to kind of bring some perspective on the technical discussion here. What would be some pros and cons of the different techniques? Why would you use trapped-ions in some cases, superconducting qubits in others? Well so pretty much anything at the microscopic level will compute if you shine light on it in the right way, via either lasers or microwaves. But some things compute better than others. So what's been happening over the last decade and a half or so is that the technologies for instance superconducting quantum computing have really advanced by a lot. I mean I was participating in the early experiments to build I think the second superconducting qubit around 2000. It was a so-called ‘flux qubit’ these super currents you have a little loop interrupted by Josephson junction. And so super current going around forever that way you call it zero and super current going around forever that way, counter-clockwise, sorry, clockwise for you then you call it one. And then you know super current going around both ways simultaneously both clockwise and counterclockwise simultaneously, that's 0 and 1 at the same time. So that's how you get quantum bit in these things. But you would let them sit for a little while and then, you know, they'd get kind of completely randomized very, very rapidly. And so these originals superconducting qubits were, well they sucked let's face it. That's the technical term like funky, right? So but then there was this great innovation actually which Greg participated in, I think this was part of your PhD thesis, this was developing - people thought oh the materials are bad, something's wrong with how we're building these things. But it turned out that it was really much more of a design issue and by being really sneaky about how you design these systems you can make that much, much much, much more coherent so that they could you know you could have, they could oscillate around or you could perform ten thousand logic operations before these things got messed up. And so with superconducting systems I think that what you did in your PhD thesis and afterwards was a really amazing innovation. And then which also allowed, because you building them of these all these chips you can put many of them together, so there's a clear path towards scalability. Similarly with ion traps, the first ion trap experiments were done in the in the late 90s in the mid 1990s but they were you know two qubit experiments, sometimes two qubits you can still do interesting things with two cubits, right, you know. You can search your data space with four possibilities and you can find is it here or here or here or here by only looking once. Like how can that be, classically? But quantum mechanically. We're about to find out actually in a little while. Yeah. So, so what's happening is that there ,is that there is a really there's been also with ion traps there have been all these advances in integration and making ion traps larger and larger, integrating them with quantum communication lines. So there's been a steady advance in constructing more and more elaborate and complex quantum information processors. Ion traps and superconducting systems are the two technologies that are furthest along the way. But there are a whole bunch of other technologies like nitrogen vacancies and diamond topological systems and all kinds of crazy things because again pretty much anything will compute. And even though as Jerry was saying that the twenty qubits, OK that doesn't sound like a lot, but two to the twenty is about a million. Thirty cubits…two to the thirty is about a billion. Forty cubits that's a trillion. Well you know now you're starting to try to manipulate these, a trillion numbers, a billion or a trillion numbers and actually that becomes very difficult classically. So the devices that are being built right now are just at the threshold where we actually can't understand what's going on inside them classically. Previously we were able to simulate what was happening on a hugemungous classical computer and try to figure out what's going on. Now we're kind of on our own and sort of exploring this quantum frontier and we, you know, we we are going to be able to try to figure out what's going on. And then the hope is that when we build these devices we can use them to build ever-larger devices and build quantum computers that have a thousand qubits or a million qubits or a billion qubits. So Julia-Ann, the machines, and it's a great moment to be in historically to be in, the machines are now crossing over and exceeding the power of our most powerful classical computer. But then how do we know that they're working properly if we can't even compare the result of the calculation of the quantum computer to a classical computer any more? And working properly. I mean Because I don't know about you but my computer crashes sometimes. I mean how can we ensure that they're working properly is maybe a question I can answer because as you ask what, what architecture will eventually you know win or be the best one and of course the question we need to answer is which ones scales best for a large number of qubits? And in theory, I'm a theoretician so I you know I mean I'm in a position where I write my papers saying let's assume we have a quantum computer of ten thousand cubits and then but there is a lot of theory developed, a theory of say quantum error correction for instance, where we face the fact that no matter how well Kathy-Anne and Jerry perform their jobs, the elements out of which they build their quantum computers will be faulty at some level. There will be a probability that they'll fail, that they'll lose their coherence and so on. And there actually is a very beautiful theory of quantum error correction that once we are above a certain threshold with the noise in their system, so once the noise is small enough, then we can actually build in redundancy into these qubits, in a way that the computation will flow flawlessly. And that's a very nice theory that will then allow us to make the quantum computer work at a larger scale. So to fix the mistakes You can fix the mistakes. Yes. So I think this might be a good point to talk about how they actually work. And Jerry I know you've got a demonstration you'd like to present to us. Well first, the way that I want to actually motivate this is based off of this search, a search algorithm and Seth already alluded to this. But let's say you have four cards, right and you play the game of monte or you might go to a street corner somewhere. Not that we're advocating you do that. Don’t do that. And so out of these four cards you've got one of them which is different, one of them is the queen. And now, now we're going to flip them over and when you play this game you're randomly going to try to find where that where that queen is right. You're going to try once and you're going to flip over a card and see whether or not it's the queen. And so on, on in playing this game you really only have a one in four chance of getting it right on your on your first try. But now what's interesting about this type of game is we can also ask well how would we how do we do this if we had a computer? What what what does a classic computer do with this game and what does a quantum computer do with this game? OK. So in the case of a classical processor what we're doing is when we when we flip over these cards you can think of this as as storing a database. In this case we can also call it an oracle. So you store the database with the hidden set of cards where the queen is properly located. With a classical computer what you're going to do is in order to to find where it is you're going to look at all the possible arrangements. Right. So you're going to start with one particular arrangement. Let's, let's start with placing the queen in the first slot. And we're going to take that entry, use it as an input, we're going to do some processing, in this case the green box where you're gonna do some comparison with what's in the database and you're going to make a decision at the end of it whether or not it correct or not. In this case it was not correct and you get a zero. OK. And so now then you can try the next one. And again you're going to get to get a zero and then the next one and this time you get it right. But of course classically you're going to go through all four of them. And so after you go through all four you see that on average you would have gotten this correct, basically you would get a correct after querying this database about two and a quarter times. Right so this problem of search in this case with a classical computer you can only kind of do this sequential, sequentially or by choosing at random. But with a quantum processor, this is where a lot of the ideas of quantum mechanics can come through. And so in the next slide here with the quantum processor you have access to superposition. And so just like we talked about how you can be in zero and one at the same time, what you can do with two qubit system is to make a superposition of all four of the possibilities: 00, 01, 10, 11, to represent all four of the possible arrangements of this hidden queen. And so we can take that superposition state, use it as as basically as an input, call the database just once. Perform some processing step, in this case the processing step involves entanglement and it involves this quantum interference of adding adding together the waves. And it'll amplify the answer for exactly the right answer. And so every time, no matter what you what you place into the database, wherever you hid that card, you use only one call to the database, you get the right answer using this algorithm. And this particular algorithm is known as Grover's algorithm. It is a simple case that gives you the sense for what is done differently in terms of processing information on a classic computer versus a quantum computer. And so on the next slide what would you actually would do when you want to program an actual quantum, quantum processor is to use this language of quantum gates. And so what you see here is actually a quantum circuit. And as Seth alluded to the idea of music, we call this actually a score because it kind of looks like a musical score. And the concept of time really in time with gates really has a strong analogy here because it's like you're playing different notes on these different qubits. What you see here is really just, just two of the qubits being populated with these different operations, which realizes Grover's algorithm. And to break it down a little bit further in the next slide what you, what you see is that these various steps of superposition, the stored database and the actual post-processing steps are all, are all encoded into these various gate operations that you can apply. And in this case we can actually run it through and get , get a result. And I can actually launch this live if you? Please by all means. While we are you switching over? Kathy-Anne, you were really one of the first people to actually do this for real in your dissertation work. Can you describe what you accomplished? Yes sure. So we did it with trapped ions, we had two trapped ions and as Jerry just showed you that'll give you the four element database. And what we did in practice was we had the computer mark a state and then we would run the algorithm similar to the diagram that Jerry just showed, it looks very similar and then at the end we would see what the probability was that we recovered that marked state. And at the time the untangling gate that we used we were just starting to learn to use it, it had just been demonstrated. And so we found the mark with a probability of about sixty percent. But Jerry just told you it should be one percent and that's because the fidelity, that's one way you can measure how good a quantum gate is, the fidelity of our gate wasn't as high as we would have liked it to be, mostly due to technical difficulties. This is a fundamental limit of trapped ions. They've since repeated this experiment with three qubits recently, Chris Monroe's group at the University of Maryland, and they did quite a bit better because the technology has progressed. Now at this point at these gates are at very high fidelity near the fault tolerance level that Julia was saying earlier that you need to run these computers. You were telling me earlier that these are so delicate that you can so much as look at the laser wrong and it would it would give you the, it wouldn't work. Yes so we used cadmium ions in my graduate work and they, they need laser frequencies that are about two hundred fifty nanometers, which is an incredibly difficult color of light to generate. You basically have to quadruple a laser to get there. So you take a laser, you double it and then you double it again. And doubling's hard and the efficiency is low. And one of the people in our lab just had the right acoustic sound to his voice that he would unlock are doubling cavities and so sometimes when he came in the room he would start to talk and we were trying to run our experiment and our laser would shut off. They're a very fragile system. So Jerry are you ready to go with thIs? Yeah. This is actually a live quantum computer. I wanted to start by just showing a little bit about the interface of what we have. So this is the IBM ‘Q Experience’ and what we actually have is a lot of content on there for anybody to get started with learning how to program and actually use a quantum computer. So anybody can do this? Anybody can log in and sign up for an account. We have this library with various user guides for beginners, if you're more familiar with some mathematics like linear algebra and even another other guide which actually leads you to our Github developer repository. But through this, through this portal you have access to learning about the basics of a qubit superposition, entanglement, simple algorithms such as this Grover’s algorithm. And we also have a community board feature where we have the ability for anyone to ask questions and to, and our IBM researchers are more than happy to answer. Julia I wanted to go back to what you were saying about the factorizing problem, that's in addition to the search algorithm the other use that people we talk about with with quantum computers, so what's what's kind of state of the art in that when you factor the number fifteen or, or get that high even? You can, I mean Jerry would probably be a better person, but with twenty qubits you can imagine that you can factor perhaps with some overhead I would guess you can maybe factor numbers up to a hundred? Which of course you can do in your head. So at this stage we are really at the level where we demonstrate things when it comes to factoring. The cryptographic systems that I was talking about that your credit cards rely on these usually have something maybe up to a thousand bits? So I think once we get a quantum computer to the order of perhaps one or several thousand qubits then you better stop using your credit cards with the current encryption. So… One thing I would I would like to mention though with regards to the Shor's algorithm though is that because of the error rates that we end up having with the physical qubits, sure if you have a thousand perfect qubits you might start thinking about Shor's algorithm for a thousand, thousand-digit numbers but with, with needing quantum error-correction and a lot of the best known encodings you have an overhead that significantly pushes that threshold further. So I think that in terms of Shor's algorithm and a realistic Grover's search you're thinking about probably needing millions, of tens of millions qubits. So it's it's a bit further off but it's still there will come a day where There will come a day when you've got to worry about your bank accounts but it's on, the horizon for that is a bit further beyond where we are currently at. So millions of physical Millions of physical qubits, yeah so that's only maybe around a few thousand logical qubits but the, the encoding that's what's going to matter there. So Kathy-Anne you were describing also to me earlier that on the one hand quantum computers take away our privacy by breaking these codes but they might also restore. Can you describe some work, work you've done for the restoration process? Yes so there's people working now on, in addition to quantum, computing quantum networking and what you can do with quantum mechanics for networking communication, the easiest example to explain, and it's been around for a while, is called quantum key distribution, where you send a message between two parties say Alice and Bob using single photons. And because the photons are encoded using quantum mechanics you can actually make protocols that are ultra secure. And by that we mean they're tamper-proof, meaning that even if an, an eavesdropper can't get between Alice and Bob to get the signal because they don't have the corresponding information that was encoded in the quantum mechanics. But even if an eavesdropper were to try and grab the signal the protocols are tamper evident so Alice and Bob would see that immediately when they started to talk about the results that they'd gotten and would abandon the protocol. So yes it can do things like break, break encryption but it can also provide ultra secure protocols too. So what are you doing in your lab now to kind of bring that into fruition? So we're working on quantum networking where instead of sending key information, which that just sends information to generate a key and then you would use the key for something else. We, and a lot of people in the field, are moving towards quantum networking where you actually send quantum information directly over some longer distance link. And so this allows you to do things like ultra secure communication protocols or people are also looking at it for distributing computing. Where you don't just have one computer sitting there with millions, let's say, of qubits but you distribute these qubits over a larger space and you have smaller banks of qubits. Seth, you once told me, this is a couple of years ago now, I don’t know if you remember the anecdote, the NSA funded some early quantum computing work to show this wasn't possible because they didn't want to have unbreakable codes. Can you walk through that? Oh yeah, so I was at the, so back in 1993 I wrote the first paper showing how you build a quantum computer using these methods of zapping stuff with microwaves and lasers and things like that. And then we started to work with people to build them. In 1994, I think the first U.S. government meeting to fund, to discuss funding for quantum computing took place at DARPA in Arlington, Virginia. And during this meeting there were a bunch of people, including Peter Shor, they were there talking about stuff and a fellow named stood up and he said I'm Keith Miller from the NSA and I am authorized to tell you that the NSA is interested in quantum computing and then he sat down again. And everyone went, oh my God! Some people actually told us something. That's incredible! But it caused such a stir that he stood up again and he said well I believe I'm also authorized to tell you this, of course the NSA is interested in quantum computing because our primary mission is to protect the secrets of the country, up to thirty years for top secrets. We have a whole bunch of information that's out there that's already encrypted which if someone could build a quantum computer could be decrypted. And that would be bad. So really what we would really prefer is that it not be possible to build a quantum computer. By the way this is a good person to have funding you, it's like they call up and they say how's it going? And we say oh it's terrible, the qubits aren't working. Great great! That's wonderful. Here's your money. That didn't last very long. So then he said. But because of our secondary mission, if it is possible, we want to have the first one, so. To bring this back down to more quotidian kind of applications Jerry, you once described to me some of the molecular calculations you were doing. Can you walk through what you're doing with these molecules? Yeah. So, I think one of the more kind of near-term areas that we'd like to look at application wise with quantum computers, actually is in chemical simulation. So what's actually interesting is that it dates back to Feynman around 1980s when he actually talked about, wouldn't it be great to actually simulate nature using something that follows the same quantum mechanical principles of nature. And there's been a lot of theoretical work going into how would you actually map say problems in quantum chemistry, for example electronic and molecular structure, onto physical quantum bits. And it's a really neat idea in the sense that you can you can actually try and get an analog for a physical, a real physical system such as the energy levels of say a hydrogen molecule, but actually run it on a on a on a chip right? Run that simulation on qubits that's inside of one of our dilution refrigerators. And so we, our team has done various both theoretical explorations and recently experimental demonstrations of how to do some rather simple molecular calculations. So looking at the energy the ground state energy of a simple molecule just like hydrogen so two H's and then lithium hydride, beryllium hydride, but very small at this at this at this stage. But it shows the type of trajectory, if you will, of our application in the near term because at some point with these different molecular structures you get to a point where there's too many electrons in it that it's impossible to again, simulate in on any classic computer. And it can be rather modest molecular sizes that that already maxed out all those supercomputing resource in the world. And there's a lot of potential there for quantum computing to really be a game changer in that in that field. Seth, I was wondering if you could fuse, merge for me the two great computing tasks of our time; machine learning and quantum computing? Is there a relationship between the two? Yeah. For there is the only way to get information right now is to, you know, sort of the only way get a grant right now is to apply to do something with big data machine learning. And then in physics the only way to get a grant is to do something with grapheme -the material is the future along with gallium arsenide. So the real reason is to have something so you can get a grant that's you know graphene based quantum random access memories for the analysis of big data. It's a winner. I guarantee it. You heard it here. So it's interesting now that we are we actually are about to have a simple quantum computers that have, you know, tens of qubits and fifty qubits coming up. And I think that there's a reason reasonable path to think of having up to a thousand physical qubits over the next five to ten years. I don't think that's unreasonable to expect. What will you do with these devices? Now because they are quantum mechanical and they're very hard to simulate classically, As Jerry was saying, quantum mechanics you know it's famously weird and funky and quantum systems exhibit funky and strange effects like entanglement and Einstein Podolsky Rosen correlations, and Schrodinger's cat, and statistical patterns in data that are very hard to capture classically. They're counterintuitive, it's hard for classical computers to capture them. So if they can exhibit these, if quantum systems can generate these funky patterns that you can't generate classically maybe they can also recognize patterns that you can't recognize classically. Now machine learning is about taking patterns of data and trying to tease them out and show that they're there, it's recognizing patterns in data. Machine learning of course very trendy right now, justifiably so not not really because actually I think you know it's about to supplant human beings or anything like that but because actually it's gotten good. You know there's this there's this thing called deep learning, which when I learned about it a three or four years ago I said wow! this is fantastic, you know computers will tell us about love and truth and you know happiness of all this deep stuff, but no such luck. It turns out that these are just neural electronic analogs of neural circuitry that have many many many many levels in it so they're deep in that sense. But they actually do do problems, they solve problems that are hard to do. Now do you get inside of a machine learning algorithm like say the Netflix algorithm where you know you say OK what should I watch today? And Netflix says, ‘’well I think that you would like to see Dirty Harry’ but you, for some reason my students don't watch Clint Eastwood any longer, I don't know what it is. You know what Netflix is doing is they're actually looking at the preferences of everybody out there who's looking at Netflix, comparing your preferences to theirs and then you know doing what's called a matrix completion algorithm to recommend something to you. Now if you were to program that in a co-op into a quantum computer it turns out that their algorithm which they only run, they run it twice a day because it's so incredibly computationally intensive, that if you do that on a quantum computer you could have a quantum computer that had say a hundred quantum bits and you could do ten thousand operations and it would do the same set of operations in a quantum mechanical fashion. So we decided hey this is great we'll call this quantum Netflix algorithm, but then I googled quantum Netflix algorithm and it turns out that Netflix calls their own algorithms "the quantum algorithm" even though it has nothing whatsoever to do with quantum mechanics. So using you know quantum computers, quantum systems in general exhibit strange and counterintuitive patterns. This gives you reason to hope that they can recognize strange patterns and it turns out that the actual stuff that they're doing already for things like factoring numbers is great for actually finding patterns and data. And actually this is a nice application that people have been using to demonstrate, you know, simple versions of these algorithms on small quantum computers Obviously the world as we know it would not be the same without computers. They're just everywhere, they're ubiquitous. Will fifty years from now people say the same thing about quantum computers? Will they be as transformative as classical computers have been? That's an excellent question. I view, I think a quantum computer will remain, it might be ubiquitous but it will remain a special purpose device for various things. I don't think it will replace the computers as we know them in its entirety. So I view the future perhaps as you having your laptop and then a little dongle with one of Jerry's or Kathy-Anne's contraptions. And then whenever you know whenever you need to break into somebody else's credit card or whatever it is that you want to do you make you know you make calls to that, you know, to that special device. I think that, that's more likely picture of the future with a quantum computer in it then, yeah. So it's more like a GPU inside of an Xbox type of thing. Yeah. I guess. That won't be literally a quantum iPhone. Although Apple may trademark that before Netflix or Verizon I’m more optimistic, I think, you know, they build it they will come. Right? So once we have quantum computers to play around which we already do have thanks to IBM, I'm all over that and people will play around, will come up with you know more quantum apps, quapps, quapps for all. Can you trademark that? I trademarked the cloud with a q. Questions. So the four card monte example I mean it's it looks to me like something that could basically like backwards solve any kind of cryptographic hash like as a black box or whatever the hash is. And yet I hear about these, these quantum-proof cryptographic methods and because it seems like it doesn't matter what the actual hash operations are, how does that, what is the general underlying principle for these quantum proof hash hash hash functions? So a hash function in cryptography is a function that just like scrambles everything up in a way where you can check to see if it's been scrambled up in a proper fashion. And inverting these, so undoing this hashing is supposed to be hard and that's the basis for a lot of cryptographic protocols. It's still hard on a quantum computer that is this quantum searching will allow you to get a speed up to that will allow you to you know solve some problems that you would be able to solve classically. But this kind of hashing problem is still hard on a quantum computer. So one of the things that's going on right now because exactly because quantum computers are getting more powerful, though let's face it we're still you know we can basically compute our way out of a paper bag now where previously we couldn't compute our way out of a paper bag. So but you know even the NSA has issued an advisory saying you know if you're going to come up with an application that's good and will still be secure twenty years down the line it's time for you to think of something in addition because quantum computers might be there. So people are coming to trying to come up with what's called post-quantum cryptography and I think that you're alluding to some of these problems there. Now you make me wonder what post quantum cryptography could possibly be? Can you just give a simple example? So based on a, so public key cryptography is a way where you know I send, suppose so I buy green coffee beans over the Internet and then roast them at home. Which you actually do. Yes I do actually. So yes it's so much so much fresher that way. It really is. I highly recommend it. So what I like to say try to send buy something from Sweet Maria's in Berkeley, you know this 10 pounds of Costa Rican, then Sweet Maria’s sends me a big number which is the product of two smaller numbers which are prime numbers. And this is called the public key, this big number. I could use that number to encrypt my information in a way such that only sweet Maria, who knows the two smaller numbers, can decrypt it and that's the basis for public key cryptography. There's a public key, which is what they sent out there. Anybody could encrypt but to decrypt you need you know the private key, these two numbers. This is what quantum computers can do. If they can find the private key given the public key which would be very disruptive thing because I frankly I like buying freshly roasted green coffee and I would be pretty pissed off if I couldn't get it. So the idea is to you see this as a rather specific protocol, so what people are trying to come up with are other protocols where quantum computers can't break those protocols where there is a public key you can encrypt using the public key but then it can only decrypt using the private key. But a quantum computer can't find the private key. And so far there's been mixed success I would say doing this. There's not nothing's ready for primetime. Yeah I should say. This is also important because even though quantum computer is not there you might want to encode your information in a way that nobody can decode it in the next one hundred years and one hundred years is a very long time, right. And then we might assume the quantum computer could be there, I mean a big one whatever. And the post refers to the fact that even though you encrypted today maybe you don't want it to be decrypted you know in ninety five years by one of the successors of Jerry's computers. And there are, there are methods nowadays in fact that cryptographers have started to develop but they're extremely impractical at this stage, that the public keys you would have to transmit are so long that it would take you, you know hours basically to do that. But it's it it would be wrong to say that there is no alternative but it's not a practical alternative. More questions. I saw a bunch. How does the observer effect claim to like retrieving information? Can you elaborate? Well it seems like if you try to like observe the information it would collapse, right, like it would just collapse back to two bits. So like how do you maintain like the four bits or whatever? Observing it is essential to how we actually make use of a quantum computer, right, because it has to be something tangible that we can put in, has to be something tangible that we can take out. So the input will be classical bits the output will be classical bits. In-between is where we make use of superposition, entanglement and this two to the n exponential space, state space. And the key thing is is how do you tailor your algorithm to make use of that so that when you perform that measurement you've learned something that you otherwise wouldn't have wouldn't have been able to calculate. So it's all about how you define those interferences of the waves through the operations you perform in between. You only observe at the end. Before that it's considered to be rude to look at somebody's quantum computer while it's in operation. So, that's part of the difficulty in controlling these very complex systems is because if you make a measurement or if the environment makes a measurement without your knowledge the same thing happens. And so you have to control the system very well so that you only look for, the environment only measures the system at the end of the computation. So it sounds like a lot of the stuff that you guys are working on is kind of like a straight analogy from a classical computer to a quantum computer where like a bit is a qubit and you're working not gates, I was wondering if you could talk about how quantum annealers like what D-Wave works on how well you guys work on factors into that and if there are any sort of limitations using the annealing paradigm. Cause I know that's usually better off for like combinatorial optimization problems. But is there any other sort of limitation on what an annealer can do versus what a quantum computer can do? Well I think that the first thing there an annealer is a very it's a more restricted type of problem, right, so you get your hardware, the way that you lay down these that these circuits in an annealer you defined all the couplings between these these these these devices and you've defined a particular energy landscape that you want to say optimize or find the ground state for. In the case with the systems that we were building where you have full quantum control over any of the qubits, you really can drive the system to any kind of quantum quantum problem that you want. And so it's it's reprogrammable in that sense and you can define your optimization landscape in more generality. But maybe Seth you can also comment on the D-wave. Yeah, I mean, also let me say that you keep on letting all of the people who possess prior knowledge into this room will make our lives harder. So what's that about? So quantum annealer as as Jerry was saying it's a it's actually a very old idea and classically, there's a notion called simulated annealing classically where you want to solve a hard problem. So you want to find the the minimum value of some function, many problems are like this, like the traveling salesman problem, I want to find the shortest path that will get me through all the cities of the United States and back to where I started. That's a hard problem. And so what you do is you map this problem into finding the lowest energy state of a physical system and then you try to find this lowest energy state by cooling, annealing, that's why it's called, annealing to get down to this lowest energy state. Now quantum annealing is a sneaky trick that does this quantum mechanically. You construct a quantum system. I mean for instance D-Wave quantum annealer is a tunable device with up to a couple thousand quantum bits, and they can tune all the couplings between them And then you set it up so that the lowest energy state encodes the answer to your problem.and then you try to find this lowest energy state by kind of oozing in a funky quantum mechanical state of fashion from some known state to this unknown state. And either it works or it doesn't. Now it is an interesting situation because actually nobody knows if this works is supposed to work even in theory. And so it's one of these things where if you build it and then you see what happens. They find that some fraction of the time they actually get the right answer. There's a lot of argument about whether this is happening in an intrinsically quantum mechanical way or not. But I mean these are very interesting systems so I mean D-Wave deserves great credit for building a large scale quantum system. It's got lots of entanglement in it. It's got, you know, it's it's has thousands of quantum bits and it's actually a beautiful system just for doing experiments on. I'm going to a conference in Japan next week or two weeks from now where basically people are going to report on all the experiments that they're doing all these different D-Wave devices to try to figure out what the heck is going on. Great. I'm afraid I'm going to have to cut off the questions there Thanks to all of you for coming. 