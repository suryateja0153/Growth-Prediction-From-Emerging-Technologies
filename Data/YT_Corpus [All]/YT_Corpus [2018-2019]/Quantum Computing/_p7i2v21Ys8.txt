 Een algoritme is een opeenvolging van stappen, dat een probleem oplost wanneer het in de juiste volgorde wordt uitgevoerd. Vandaag gaan we bespreken hoe een quantumalgoritme kan worden opgevat als een soortgelijke reeks stappen. Om dit te bereiken hebben we een taal nodig die ons in staat stelt om de quantumoperaties die we tot nu toe hebben gezien in grotere procedures samen te stellen. Een dergelijke taal moet twee eigenschappen hebben. Ten eerste moet het gemakkelijk zijn om het effect van een kleine operatie op een groot systeem te beschrijven, wanneer we niets doen met de rest van het systeem. Ten tweede moeten we in staat zijn om gemakkelijk een procedure uit te schrijven die de output van de ene bewerking als input voor een andere gebruikt. Natuurlijk is er geen reden om het wiel opnieuw uit te vinden, we kunnen kijken naar klassieke, logische poorten voor inspiratie. Hier zien we twee van de logische poorten van de klassieke informatica, EN en OF, elk waarvan de in- en uitgangen door deze draden worden gedragen. We kunnen een lege draad naast de OK-poort plaatsen om een bit aan te geven dat rechtstreeks door het circuit wordt geleid, en we kunnen één van de uitgangsdraden van de OR poort aansluiten op de ingang van de EN poort, waardoor we grote, ingewikkelde, logische circuits kunnen bouwen uit kleine, eenvoudige componenten. We kunnen iets soortgelijks doen met quantumoperaties. Hier zien we de Hadamard operator, die één input qubit en één output qubit heeft. Het wordt beschreven door de 2-bij-2 matrix aan de rechterkant. Er zijn ook twee qubit-bewerkingen, zoals de CNOT, die twee ingangen en twee uitgangen heeft. Deze bewerking wordt beschreven door de 4-bij-4 matrix die ook rechts te zien is. Nu komen we bij de twee technieken die we gebruiken om kleine operaties samen te stellen tot grote circuits. De eerste is dat, wanneer er een lege draad is, we de identiteitsbewaker erop plaatsen, en om de totale eenheid te berekenen die het resultaat is van het uitvoeren van een kleine bewerking op een grote set draden, nemen we het tensorproduct van de operatie mee met die identiteitsoperatoren. De tweede techniek is voor het voeden van de uitgangen van één fase van een circuit naar voren in een nieuwe fase, en misschien is het een beetje eenvoudiger. We nemen gewoon het reguliere matrixproduct van de twee matrices die de stadia beschrijven. Het is belangrijk om hier voorzichtig te zijn, aangezien de juiste volgorde voor het plaatsen van deze matrices de omgekeerde volgorde is van de volgorde waarin ze in het circuit voorkomen. Dit komt omdat, in het matrixproduct, de meest rechtse matrix is de eerste die wordt toegepast op de toestand psi. Voordat we deze concepten gebruiken om een quantumcircuit te analyseren, hier zijn nog twee voorbeelden van twee-qubit quantumoperaties die je later wellicht ziet, SWAP en CZ, ook wel CPHASE genoemd. SWAP kan worden gebruikt om twee toestanden tussen twee draden uit te wisselen, wat nuttig is als er om de een of andere reden qubitstaten van de ene plaats naar de andere moeten worden verplaatst. Het CZ daarentegen plaatst alleen een minteken op het één-één component van welke toestand dan ook die wordt ingevoerd. Nu we de CZ-operatie hebben gezien, laten we eens kijken naar hoe je een quantumcircuit kunt analyseren waarbij de CZ betrokken is. Specifiek, gaan we proberen te bewijzen dat we een CZ kunnen genereren met behulp van een CNOT en enkele Hadamard poorten op de doelqubit die voor en na de CNOT komen. Welnu, zijn er drie manieren om dit te bereiken, en we zullen ze allemaal doornemen. De eerste is de eenvoudigste, maar ook de meest tijdrovende. We gaan tensorproducten van one-qubit operaties nemen met identiteiten op de lege draden, zoals hier te zien. Dan kunnen we de hele schakeling in matrixvorm uitschrijven. Door deze matrices één voor één te vermenigvuldigen wordt het probleem geleidelijk aan kleiner. En als we ze allemaal vermenigvuldigd hebben, kunnen we zien dat de matrix die het hele circuit beschrijft is gelijk aan de matrix beschreven in de CZ die we eerder zagen. Een eenvoudiger techniek, die goed werkt op dit circuit, is het berekenen van de effecten op individuele kets. zonder ze in vectorvorm uit te schrijven. Dit bespaart ons een beetje ruimte. Hier kunnen we zien dat het effect van de Hadamard poort op de tweede qubit is om zijn toestand om te zetten in de plus-minus basis. De CNOT plaatst een minteken op het één-min component van de staat, aangezien plus en min de plus- en min- en min-één eigenstaten van de X-operator zijn, en de laatste Hadamard brengt de staten terug naar de standaardbasis. Dit is identiek aan de actie van de CZ poort op deze basisstaten. De derde en laatste methode, die we zullen gebruiken om quantumcircuits te analyseren is het uitdrukken van de relevante tensorproducten zonder gebruik te maken van matrices, probeer daarna de resulterende expressie voor het circuit te vereenvoudigen. Zoals we kunnen zien, is de tensor productuitdrukking voor CNOT ingeklemd met Hadamards vereenvoudigt de nul-nul tensor H in het kwadraat plus één-één tensor H X X H. Het is eenvoudig aan te tonen met behulp van twee-bij-twee matrix vermenigvuldiging of ketnotatie dat H-kwadraat de identiteit is en H X H is Z, en laats ons achter met een gecontroleerde-Z-operatie, waarvan we de actie kunnen verifiëren aan de hand van de basistoestanden. Deze drie technieken, en de quantumschakelingen die zij gewend zijn te gebruiken om te analyseren, elk een rol te spelen hebben bij het ontwerp van nieuwe quantumprotocollen, en belangrijke instrumenten voor ons zijn om ons begrip van quantumalgoritmen te bevorderen. 