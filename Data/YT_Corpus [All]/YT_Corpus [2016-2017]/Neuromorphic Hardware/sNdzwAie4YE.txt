 yeah okay okay hey so this is Daniel Isaac and Omar did you get there right okay so we're the EXO class summit in Aspen yes and Amara was asking about spinnaker so to set the stage here you are a technologist and but you've never used spinnaker you for a little bit about it is that a little bit about it I've seen you know kinetics and some kind of you know other kind of orchestration systems and I you know I've said hey you know using me as a guinea pig and show me start from scratch and explain to me what this is and what you guys want to offer cool and so this is this will be great because it'll be an opportunity for anybody who's in the same shoes as you are which is many people to really understand what spinnaker is so our guide will be Isaac today our CTO and founder so let's get to it man sure okay so so spinnaker is a framework or a deployment tool that is focused on immutable infrastructure so that's something we already you know we discussed and because it's immutable like spinnaker takes an infrastructure point of view of the world so when you land on the spinnaker homepage literally you're searching infrastructure you're looking at it from an infrastructure point of view so it does have an ocean of applications but really applications are just servers and logical groupings of servers so I'll just show you that hello world server and Isaac when you say the spinnaker homepage can you describe like like this is you know an implementation of spinnaker or like how would you describe when you see the smegger homepage like what is this bars looking at sure so so this is just kind of a summary of your infrastructure now our infrastructure here is relatively small so you only see you know bits of data here things that have been released recently changed in production but if you were to look at Netflix I mean they do four thousand deployments today and they're destroying and starting up servers four thousand times a day so for me to get to here I would download spinnaker stand up a server right and and and then I would start putting in like applications and other infrastructure and then it would show up on this dashboard well you would actually start with no infrastructure because you haven't done a deployment right so so the way that spinnaker deploys is that is a very specific way so we'll get into that so you would start with a new application so start with a new app that's like my first step right so we'll start here you give it the application the name who's the owner who created it the type I'm in a few other things so one of the things are accounts right so one of the accounts we have is test account that's our AWS account and then dr. dot IO so that's where your first container so I'm actually pushing to Amazon and kubernetes with spinnaker that's a really important thing to note that it deploys to multiple cloud targets which is really kind of its power so it deploys to a bunch of different targets and it's flexible in that sense so he doesn't really lock you into a specific vendor so you would add that application but I've already added the hello world one so let's just see what that looks like now and we say not locked into a vendor can you talk about a little bit more like what kind of freedom am i getting here so what spinnaker does in the way that Netflix built this originally is they wanted to abstract out the implementation for Amazon and the reason they did that was because they ultimately wanted to get Google and Microsoft and the Cloud Foundry teams involved and so instead what they started with is a interface and our specification of this is how we're going to deploy to the cloud no specific implementation and then they built a specific implementation for Amazon and then they ushered in Google and Microsoft of it all to build in the implementations for their cloud services and so when you are deploying you're deploying to an interface and you choose a specific implementation of where you wanted to go but you can literally click and change that implementation as you saw with that drop-down so submit already has like support and relationships from a lot of different cloud providers yes all in production you know all these systems for each cloud provider are being used in production we do intend to try to release like an official 1.0 release of spinnaker here in q1 but a lot of companies are actually already using it and it's been proven to work and Netflix is been using it in production for the last three years so there's a ton of support so let me show you how a deployment pipeline works so let's start just configuring one so the general idea of spinnaker is that you start off with a trigger that trigger can be one of these options here or you can use an API call to kick off the pipeline but typically you'll do something like Jenkins they're building out Travis CI support you can you know one pipeline to kick off another pipeline or if you push into a doctor registry but the the point here too is that we are not trying to replace what CI tools have already done so Jenkins Travis CI circle CI they all do a phenomenal job of building a package and we don't want to replace that what we want to do is focus on continuous delivery of that particular package so you choose your package you know you choose your job right the Jenkins job and here's Jenkins so this is the hello build right so we'll kick this thing off here in a second but the idea is that you just this is what's gonna kick it off when this thing is done building and running any unit test it'll kick it off then it goes into a bake stage now for your traditional ami or image yeah sort of the clouds what's cooking here yeah so the idea here is that you take the package that was built in the previous step right so here's our hello world this is a Debian package that gets installed but you can install a zip file a war file or whatever you want it's just yeah I know so you have to base OS is here yes so those are the standard two OS is that this comes with again just because it was kind of born out of Netflix but if you go to an advanced option you can choose your home base am off so if you have a sanctioned or blessed am i inside of your company that is not just standard Ubuntu you can use that too right so just the option I can pick my own I can bring my own Linux exactly exactly right you want to use a lot of people museums on money in Windows so yeah I guess you could bake a Windows image tits anything that is bankable with inside of Amazon so anything that you can create a Mazon image or image obviously actually supports sure windows as well as creating images from GCP so they're also portable so this will install this package for my debian repository it'll bake it into an infant image and that's ultimately the basis for a deployment is this image and that image is your immutable infrastructure right that's right so from then on we typically don't log into servers because there's nothing you would need to change if you need to change anything in that particular image you create a new image you don't just modify the servers themselves so now we're gonna deploy that image just to stage and it already knows that the previous stage was a bake step so it knows to grab that image from the previous step so you tell it what account that you want to deploy to this is my amazon test account what region any VPC information stack in detail allows you to create logical groupings so here I've created something called stage but you can also maybe it's stage DB stage API stage whatever else you want to do and to create these logical groupings because the power of spinnaker is that when you keep these consistent naming mechanisms then you can use them later for analytics or use them with your ATMs you can export this information out to the APM and then you can start seeing like oh it's a stage DB version zero zero one that's having a problem zero zero you know 0 0 to look like this zero one looks like this and a pair of two versions get into that in a second so this is kind of is gonna solve a problem for me of coordinating different pieces of correct correct but it actually does it across your organization so what this does it keeps it consistent so that let's just say you're an Operations person who has to deal with like Hades to see they're all invented metrics I'm able to see that that there's a hierarchy in the naming convention it's a consistent naming convention maybe it'll suit versions in infrastructure not versions in code but just versions in entire infrastructure and I can compare you know those versions with previous versions of the infrastructure because they're all tagged as such so Netflix when they they have their own version of spinnaker so when they go their spinnaker dashboard they see everything you see everything they can see the connections and between all their services right yes exactly and they could see the versions of the services when it was revved who deployed what things I sound like an incredible amount of transparency because they keep everything consistent and have a consistent way of deployment this is a really a big picture tool like exactly it explains to you what's going on with your software very much so very much so it's you know we call it a continuous delivery tool but it really does so much more beyond that allows you to from beginning that somebody decides that code needs to be push the production to the deployment to even in post-production when they're you know operationally you have visibility into what's there so so back to the the deployments you can deploy in a bunch of different strategies one of them being red black or blue green Netflix calls it red black because of the colors in our logo but it's commonly called blue green in the market place and so what red black or blue green allows you to do is to deploy one version of your infrastructure and then disable the old version not destroy it but disable it so that when the new versions will doubt if there are any problems it allows you to roll back very quickly and I'll show you what that looks like here in a second you can attach it to a load balancer so these are more static resources you don't need to recreate load balancers because they're managed by managed by Amazon or as your DCP you can apply security groups so that you can only talk to certain specific instances you can decide on on sizing here the capacity how many instances to run I'm only running to you know availability zone so a whole bunch of different flexibility and options around how you want your cluster to look but but really the the thing here is going to take my image that I built on a t1 micro and then it's going to apply it to this you know to two instances of this to two smaller right and then we add an additional step a manual judgment step this is where you can have manual QA most people have either manual QA or automated QA you can add another Jenkins job here to run integration tests and this could be a gating factor till for you to run to production so production say looks very similar I've been in production when I'm gonna ice chose red block in the previous one I chose the high render strategy which is it only keeps one instance because I don't need two versions of my staging infrastructure but in production I do because I'm a wanted to rollback right so let's look at what this place and this pipeline looks like so here's bill 10 which corresponds to Bill come here to this now I stopped it at the manual step so it's waiting for the menial judgments are well we'll review what the steps look like here so it baked the image based on that last build 10 it deployed it to stage it deployed version 0 0 1 4 and now I'm gonna show you this right here so this is a clustered view so if I look at hello stage you see the v01 tours there right and if I go to my load balancers so I have v01 for my cluster is there and then I'll show you what this looks like all right so this is what it looks at all right simple enough mm-hmm so you can see every time I do a refresh it goes to a different instance mm-hm right um those are two different instances so this is V 0 1 4 so now what I'm gonna have it do everything looks good there I'm going to go to this manual step and I'm gonna say continue so you're basically our super yeah just you wait for our QA ideally that's an automated step but I made it manual because it does take a little bit of time to start up instances inside of Amazon so like release manager you know they could step in here and push that button exactly - after doing their and we're a product manager anybody who you want you can sped up set up different roles you can also set up different criteria they're getting integrate my kind of release go/no-go processes with this tool oh absolutely it's incredibly flexible so while this is spinning up so you'll see that these 0:09 of spinning up here these you'll see V 0 0 8 is gonna go out of commission so right now it's waiting you see the spinning mm-hmm you see this is the status it's deploying in US West - there's a whole bunch of other kind of things that are gonna happen but eventually you'll see V 0 0 8 go away in the meantime what I'll show you is how easy it is to change jobs so let's assume that you wanted something like an additional stage here to happen let's say proto let's do another deploy we'll do a deploy to production let's just call it there's a data center Brazil right so if you want to have to have this happen in parallel you can easily just change that there and so now the next I'm going to do the manual judgment it'll deploy to my US West - and now into Brazil right you can also say ok we can have this happen after that's why I like this graph up here yeah so now I let's just say after stage always did play to Brazil right but if we only in the United States we need a manual check yeah right so you can have you know the configurations here are incredible and if you let me show you a quick blog post a complex pipeline show you how crazy it gets and this is a pipeline that I modeled off of what they do in Netflix and so what's happening here is they're building you know they build four different browser plug-ins all of them to build that run integration test that wait for them to pass once everything looks good they run into a canary analysis they play ten fifty hundred percent right mm-hmm they stage it out instead of just doing a full app deployment and I can get notified as it goes through that pipeline exactly exactly and I'll show you notifications here in a second let's go back to let's not save that so this is still going again really the wait time here is just we're just waiting on Amazon to start up these instances let's check so you see okay so that are now healthy so we'll see over time is that the old ones will get the old ones will get disabled v00 eight and what you'll see here is that'll actually destroyed why that's red it's destroying these here zero seven because I asked it to only keep two old versions this became the third old version that's Pat that's more obviously more than two and now it's deleting that or destroying the infrastructure yeah right and so you see what's happening here and then at certain point if I go look at my load balancers so now these years zero nine is behind the load balancers once everything what's the load balancer says it's healthy it's just disabled it so now the blue means it's disabled green means it's good so these are still around these servers if I were to go look at this server let's do this let me show you what's this let me pick up I should've never just show you here so if I were to look at my Amazon account you'll still see them there see if I can pull them up by baby today yeah so you see they're running but they're not behind a load balancer and you can see this is the value in what spinnaker does is it consistently tagged it all right so it's got an auto scaling group where zero eight zero zero is here somewhere and it does tag it with an additional metadata information so that you can go and find it and provide additional metadata back into your analytics so that's it actually you should do one more thing like that we should roll it back so you can see oh so let's assume zero zero nine was a problem you like that doesn't seem right I've restored back to these years of your eight I didn't like this deployment my customers and so now it's actually rolling back I can close this it'll happen asynchronously and then in a little bit of time it'll roll back to these Year Zero eight and it all happens just super smooth like I didn't build any code to do all this functionality this stuff just works out of the box so so how does that compare to what you expected to see in spinnaker would be really great to seeing it for the first time let's see well I you know I wanted to I think see what it looks like in production you know like you know like what is actually going like what does my production you said that they're like you know like Netflix has 4,000 services you know I mean I I think I was expecting some sort of visualizations of what it looks like in production but you know be but now that I understand it the better you know what you really are visualizing is that pipeline and everything that's going on in the pipeline and it can be a dashboard of what's going on in reduction as well but the the main emphasis is that this is what helps you get from from code to production in a safe manner right cool thank you for being the guinea pig man or they appreciate it well thank you 