 so welcome to another lecture on organic computing only a few of the students actually made it to this room at this time it's an unusual time because of Friday I'm actually not here so but this was announced quite some time ago that the tutorial will be replaced with the lecture and on Friday you will have a tutorial I guess or I don't know exactly but that's all on the website on the lecture working space and so I hope that you will find about that or we find out about that appropriately right here okay so what have we done with the last time we have looked at all kinds of topics of the topic of self-organization we had that was long ago we had looked at all these topics here and last time we had looked at this was also time before they've characterized self-organization we had looked at degrees of self-organization static degree yourself organization dynamic degree of self-organization and we attempted a definition of controlled self-organization using both degrees 30 degree and dynamic degree indicating that static degree should be relatively low and the dynamic degree should be close to one if we really want to talk or something control organization then we looked at the notion of emergence that was last time that was where we started last time and I showed you the definition of the first of all the entropy of system where the important point is that we have to decide which the attribute actually is where we are interested to make a statement about certain degree of order with respect to the values of those of that parameter and certain degree of order refers to deviation from a uniform distribution of all the elements or other possible values of an attribute and this is particularly of interest if you have several attributes we can get some kind of fingerprint like a virgin's fingerprint by defining emergence as the difference from the maximum entropy and then look at that for different attributes and in this way get some kind of indication of a certain degree of order or you wanted to find that and we have looked at the examples for this real world example of chicken cages where the attempt is or the idea is of the objective is to identify clustering of chicken in this case and the objective is to prevent the occurrence of clusters and this distract the chicken such that they run around and we have seen examples of their hat how we do that and then we have artificial examples where we just show how one could use but positions to populate the entropy and the emergence or the the emergent properties clustering effects depending on or based on the distribution of chicken in rolls and colors and also emphasize that there are other degree or other phenomena of order that can not be captured by those two attributes a particular if they are all arranged along the diagonal this is looking like in uniform distribution of the row and column values although it is not the uniform distribution of all the potential positions of the chicken this two-dimensional area so you found the place where the x-rays to pay okay so we don't all say indeed the the question how we compute the maximum entropy which is for uniform distribution we know that that is logarithm of the number of values of the variable then we look two more examples of looking at these emergence prediction emergence protection things we look at elevator simulations and then look at behavior of agents here we looked at this behavioral joint information and whether they actually call in the or have some way of coordination in what they do and as soon as we have coordination it means that you don't observe the uniform distribution of all the potential combinations of actions of those agents but you only look at you only see subsets of the atom that means we have some degree of cooperation and this can also be detected by looking at these entropy values or emergence values that was what we actually did on emergence and then we also came to the next chapter as far as I remember that was these are the South x properties and for the South X properties there we started and then we like we looked started to look at South X properties I show two something about those self x properties we briefly talked about what these reveal all of these topics self feeling self optimizing self protecting and so on actually mean we looked at multi-agent systems and we looked at like what these properties can mean was inspector multi-agent systems and we look at the characterization of the type of interaction and communication we had or indirect information flow directly interact communication and then we have the topology of the interracial relationships this leads to certain collateralization of the type of system that is working there so the communication is determined by the way the information is flowing and certainly determined by the topology and then we had this through this hierarchical relationship look at that which is just the centralized system decentralized system typical example of peer-to-peer networks we looked at the I think this must have been was that the node it was not the last slide we looked at information flow direct or indirect and had the notion of stickler jury looked at digital pheromone coordination which we have seen already in some earlier lectures where the ants are depositing their their pheromones on a path with a luck with Iran and so by looking at the pheromone the ants can follow or find a path that others have already taken successfully successfully in the in the sense that they have found it a rather short path and this is the major idea of the pheromone principle that you have some kind of aggressive accumulation of experiences and this is an interesting way of coordinating the actions of different elements which on their own don't know very much about the environment so for pheromones we have the that pheromones are stored in the environment pheromones are evaporating and so this allows for adaptivity of the way they actually inform their environment hello so in found the right things where have you been before oh yes Inari we talked about that last time and as we said Gladwell it is at the time tutorial and so is also at the location of the torii and from the beginning my assistant said from the beginning it was on the backside yeah so you found it it's good okay that was what we looked at last time this was the last slide so I can actually start with the slide again so you only miss the repetition of what we did last time so this coordination mechanism fair amounts here is important it's important that you have an environment which can actually store this kind of information so whenever you use that in artificial settings you must need the notion of an environment or some some kind of entity which is called an environment and which can get that information and this is information that is thought at certain locations and so everybody who is coming to that to those locations can get the information and the information is aggressively with using its impact so we call that in the operation the other point is the aggregation and then there's also propagation that information is propagated from some ads to other ads okay and so the locations provide 360 the services in the sense that whenever US or individual agents get to the locations they get the information that is stored at the application and so the agents can also modify the informations where everybody can modify it but it's actually not visible who has modified it you only know that somebody has modified that information and you can imagine all kinds of things that pheromones or the information that you deposit can have more than just a certain degree of smelling or something but can have other information like this is indicating that somebody like the ad example has found full successfully and so this path would lead to food and another path might be indicating that this is a path for a very dangerous region so you should avoid it or something but it's just that the infirmity important point is that you have information that is deposited in a totally decentralized way at certain locations others can access that information whenever they come to that location and they can use it in a reasonable way can also deposit new information there okay so this is here again the three important parts aggregation according to the aggregation rule evaporation according to the evaporation factor and rules for how much does actually the amount of pheromone will disappear from one time unit of the next and then propagation is also some property that can be looked at here in those fair amount and they make so that you actually propagate or take information and you can certainly also use that information and go to some other place and deposit information there again so ants would actually propagate information from one location to another information from one location to another location which is not the case in this ant colony or the business and Road example but can be used also other artificial ways of using that so ant colony optimization is used in traveling the traveling salesperson problem it's the typical application because very similar to the shortest route you want to find a shortest route through several areas and so these routing decisions if you have here some you are at a certain location and then you have here certain options for other locations you have certain information on the cost on the distillate let me say the distance the de Prime the double Prime and then you have also information on the experience and so if you also have some heuristic information that's called eight H Prime and H double prime so give two types of information you have heuristic information about for example the distance from one location to the next and then get chameleon's information from others who have already chosen that link and experienced the weather that was beneficial or not and then they would deposit pheromone depending on their like the H H prime F double prime would be the pheromone information that reflects the benefits you get from choosing the application and so what you would always do these are rhythms is that you combine the experience like the pheromone information and the heuristic information from the distance for example so that is way this is use can coordinate the activities of agents now there is it another a coordination mechanism market-based coordination are very well known to students of of industrial engineering and management you know what markets are so what is the market to do here here the market has the task of actually providing a way of allocating resources and so here the computational systems or some are the agent systems would get resources using virtual marketplaces and there are entities or participants which can interact by buying and selling so in the markets we have participants who offer a certain product or whatever if they provide bids and then the agents will actually offer a prize or other agent who can office think we'll ask for a price and so here your prices support coordination for both spatial and temporal load balancing and you know about the the mechanisms of markets we don't have to go in till the details there I just wanted to mention that this is one way of coordinating the activities of many agents we know that from economic scenarios and the information flow here can be direct because we because we have direct communicate may have data communication between the participants on the market but they negotiate with each other can also be that you just put your bids there's some Authority which signs then or which makes the pocket clearing then you have the location of resources depending on what you have offered to pay okay so here you could have a situation where you send bits to an auctioneer when the auctioneer calculates a clearing price and makes sure that no agent has to buy for a price higher than its bit nor as to sell for a price lower than its bit it means you don't get a disadvantage by getting some resource located you will never pay more than you said I will pay as maximum price and you will never have to sell below a certain limit so here you could have in the form of slightly formal setting you have a bid which consists of an boolean variable indicating whether you want to sell or to buy and then you have a volume that they would like to trade and the other price these are the bids and then you have to bring them together and get the market clearing and so this can be done using several different different ways there are all kinds of auction algorithms for example we have the merit order if you just order them expect the price and so here this is more or less indicating resources I located as dictated by these bits and the obtained market price according to the rule or sellers that are offering certain volume form price PA that is lower than or equal to the market price they will sell so this is exactly the situation that we have ordered everything here we know a certain in increasing prices that they were willing to pay and then you have here somewhere market price and everybody below that will sell okay and the other way around this can certainly be done at the same we applied that or something similar to that in project which is which has been running here at cars for quite some time ago it's 2003 for 2007 we designed the self-organized energy market something which was well ahead of its time it's still well ahead of its time this idea to have a self-organized market the spontaneous entry means that there's no real organizer of that market so in this energy market the idea is that everybody who wants to consume energy or provide energy would just make a bid on the markets and those could be just for example its energy providers could be here some power generators and that the consumers could be individual houses and they just put their bids on the market there is some platform with agents which are actually supporting that market agents for example for negotiating so in that example we had people here from the Institute of law they specified the energy regulations the the legal framework for four markets in the energy area specified that UML and then we could design software agents which were actually negotiating on the market between consumers and providers and get contracts and they could actually sign the contracts an illegal way in a legally binding way by using appropriate mechanisms with signatures and so on and then there was a service for forming coalition's because if you just have for example solar cells as your power source then you can only sell energy at certain times and not continuously as soon as there's a cloud you cannot deliver so if you form a coalition with some other provider who has a different type of energy source which can compensate the fluctuations of the other one then this might be beneficial because then you can offer a more reliable product on the market so there were services which would actually suggest coalition's of the market participants for providers also for consumers because if you have a low profile which is aggregated from several houses then this might be of more interest to the providers so that they can get better better prices and the prices means the terrorists that are actually that had to be negotiated like who's offering a tariff providers offering a tariff at which this provider will provide the energy there was also an agent for optimizing the tariffs depending on the current situation of the market so it was a very visionary project we also looked at like forming coalition's between different types of power generators is the notion which we now called virtual power plants we developed the like a mechanism for actually operating virtual power plants aggregating several providers when we talked about that the industry like this was a complete university project ten shares from University and the industry was always interested we had them as communication partners that they said well something like that look you have virtual power plants will never be the business case you know that meanwhile there are lots of companies who are offering exactly that service and make money from that situation change completely that's just a period of well ten twelve years so now the idea of virtual power plants is something which is more or less accepted the idea of a decentralized market is still not accepted because the industry is always formed of centralized centralized situation centralized structures and they miss here the market operator as a specific rule role who would organize the market this auctioneer who would control everything this is something which is not there this self organized market but it may well be that this will be something which in ten years from now might be the way we would organize markets because many decentralized providers and consumers of energy which would like to balance their supply and demand in appropriate ways and if you do that with market mechanisms this would be an approach to do that now so this was a very visionary project but some concepts not show that they are in like now already something which is viable and others other features may become viable and if in some hopefully not too distant future okay just to show you what that a market mechanism can be very interesting topic and this is different from what you normally see as a market organization it's just the notion of a market but having here a multi-agent system which is actually organizing that and there's it's not a client-server platform what appear to be a base platform that every every participant has to take some role in providing the market services okay so local self-organized energy markets can be something which will be there in the future and also allows spontaneous cooperation between provider and the consumers this is something which is also a little bit strange for typical economics because normally you don't form spontaneous conditions but you the demand side manager or an aggregator we have contracts will with certain certain number of of participants and then they will offer something on the market these coalition's or spontaneous coalition forming something which is not really predictable that's what this is something which is very dynamically evolving situation okay this was more or less what we designed there so this is a market mechanism obviously coordination mechanism which is well known in particular to students of the programme of study which is in the area of economics then there's the third coordination mechanism which we call attack based coordination so what attacks you see it here these are tags associated to certain nodes so you have here certain nodes which this case are connected with labels or markings or it could be it could be labels could be markings could be some social cues you very certain type of hat or all people wearing black black spectacle are in some group or others who have long hair on one group whatever you like to have as a as an identifying information so from that you can form groups and if you have other tags then these other tags will cooperate but you wouldn't have cooperation or communication between differently labeled elements so this is a way how you would separate and identify those who belong to a certain group this is tagging certain elements and from the tags you know who are potential cooperation partners and then the question is how the nemi can that actually be and so if you want to add or adjust something why would you do that maybe you have formed a group and you agreed on certain very important project then you notice that somebody in that group is having malicious ideas and it's disturbing good cooperation and so it could happen that you have here one element which you notice oh it's not really a member it's a disguised enemy or whatever and so you decide to this deterrent or cut the connections to that element which has a certain tag which before you thought would also be the green tag here but you notice that something that happened so there must be mechanisms to modify the tags that are associated there this has to do with trust and security so you could have also have certain or as a tag or social tool you could have the trust level that you have in certain persons and if the trust level falls below a certain degree then you would say okay this element is out we don't cooperate anymore so this is tank base coordination there's some resemblance to the use of pheromones because you can tack certain elements with a certain color and everybody else can see that but there is no cooperation and this is completely qualitative although I just said or they have that example with the degree of trust that you have there you would say oh this person is trusted or not trusted and but you have a certain mechanism to decide when it gets the label trust and when it gets the label untrusted okay there was tag based now we have the fourth coordination mechanism another one which is called token based coordination this is something which is also quite well known I think no I don't have here drawn for that so you have certain elements and if you have certain like if you have a bus connecting those elements then not everybody can or may access the bus and so have to provide a token which allows you to access this restricted resource only one can can write on the bus the other self can can all read so this token is a way of reserving exclusive access to a certain resource so you have by the head of the token you have exclusive control over whatever is represented by that token can be access to all bus can be access to a bathroom can be access to a printer or whatever you would like to have there and then if you don't need it anymore just pass it on to the next element in that group and then the next element can use that resource if it does is not needed if you follow the token so token based coordination is a very well-known mechanism in for example computer organization the the resource allocation or you have restricted resources so this is really well known mechanism and you don't need anything but this token which is just passed along passed around okay this is his birth coordination mechanisms then there are all kinds of other characteristics of self.x properties so we can observe those self.x properties in different ways there can be macroscopic or microscopic we'll look at these properties in detail in the moment can be ongoing or one-shot so it can be property which is there all the time or just visible for some limited time period can be spatial or none spatial properties or properties over time or properties you can see in spatial arrangement and it has to do with resource allocation examples macroscopic could be so a property which the system as a whole has and so this there would be a property that is the result of coordinated interactions between the entities of the system then would be a macroscopic property and the microscopic property would be property that get that you can observe just by looking at the individual entities so just a single autonomous entity if it is a microscopic self.x property an individual can show that characteristic by itself Marcus Copic South X property is something which can only be achieved by cooperation of a collection of elements the example or typical or simple examples here would the next report form for macroscopic would be the ant Road a detection finding shortest paths because we need there many agents many ants an individual ant can never achieve that property the macroscopic property of detecting shortest paths so this is Marcus Copic so here's the and and rose to modify that so the and roads would be typical example of Marcus Copic microscopic is something which actually an individual and can can an individual and can do something an individual and can for example do the and sorting as I have told you and sorting is something which can be done by one hand and it can carry around the the items it takes longer but it can do it by itself and so there the local context is sufficient to actually form a certain facts from that is desired where it's here in the macroscopic thing you need some global information which is not there so only by interacting you can achieve a global property so another point is when we talk about if we have many different agents and we talked about locality what does it mean what is local so we would say local is something where one element can communicate with with its local neighbors but if you define neighborhood properties communication neighborhoods maybe you have one neighbor which is very far away you just define that as a neighborhood of a certain element then this would not really something which we call local because here from the drawing you'll see this is seems to be quite far away but this is just a matter of drawing it if I would indicate this is something which is local I could just move that element over there and draw it there and then it is local and so locality depends on the definition of the neighbourhoods but usually we say that element has a certain environment local environment where it can get information and this local environment somewhere is the locality and so there are some local local there's local information there and so on this may be overlapping and so by these overlapping environments actually you can also achieve microscopic properties you can get local information and perform local functions but if you can do that just by low completely local information then it's more in this micro copy okay so Martha scoffing verses macroscopic characteristics he is not not another example for self-protection we have certain let's say selves for communicating here you have for every cell you have one entry point which is deciding whether the new element actually is able or is allowed to enter so you have new elements when they want to enter the communication within that cell they have to ask the entry point and then this entry point can decide to offer access or not to offer access but this can be done by one element alone so in this case this is something which one node is doing this entry point is doing it there's no cooperation of different elements and necessary to decide that this element here is allowed to enter that system Marko's copic is something which can only be achieved by cooperation of many elements here is one example of like taken from nature if you look at the the immune system here we have the immune system you know the natural immune system works by the interaction of many different types of elements in our body so we have certain b-cells key sells helper t-cells killer T cells plasma cells antigen preserving cells and memory cells and only by cooperating in an appropriate way they can actually fight intruders so in the biological example there's the case that B and T cells so here we have like B cells are the ones which are here indicating in lilac here these are the B cells B cells are the T cells are also there somewhere that's T cell that's a T cell so some T cells and the B cells and T cells are responsible for recognizing and eliminating antigens and this there is a surface receptor and antibody of an immune cell and this can recognize and bind antigen so here you see that there is there are these detectors and they can detect and bind and connect in some way with these antigens and so a B cell is activated which changes its state when its receptor recognizes in nun self antigen and it receives immune stimulation signal from a helper T cell so that's complex communication and the antibody binding to an antigen will mark it for distraction when the the and those infected cells are eliminated by these these killer T cells is a it's a complex situation with different types of you could say agents in our body cooperate have this or different tasks some are detecting a certain situation others are helping to identify which kind of situation that is and then appropriate other cells are called to actually fight the intruders and eliminate them those intruders so this is the example very heavy combination of heterogeneous types of agents combining their functionality such that globally interesting property is achieved namely to destroy intruders in some community so this isn't would be your natural immune system and this can certainly also be transferred into artificial immune systems and one example of artificial immune system is also which may be an artificial example here we have a certain structure for example a bridge and you have all kinds of sensors so here you have all kinds of sensors there I think you have more explanation so we have here these sensors and we have mobile agents which monitor this structures health by patrolling the sensor network so these are the agents which are run around and notice what's what these sensors are actually providing as information and if there is a certain indication that something bad has happened some crack or some some something which is which has two of which which needs attention then so a certain type of structural damage pattern is recognized and then this information is sent to some here you have the the damage or some some damage information is noticed and then this sent a report to some other agent in this case maybe a human agent analyzing that and sending some repair agent there to actually perform appropriate counter actions to us that construction again so this is just an official way of showing that you have different types of agents which perform certain functions you have the sensors you have controlling agents mobile agents running around and finding out whether something is bad sending a report back another one can analyze the report and trigger appropriate repair agents so this is some kind of listening some way would resemble the immune system from nature into an artificial immune system you could imagine different types of artificial immune systems for different scenarios like this is the construction scenario you could also look at other communication scenario your security scenarios so this is one way of explaining what Marcos copy is then we had the characterization of ongoing versus one-shot this is not that difficult so most of our properties are rather or should be ongoing but so for example self optimizing is something which is continuously being done all the time the system tries to improve the way it is actually operating but if you are something which is self-healing that property is only observable when there is some kind of of indicating that you are sick not no longer healthy and then yeah you can observe that the system is able to actually repair itself and then this would be a one-shot property okay so things like that are conceivable and then the spatial versus non spatial so you could have certain certain spatial properties so if you have an ad hoc network of components which should become unique or should communicate in some way you put build centralized structure or you could build a completely different structure like build some ring structure or whatever you would like and it may be that we have certain like this certain spatial structure forming method which is a characteristic for a certain system so if you would like to have a certain apology which should be maintained here if you would delete one element you would still have the the centralized structure of the star structure if you would eliminate an element there in order to repair you would need to actually draw a new connection in order to still have a ring structure so another thing is a distribution of collection of vehicles so you want to have a certain spatial distribution like if there are two roads and then something where the cars are same distance driving there that's fine if they are all standing close to those which other there you would have a traffic jam which is undesired so the that would be something which is a also a spatial thing that you would like to have a certain distance between the elements and they should be moving so that the the location should should be different over time if you observe that over time if you observe different snapshots over time the locations stay the same that's something which you don't like okay resource allocation essentially most of those properties have to do also with resource allocation so here if you need a certain for example it's certain that with in a hoc network or the the have an area where you're cleaning robots would assign a certain area that clean robot should if you have here different areas you have let's say for cleaning robots they might that might be a nice way of associating areas or if you have the bandwidth you need to make sure that you have only a few agents which get access to the network and can share or can can get their reasonable share of the bandwidth okay finally you would like to be able to have design or you would like to design a system and to verify that it has certain properties and so if you design it you would choose certain elements certain coordination mechanisms we have seen these four different methods there and would like to verify that some properties are actually there and then you need some way to actually do that this is like verification of the behavior of self-organizing systems something which is not easily done because these are properties which might change over time if your properties which change over time the question always is when you make a statement on specifically required properties what is the time period to which that actually belongs and so it is difficult enough to have the verification for static scenarios where you have no change over time in the functionality office of the system but if you have adaptive self-organizing systems how would you what kind of properties wouldn't verify so this is a question which are also addressed before for self-organizing adaptive systems it is very hard to make reliable statements on what they actually can do and so essentially what you do is you have a certain requirement for generating is certain these are certain system designing a certain system so you have certain microscopic properties that you would like to have that's leading to requirements analysis then you would design the system you will design the architecture you will design the coordination mechanisms and so on and have some detailed design of all of those elements in there then this is this specification of how the system should be implemented then you implement that and then you verify the question is how we actually verify you could do that by testing on certain typical situations or it could be that you try to prove certain properties to model checking or all kinds of different mechanism or methods for verifying certain properties to get feedback from that verification and then maybe we have to modify the design afterwards so this would be some kind of spiraling way of a circular way of improving the design of a system just a indicators typical design flow we have your properties what you would like to have you test it in certain this is the verification and also the validation of verification usually refers also to mathematical or formal proofs validation refers more to having certain benchmark situations where you would like to test the system so this is typical way how you would design and verify the system so again verification they had difficult to verify exactly what a system that is adapted actually can do you need characterize the properties may be characterized the the class of functions that can be executed or the the variability that a system have has the problem is that if you would like to use such a system dusty'll context for example you say I'm designing the component for your car for a default for in maybe some autonomous vehicle and it is a self-organizing autonomous vehicle being able to actually adapt different situations then you would like to get some verification this autonomous vehicle actually will always behave in a reasonable way yeah but if we say we cannot really give a complete guarantee about its behavior but because we don't know exactly what it will do in a certain situation but there are certain options but we cannot give complete proof of the system because it will have some on deterministic behavior then this is something which normally is not acceptable in industrial context yes so there are these typical but nowadays the typical examples we have a vehicle which is driving in a certain way and there are two persons running in into closer to that car the question is what would the car do what it hit with small children or the older people the older person if that is deterministic you have a problem if you always killed that the child would be bad if you always kill the older person it's bad if you don't know it's maybe people don't like that either because they want to know what is what a vehicle will actually do so you would like to be able to assess the risks of such systems so verification is a difficult topic for self-organizing systems so these methods should allow to verify what the system can do there are many different oops sorry there are there are different ways of doing that if you would like to have a complete verification process usually you we'll have to apply several different methods to do that maybe tests to a certain degree proof in certain other situations and the verification that you I can be unit base that means have other system has certain components and for every component you verify that it functions correctly and so look at the individual parts prove that they are correct and then put them into the system integrate them and hope that in this integrated system they will also be fine and then we have integration testing integration testing means you know look at the complete system and test how they behave as a group and this is a problem which are also addressed a few times that sometimes by the interaction of those elements you might have certain and expected effects which were not visible if you just look at the behavior of one individual component and so it is obvious that microscopic properties which have to do with the lower behavior of a system phase or interactions certainly cannot be verified with unit tests if you could do that just by looking at the the individual behaviors we would never talk about emergent properties and because they can only they indicate that something appears which is the result of interactions and not visible if you just look at one individual element and these yeah these properties like unit tests might be useful for properties which are microscopic in nature but not for these macroscopic properties okay so this is just a rather quick walk through the different aspects of self-organization form a proof the strongest way of verifying something but this is feasible in some areas but not always for hardware we have some form of verification methods for software usually this is a problem there are some tools which allow for formal proofs of software but you know that this is a difficult thing although most of you if you are students of Industrial Engineering you never heard about verification methods form of verification methods which is a pity because there are certain ways of proving something for certain properties or certain systems those simple properties but even there it is it would be very helpful to have such a form of proof and there are tools which allow for that then there is the statistical experimental verification you just run his system use it in certain benchmark scenarios or so maybe you have certain benchmarks you test the system with spectra the benchmarks now if the benchmark is deterministic maybe that the system is just optimized for those benchmarks and not for other situations and like for example if you have certain emissions from cars it may happen that they are optimized for certain situations where they have no emissions I do not don't know what happens if they go to other situations I would see you know examples like that so this is like testing verifying self-organizing systems systems consisting of many elements which cooperate in some way this is an open area for research to have more formal methods for these adaptive systems then we might have the metering we have seen the metric for the quantitative measure of merchants the entropy was one method it could use methods for the four spatial distributions you can look at distances between elements and so there are metrics available to characterize the behavior of a certain system if you would like to order that there are for example there may be flocks of birds which move in a certain direction and you need certain interspace relationships or in the inter the distances between the different birds there such that they can fly as some flock through that through the air so you can characterize the behavior of these systems in some quantitative way but it depends on the application what kind of metrics would actually use and yeah this is more or less what you can do with those systems you have applied I guess in the examples that we programmed on the traffic scenarios you all set also used some metrics like measuring waiting time measuring number of stops and things like that so these are ways of characterizing the property of a system where these properties are not really essential for operating in that case the traffic scenario but it's important to validate the quality of that system because you have certain objectives how it should operate and for the individual it is not really that much of that much relevance but for the complete system that you would like to design it isn't it is important to have some metrics took 45 at birth quantify the quality of that scenario but now let's look again at few examples like self-healing after I talked about self-healing before so system is self-healing it is if it actually can detect that something is going wrong this is the first part you have to do you have to detect that if the system is no longer healthy so there must be some fault that occurred you have to be able to initiate corrective actions and you have to initiate that before they actually occur and you would like to help to prevent failure due to potential attacks or damages this you could say that is this is very much or there's quite some similarity to the property or self perfecting but you prevent potential attacks and so if you look at the deviation from from loud behavior if you are in a nice area and then there's a fall and there's like here's your threshold yes your bandwidth way you should operate and it may well happen that you have to deviate from the best path best possible performance but as long as you manage to always get to a veteran performance you would say that self feeling because there's no fault that actually occurs your if you are satisfied but if it goes beyond that limit you would say there this system it was no longer able to heal itself maybe you are a little bit or around and just wait some time and it comes back into the question yes so self protecting with what this always has to do with making sure that no fault occurs or no attack can occur where self healing means there is a certain indication that something goes wrong and the system can initiate certain actions to repair or maintain a certain system and then make sure that no fault occurs but this can like self healing is something which has to do also with intern if you notice that there are some tonal faults you could say it has also something to do some resemblance to for tolerance yeah you have a certain breakdown in the system and to notice that and you can still provide the functionality as it was needed and then there is myself protecting would mean you have an external attacker and you can protect the system against those external attacks like a virus system there I would say that's like a virus system is typical protect itself protecting system because it would detect an attack and prevent it from doing anything which is bad and self-healing would mean we have a certain system but you notice oh maybe maybe temperature's going up too much or there so I'm wearing on certain elements but before these these element is breaking you replace it and make sure that there is no interruption in your production process for example so self-healing means continuous service is critical manual repair is not feasible it has to be able to repair itself ok another example here is our feeling example you have an ad-hoc network elements which communicate and there is one element which actually is getting 40 and now if that is 40 cannot provide messages from one element for the next you need to establish a new link such that this fort actually does not interfere or does not prevent communication between those two elements here okay so that was a very simple example of selfie another example autonomous mobile robots and human environments there you would expect that the system is able even as thing is unexpected or modified different from what you had before the system should be able to perform its functions but this has more to do actually with father lawrence at safety and here if we talk about self-healing systems we quite often have no explicit forward model so in for tolerance techniques it usually have a very specific fault model that can say my system is can tolerate single forwards double forwards or things like that like in electronic circuits and have certain components which fail and you have classified the type of force that can occur you can detect and make statements on the for tolerance by saying if one for it occurs somewhere I can tolerate it two faults occur maybe even even then then there may be certain forward patterns which are tolerable others are not but there you have a specific fault model and here in organic systems we would say there are situations where we don't have an explicit fault model we just noticed certain deviation from normal behavior and then find out ways how we can actually modify the behavior such that this problem that is art that is notice is not leading to the failure of the complete system so there may be certain uncertainties unknown environment unforeseen situations I have mentioned that several times when our gaining computing we emphasize that there are may be unknown situations to the question well now we have many different notions so security always has to do with the with making sure that you only have authorized access to certain resources yes so security always has to do with there's somebody who would like to get access to a component and you're only now in our authorized access there's some but it's not authorized it should not get the access if you talk about safety we talk about that there is no this is not intentional the Falls occur in the system our functionality is disturbed not by because somebody intentionally modified the system but this appears because there's certain degradation of material or things like that these are just material forms for example this is not for that is there created on purpose it's not an attack yes so if you have malicious attackers then this always has to do with security but now there is it's very hard to really separate that because it's like look at the energy system in the future what what we have there we have now it's a typical cyber-physical system where in general in cyber physical system as in the energy system you have the cyber part the information processing part which might communicate with other entities there may be an attack on the cyber part on the information processing you would like to protect against those attacks and this has also to do with safety because it may be that such an attack actually results in some mechanical or some physical 40 behavior in your energy system and then you must make sure that security incident does not need lead to safety relevant problems because all of a sudden certain elements like for example somebody manages to control all the fridges and in Castro and that's all the fridges run completely synchronized then this would be would be an attack on the stability of the grid of the power grid because it would have all these synchronous events and this is this is something which isn't there would be something which is a safety issue and because they're the physical operation of a fridge in that case would lead to a damage of other components that's safety issue so security has always to do with usually the cyber part safety I would say has to do with the physical part of a system but even that cannot be completely separated yeah okay so here the aim is to detect it first to detect react and adapt to malfunctions that is self like first part of self-healing you would like to avoid critical system states at any time this is something which is as it's very close to self protecting and certainly you would have to do that no cost you don't want to invest too much but be able to perform or to have such functionality there's one example of this robot here this is an example of organic computing program that we have run example from the University of lubic they had they have this autonomous robot and it's a six lakh robot and the way it moves is the following we have these legs and every leg can move in certain way so here this Lac can be lifted up there are there are several moveable elements and so if the the very simple rule is like for every leg is if the lac to the look at this lag here if this if the leg to the left has ground contact and the leg to the right has blocked ground contact then you can swing this leg when you could lift it up swing it with a some other place like moveth such that because the stability is there because the two neighboring legs have ground contact and you can move the one in the middle and this is a very simple rule and it allows for movement of such linear robot and you will see that in a moment so the swing phase has constant length its swinging for some short moment and then it has contact and so if that has contact then this leg here might have the situation that both neighbors are having wrong contact so that can move now and so this is the alternating between the neighboring yaks one can move the neighboring legs cannot move and so on this way it can make some progress in a certain direction then you have to impose your certain notion of direction so there's the the front that's the back here that's that's the back of that robot and then there are certain modifications with respect to the time you actually have for acne the duration of the stance phase determines the velocity if you have longer periods where you where you have contact you're very slow if it's that this is only very short you can get faster so this is something which can be learned and then I can actually go on this video file and so on and that was it no I have to go that and you can see how it actually moves so certain gates which can so they appear there in a self-organized way and that's funny to see that by just imposing such a simple rule they can actually move so this is the way insects move definitely they cannot move two legs two neighboring necks if you if you move to a neighboring legs to just hold up for them okay yes this is just simple example and we have to get back to thee and again so this is now what else does this have to do with self-healing properties so assume that one leg here is broken then the only thing which you have to modify is the neighboring relationship now the neighboring element like fall for this one here the neighboring elements are those teeth and before it was the broken leg but now we have exactly the same rules you just need to know what is who is your next healthy neighbor and your movement depends on the situation of your next healthy neighbors and then it can actually move certainly if too many legs are broken then it cannot move anymore but it can easily tolerate the loss of certain legs the situation can easily figure out that does not make sense if neighboring legs are lost then it will just fall down but it has some self healing effect and this is also like been thrown in videos were certainly you would not take away a leg break it but you would just move it up and then this is a situation which is indicated as this leg is not there anymore it cannot do anything and so then this other rule is there that you look for the next healthy knievel daggers is sick then it is not taking part of that so only the neighborhood relation changes and then you have this kind of self-healing effect so if one leg for example is getting very slow or cannot move really you just put it in the state where it actually it's taking it out of a part of action and then you have this you still have a functionality that is that is desired maybe not at the quality that you had before because we have fewer legs on that example but it can still move and then we have like self optimization there we had yeah this is something where actually the example here is missing that just exactly getting traffic control I have shown you that example before you have the situation at a intersection you have the different traffic light settings and you would like to optimize the way you start adjust the green phases such that traffic can run in the best possible way and this depends on the current flow so if you know that for a current traffic flow of for a for in for a for a traffic flow in a certain moment you need a certain setting of green phases then you can you can learn that and then use that in the future so this is self optimization always trying to get the best possible way setting in this example the green phases or setting green phases such that you have a green wave between neighboring intersections also this can be optimized we will come back to that traffic example a few times in the next lectures such protection we mentioned there already that's a typical echovirus system is self-protecting system so for example you have certain rules to look for corrupted data the virus detectives and that's of self-protecting system because you're certain information which allows you to identify a certain attack and then you know how to what to do in that case so you can restrict and block illegal access this is protection and virus detectors guard against potentially infections who does delete the files that are sent which are infected and so we have the virus systems which actually do that with system self protection property can detect suspicious activities so self protection always has to do with security issues whereas self-healing also has to do with safety issues which is not the case for self protecting systems so this is more or less what I can say here that oops sorry these self protecting systems can't protect themselves against unwanted behavior you could also say that together that it can help against accidental errors but yeah so all kinds of errors that occur will be noticed in a self protecting system and then appropriate actions will be taken finally self-configuring what we have here there the system needs to use the appropriate resources or functionalities that it can offer so if you have to change your properties your functionality depending on changes and the requirements you must know how you can actually do that so these systems should have some sense of identity they should be like this is very closely connected for self-awareness because you can only self configure if you're also self-aware you notice what the current requirements of your environment our what you can provide yourself and you might have to interact with neighboring systems to actually provide the desired functionality to actually yeah to provide a certain factor okay adaptive systems essentially everything is adaptive what he talked about yes self considering would just say I configure a system such that it can provide a certain functionality self optimizing would say icon I have configured a service system and now there are many possible configurations and I tried to find the configuration that works the best and this is self optimizing has to do with the quality of providing a certain functionality there will be some property like time response time or usage of resources and as you use it or whatever you could imagine properties which have to do with the quality or the cost of providing a certain functionality then something may be feasible now it provides a certain functionality but it's not doing it at the best possible way and to do it in the best possible way is to self optimize and so you can run the traffic light such that it's possible to have the traffic flow through that intersection without having a situation where if different traffic flows which are in conflict and you can prevent accidents or conflicts from occurring by appropriate configuring your traffic lights such the they have sequential sequential phases which are conflict-free this was near to configure it in an appropriate way then would like to optimize that such that to minimize certain cost functions like waiting time or number of stops or things like that okay adaptive systems we've talked about that several times able to adapt with dangling requirements should be able to self modify in some way we will come back to the notion of the activity a little bit later and like adaptive systems can modify their functionality depending on requirements a static system cannot self repair cannot serve modify is not able to actually adjust the different environmental scenarios now this was rather fast walk through this chapter on all kinds of property or all kinds of characteristics of self x systems having self x properties since we have looked at these properties before and have told you and the motivating lectures quite a bit about that I think it was adequate to do it a little bit faster but so now we are through that we have seen now now we have more knowledge about these different self X properties we have looked at the this or what actually distinguishes these properties and in the next part we will look at an important of the fact other property capability that these systems need but you also mentioned several times system can only improve its behavior if it's able to learn now or if a system is able to improve its behavior being as posters this is the same situation several times we usually talk they call that that his system is able to learn and so on the next chapter we will look at machine learning methods that are typically used in these scenarios so that is the topic of the next chapter which I think I provided that last night but should be okay if that we briefly start with that chapter chapter number five machine learning and it starts with very simple scenarios we only have five minutes for that today so we will come back to that next time but no that's a black does briefly start with that just to give you some introductory feeling what it is when we talk about machine learning so I will tell you about a few approaches to machine learning one will be learning classifier systems like if you go to your course on machine learning quite often you won't hear anything about learning classifier system but only about other methods about vector machine support vector machines neural networks and so on we have here these learning classifier systems because we have actually used them to quite some extent and very successfully other questions it's important factor machine yes but it is a specific method that is used their support vector machine and in the learning classifier system it's a completely different algorithmic approach from as a biological approach to learn something so both can classify the or can classify Noura networks can also classify but learning classifiers systems have a certain or a certain method to classified you would see what it actually means yeah so it's a completely different approach from using support vector machines so why we need machine learning I think is obvious because the system is supposed to launch something on it and when I should when I showed you these these architectures in particular with respect to the observer controller architecture I told you that or emphasized the point that there we have two ways of learning we have online learning based on the feedback we get from the environment and we have offline learning based on something with that we do based on simulation models of the reality of the real world and then generate new activity or new actions how to behave in such an environment if something has shown to be not appropriate so what you should learn here is get to know at least these machine learning algorithms were probably swarm intelligence will be more or less left out looked at that already you should get and though some aspects of computational intelligence that's usually the name for these kinds of methods that we use in the machine learning scenarios and I would like to show you very briefly this example and really very initial slice on that an agent would like to find out something needs for certain elements to be able to learn it needs to have a certain policy a way of responding the certain environment information and by doing something by having carried out a certain activity it will get a reward function so it means that you have a certain state you have a situation that you observe you take a certain action and then you might get a reward these are zero or that's a 100 or 50 or whatever the reward is about and then you get either like you feel nice because if this was positive all you negative feedback what's bad action then the next time you would get a higher reward so you modify the way you associated States with actions and so now you can take many different methods you can take support vector machines neural networks whatever you like to perform that you will always get some reward some feedback and maybe modify your system and here's a very simple example we want to play tic-tac-toe and now the question is like this robot doesn't know anything about tic-tac-toe and it's this robot place like the these circles the problem is that like here the if here the the robot play what puts it there then certainly lost the games because afterwards there will be in X or there might be an X yes so this was a bad choice next possibility you put this circle there then again here you have lost the game so both situations were bad now this robot tries to prove it and plays again game 3 puts it there another situation and still as we see immediately it's it lost the puts on the final situation or final open field so four ways of depth of playing and in every situation you lost how can you learn from that you did something wrong yes so the only possibility in this case would mean that the first circles have been put wrong places so you would have to replay everything and try to reverse your initial decision so at least you have not something that if you have such a starting situation you have no chance to win and so it means that you would have to put the first circles to different locations so that would be one possible location then you can learn from that and how this is actually formalized how we can can formalize this circle of observing a situation performing a certain action depending on that situation looking what the reward that is and then modifying your Association of situations to actions that we will look again in the next lecture next week on Friday again thank you for your attention 