 Hello and welcome to the open systems media E-cast titled custom OFDM modeling and verification. I am Kurt Schwaiter, technical editor at open systems media and today's moderator with our speakers, Richard Overdorf and Ken Volker from Agilent technologies. Today's total briefing is scheduled for about 50 minutes leaving a 10 minute Q&A period at the end. Before we begin, let us run down some important features of your audience console. First, is the enlarge slides button. This button will maximize the slides to fit your entire screen. You will probably want to use this button for some of the graphs shown during the presentation today. Clicking the download slides button will allow you to download and print the slides if you would like a hard copy to follow along with (that is an alternative as well). The button labeled forward to a friend, enables you to send an email to someone that will include a registration link to this E-cast so they can also attend. Then 'ask a question' text box and associated 'submit question' button allows you to participate in today's E-cast. You simply type your question into the text box and submit it by clicking the button. You can submit questions at any time and we will do our best to address them during the closing Q&A. If you have a question or problem pertaining to the E-cast operation itself submit it and one of our technicians will be happy to respond to you during the E-cast. Now, after the Q&A portion of the E-cast there will be a closing survey that will pop up on your screen. Please, take a minute and fill out that survey before leaving the E-cast. Finally, this E-cast will be posted online within 24 hours and an audio podcast will also be made available. More information on this at the end of the presentation. Orthogonal Frequency Division Multiplexing, or OFDM has emerged as a popular scheme to implement wideband digital communication over wired or wireless networks for digital television and audio broadcasting applications. Today's webcast will introduce the OFDM standards and their applications to various wireless and wireline resource configurations. Our speakers today are Ken Volker and Richard Overdorf with Agilent. Ken is a product manager for Agilent vector signal analyzers (VSA). Ken is a 30-year veteran with Agilent and supports the product development function with market, customer, and application research. His involvement with vector signal analysis began at the industry's first products in the early 1990's and continues today with planning for future generations of VSAs. Ken received his BS-EE from California Polytechnic State University. Richard Overdorf is a business development engineer for Agilent's electronic system level design solutions. Within Agilent, he has also served as application engineer and product manager for software platforms used with Agilent test equipment. He has written various technical papers and application notes for military communication systems. He has both a BS-EE and an MBA from New Mexico State University. Ken is going to kick off today's presentation, so with that, Ken, the floor is yours. Thanks, Kurt. As Kurt said, we are here today to talk about design and verification of RF digital COMs devices and systems that use OFDM as their physical layer. Why? Well, as a market planer for Agilent's RF test instruments. I get to look at what developers are working on across the entire COMs industries and I can tell you beyond doubt that OFDM has become the predominate FI layer format and this is for systems ranging from consumer electronics to cellular and even broadcast. As we work through our agenda today, we are going to start with just some real basics of OFDM itself. In reality, I am going to assume you have some background there already. We are going to talk about tools for developing the OFDM waveform and testing it and then we are going to go into some test techniques for verifying the signal afterwards, as well as, some new tools for analyzing OFDM signals that are proprietary (meaning they do not conform to a particular standard because that standard may not exist yet). This is a fast moving market and there is a lot of new signal formats that are under development as we speak. And then lastly, we will talk briefly about solutions from Agilent to help you in your design and verification. OFDM is a modulation format first and foremost. It is the FI layer of an RF digital COMs system. It achieves high data throughput by transmitting on many carriers (we will call them subcarriers simultaneously). It provides high spectral efficiency because those carriers are packed together very closely and then there are attributes of it that give it a lot of data integrity, even in marginal conditions. A real simplified way to look at it is in 2-D. Each symbol of the OFDM signal consists of many subcarriers which I am showing here on horizontal access numbered from 0 in the center to +N and -N on either side. For each new symbol that I transmit, I am going to send a whole new collection of these subcarriers, now in real-life, it is more complicated than that. Because, the subcarriers are not all uniform, of course, they carry data and they have different purpose. For example, typically, the very first symbol transmitted is called a preamble which simply means that it has pre-defined magnitude and phase and characteristics that the receiver is looking for so that it can synchronize to them. That continues to a lesser extent in further symbols where there are pilot subcarriers that again, have a known amplitude and phase that are used to resynchronize or fine tune the synchronization, each symbol as we go along. The rest of the subcarriers shown here in darker blue are the ones that are actually caring data and I am showing them as having different magnitudes. In reality, they have different magnitudes and phases, because each one of them individually represents a point on a consolation, which then maps into one or more bits. Notice that the center subcarrier is always 'null' and that is so that any LO feed through in the RF circuitry does not wipe out one of the subcarriers. It is interesting to contrast a traditional single carrier signal with OFDM. This is a frequency domain view. You notice that both signals have a bandwidth in the spectrum at the single carrier case, that bandwidth represents, as we said, just one carrier and the width of the signal is proportional to the symbol rate being transmitted. Any excess signal on the adjacent channel is caused by distortion and is undesirable. Contrasting that with OFDM, again, I have a width to my signal, but in this case, it is composed of many carriers, closely packed, each of which is independently modulated and then, the adjacent channel energy, in this case, is not due to distortion, but is due to the just the normal roll off of the signal. In the time domain (this is perhaps even more important) in the single carrier case, one symbol represents just one point on that waveform. My receiver is going to sample that waveform in this example, it is 12 million times a second and the instantaneous magnitude and phase at that time translates to a point on the constellation and thus to some number of bits. In OFDM, I am sending many, many constellation points at a time and in fact, my symbol is now more than just one sample long. This case of 802.11a it is 64 samples long. So it has a width. It is not one point, but in this case, it is 4 µs long and I am repeating at that rate. I am going from a one dimensional sample and single carrier case to a sample that has a time duration to it. Another term that is worth knowing is OFDMA (where the MA stands for Multiple Access) and that simply refers to the fact that when I create a signal with hundreds of subcarriers they do not, they can be shared among multiple data streams, destine for different users. I can simply divide up that resource proportionately, depending on the throughput that I need to different users as you can kind of see on the left hand side here. Users on is low rate and has a few dozen subcarriers. User #3 is transmitting live video and needs half the resource at that moment. WiMAX uses a scheme. LTE uses the scheme and it is becoming increasingly common. OFDMA often uses a picture like this to map how the resources are assigned to different users as a function of time and frequency, so the downlink versus four in the middle there is intended for one particular users. It only occurs over a subset of the subcarriers and a sub set of the symbol times. What is nice in the scheme is that I can manage each one of those bursts independently depending on the signal, the channel quality to that individual uses. If I have a poor channel to user #4, I can drop back to a simple modulation format like QPSK, turn on more robust coding and even boost the power whereas user #2 who is right next door, I can transmit a full 256 QAM at minimal power and minimal error correction. Just to summarize: that brief overview, there are 3 key attributes that make OFDM important and useful to us. It is the throughput, which is high due to the number of subcarriers that I am able to send simultaneously. Literally, in the case of an 800-subcarrier system with a high order of modulation on each subcarrier and the math example I have shown there, I can be transmitting thousands of bits for each symbol. The efficiency is related to the spacing of the subcarriers. Typically, they are sent so close that they can only be separated from each other mathematically. In fact, if you have ever used a spectrum analyzer and tuned in on a signal, you realize you can't see individual subcarriers, it all looks like random noise, because the magnitude only drops by about 3 dB between adjacent subcarriers and the magnitude variations due to modulation are bigger than that. Then lastly, data integrity is superior with OFDM that long symbol length is long relative to impulse noise from the environment. The signal is wide at a single frequency interferer only disturbs a few subcarriers and the rest are fully recoverable and can be used for error correction. Those pilots that occur in every symbol can be used to re-synchronize and re-equalize for each and every symbol. Then there is a technique called a cyclic extension that reproduces the later part of the symbol waveform up at the beginning and then has the effect of giving me some really nice multipath immunity. Lastly, just to underscore that initial point, I did a survey a while ago in which I mapped out the progression of FI layers from analog and single carrier modulation to OFDM (which I am showing in green here) and if you look in every market segment from personal area networking, (like Bluetooth, to wireless LAN, broadcast) all of them are moving or have moved to OFDM. I mean, even mobile cellular telephony back in the early part of the decade, it looked like CDMA was going to take over Cell COMs and become the dominate standard and now with LTE and LTE advanced, even that is moving to OFDM because of the advantages we talked about. The challenge in development is not so much to do the basic math, but rather to figure out what does this waveform need to look like. How many carriers? How do I manage the pilots? Where should the pilots be? How many of them? ... and just a myriad of decisions that all come down to basically what we call the system architecture or the waveform architecture, all of those decisions. And Ricky Overdorf is now going to talk about tools that are used to make those kinds of decisions. Ricky... Thanks Ken. As Ken mentioned, I am going to talk a little bit about some OFDM system architectures. In general, I think it is really important to review some of these challenges. In particular, we are going to talk about kind of what the system architect looks at and what are some of the views that they look at. As you see there in the green area, this is kind of OFDM transmitter design and specific blocks that build that OFDM system. Specifically, as Ken mentioned, in the physical area, we are going to talk particularly to that today. Where do we spend the energy and where do we make adjustments? As you see in red, we have some potential issues, if we do have some design issues that we run into. Assuming that the system architect was handed a set of requirements for that system design, primarily those are: costs, range, data rate, another one could be reliability of that channel. Can you tolerate some bit error rates? Another thing that you might want to look at is if that physical layer is now designed what are the goals that you want to accomplish. I kind of listed some here on this slide. You know, of course you want the high throughput, you want it to be reliable. I think the average power ratio is a very common problem that you see in OFDM type format. I am going to touch on some more specifics about these, as I said earlier in some preceding slides, but I would also like to take a quick look at some design options that we have and what can we do. Ken kind of gave us an overview of that already: Number of subcarriers? What is the spacing and the bandwidth? Are we going to put some FPGA into encoding and interleaving? What modulation order do we use? The length of that cyclic prefix that he talked about or the guard interval? Preamble pilot structures? ...and there is really much, much more that we can talk about, but we are going to give it a high level look. I am taking a look at a frame structure here and there is a whole bunch of different things that the industry, as Ken mentioned is doing, for constant envelope, OFDM, MIMO techniques so a smart antenna techniques, multi-input, multi-output, Ken mentioned OFDMA. There are really a lot of those that are out there. I am going to take kind of a typical bursted signal, what you could maybe think of as an 802.11a signal where you have some idle time and then you have your burst and then your frame structure looks like one (most likely two preambles) and then you have some data that is sent and in particular here, we have two blocks of data that we are going to look at. One key decision that you might want to look at here is what is the modulation order for those data blocks and there is a lot that goes into that design and to determine that. A lot of that has to do with, you may want to use a higher order, of course, to get the higher throughput, but then you run into inner symbol and inner carrier interference problems, potentially, depending upon a multitude of factors. If you have a lot of channel issues, you could potentially have some issues there, so you might have to extend your cyclic prefix or your delay spread to cover for some of those problems. A lot of that goes into deciding what parameters that you use. Ken mentioned the preamble structure, so to quickly take a look at that, in general, there are multiple types of preambles, of course, that you could decide to use. The primary goal is establishing automatic game control and synchronization, frequency synchronization for your receiver. Like I said, there are many structures. MIMO is something where a lot of people are doing work and preamble design for multi-input, multi-output type applications. Here I am showing one basic implementation parameter. The sequencing can be done both the timer frequency domain - we will talk a little bit later about this in the presentation. Here you see the length, "L", where is the length of the preamble. We also have applicable guard interval or cyclic prefix that we can append to the beginning or the end. Also common to see, multiple types of preambles where you have long and short, for example, with 802.11a, where the short is for, kind of the broader synchronization and the long is for fine-tuning the synchronization. A lot of different things that we can do in the preamble so another design parameter where we want to consider some structuring there. Another thing that Ken mentioned was the pilot structure. There are a whole lot of different pilot structures and a lot of research that goes into what pilot structures work and what type environments to keep the synchronization to or to be able to account for multipath effects and channel changes that you may have for your link. What are some of the things that we can do? Well, I have four here pictured. I see no pilot, continuous pilot, scatter pilot and then of course, a combination of the two. Even in the scattered pilot sense, there is a lot of different scheming that you can do (that is not quite as uniform as the picture here shows) that has different types of results depending on the different type of link that you have. There are a lot of different things that are important here. You can see for digital video type formats, we will have something like kind of a combination of the two. For a lot of the mobile type communications, you will see some scattered pilot type applications. For 802.11a, you have a continuous pilot type application, so you see a gambit of these throughout different OFDM waveform design and implementations. Another problem that a lot of people want to take into account for is, with OFDM as Ken showed in the slide where we had a waveform with some roll off, he talked about some single carrier format where that is actually distortion. In the case of OFDM, we have the sync type function where we have natural roll off. One thing that we want to consider when we have this overlap, obviously this is determined by the number of subcarriers and their spacing, so you can adjust that to try and take care of that, but another way to try and mitigate wide roll off is to use some symbol windowing. That does have some tradeoffs, of course, like anything. This rectangular pulse shaping can induce some phase discontinuity, it also has reduction in the multipath fading immunity. Two kind of negatives that kind of come with that, but again it is very important and in many cases use, we have implementation (and we will talk about it a little later in a race cosine windowing technique that we are going to employ). Very important to try and to make sure you have nice roll off and do not have a lot of out-of-band energy bleeding into other channels that you may not want. We have, just to talk a little bit more on the next slide about payload and symbol structure. The guard interval and single prefix now is of course, determined by the channel order - I kind of talked a little a bit about that earlier. This delay spread that we talk about directly dictates this guard time or this guard interval. It is generally about two to four times the root mean square of that delay spread. In part, it influences the type of coding, I mentioned the different types, QAM modulation if you want to go to higher order QAM. It is more sensitive to inner carrier, inner symbol interference than we would get with the QPSK type modulation format. Heavier coding, obviously reduces the sensitivity to some of these interferences and again, this is the point that there is a lot of dynamic properties here that you can trade things off to try to mitigate some of these concerns that you may have. Zero-padding can also be used (as you see in the bottom section) to help that symbol recovery - again this is the structure that I will be talking about a little bit later on in our presentation. Going back to that slide with the structure, we talked about - at a very high level - some of the parameters that we have for our OFDM waveform design. Once you do get to a point where you have that design and you do have some problems or maybe you just want to optimize your design, what do you change and then how do you fix it? Like I mentioned multiple times and you have kind of heard it sprinkled in, you have a situation to where if you do change something to make something better it potentially has a negative trade off that effects other things. How do you know that you made all the correct choices? Do you go back through that list do you change something and then say, okay, it is finished? No. Generally, what you need to do, you need to do some system tests and so, we are going to talk about how do we do that in a more efficient manner rather than start from the beginning, and really have a long iteration process to make sure that you made all the correct choices. Looking at some of these easy to disrupt, not efficient enough, we have some synchronization issues, we have some channel issues, we talked about inner carrier interference issues, a lot of these Ken is going to talk about in a later part of the presentation and we are going to go through how to troubleshoot these, but in general, once we do find them, how can we correct them and make sure that they are correct, or that the solution that we came up with does not create other problems? I have here a list. I changed these to blue with a check mark and say, okay, how did we fix some of these problems and just at a high level to touch on some of these. We did some better encoding and that can do a multitude of things. Obviously, the tradeoff there is you are going to have more FPGA resources potentially or more resources that you use for power consumption if you use higher innerleaving and encoding schemes. If you want better throughput, we talked about just the simple solution of let us map this to a higher order format. Doing that again, like I mentioned, has effects throughout the system. We have synchronization problems. We did some preamble adjustments. Maybe we used the new preamble scheme. Maybe we used a MIMO technique where we did smart antennae technique. We have something where it worked great in the lab, but now when we are in different environments, we are noticing that we are having some bad issues, maybe we can go back to the pilot structure and check that to see if maybe we can hold that and kind of account for those channel effects and again, go through and optimize that. Also, inner carrier and inner symbol problems - we can change that delay spreader or that cyclic prefix or go through some better coding techniques, those are some methods to try to encounter that. We had too much out-of-band energy. We talked about a windowing technique. You can use higher weighting - like I mentioned, that creates some other problems. Peak-to-average power ratios we are really too high, that sometimes is manifested of course, in the baseband as well, but the RF and IF as well some of the amplifier problems come into effect, you can employ the different schemes for that. Maybe you employ a skipping scheme. We are going to talk about another type of peak-to-average power ratio reduction technique in this presentation. In general, that can create problems, maybe do some pre-distortion and then you want to see how that works with the system, but there is a lot of different ways to touch this. Now, how do they all dynamically work together? Now I want to quickly go through what rapid waveform development techniques do we have where we do not end up causing problems. We talked about the waveforms. I think we can all agree, it is very dynamic. We have a lot of knobs or things to tweak, that both can positively influence the system as well as sometimes negatively affect our system. Of course, the goal is to maximize our performance, so we want to do that and we want to do that in a timely manner and I think we are going to go through some ways to be able to do that. Of course, specifically looking at physical layer design, we have this product called SystemVue. I am going to show you some strategies or some techniques with this product that we can do some rapid waveform development, as well, as do some trouble shooting in the design environment to really try and make our waveform and do some testing, specifically, quickly. One of the things that you see very often is that a lot of companies kind of have a solid approach or a traditional design approach where you have maybe a DSP designer who is writing C++ code and they have their own flow and you can kind of see that in each of these columns where it is kind of a vertical flow. The key to this product SystemVue is it really has integration. It can handle a multitude of different formats. You are going to see some pictures here of it in a little bit. It is a model-based design, but it really encompasses 4 major areas. It supports, as I said, different formats. You can see here, we have got C++, Verilogue, VHDL, as well as math language or MATLAB lab type code. There are a lot of different coding schemes as well as libraries as you see which is another component. In particular, we are going to talk about OFDM blocks that we have that are already IP that is created that you can leverage as well as using those libraries as verification benchmarks. It is like a golden standard type situation in your design methodology. In addition to that, you have an RF system where you are RF engineers are doing design and if you are an RF engineer, this product is also very exciting because of the fact that it can help tie X-parameter non-liner type analog components in at baseband, a very accurate baseband environment, so you have the combination there where you can really tie all of this together to make sure that things work. Now how does that help us in OFDM creation? As you see here, we have on the right, this is the SystemVue environment and if you do maximize the screen and you actually can get a look at what that looks like - or download the presentation. You will see on the right, there is some blocks that are added together or in series to design a system, as well as, different graphs so you can do verification. In particular, what we are going to show is those blocks, that we have, we have taken them and we have made OFDM blocks and if you can see them, they are specific for each channel. Of course, it is not just 6 blocks here that create an OFDM waveform, we actually have more than that, but in particular FFT blocks or we also have a subcarrier mapping the different specific things, guard insertion block. We have blocks for each one of those. You can use these blocks to more quickly develop OFDM waveforms. In addition to that, we have a new thing that we are, based on some customer input, we have developed a signal graphical use interface (and even if you do not yes this product in particular, this is a good thought to maybe take your own tools that you are using and try to implement something like this, because of the dynamic nature and a lot of the flexibility that you get with OFDM). We took the specific parameters of these blocks and we extracted them to a high-level graphical user interface. What you see on the upper left there. We will quickly walk through some of these tabs and we are creating a waveform in an environment where we can do it very quickly and adjust it and have somewhere if you are doing some silo type design that you can also use this in conjunction with it to kind of plug the design holes fairly quickly without having to do a lot of work on your own. I am going to walk through some of the creation examples, so here you see some system parameters, what we have here is a OFDM system parameters for a frequency etc. as well as power, those types of things, your over-sample ratio, you can see here, you have the guard interval subcarriers, the FFT size, and in addition, preamble parameters, whether we, we mentioned we would talk a little bit about this so frequency domain or time domain, whether you are going to do your design in either of those for the preamble you can dynamically change that as well as, different sequencing parameters and sequencing. In addition exactly how are you going to do your, how are you going to implement your structuring for your data: Are you going to use a QAM scheme? A QPSK scheme or if you want something specific, a specific model type, you can also do a custom scheme. Some piloting schemes here or import your own scheme but a rapid prototype and a lot of the waveforms are already here for a demonstration examples. Peak-to-average power ratio, we have an example of a DVBT2 algorithm that we have implemented to do peak-to-average power ratio reduction. Basically, what this is in a really high level is, you know, we have all these OFDM subcarriers, they all could potentially add constructively, depending upon, as we mentioned, what the phase is of each of those and if that happens, obviously you have a very large peak-to-average power ratio and if you have that situation you are going to run into problems in a multitude of areas, specifically amplifiers. I do not like that. This technique is not a clipping technique so it is virtually distortion-less, but basically what it does is it takes some subcarriers and it uses them to actually algorithmically destructively subtract from the peak-to-average power ratio - so another technique. So the point of this is that there is different algorithms you can also apply and that there is different sections of that that you can apply if you wanted to do more deeper dives into algorithm development for your off band waveform. I would like to turn it over to Ken. He is going to review some identification and troubleshooting techniques for OFDM. Once we have decided on a waveform architectural (waveform format) and realized that either the simulator or FPGA, or maybe even for silicon, we have the challenge of validating the modulation quality is "up to snuff" and if not, figuring out exactly why. Let us take a couple minutes to look at that in order to measure modulation quality, I first have to demodulate it and that process uses an FFT to convert from the time domain. So I am going to take that block of waveform that represents one symbol. I am going to perform the fast fourier transform and that will result in an array of frequency points each of which represents one subcarrier, and then each of those subcarriers has a magnitude and phase that corresponds to a point on a constellation, which gives me the data bits that I am looking for. Constellation error is a standard measurement that we already have tools to create and so there is simply adapted for OFDM. The metric that I am going to use is called EVM and it is a measure of the magnitude of the distance between where that constellation point ended up on the observed signal versus the ideal location. The only thing that is different here is now I have one constellation point for each subcarrier and then that whole array is repeated symbol, by symbol, by symbol and I get kind of an interesting display problem if I want to see all this data and that is handled with all of these displays which have now become standard on OFDM oriented instruments. We invented this display format back in the early 2000s and it is used universally by everyone now. The top trace here, this is a display of error versus time, with each vertical column having a grouping of individual error points, each one representing one subcarrier. I have a collection of, I have all of my subcarrier for the first symbol and then the next, then the next, then the next. I can see that distribution or if I just want to see the average error for that symbol, not the individual subcarriers, then I look at the heavy blue line. The converse is true on the lower trays. Now I am looking at it subcarrier, by subcarrier, by subcarrier, but I also have the ability to see the individual symbols. I will show you in some case studies here how that display is useful, but at the end of the day you end up with a modulation quality display that might look like this or I get to look at the raw constellation again, overlaying all subcarriers and all symbols onto a constellation diagram. Then lower left is my EVM as a function of time, so I can see if there is any time varying element to the error, or the EVM versus frequency in the upper right. The examples that I am going to show you here for the next few minutes are based on Agilent's signal analyzer products called the 89600 VSA and this is an analysis tool that works in conjunction with your bench top instruments. In essence, the instruments, whether it is a traditional spectrum analyzer, or a scope or even a logic analyzer, sample at appropriate test points within your blot diagram and they acquire the signal waveform at that point - whether it is at RF, or IQ baseband, or even as words on digital BUS. It acquires that waveform and then the software analyzes it and then produces the measurements that we are going to look at. Let us look at 5 different kinds of errors that pop up and how they appear on the measurement tools and a little bit about how I can recognize them and what they mean. In the first case, again, here is my same display. I have got an EVM, my average EVM number does not look good. The thing that catches my attention immediately is that lower left hand display where I see the EVM is increasing dramatically as a function of time. Some things not right there that I need to troubleshoot. Probably the easiest way to troubleshoot that is to use a setting within the analyzer that allows me to compensate for different types of impairments individually. I will try them one at a time and see the effect on the constellation and understand whether perhaps it is at impairment that is causing me trouble. In the top diagram, I am tracking just timing errors with no effect. In the second display, I am tracking out phase errors, which is helping me a little bit. In the third one, totally cleaned out the signal by tracking out amplitude variations. My conclusion in this case is pretty simple: I just had an amplitude, probably a drop in my signal as a function of time. Normally, you do not compensate these errors or track them out. Because, you want to see the impairments and measure it and quantify it and not just hide it. Therefore the default would be to leave these off. We have display called common pilot error that actually lets you see the amount of defect that you tracked out. In that upper left hand display, I am seeing that the amplitude tracking was boosting the signal backup by about 1 dB of amplitude over that 240 µs period. Okay, so tracking tools let me isolate and quantify certain kinds of time or phase varying errors. Second example is a classic one that we see a lot. I look first at the constellation diagram and there seems to be a rotational smearing to it. Now back in the old days, when I was looking at just a single carrier constellation and I saw some rotation to the constellation like that it was you would immediately conclude that this was phase noise, because that is how phase noise effects a constellation. However, I have already turned on pilot phase tracking from our previous example and so it can't be phase noise and so it can't be. So what is going on here? Well, the fact of the matter is because of how OFDM works, the constellation points are not just a point in time, they are also a point in time and frequency. Because, not only do I have all the symbols overlayed on each other, I have also got the subcarriers overlaid on each other. In this case, the error was not progressing as a function of time, but rather as a function off set from the center frequency. In fact, it was doing so linearly. That is what that "V" shaped plot it all about. If you work through the math, and you think about a collection of subcarriers whose frequency or the phaser for that subcarrier is rotating faster, and faster, and faster the further offset you are from the center, right because they are all at higher frequencies, increasing frequencies relative to the center so their phasers are rotating more quickly. That means, for a given time error, like a time offset, I am going to accumulate more error, I am going to accumulate more error during that time period as a function of how far away from the center frequency I am. Once you have tried that a while, you look at a "V" shaped EVM plot and know instantly that that is going to be a timing error of some sort. It maybe time skew between your I and Q waveforms, or it may simply be that your symbol clock is not running at the right frequency. We worked with one manufacture who was getting this one error on the protoboards that they were shipping to their customers for the chip set and it turned out in order to keep the cost of their prototype boards low, they were using a simple crystal oscillator and it was battery powered and the frequency was all over the place including the symbol clock frequency. Because of that imprecision, they were seeing this kind of EVM. Single frequency interferer shows up very clearly on the display as a high EVM spike. You can see in the upper right hand trace here -- a big spike, in this case, on subcarrier -24. Now the overall impact on the average EVM is not very big, but I still would like to know that that is happening and in fact, I would like to troubleshoot that. One capability in the tool is to focus in and say, "I only want to see my error statistics as applied to that single carrier". By doing so, this is now a one subcarrier, an OFDM signal in essence and I can use all of those metrics against that one subcarrier. Interestingly, in this case, I took my error signal and showed it on a polar plot (in the lower left hand corner there and I am zooming in on it some). Without going into the details here, there are some useful things that I was able to derive about the probable cause of that, just by looking at the error signal. Ricky talked about managing the peak-to-average ratio and as you experiment with that, you would use displays like this particularly what is called the CCDF, which is a measure of peak-to-average ratio as a function of probability. You can see a slight difference in those two, between the case of no clipping and some minor clipping - it is a real sensitive metric. Again, it is on the displays on the bottom where with no clipping my curve proceeds smoothly and follows a smooth curve whereas that tray starts to get truncated at the same time that my signal peaks become truncated. Lastly, let me jump right to a display of what IQ impairments can do to you. This is a case where I have just a bad looking signal in general, however as I look at it, my pilot, we have not talked about this yet, but if you look at the constellation, I have got a 64 QAM constellation superimposed on a BPSK constellation (those are the horizontal set of dots, just inside of the boundaries of the constellation box) those are my pilots. In this particular case though, my pilots have separated into two vertical dots, and that is because with IQ impairments, I end up creating images of the signals that reflect across to the frequency symmetrically on the other side of DC and interfere with its partner at the symmetrical frequency. I tried to show it graphically, here. When you have a signal interfering with an image of itself, you can end up with constellation like the type we have shown here. You can read a fuller explanation of that in the PDF version of the slides, but for now, I would like to proceed on on just a few comments on analyzing proprietary OFDM signals. And this is a new capability from Agilent that is just coming to market right now and it is a user configurable OFDM demodulator. As you might think, there is so many variables OFDM signal that requires a lot of in-depth knowledge about the signal to configure it and that is absolutely true. The demod needs to know all of those frequency and FFT parameters. It needs to know where are the preamble subcarriers, where are the pilots because those are reference signals, what are the expected IQ values, so it could use them as references, and then it needs to know information about the modulation formats on the data subs. What that looks like in a measurement tool is something like this. It is still the same analyzer, it is just a new optional feature here. There is a user input menu that has basically two parts. In the middle there, it says, basic FFT parameters where you describe to the analyzer that is is N number of subcarriers and what is the sample rate by which they were generated. Some information about guard intervals and guard subcarriers that is entered manually and then there are four configuration files that describe the signal to the analyzer, to the demodulator, subcarrier by the subcarrier and symbol by symbol. Now these are fairly simple text files - I will show you just one example of the kinds of information that the analyzer needs to know. This is one called a resource map and it is an example of 802.11A and you will see that I simply have a row of values for each symbol. Then, within each row, I am going to have one number per subcarrier and that number, in this case, describes what is the function of the subcarrier at that time. For example in 802.11A I have two preamble symbols up front where every third carrier is turned on and is used as a preamble and then is followed by three null subcarriers, those that are turned off. You can kind of see that in the pattern. That is followed by two symbols where every subcarrier is turned on. Then followed by other symbols where it is predominately data subcarriers, represented by zeros and pilot subcarriers represented by one. The set up process involves these configuration files generally once. They are to match whatever new OFDM system, architecture you have developed or you are working on. There are four configuration files listed up there that describe various aspects of the signal. We have included some figures that will simplify the configuration. There is some auto-detection of certain elements of the waveform, such as the target values for pilots and some of the modulation formats. Visibility to loop continuously through certain symbols so that you do not have to describe every symbol if they are repetitive and so on. This feature is available today and given the number of new OFDM formats that are underway right now, we believe it will be useful to a lot of folks. I am going to turn it over to Ricky one last time and let him just give you a high level view of the collection of tools that Agilent offers for OFDM generation and analysis. Thanks, Ken. I just wanted to make one point. SystemVue we talked about and we talked about VSA or Ken talked about VSA so these two products can work in unison, as a matter of fact, we can, those configuration files that Ken just mentioned, we can actually export those from your waveform design into the VSA so you can analyze the waveform that you created. In conjunction with that, Ken mentioned that VSA connects to instrumentation, SystemVue also connects to instrumentation and can offer a large benefit with verification. Now, just too kind of summarize what we talked about today - here are some links here for you guys to get some more information. If you want more information on specifically on SystemVue and VSA demo on how we crate these waveforms, we have one on YouTube. There is a link there as well as some application notes that you can use. Of course there is the new VSA B or the new 89601B link as well that Ken previously just talked about. I think I can pass it over to Kurt and you can maybe take some questions. Jam packed with information. We want to encourage you to continue to submit questions. We may not get to them because of the abbreviated Q&A, but please do so and Agilent would be happy to get back to you. First question is on slide #11, in terms of the benefits of OFDM and in terms of the signal characteristics were described, are there any associated capacity or speed characteristics or advantages that make it so people are going to OFDM for all those applications on Slide 11? Yes, that is a good point of clarification. If you are talking about just the raw bit density - how many bits per second can I transfer per Hz of bandwidth - OFDM is really no better or worse than most signal carrier formats. The real advantage boils down to its robustness. Its ability to tolerate poor channels and then we could go off and talk for a half an hour about MIMO, which is greatly facilitated by some of the characteristics by OFDM. It is a robustness thing, now a raw speed thing. I see, in terms of if somebody is already using MATLAB for any of their modeling, how can they already use what they have with what you have shown today. It is a good question, so we have the ability for, specifically for SystemVue to implement "M code", as I previously mentioned, but so you can create algorithms inside a SystemVue, but if you have some code that you already have developed and you have a MATLAB license, SystemVue offers a very tight integration with MATLAB so you can actually with one command implement your MATLAB applications inside of SystemVue so we do have an integration and I believe Ken also has some integration with VSA as well. Yeah, if you use MATLAB to create a simulated waveform as a .mat file, that can be read by the VSA and analyzed in a pulse processing mode, the same as if it were a live signal. Very good. Here is another question on the phase noise. How critical is phase noise in an OFDM system with longer symbol periods? In a nutshell, the impact of phase noise decreases with longer symbol periods. We talked about the fact that through the use of the pilots, we can resynchronize each time there is a new symbol sent. Therefore, if I have low frequency phase noise that is on the order of the symbol rate, that I am actually tracking out that phase noise as I go. Good rule of thumb is that phase noise that is less than about a tenth of the symbol rate is tracked out and visible to me. I see - very good. Here is one with secure signals. They deal with secure signals, how can custom or secure basebanding, coding, and encryption functions be added to the general purpose OFDM formats that were presented here today? Typically, this is something that you can do with SystemVue so you can use the creation method that I mentioned in part of the presentation with the our graphical interface, but you can also just add proprietary blocks to that simulation chain and then you can add using a variety of languages and formats, as I mentioned about MATLAB and other types of formats, the "C code" and then implement those, the IP there as well. Okay, very good. Unfortunately, we have gotten to the end of our Q&A period. We would like to thank so much the audience for attending today's E-cast and a big thank you to Richard and Ken for taking the time to be with us and share some important insights into the world of OFDM. This E-cast will be posted online at the URL shown on your screen and an audio only podcast version will be made available. You can do a web search with the keywords "embedded E-cast" and find all of the open systems media E-casts available for download as MP3s. We would also like you to take time to fill out the survey here that will be popping up on your screen shortly and thank you all for attending and have a great day. 