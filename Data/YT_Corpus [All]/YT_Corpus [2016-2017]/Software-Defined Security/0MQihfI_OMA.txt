 so this is a github enterprise security best practices or getting out best practices we're gonna have a more of a slant toward github enterprise as there's much more you can do a git of enterprise and configuring on.com but there'll be a lot of things that apply to dot-com as well just so you know kind of the heart of this conversation is making sure that you lock down your github as all of your intellectual property and everything or are a fundamental part of that but also making sure that you can still collaborate you know and do everything else you'd like to do knowing that it's good hubs you know the platform that you're using that's one of the main advantages of github so let's get started I'm Matt Guf I'm an implementation specialist at github I live in Utah work remotely and travel all around the country and the world to bring github enterprise and github to different corporations and customers that want to get up and running with github and so I'm part of the services organization at github services at github comm is where you can reach us and if you have any questions like how do I get up and running you know if we move to get up enterprise or we need training to get the developers up and running on git if you're moving from some other version control system we can definitely help and we answer all increase in there and get you in the pipeline and get you talking to people who can help craft the right solution for whatever your specific need is and the main offerings that we have are training and implementations and so we are over on the other side of the building over by the the grab a bite and please don't be a stranger we it'll be nice to talk with you and you can stop by I know the conference is almost coming to a close but don't hesitate to just walk over and ask us in question and even set up you know a meeting for another time during the upcoming weeks that's not a problem so how does this apply to security for for specifically our services team is we visit companies of varying sizes you and and different needs so we visit you know small startups that have a few people all the way to corporations that have thousands of users on the platform and obviously the needs for these different kind of corporations can vary greatly and and a lot of what we do is you know get initially the system lock down and and good to go from getting people on it and running and then we figure out you know how do we make it so we can use orgs and teams and things of that nature to craft the right kind of control for that corporation based on you know whatever their needs are for privacy and access and things of that nature some of these companies are incredibly siloed you know where they have contractors or something like that that have to be in their own spot and can't have any access to any of the code and then others are why you know within the github enterprise install are very open and collaborative and so we've seen every variation of this under the Sun up to this point so it's it's it's we've gotten some great insights into this and when we're on site we do different things like set up your primary instance set up your high availability instance we set up backup utils so that it's running for disaster recovery and then we also go through and do you know even get and github workflow training and as well as you know connecting api's setting up authentication all the things of that nature so we've had some great experience up to this point so to get started I took this picture yesterday over on the other side of the building I thought this looked pretty nice with the Sun coming in there at the end of the day I was noticing like all the holes in the side of the building and thought it's really cool that it feels like both inside and outside and you're letting a little bit of the that outside in that's the opposite of what people usually want to do on github Enterprise they want to have it completely locked down you know both use-cases work very well for what they're doing and there's a lot of different ways that that we can do this and so to get started right from the very beginning I don't know how many people here are using github Enterprise okay so I'm calm how many calm okay yeah so it's pretty applicable for the for the session so so many of you may already know this but when you log in to get up Enterprise you're gonna launch up the service you're gonna get the VM up and running and then it's gonna ask you to create a password pretty much immediately and enter your license for github and so the password that you choose in that instances is for access to the entire instance so SSH commands and different things of that nature and so it's a very privileged user that are very privileged access that you can get into that with SSH access and everything you're gonna want to set up your password here so that you don't forget it first of all or write it in someplace where people can find it we had someone call the other day and say hey do I have to totally restart my instance and reset everything up because I forgot the password that I set up in the initial you know consultation and we said no you can use you can SSH and if you've added your SSH key so that brings me to my next point is one of the first steps you're going to do is you're gonna add your SSH key to github and that makes it so administrators can go in and there's lots of command line utilities that you can run to you know to promote an instance to the primary instance if there's some problem with with the original primary to promoting users to site administrators and you know various different things love that nature and also reporting and things and so you're gonna want to set this up at your SSH key and that's usually you know the DevOps team or the infrastructure team or whoever's running get-up enterprise and and and is overseeing the day-to-day maintenance of it in support of it so once you have that one of the main decisions you're gonna have is do you make this externally available or not so is your github enterprise install available outside of your firewall and you know people go back and forth on this obviously a great deal because it has determinations of do we need to use VPN and and sometimes depending on geography and different things of that nature that can slow things down but this is pretty important and and let me just ask right now what is the percentage people who have their Enterprise instance publicly available just out of curiosity yeah okay yeah so there's and I've seen probably about 50/50 in the field or people you know people will say yes some people say no it just depends on the use case and where people are accessing it from as well it's really when you when you do lock it down with with you know no one outside of your firewall there's obviously far less risk of there then than otherwise but you can often set up things to mitigate that so if you do set it up so it's publicly available and this is especially applicable for people who have that publicly available setting it is required that you set up private mode in the github installation when you're going through the setup screen so this is one of the options in there and when you click that it makes it so note none of the getting github data is available external to people that are not inside of the firewall so you can't you have to be authenticated really to be able to see any of the data when you have private mode on and if your instance is publicly available outside of your firewall this is a required setting per your github contract and so you have to turn this on because we want to be very explicit to say that if you have it open publicly there could be a developer you know that doesn't know what they're doing and says I'm gonna open-source this project not realizing that it's not just internally that they're open sourcing it - they're open sourcing it to the world so you're gonna absolutely want to pay attention to that setting and if you don't know if you which one you have right now setup I would check that when you get back another one that you're gonna want to check when you go through this is if you look on the top of the slide right at the top check box where it says subdomain isolation this is another feature that's really important from a security perspective when you're setting up get of enterprise with your DNS records so subdomain isolation separates user supplied content from other portions of the github Enterprise appliance and this mitigates cross-site scripting and other related vulnerabilities if you don't have subdomain isolation turn on it's gonna add endpoints for a whole bunch of the different resources that github goes and accesses when it's up and running and it makes you vulnerable to those and so if you go in and set up you know a DNS wildcard for a sub domain or you explicitly go in and add each sub domain into the into your DNS records then you can not have to worry about that problem and there's a github help article if you just you know search github Enterprise subdomain isolation there's a really good article that that shows you each and every individual DNS record that you're gonna have to enter in or you know what the actual assets will be that it's it's delivering up alright so that brings us to one of the huge parts of securing your github Enterprise appliance and that's authentication so most people that use github enterprise are using their own custom system for for their company and there's a few there's a lot of different ways you can do it you can do open LDAP you can do LDAP with Active Directory you can do sam'l you know with a provider like octo or something of that nature and so I'm gonna highlight specifically LDAP as I go through here but it's applicable for the other protocols as well let's say so if just Rea when you first get started in the setup page and you're setting up authentication there's a few different options that you're gonna want to look at the administrators group is one and then another one is the restricted user group so the administrators group that one is anyone who belongs to that group let's say in Active Directory behind-the-scenes anyone is a part of that group when it when they access github and log in they will automatically be promoted to the site administrator you know which is the equivalent of that password that you set up at the initial part of the github Enterprise installation and they will be in essence omnipotent inside of your github Enterprise instance so this is should be a very small group of people that have access to this you know they'll be able to impersonate a user for troubleshooting and things of that nature with you know logging a reason why they're doing it as well but they will have access to the entire github Enterprise instance once they're in there it's a really convenient way you know if you have if you have like an a group for emails or something like that to just tie that to to this as well for the support team if if the plan is to have all of them accessing this as and in that way you know there's people who can always troubleshoot and things of that nature and have access to everything the other one down there is a restricted user group so there's a few different use cases for the restricted user group one is it does a really great job of making it explicit as to who can access github enterprise from an access perspective so anyone who you add inside of that group will be able to log into github if you don't have something like that set up then anyone who has anyone who can authenticate with your authentication provider can often can log into github enterprise and so we set up that group often you know call it github - users or something of that nature so that it's a very deliberate step to say we are giving them access into these controls and another nice thing about this too is that's actually a phenomenal way as most of you I assume err are administrators this is also a great way to restrict seat count as well so you can just have that one LDAP group that's the restricted group and then you don't have people logging in and taking up seats that you don't want to have them take up so that's that's a common use case and as well when someone let's say you have the event of someone leaving the company or something of that nature if you have that restricted user group set up there's only one spot to really remove them and they lose all access to to get up enterprise and so that's a really for workflows and Fred for administrating the enterprise device that's a really nice setting to be able to to have that one spot so LDAP has provides sync which is a really nice feature it's the only protocol that we currently have right now that provides syncing and so whatever you have in your groups you know like let's say in Active Directory that'll carry over into the teams and things of that nature in in github Enterprise and so you can you know map different fields to go over there but when you turn on that synchronization you can also map SSH keys and emails so that you have those defined and inside of the instance so that that's nice as well because then you can control through fields you know in Active Directory who connects or the SSH key for that user and it makes it it's a pretty nice workflow as well if user when they're being managed in that regard through you know automated tools for things of that nature all right so there's also ways to remove SSH keys as an administrator so I don't know who's heard and 2.3 were at least a bunch more Enterprise administration endpoints and the API and one of them that was nice was the ability to go in and and retrieve all of the different SSH keys that are on the appliance and the ability to be able to revoke those SSH keys through the API as well and so that gives you a lot of flexibility to be able to do audits on those and be able to go through and periodically if you desire and remove the ones that should be removed based on whatever parameters you set up and can access all right so I wanted to talk a little bit about documentation and onboarding for for security forget eventer prize so I think this is often a missed opportunity that people overlook when they're setting up get github and and approaching it from a security perspective so documentation and onboarding is a way to is a way to train your users on how to use the enterprise appliance so that it's the most secure as possible and so that you're obeying all the auditing and different protocols of that nature who here writes code on it like a day to day basis while they're also yeah all they're also administering so the vast majority of you get a better prize so so we all know readme files you know and I don't know how many people know of the contributing dot MD file that's especially popular in in open source projects but it's supported on github Enterprise as well and you can't for private repositories and things like that with a contributing MD file and the readme file you can actually say when a new user comes on board instead of them getting to the point where they're gonna deploy you know and they sit down with a couple people a couple times they show them it and then they're like alright you're gonna go you're a smart person right and they're not in their head you know instead of to avoid situations of that nature I think it's a really great pattern to set up and the readme you know how you get up and running with your project that you're gonna be accessing and then in the contributing MD file that'll show up let me just show you this right here that'll show up in a pull request and so you can see right here underneath the pull request as soon as someone goes to open one up it's gonna prompt and say please review the guidelines for contributing to this repository and so I highly recommend if you have that contributing dot MD file on the top level of the of the repository it'll pull up in here just you know through github styling and it'll pull up that file they can click on it right there and then go view it and the best practices that we've seen and help people launch is when we go places we actually go through and set up a step by step flow for developers to say you go through each one of these steps when you're going to contribute code and make sure that you're matching it up with the with the following step in the contributing MD file and that's the path that we go through to launch any code so it's a great way to make sure that specific protocols are happening especially if there's you know audits or things of that nature it's really great to be able to to have them walk through that pattern and know that that it's very well documented as to how they go about doing those steps so let me start with saying orgs and team so this is huge and github enterprise as it's the main way that you're gonna restrict access within the github Enterprise appliance we've actually revamped orgs and teams recently I don't know if people have seen that recent blog post but they got a pretty big rewrite to make it a little more granular and easier easier to use the primary purpose of orgs and teams is first and foremost for access you know like for orgs specifically the Oregon github Enterprise is it is pretty much anything it's it's a very close to exact use case of an org on github enter our github calm you know where we have two very diverse companies like Twitter bootstrap let's say and you know a large corporation that are both using github calm and we need to silo that information and separate it from each other that is the same use case for for an Oregon get AB Enterprise and so if you want inner communication between these different organizations it doesn't it doesn't permit that as it in the old version or in the new version because they want those to be siloed but it does let you restrict access based on those things which is very helpful it's it's really gonna be the fight the the granular control that you use to restrict who can access certain repositories and what permissions they have in those repositories so for github teams there is a new github team flow that's quite nice where if you remember moat right now the current dynamic would get up teams is that if you had let's say a QA team and you wanted your QA team to be able to have right at our right access to certain repositories like let's say repositories they own but then read access to other repositories that are yeah read access to other repositories that there they shouldn't be manipulating or anything of that nature you really it was a very common pattern to set up two of this teams of the same name with just adding the permissions right into the team name so I've seen a lot of people do like QA - Reid and QA - right and then they would give permissions based on that to the different teams and get of enterprise the new permissions model does not necessitate that anymore so if you can see in this on the right here you'll have on the on the left side and the old in the old model it would have this team is secret and it's only visible to members and owners the that's what it currently says the old one would say that it would have your write or read or admin privileges right there on the side so the privilege would be based on the whole entire team not on a specific repository and now you can actually have secret teams so that people are not they're not visible to people who are not administrators of the organisation and you can have granular control of the repositories over on the right side so if you see this has github school example - foundations that has write access there's also read and admin and so you can set it up specifically so each team you know like so it more closely represents your organizational structure inside of your company each team can have its own separate access for an individual repository and then you can just have one one that people at mention you know when they need review of a pull request or something of that nature they don't have to filter through these different team names that that will have different permissions baked into the team so this is a much simpler way to examine this now and to give access to people that need it and to fine-tune what access they can have all right and then well actually let me let me share one more thing about this the team so so I don't know how many people use github Enterprise 2 to specifically collaborate you know with with other teams and things of that nature through app mentions and github you know blending to see your hands if you do that yeah so that's a that's a highly underutilized feature of github where if an internal github if we have a feature that someone's writing and it's going to hit two-factor authentication or the new Yubikey no authentication or something of that like that inside of the pull request we have a team you know we have I think you know through in the 300h for employees and we have about 500 teams in github Enterprise instance o our team's far outnumber our our individual employees in the company and we use this for communication of all types you know for for you know kickball teams you know we have a team up and running you know to add mention people and HR you know and and you know ordering new equipment we have repos for all of these as well so our use of it is probably an extreme example but the really nice thing for security is that when you have team set up for collaboration you'll notice that your software becomes much more secure because when someone's writing a feature instead of just pushing it and then you know one person on their team says thumbs up this looks good to merge in and they merge it in once you have these team set up for specific functionalities of the site you know like we have a repositories team and in different things of that nature if anything is going to touch the code and we think it can impact those teams at all we lap mention those teams in pull requests and say can you come get your eyes on this and review this and that makes a big difference for not necessarily the security of your github enterprise install but also the security of whatever it is that you're actually working on and that software that you're delivering so I would highly recommend using teams to have a security team you know to have if let's say you're gonna you decided to go and implement you know the you be keys to have a to have a team specific for that so people can at mention them bring them into conversations and you'll notice that the level of security will just increase incrementally as time goes on based on the the increased communication okay so I don't know who's who if people have seen this recently but we we recently launched protected branches and required status checks so protected branches and required status checks I don't know if any of you know that has been a very commonly requested feature in the lifetime of github and so we we just were really excited to launch it we we launched it you know and just kind of letting people know about the feature in September and it's it's been well-received so far for the people that I've talked to that have used it so what this does is this let gives you the ability to go in and especially from an auditing perspective for company security it lets you go in and to define us a default branch and then to choose a protected branch and edit that protected branch and make sure that it passes see I for instance make sure you can use I don't know who is here for Kyle's presentation right before the API but you know you can use the API and things like that to run just whatever check you'd like on the code that the API you know brings you back the information for and then you can disable like the merge button for instance and and have required statuses before people can merge code so this is a phenomenal way to just you know we just open it up to you to take this very simple feature and then design it however you'd like to set up your organizational security for who can merge in code and deploy and things of that nature alright and then one thing that I wanted to chat as well about that we I've seen a lack of familiarity with when I've visited people on site is the audit logs so inside of github Enterprise if you click on the contextual rocketship icon in the top right of the screen that's the site administration button the first time you click on that just so everyone knows it'll bring you to the admin for whatever it is that you're viewing so if you're viewing a repository it'll bring you to the admin section of that repository or an org or user if you click on it again it brings you to this overall site admin with a side nav that has the management console which there's tons of monitoring and things of that nature in there and then license info all these different things that you can look through and administer and also users you can suspend users from that and you can make sure your dormant users aren't taking up C licenses if that's a problem but the auditing log I wanted to bring special attention to because this is a really powerful way to keep track of whatever is happening inside of your instance there's also a way and get of enterprise where you can see it depends on you know how your firewall set up but you can see the IP addresses of any requests that are coming inbound into it and it'll map it out on a map and another different part of the of the interface so with the audit log you can go through and you can see the syntax there it'll have like a repo dot create and that top list item it'll have user dot log in there underneath this is just a little instance that I set up just a demo this and you can see the action that people are taking and the IP address that they're doing it from and there's also events in the API where you can subscribe to specific events do you know and you can see what's happening and you can make you know tools you can script tools that will make take action based on what's happening you know and the different events that are being kicked off so that's a really useful tool there to be able to just go through and say we're gonna have complete oversight of what's happening in this instance and we're gonna be tracking you know what users do and and it also gives you the ability to help them not just audit them or different things of that nature if you see someone's having a problem but so that's that's the main things that I had today I wanted to have about 10 minutes left just so people can move up to the front if they want or you can just holler out and ask questions but that's that's the main topics that I wanted to hit for the general main hit points securing your github Enterprise instance so does anybody have any questions yeah go ahead I'll repeat the question is for people in the back yeah I see yeah yeah so the question is there's the contributing MD file but that's on a repository basis is there a way to do that across the whole entire instance and so what we commonly do when we go on-site with people is right before we leave we'll actually go through and create a repository you know an onboarding repository for all the team members you're gonna start getting onboarding and a get up enterprise and we'll actually go through and and pretty much outline you know like this is how we're using the github Enterprise instance they may do it you know we just use a repository cuz that's how we default things you can do it and things like confluence or different tools of that nature you can document the process and so we'll ever a repository called like onboarding you know that'll just be generic based on you know best practices for the organization security protocols you know maybe specific teams to reach out to if they have any questions or if they need to get special approval for different things I know like for instance some people will require the individual employees to come to the enterprise admin individuals to create repositories for the org or things of that nature and so we document inside of a repo or whatever tool they have the steps that they can take to you know for really any part of using the github Enterprise instance and then we also go into the contributing dot MD file for specific you know for per repo instructions you can also inside of there you know you could write a script pretty easily to go and add that file to every single repo and then just riff in the top of you know the first item for that contributing MD file reference wherever the documentation literal instance altogether and so there's we do it through this you know training mostly but there's no there isn't a current way to push it you know - all repositories based on the UI or anything like that but it's an interesting feature so any other questions yeah in the back if you have us you want to exclude certain users based on a repo is that right on a puppet repo is out you said Oh repo okay so there's different ways that you can do that you can you can make it so people are required to do Forks do you know whenever they want to access repository so they'd have to fork a repo and then contribute through that or they can be added to the specific collaborator section of a repository in the settings there's there's not a current way to go through and say like these are the Blessed people who can merge you know or anything like that through the UI but you could do something like it you could use I haven't seen anyone do this yet but you could use this the CI tool and the required statuses to go through and say verify that these certain individuals have commented on the repo and put you know some text you know a thumbs up or something or a ship at squirrel and don't turn on the merge button until that's until that exists in there so there's different ways to do it but there's no way to currently do that through the UI yeah any other questions yeah go ahead the directory how does the directory mapping map to the seat count so it's really just anyone who's logged in to the enterprise instance is taking up a seat if you go into the admin section on the side there is the all users portion and then the dormant users so you can see in the dormant users that'll tell you based on what metric you know they're gonna be considered dormant or not it's like I'm excuse me it's a month of inactivity for certain certain functionalities that they can perform and then there's a suspend button it depends on how you're doing it like if you're doing it without that sync you would you would remove them from the LDAP your the Active Directory group wherever you're using and then if you're but you can also just go through the UI and with other authentication methods and just suspend them there but it's anyone who's logged in who has not explicitly been suspended is gonna use the seed yeah yeah go ahead yeah I think I'm pretty positive that when you when you turn that on it's gonna redirect everything that needs to be redirected and take care of any of those different considerations so I think if you're I'm sorry yeah good point so he was saying if he's if he has a large github enterprise install and it's been used for a considerable amount of time and he's gonna turn on subdomain isolation now how will that impact users and all the things that they've already set up and it will take care of that it'll it'll migrate everything over and you should be totally fine to do that so yeah yeah yes yeah yeah go ahead did you say is it possible to force users to use multi-factor authentication so it's not currently so there's there's a few different ways that you can do this but there's not a checkbox let's say on the setup page level that says everyone in this instance have to factor off on there is the possibility there is reporting you know in api's that will report who has it turned on and I know that the Guardian has an open-source project that'll actually run and if someone doesn't have it turned on it'll give them a warning and then it will suspend their account through the API so I think that one's called GU - who is the github branch if I remember correctly but it's the Guardian release that that's a pretty commonly used tool but there is currently no way to enforce it like on an org level or anything like that there's lots of can you hear me now yeah yeah there's lots of ways that you can that you can get that auditing report of who does have it turned on but there's no like heavy-handed setting that says if you just cannot access the instance yet if it's not turned on yeah anything else all right well we have a few minutes left so if anyone wants to come up and ask any questions I'm I'll be up here for a few minutes as well but thanks for coming and I appreciate it you 