 Collective reaction focuses on the development of a video game system that intelligently reacts to its player's actions and emotions in order to sustain positive engagement what follows is how we develop collective reaction to make video games more fun and engaging for everyone and what that development method has taught us imagine a system that as is consider it as a friend a system that not only recognizes actions but understands the emotions behind them collective reaction delves into the newly emergent realm of affective computing a field in which systems can recognize interpret and process human emotions this cognitive istic Li inspired design approach soon be integrated within daily technologies applications of affective computing span many fields as having knowledge of a person's emotional state can personalize and enhance the user's experience picture an online tutoring system that uses this technology with emotional data as additional input this system could target sources of frustration then adapt to create an optimal learning environment for the student focus of collective reaction was to create an intelligent agent to adapt to a player's emotions within video games combining both raw physical input and the emotional responses of the player a meaningful interaction between the game and the player can be made from these inputs the system can then make decisions to change the game to optimize the players experience information regarding the emotional state of our players was collected to the Emotiv EPOC headset the EPOC headset is a consumer-grade electroencephalography device that map's the electrical activity of the user's brain over time the functionality of the epoch stems from the array of electrodes that rest on the players head during gameplay as a collection of neurons in the brain fires a propagating wave of charge flows through the neurons and the surrounding synapses that pulled up charge creates potential that can shift collections of charge near the surface of the school when the surface charges are altered the array of electrodes register varying magnitudes of electric potential in different spatial locations over time this distribution of electric potential can be processed into a map of brain activity that describes the emotional state of the addis is the black box that communicates with the headset it takes in the data that the headset generates and translates it into P&A values addis consists of two parts ad astra motive and address pad address emotive is the representative of the headset it represents the headsets data SP and a values and then sends these two values to add a spat with the timestamp a dispatch takes in the piña de values blocks them then sends them for our soccer to the timestamp we neglect the D value because the headset is not capable of generating this state and you to the lock of hardware sensors P&A is a representation of the circumflex model and they stand for pleasure and arousal according to the circumflex model any emotion can be represented as a linear combination or as a varying degree of pleasure and arousal States for example joy or happiness can be translated as a high pleasure and moderate arousal States but anger can be seen as high arousal and medium pleasure this model allow us to uniquely identify the emotional states of a person just by looking at the P&A values collected from the headset a complete survival shooter game was developed with additional capabilities to output game states receive input commands and implement the commands to change the game in real time this is our nightmare the player controls a small boy having a terrifying dream in which his undead toys are attacking the goal of the game is to survive as long as possible while evading and eliminating enemies here we see constant rates of spawn times let's take a look at how emotional data affects the game the first train to see is the damage which is indicated by the color of the gun Team Green indicates low damage relative to the initial damage now we see that aim change to red indicating high damage as well as the enemy is moving at a much slower rate lastly we see the game changing drastically that increased earning speed and spawn rate as well as they increase player damage and ski all of these changes happen within the same sessions of the game the change is happening in the game are controlled through small set of interconnected components we'll walk through each of these parts individually and then search them all together as we described earlier at the adda system reasons and streams PNA values to a socket from the headset the game constantly collects gameplay data like enemy deaths and player damage this timestamp game event data is sent to a socket which can be read by other applications in the middle of these two components is the emo core service which connects it to both of the data streams coming from the game and the headset email core is responsible for processing the data into real-time updates to the game and storing the data for future mining in a cloud database at the center of the real-time decision making algorithm in email core is a continuous loop that repeats three tasks collect where data from the game and pad readings are stored up in memory calculate where the collected data is processed through a linear algebra transformation to determine the optimal real-time changes to the game the output of this decision is an adjustment value that increases or decreases the health speed and damage of the player and spawn rate and speed of the enemies send where the decisions and adjustments are pushed through the game socket to the game which receives them and immediately adjust the appropriate aspects of gameplay the loop continues iterating every five seconds creating new adjustments to the game while the players emotions change until the end of the game the model underneath the determination of optimal changes is a simple linear system with a three by four matrix of coefficients hours each of the inputs to the equation these X values is a different aspect to the last five seconds of data the Y values are outputs are the adjustments that need to be made to the game by modifying the C value parameters to optimal settings we can create the most enjoyable game possible using machine learning and repeated evolution we can find the correct parameters that will work the best the most users from the beginning of the experiment we saved every single pad data point in game event in a centralized cloud database for future mining each event was a unique record in the database indexed by the session ID and millisecond time stem so that queries could be done for specific user sessions and particular time regions over the course of 29 user experiments we collected 755 user reported moments that were subjectively identified as good and bad along with 200,000 had data points that line up with those user reported events we collected this data for later mining to determine objectively what pad patterns lineup with good moments and bad moments we use those patterns to determine whether a set of parameters was objectively good or bad and optimized for the best possible experience using evolutionary search a thorough assessment of the accumulated data results in a Bible heuristic that can be used to score and train the collective reaction brain as is clear in the figure show the average emotional angle over time which is derived from the pad model discussed previously is a consistent mechanism for determining positive and negative experiences as the positive and negative user reports shown in red and blue respectively our distinct with respect to the emotional angle the angle can be used as a heuristic that essentially reduces the learning algorithm to a maximization of the emotional angle moving forward with collective reaction involves the development of a more robust and nuanced machine learning brain that takes a more refined and educated approach to altering nightmare the nature of the emotional angle heuristic encourages the use of a genetic machine learning approach that will make use of small gradient adjustments to the game altering coefficients in an attempt to maximize the emotional angle and subsequently the player engagement this involves maintaining a catalog of historical coefficients and the corresponding emotional angles selecting the coefficients that currently maximize the emotional angle and then making small adjustments to the current maximum coefficients and a gradient walk manner that produces the next generation of coefficients for game changes this approach once implemented would allow the model responsible for altering gameplay to adjust itself over time to find the ideal transformation action and emotion into game alterations throughout the semester we've put a lot of work into helping each other and spend a ton of time with each other meeting three times a week working on the project usually while using food this was a huge change from last semester where we could barely orchestrate one week by setting aside designated frequent meeting time we were able to plan our weeks around the meetings and concentrate a lot of group effort on the toughest parts of the game together frequent meetings and social cohesion are two huge lessons learned from making an effective team that trust each other and accomplishes a lot on top of social cohesion we found that designing our system for small concepts and before building how more robust solution allowed us to work on a more difficult technical aspects first we're working on cognitively simples tat and once the technical aspects were handled we scaled a difficulty of the task but didn't have to worry about the sockets or any of the underlying mechanisms breaking 