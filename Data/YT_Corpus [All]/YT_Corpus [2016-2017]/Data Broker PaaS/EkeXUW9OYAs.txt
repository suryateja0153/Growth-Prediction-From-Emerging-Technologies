 node-red a visual tool for wiring the internet of things in the Internet of Things solutions often require putting together hardware devices Appy's and online services in new and interesting ways the time spent on writing the boilerplate code to talk to these different systems such as accessing a serial port or completing an OAuth flow against Twitter is not time spent creating the real value of the solution we need tools that make it easier for developers at all levels to bring together the different streams of events both physical and digital that make up the Internet of Things in this video we present node-red an open source visual tool for wiring the Internet of Things that takes care of the technicalities and lets you concentrate on the logic of your workflow this means I can spend more time making things talk to each other than worrying about all the interfacing code I will need to write node read provides a browser-based flow editor for creating flows of events and deploying them to the runtime it's lightweight runtime built in node.js is ideal for edge of network environments it can be easily expanded by adding new nodes to its palettes using JavaScript taking full advantage of the node package manager ecosystem any part of a flow can be imported or exported using JSON for easy sharing and collaborative development nodes represent reusable pieces of code and logic node-red comes with a core set of useful nodes but there are a growing number of additional nodes available to install from both the node-red project as well as the wider community or you can program your own nodes in JavaScript node read can run on low-caste hardware or in the cloud to run node-red locally you must have no js' and node package manager installed node-red can easily be run on a compatible platform as-a-service a good option to use as bluemix which provides ready-made application templates for different purposes to speed up development IOT and time series database already installed let's see how easy it can be to create a chat application type using node red and bluemix step 1 create your node red application 1 login to your bluemix account and create a new node red boilerplate to give your application a name and click create 3 on the bluemix dashboard navigate to the URL provided for your newly created application to launch no Dredd's main page for now click go to your node red flow editor to open the flow editor 5 you should see a blank sheet where you can start building your app when using node red we build our apps using this graphical editor interface to wire together the blocks we need we can simply drag and drop the blocks from the Left menu into the workspace in the center of the screen and connect them to create a new flow step to create your node red application or import from code every node red application can be imported and exported using the JSON format so let's import our chat app into the new sheet1 access the project's repository on IBM devops services and open the node chat JSON file to copy the entire files content then go back to node red in your browser 3 click on the menu button in the top right corner and select import from then clipboard for paste the files contents that you copied from the repository and click OK five click anywhere on the blank sheet to add the notes that were imported step 3 deploy and run application one check the read deploy button next to the menu button to make your application live - you should see a success message appear on the top and the blue dots on the nodes will disappear these dots indicate when a node has been changed but not yet deployed now open a new tab on your browser and go to the indicated address for changing app name to the name you gave your application 3 you now have your chat application running enter a user name in the field on the Left write a message in the box on the right and press send 4 open the chat in the second window or send the link to some friends and have fun you should receive the messages instantaneously 