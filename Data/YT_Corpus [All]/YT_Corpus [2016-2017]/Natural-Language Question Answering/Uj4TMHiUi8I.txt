 okay the next segment is about semantic parsing so semantic parsing is about converting natural language to a logical form for example to build executable code for specific applications such as an airline reservation or a geographical query system systematic parsec has three stages the first is to take the input for example sentence and converted into a syntactic parse tree using syntactic analysis and then perform semantic analysis to come up with a semantic representation so what is compositional semantics well this is done by adding semantic attachments to context-free grammar rules so we first part the sentence in tactically and then associate semantics to each of the individual words and then use the context-free grammar and the semantic attachments to build semantic representations of all the non-terminal nodes and at the end of the day we get the semantics of the full sentence which is associated with the root of the parse tree so here's an example the sentence is Javier likes pizza and what we want to produce as output is a predicate of this form in first order logic like who likes Javier first argument pizza and second argument so here's how we can do this we associate a semantic expression with each of the nodes so Javier likes and pizza are there leaf nodes each of them is represented as itself in this case is a noun not a noun and then lambda expression so here's where lambda expressions come in handy what we want to represent here is that the verb likes gets represented as the loved expression of two arguments x and y that turns them into the predicate likes with the two arguments so now the next thing is to combine this node with the node for pizza and now we are going to turn the two argument lambda expression into a single argument lambda expression so we're going to have one of the variables bound Y to Pizza and we only have one unbound variable so we have a lambda expression only for X now we're still missing one our so if we combine the two remaining and combine nodes Xavier and the lovely expression for the verb phrase we're going to get the semantics of the entire sentence by applying the remaining unbound lambda expression to Xavier and we're going to get the predicate for the sentence which is likes Xavier pizza so for practical purposes a lot of the recent work on semantic parsing has been using a combinatorial categorial grammar which was introduced by mark Steedman in 1996 so let me give you some examples of how CCG is used to represent semantics for example adjectives are presented as lambda expressions on one variable so we have lambda X 2 X so this is the expression that represents the adjective tall and now we have a transformation rules that say s back slash and P for stache adjectives so this is essentially one of the constituents in ccgs which corresponds to a lambda expression with a function f and an argument X and then NP noun phrase and this example might use the name of a basketball player Yao Ming so the noun phrases get is presented as themselves this one to represent us and us yeah Ming is taught in C c/g is how we can do it we start with the words themselves Yao Ming is labeled as a noun phrase Tao is an adjective and is is s and P adjective that gets translated into C c/g into a lot of expression 1 for the function and 1 for the attribute then we can combine those two together and get an expression that requires a noun phrase on the left to form a sentence and then we can combine those together with a noun phrase and get the expression that yamming is tall so now are in relation to this exercise we have a polar from NACO 2014 from jonathan Coomer felt like a black one Patrick littell it's available in the macro website and it has two part one is the Jeanette CCG part and the second one is specific to language so the first part introduces CCG expanding the meaning of the forward and backward slashes and then it gives a little grammar using four words and then it shows how to combine different expressions to form grammatical parses and also give some examples of ungrammatical parses so the first part of the problem asks the following three questions one is to explain how CCG works to parse sentences number two is to take the sentence I enjoy long books you have to feel able to figure out how to parse the sentence successfully with the grammar and finally in part three it asks you given a specific grammar to come up with sentences that cannot be parsed using this camera why don't you think about the answers to those three questions and then look at the answer on the next slide so here we have the answers to the first three parts of the first parlament CCG from naka and now the second part it has to do with a language called talk peace in from New Guinea there are some sentences in that language and scramble list of English translations you have to figure out first or how to match each of the English sentences to the tapas in sentences and then in the second part you have to translate one sentence from one of the languages into the other and vice versa and then in the final part you have to figure out how to map the different words in that language to the differents CCG categories on the right hand side so think about it and look at the answer in the next slide okay so after you've had fun with this nice Mac no problem we're going to look at a few more examples of recent work on semantic parsing the first one is a system called geo query which is one of the earliest semantic parsing systems by Zelan Mooney from 1996 it was used to Paris and semantically represent questions about geographical data so for example it took questions like what is the capital of the state with the largest population and what are the major cities in Kansas and it was able to represent them in first order logic format so here some of the statements that it was able to translate so see the capital city X's major P is a place the capital S is C B traverses s and so on okay now let's switch from this order paper to a more recent one by looks at or more in Mike Collins from 2005 you got paper to use C c/g for semantic parsing again in a domain that involves geographical questions you can define Utah as a noun phrase Idaho as a noun phrase and borders is something that takes one noun phrase on the left and one on the right to form a sentence and here's some of the good presentations that they end up with what states border Texas again this is a lambda expression where X single variable X X has to be a state and X has to border Texas what is the largest state again it's a lambda expression for X where X is a state and we're computing the size of X and we want to find the value of this statement that maximizes the size in a final example what states border to stay that borders the most states again can be represent in a much more convoluted way using two lambda functions one for state and one for another type of state so here's how you can do the derivations so Utah borders Idaho and what States border Texas you should take a look at the derivation and understand how the output in love the format is put just using the CCG derivations here's some more snapshots from this paper so those are some of the items that we'll learn in the system and this is the entire grammar so this concludes the section on semantic parsing 