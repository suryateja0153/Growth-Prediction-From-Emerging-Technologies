 okay well I really want to thank Margo for giving me the opportunity to be here as I look out on this audience it is incredibly exciting to see so many young women and a few male allies who are all interested in data science and this afternoon on the panel you know i'll talk more about more about career paths and stuff now i'm just going to talk about science so i hope that's ok good ok so the motivation for this is what i call the age of networks you know in the last 10-15 years as we've looked around every place we look we see networks we see physical technological networks like the internet and the world wide web we see social networks online and offline we see biological networks and so what I'm going to do is I'm going to end and I should mention that much of what is driving this is that these networks are producing data which really allow us to understand them much much better than we could a few years ago so I'll talk about the observed networks then I'm going to talk about five different classes of mathematical and algorithmic problems on these networks much of it has to do with data science and then I'm going to focus on one class of problems so the observed networks as I said we have a whole host of observed network so let me tell you a little bit about them first of all I'm a mathematician by well I'm a physicist by training but you know I'm a mathematician in my soul and so I model these networks as graph so they have vertices and they have edges and so one example of a technological network is the AAS internet so a s is like stanford edu is an autonomous system they could be walled off for cyberattacks to to prevent a cyber attack and we have edges which connect those networks this is a large network but then when we go to something like the World Wide Web it's of a totally different scale we have trillions of web pages and this is a directed network we have directed edges hyperlinks that that connect them there's another network which in principle is somewhat smaller but very very important and and I hope that many of you will be thinking about it these are the cloud the data center networks this is where a lot of our computation will occur some people think that when they do a web search it's free of course it's not free these data centers are sitting next to hydroelectric plants they're using we now use in this country about five percent five percent of the energy use in this country is through data center networks and it is increasing at a really rapid rate so hopefully some of you will be among the people who figure out better algorithms better ways of doing the data science on these networks so that we don't have to keep pumping oil out of the ground and doing worse things to get oil out of the ground okay social networks so for many many years we've studied offline social networks and we still do when we track the SARS virus we are you know we're looking at an offline network but there are of course online networks i mean the the big ones in this area are a facebook and linkedin there are many many other online networks and they have very very different properties from each other based on whether they're directed networks or or not based on their scale based on the kind of information that travels over them okay there are economic networks so when you go back to the a s internet it actually has peering agreements on it there are three levels of the a s internet so you remember the a s internet stanford.edu 18 t.com microsoft com all of these are nodes on the a s internet AOL com so if you're in the highest level you don't pay to have your information transported over any of the other levels if you're on the second level you have to pay to have your information transported over the first level but not over the second or the third and on the third you have to pay to have your information transported over the first or the second and so economic economic considerations tend to affect the routing on these networks it makes certain kinds of traffic more susceptible to cyber attacks so there's this interesting interaction of the technology and the incentives and the economic incentives on these networks ok there are bipartite graphs of buyers and sellers so you know for example you can have ad networks okay so you have companies and you have you know searches that are done and the end and the ads are sold that's a bipartite graph of buyers and sellers and there are more complex economic network so in the second keynote you will be hearing a little bit about online advertising which actually is a data science a network data science problem okay there are also biological networks so there are phylogenetic trees which we've studied for years and years you know there are the species that are present today and then from those you try to infer where they came from how they split off from each other people liked Andy war now is a fantastic data scientist who looks at these kinds of problems okay there were gene regulatory networks and I'm going to focus a lot of the talk on that and then there are real neural networks and it's actually very very exciting because neuroscience is finally becoming a data science and one of the biggest data scientist ioan TSA's and so now you know we're looking at slices of the mouse brain and trying to figure out what the connectome of a mammal actually is we've known about the connectome of a you know of a flatworm which has 312 neurons for a long time but this is a fantastic set of data that we're starting to look at and for the first time we may actually be able to make some progress on psyche on on drugs for psychiatric diseases as we begin to understand these networks more and also for things like Alzheimer's which unfortunately many of us will will get okay so what are the classes of mathematical and algorithmic problems on these networks okay so I'm going to talk about five classes the first one is just modeling the network so we start to model as may be a physicist would do and then we look at data and we ask how does our model fit that data and we keep refining the models there's a question of how do we sample and how do we learn large networks how do we do machine learning of large networks and that's actually in the past three or four years been a lot of the focus of my own research although i'm not going to talk about that very much today then there's processes on network so on top of a network which has some random structure there are all kinds of random processes that occur and again we study these by looking at various kinds of data flowing on these networks then there are algorithms on network so how do you take a network and from the data that is flowing on it conclude something interesting and each time it seems that people have done this in a fundamentally new way we see many new startups new kinds of technology based on new algorithms on networks and finally there are network reconstruction algorithms so there's a lot of sparse data out in the world and from that data from that sparse data we try to infer what underlying network might have produced the data that we're observing okay so I'll talk about each of these so if I'm going to model something I have to tell you what I would like to model what features i would like to include okay because we only we don't want to include everything we just want to include the relevant features so what are some of these well one of the interesting features of most of these networks is that they have small diameter people actually think that stanley milgram first talked about six degrees of separation stanford professor but actually it was a Hungarian short story writer in 1929 who I don't know how he hypothesized this but in his short story he hypothesized that everybody was connected to everybody else by six degrees of separation everybody on earth and then Stanley Milgram did an experiment in which he gave postcards let's say to somebody in the Midwest and said oh this is an elementary school teacher in Massachusetts you send this to the person you think would be on the shortest path from u to that elementary school teacher in Massachusetts that is a local algorithm because you just look at your neighbors and then they look at their neighbors he found six degrees of separation and a few years ago at Facebook jon kleinberg working with a team at Facebook Lars Backstrom and some others found that on facebook there's about four and a half four and a half degrees of separation not that different from six okay another feature that we want our models to include is power law degree distributions and people say that you know this is the signature of human activity if I ask what's the probability that i have K neighbors a lot of things that we used to study 20 30 40 years ago fell off exponentially in parameters but here it falls off much more slowly like a power law the probability that I have k connections and a social network will fall off like 1 over K to a power and interestingly in biological networks and a lot of other networks we see these these power laws and finally aging of vertices on both the asn turn and the World Wide Web older vertices tend to be more highly connected with lots of exceptions okay so the model which probably a lot of you know from about 15 years ago bar boshy Barbra she and Albert that's actually Rekha Albert a fantastic woman graduate student said ok let me have a very simple model kind of rich gets richer model that each time a new node comes into the network they connect to let's say to other nodes how do they connect they connect with probability proportional to the number of connections that node has already that's why I say it's rich gets richer and when you just look at this and do it back the envelope calculation you find that this falls off like the power law and if you do the more rigorous analysis you also find that it falls off like a power law ok so that's a very basic kind of thing but what happens when the data doesn't support that what happens when you see something in which let's say there are some sites that are not so old ok but they have lots more connections than some older sites so there were variants of preferential attachment and bar bashe and beyond Coney who was another woman graduate student of his in in 2001 came up with this wonderful model in which they said ok every site is born with a certain fitness and what happens is that if you're born with a higher fitness then more people connect you so you're more attractive you're more fit in some way and the interesting thing for the physicists here is that what pops out of this amazingly when you do it rigorously mathematically is what's called a bose-einstein condensation so there's an integral which diverges which is the bose-einstein an adult I'm kind of geeky and I get very excited when I see these things and but what this means if you were to do a start-up or something is that this pouring into the ground state is that a site is born such that a positive fraction of all future connections will be made to that site so it has all kinds of economic economic implications also okay competition model so you could say it's just a random process you could also say Oh every site that comes in undergoes some kind of optimization so they look around and they say what is the other site that optimizes some quantity for me and in fact when you do peering agreements you do this kind of thing and so you can do that and you get certain other kinds of models and then and there's a faculty member at Stanford Matt Jackson who is the expert on this he's in the Economics Department if you have a fully game theoretic model what comes in what happens is that a site comes in it does some optimization it attaches to another site and then all the other sites that come in attached and reattach and you do this again and again and again until it reaches equilibrium like a Nash equilibrium then you have a fully game theoretic model this is the right model for a lot of strategic Network interactions but it's much harder mathematically so a lot of data supports it actually getting models that act like this is is harder okay so now let's go on so we've modeled our network now let's go on to how we sample and learn from a large network okay so um as I said the world wide web is very large so the order of a trillion or several trillion static sites and growing so if i wanted to calculate page rank on the web i I wouldn't do this on trillions of sites I'd want a sample and I'd want to ask do I have a reasonable sample and I was actually working on variance of page rank about eight or nine years ago trying to come up with a variant of page rank that would do that would get rid of web spam or kind of make web spam less less prevalent and I was working with a product group and i went to a wonderful graph theorists combinatorial lyst lot c lovas and I said coming from the physicist in me I said you must have a limit of graphs like statistical physics you have a limit which is thermodynamics or interacting particle systems you have a limit which is differential equations and when you do calculations you usually deal with the limit when you have something really massive so there must be a limit for graphs because networks are getting really massive and there was not interestingly so this started a whole line of research started in about two thousand four we started publishing it in 2006 we did this for dense graphs we asked how do you take a graph or a network and get almost like a fluid limit of it okay and why would you want to do that well the reason you would want to do that is that if you don't get something like a fluid limit you have so many parameters as your network grows that you're going to overfit your data so you want something like a fluid network to get what's called a nonparametric fit so for example facebook today is very very big if i wanted to model it i wouldn't want to have you know you know 20 million parameters which i might have to if i were fitting with a parametric model so I'd want to fit it to some kind of a continuous model and then show that if I sampled from this continuous model I could tell you what Facebook is going to look by look like five years from now so we first did the theory for dense graphs Facebook is not dense no massive graphs and the real world or dense dense means n sites of order N squared connections well that can't possibly be so really we want sparse graphs with power law tails so we were able to do this about a year ago and finally we were able to prove the theorems on machine learning of math grass with power law tails and now a lot of people are using this theory which is a continuum theory to fit their data and then from that generate massive samples so that's a big area of research okay processes on networks so the network itself could be formed by a random process or an optimization process but then on top of the network various things happen like flow of information so people like jon kleinberg have done beautiful work on this they've got wonderful papers on how information flows on facebook and other networks okay and if you have a different network like Twitter a number of years ago with some grad students we looked at how information flows on Twitter very very different from how it flows on facebook and we actually have a lot of trouble fitting that data even though we have the the Twitter fire hose because it behaves so differently from what we had seen before okay so spread of epidemics on network so Amin so Barry who is a faculty member here when he was a graduate student worked with me on this and we looked at how how epidemics float spread and you you could do this for something like a virus but you could also for a virus in a human population but you could also look at how a virus or worm spreads on a technological network or a network of computers and you could also ask what would you do to try to stop it or to try to limit it or you could do the inverse problem which is a viral marketing problem okay which is I've got a big network like Facebook I want to go and I want to in some way in some way incent certain nodes of that network to like my product which nodes do I choose if I want it to spread as much as possible so this is really the inverse of trying to stop a virus this is trying to spread something okay so there are wonderful models wonderful problems lots and lots of data analysis is done on these models okay there are algorithms on networks so we all know about Larry and Sergey you know coming up with this page rank algorithm and it giving rise to this little company which became a big company it's based on a lot more than just the PageRank algorithm now but there are still other kinds of PageRank algorithms I mentioned that I had been doing spam web spam suppressing page rank another kind of thing that we really now as networks become massive is that we want algorithms that don't give perfect answers but that give answers very very quickly so sub linear algorithms so you don't even get to read in the entire graph and yet you have to come up with an answer okay and you know an approximately correct answer so there's a lot of work on sub linear time algorithms you come up with the algorithm you test it you see how it works you do various hacks you prove what you can and test what you can okay so you're you're going to see that almost all of these lead to companies ok there are clustering algorithms or collaborative filtering algorithms if you like this or sparse matrix completion right if if you like this then you'll like that so netflix has this graph of people and movies you don't fill in that many entries and yet it wants to fill in all the land it's at least for me it does quite well I can't believe how well they complete that sparse matrix I mean I like really obscure movies and it just it keeps getting them right for me and the mathematics is is beautiful so both the data science and the mathematics is really beautiful here ok there's algorithms from multi casting and similar to these are algorithms for web hosting so this again started with some little paper and Fox top conference we know that when too many people try to grab information from a site on the web what happens is that that site can go down so what I would like to do is I would like to mirror that information at various sites so that when people are trying to grab the information it won't go down but without knowing who's going to be trying to grab the information where should I place these mirror sites okay how do I anticipate on average how where people are going to be grabbing from so Tom Leighton and a student of his had some papers on this around the year 2000 and it turned it to the company after mine okay there are these viral marketing things I mean there probably some of you out here who are involved in viral marketing companies viral marketing sounds terrible but I mean it's actually really nice in some ways in other ways not so but anyway so one of the things I've been working with some grad students on is again for massive networks if you want to do this on facebook if you want to do it on linkedin how do you do a sub linear algorithm for identifying influential site and then there are recommendation systems we're going to be hearing a talk from a woman who does recommendation systems and I've worked on recommendation systems you can take any trust network and you can ask how do i propagate recommendations over that trust network so on facebook you know I've got lots of different networks superimposed I mean I've got my family okay I've got people from high school who had been pinging me and I don't want to say no so I say yes and so they're part of my facebook network some of them I actually like but some of them I don't even remember I got my colleague so let's say I wanted a recommendation on a paper in data science okay so i would say oh of my facebook friends these are the people whom i trust in data science and each of them would say these are the people whom i trust and how would you propagate how would I then be able to to find out whom I should trust and what the outcome should be should I believe this paper should I not believe this paper well there are an infinite number of ways of propagating I could just take the majority that would be pretty stupid because they wouldn't be taking the network structure in into account but there are lots of other ways so what are the recommendation algorithms that I can come up with that have particular properties and then you go and you test how they actually have they actually behave so algorithms on networks is a huge area and finally network reconstruction algorithms so here as I said there's philo genetic network reconstruction also used for language reconstruction and now for the spread of diseases also when you try to follow the AIDS virus something you're looking at how its evolving there's gene regulatory Network reconstruction which we're going to spend a lot of time on there's also reconstruction of learning processes and networks of synapses so they take these little round worms where they know the 312 neurons and how their little flat worms and how they're connected to each other they put them in different conditions they shine light on them they have different kinds of food in the medium and they see how those how those those worms learn and from that they try to reconstruct what the learning process is on this network and you know at a certain point we're going to want to be applying that to human beings and understanding what's going on with us as we get Alzheimer's you know where r would there be different parts of the network which we would want to try to activate okay so I'm going to now spend the rest of the time talking about a specific class of problems and results okay so the standard dogma and you know they're all kinds of exceptions to this epigenetic things and stuff but I won't go into any of that the standard Dogma is DNA is transcribed to RNA is transcribed to proteins and then the proteins go and they fit on the DNA and they enhance the transcription of some parts of the DNA and they inhibit the transcription of other parts of the DNA so you have a feedback process you have a network and you have a feedback process and so some people call this the protein interact own and in fact problems with the gene regulatory network are the sources of many human diseases now it's it's not obvious though when when you look I mean I just learned this this fact recently and it's stunning to me in each person in the world there are on average about 150 deleterious mutations mutations that actually change amino acid in a protein okay so in the active part and and somehow most of them do not cause us problems but you see somebody who has a certain disease and so you you look at their genome and you say oh I can identify this and this and this and this and this well which are the ones that are responsible for the condition that that person has it's not at all obvious okay so how do we infer the network structure which is what we have to infer from this very partial data and also can we identify particular nodes on these networks which are responsible for the dysregulation and then try to have some of those be drug targets try to modify those particular nodes and try to control the progression of that disease ok so the drug discovery paradigm there are lots of sources of data I'm going to be focusing for a kind of cartoon schematic on micro on microarray data although i'm actually using more than just the microarray data i put it into a computational model and i get points of intervention and you know all computational biologists do this in different ways so i'll tell you about the way that that we've been doing it what we do is as i said i'll just talk about the gene expression data so micro arrays tell us which gene is expressed in the presence of which other gene under a particular set of conditions so you know a particular set of conditions for cells in vitro or something happening in in vivo and i get a snapshot a snapshot a snapshot ok because I'm a physicist I think of this as like a snapshot of a spin glass another snapshot of has been blessed another so snapshots of the same kind of system but a little bit different each each one of these snapshots is different different realizations and then from the differential expression of a particular gene so I see this gene happens to be way under expressed or eight way over expressed in this particular set of conditions I say wow that one's like you know way over expressed it probably is something to do with the pathway that I'm looking at okay so I infer a node weight from that and then how do I infer edge weight the way I'm going to fur edge weights is I'm going to say i look at this species i look over everything i know about this species and protein a seems to interact with protein be a lot in this species to interact directly I don't really know because I can't really get into the cell but it seems to interact directly or it doesn't seem to interact directly and so those would have very different edge weights okay so let me now do a simple a simple model it's called the Steiner tree problem so if you took an algorithms class in grad school you might know about this but it's it's not a difficult model so what I have is I have a graph on every edge I have a weight which i call c IJ and i also have a set of preferred vertices preferred notes okay and what I'm going to ask you to do is I'm going to ask you to have a tree which connects all of the preferred nodes I don't care what you do with the other nodes you can include them or not such that you minimize the sum of the CI J's along the the tree okay so the solution must by definition contain all the preferred node so I have you know 20,000 and 17 nodes and of those I tell you that 387 of them are preferred node so you have to put in those 387 I don't care about the 20,000 and 17 minus the 387 you're going to land up having to include some of them to get all the 387 connected to each other but I want you to do this in such a way that you minimize the sum of the edge weights the CI J's and the ones that come in which are not required to be in there are called Steiner nodes this is an np-hard problem it's really hard computationally and so we found a class of massively parallel algorithms by using some things we knew about phase transitions in physics from the 1980s okay and we are using those algorithms and they do very well in a few cases we can prove those algorithms actually converge much more often we just use them and they do very well on benchmarks ok so now I'm going to make the problem a little more complicated because biological data is actually really dirty ok so I'm going to have to make it a little more complicated so I'm not going to tell you that every node is either a preferred node or not a preferred note I'm going to tell you that even if its preferred it might be preferred to a more or less to more or less of an extent so I'm going to give you not only the edge weight CIJ like I did before but I'm going to tell you that of the prizes some are going to be of the preferred note some are going to have big prizes and some are going to have small prizes and I'm going to give you a positive parameter and what I'm going to ask you to do is to find a tree which minimizes the cost so this is the same thing that we had before this CIJ the sum of the CI J's now let me just do one thing for you is lambda goes to infinity this becomes the same old problem because anything which has a positive PI I you need to include because you want to get that minus infinity there ok I mean it's e to the so you don't actually at minus infinities you get zeros but it so it sounds nicer but the the point here is that some proteins are going to be way over under express so they're going to big prizes other proteins are just going to be a little under overexpressed so they're going to have less prizes some are sending exactly at background value so they have zero prize ok so here's the mapping to the biological data so I'm trying to minimize this and now what I do is I say for the CIJ so if I'm talking about yeast I look at all known protein protein interactions in yeast and I tell you that if these two proteins seem to interact with each other in a lot of pathways in yeast then CIJ for those two proteins that's going to be very small if they never seem to interact with each other cij for those that pair of proteins is going to be very large ok so then since I'm trying to minimize the sum of the CI J's I'm going to be trying to use edges in which the proteins are believed to interact with each other a lot and for the prizes what I'm going to say is in this particular experiment so the prizes are experiment dependent the edges are through our for the whole organism okay in every experiment for that for that organism i'm going to say in this experiment if i see a lot or a little of this protein relative to its background value it gets a big prize if if i see just the background value it gets no prize and you know middle amount then it gets some prize okay so what are this diner notes well on the standard Steiner tree problem those are the nodes which are included in that minimizing solution in that tree but we weren't forced to be in there they just came out to be the solution of the problem minimize the sum of the CI J's and connect the terminals in the prize collecting Steiner tree problem it's not so clear what the Steiner nodes are but they were the ones that have either zero or a low prize okay but get included in the solution so on the left is a network that I start with on a right on the right is a minimizing solution the CI so thick means it has a big c IJ so I don't want to include it but a big circle means it as a big prize so I do want to include it so that circled node is a node which doesn't have a big prize so I wouldn't want to include it but it connects things with big prizes to things with big prizes okay so i do want to include it because it brings in some juicy nodes for me okay in the context of the gene regulatory networks of Steiner nodes correspond to proteins whose genes not differentially expressed but nevertheless seemed to participate in the network so this is like some some protein sitting there at background value so nobody would guess that has anything to do with the pathway in question and yet the solution to this combinatorial optimization problem is telling you hey maybe it does have something to do with that pathway maybe just sitting at background value it's really operating in that pathway okay and so maybe it's a drug target so we first did this with the yeast pheromone response pathway the reason we did yeast is because any of you and we we had no biologist friends at that time we were just physicists and mathematicians and computer scientists and so so the biologists weren't very impressed but any of you can go and look up all the data on yeast so we did and there were like you know 15,000 known protein protein interactions there were 5,000 known proteins so this gave us a set of weights if they were known to interact with each other a lot then we had a low weight if they weren't known to in or out to eat we had a high weight and then there were 56 you can find this online they're probably more now large scale gene expression data sets for the yeast pheromone pathway each dataset gave us a set of prizes so for each set of prizes we constructed a tree so we at 56 trees and then we superimpose these trees if you superimpose trees you don't get a tree so this is what we got and then we said okay they're going to be two types of proteins along this pathway there are going to be the proteins that were differentially expressed we gave them big prizes so not surprisingly they showed up in the solution there are also going to be proteins which were not differentially expressed we didn't give them big prizes but they seem to be pretty centrally located and to pull big prizes together in one tree like this cause eight okay that's your house print anyway we went we found some biologists who we're willing to help us to determine whether these proteins were more important we had to look far and wide because at that point we were just you know physicists mathematicians computer scientists data scientists so they knocked out the gene corresponding to that for us and then the pheromone response pathway failed so this was kind of experimental proof you know and then we get a pnas letter a pnas paper and then more biologists are willing to work with us which is good so then we went on to doing something we would really like to do which is go from yeast to mammals I mean yeast is nice because it's simple but mammals are what we really care about so when you go to mammals you have incomplete interactive data massively and complete ten times as many transcription factors huge intergenic regions so we need fast algorithms so we looked at glioblastoma glioblastoma is with ted kennedy died of an uncle i really loved died of this it is a horrible horrible cancer its brain cancer even if you have surgery and chemo and radiation you die an average within a year I mean it's a really awful cancer and it's four times as common in Madison women okay so can we find glioblastoma pathways using the prize collecting Steiner tree okay so this is what we got in this picture things are a little different than in the last picture I showed you how red it is represents how big the prize was so if it's redder you're not surprised to see it in there and then we made we did the sizes of these things later so the sizes aren't based on the prizes the sizes are based on how central something was in the networks we measured centrality in a particular way but we try different ways and they all gave roughly the same thing so the big circles or the big triangles are very very central so the ones that are real so okay and then you're working with biologists so biologists look at this and say oh yeah this makes a lot of sense DNA damage repair that should be coming up in in this network okay but then there are certain things like like this one in the middle there that has no prize doesn't make any sense to people okay and yet it's it's coming up so five nodes ranked by centrality the first one is well known we had given it a relatively large prize how about the second one there was no prize not previously not previously identified four glioblastoma so what is it it's the estrogen receptor so this is the first pathway link between glioblastoma and gender you remember it was four times as common in Madison women there was no pathway like no explanation okay and then we did an experiment we threw estrogen into a culture and more cells died possible drug therapy I don't know how to get estrogen into the brain in fact sometimes when I think about women in science it would be good to get estrogen into men's brains more but anyway uh but it it was very interesting finding okay then we did multiple signaling pathways because you have these parallel pathways so then we were trying to do Steiner forest instead of Steiner trees on a cell membrane lots of different pathways can be starting from that membrane we came up with a way of doing this you could say i want k trees you could put in a few gasps atif or trees fine and so this is what we did we attached everything to an artificial node it split and we found parallel working pathways in addition to the hidden Steiner nodes did this again on yeast we got these very interesting pathways we did it on glioblastoma the egfr one is the pathway we had found before but we found other parallel pathways okay the final thing that I want to tell you about is more recent extensions to the reconstruction I mean we've all heard about personalized medicine we also know that with cancer we really want to personalize it we give tamoxifen to two women it works for one woman with breast cancer doesn't work for another woman with breast cancer it's because these breast cancers are different diseases they're just showing up in the same tissue okay so what we did was we took the Cancer Genome Atlas which is a big multi-institutional data set wonderful wonderful data set we looked at this for breast cancer and we said we have all these patients and for each patient we're going to construct a steiner forest ok and then so each one of them we're going to construct a steiner course we're going to find some Steiner nodes and then we're going to cluster them and we're going to say oh this this set of forest looks like each other that set that's it okay so these are maybe different diseases all manifesting themselves in breast tissue but then we said wait a second we know that the Steiner nodes in cluster 1 have something to do with breast cancer they didn't show up in cluster 2 but why don't we enhance the weights of those nodes in cluster 2 and 3 and 4 and n okay similarly the Steiner notes from cluster 2 we enhancement cluster 1 blah blah blah and we do this when we keep iterating and iterating so we do machine learning on this and we come up with highly patient specific networks which have input from other clusters and we found one really interesting thing here we found one cluster where the Steiner nodes implied that their breast cancer should or could maybe be treatable with no drugs that are treating a certain kind of gastrointestinal tumor which is really nice because with FDA trials you would have to you you don't have to go through the first stage because you know it's not toxic so this kind of personalized thing we're really excited about we're starting to look for similar things in a big autism data set now okay so the summary everywhere we look we see these networks we can use all kinds of techniques always going back to the data to test how what what the implications of that are we get new theories theorems experimental predictions new business models as you saw in the right hand side of the of the algorithms page and possibly even new personalized drug therapies okay thanks 