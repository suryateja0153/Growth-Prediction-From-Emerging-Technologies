 howdy folks so this is just a quick follow-up video to my LSI HB a montage of videos I made the comment that the controller doesn't spin down discs when you turn the Machine off and I'm kind of annoyed by this and it's not the first scuzzy controller I've seen that does this so I kind of just did a little bit of investigating out of pure curiosity and this is actually some code for the driver for that particular card it's the NPT to SAS driver which has been replaced by the NPT 3 SAS driver in Linux for five but of course I'm still running 3.16 on that machine so it's still using this driver anyway this basically the way that the way that it should work basically is the Linux kernel when it shuts down there is a shutdown hook in the kernel that basically other drivers can hook into and it gets called right before the kernel terminates power and the idea is it's supposed to free stuff may be shutdown watchdogs things like that but anyway spinning down disks would take place in that in that function so I looked there and in the in the this is actually the handler in the mpt2 SAS driver which handles that hook and you'll notice right here it says if the firmware is not the IR version it just does nothing and it returns so because I'm running the IT firmware which is of course not the IR for work this function won't even run so that would explain why nothing's happening but even if you do have the IR firmware all it does is basically just tell the controller tell the the firmware on the controller to flush buffers and stuff and it never tells it to power down either and the reason why I kind of sort of facepalm when I realized realized why this is the case I I couldn't think of a valid reason as to why they shouldn't powered down disks other than the sort of obvious while servers don't power down very often so you know it's not that big of a deal and in my opinion any good design regardless of how little is exercised it should still be properly implemented the real reason is very commonly and I can't believe I forgot this at my previous job we had this where you'll have a big server where they'll actually be more drives than Bay's in the machine and you'll actually have scythes like SAS cables running to another box with disks and that will have its own power supply and everything and the idea is you can completely shut down a computer the server but not actually turn off the disks and they can actually stay running so that would be that would probably be why it's it's not here by default now this is no this is just one example I mean the SD driver for example it does do such a thing it has the same shutdown Handler and it does actually call start/stop device and it actually does if I can find that yeah it's right here it actually does do a proper Drive shutdown so some some kernels there some kernel modules will do it others won't and it just so happens that the the LSI one doesn't and I could I mean theoretically speaking it's open source I could technically modify the driver to do it assuming that well I mean I don't have to make me live just as many assumptions it is possible but I'm not gonna bother to compile my own kernel with custom code and stuff I don't care that much but I mean someone could do it if they absolutely wanted to I thought of another way of doing it potentially using a there's an SG three utils package which contains a binary called SG underscore start which can send scuzzy commands and if you you can basically send a read-only stop command and my thought was to send that before the halt command actually let me show you where that happens so my server is running up into twelve point four so it's still still runs up start which is a little bit better than regular in it but it's not system D yet and it will be want to upgrade it but anyway in our C 0 dot d for this run level there's a bunch of scripts and of course they're executed in order and s in this case s nine he's the halt script and you can actually look at it it's just a bash script it goes through a bunch of stuff and in the script what's really of note is pretty much just one line which calls halt and halt is a symlink to reboot and reboot will call the shutdown binary which is what actually calls this the linux cisco that kill it causes the kernel to stop so basically this point right here is the last interpreted and like a non compiled line that i could add like an SG start command for example and if you're wondering about the HDD down thing this this is kind of weird to me because i don't entirely know how that is interpreted because HDD down if you literally look at the code all it does is it just sets it to a - h flag and it only did it only just basically just removes it if you're running md raid but it adds a - h flag to halt which if you look at reboot which is what parses that the source code for that interprets the - h flag as the power off like the actual power off the machine command not as has nothing to do with hard disks so I have no idea how that flag is supposed to mean hard disk down because from what I look at the source it doesn't doesn't do that so that would be my place to insert any spin down commands if I could and I may try it and just see what happens but my my theory at least I tried this before with H deep arm an H deep arm might do things slightly differently because it does 88 commands that get get translated disguising commands rather than the native scuzzy command but what would happen is that this would spin down and then as soon as this gets called the disk would spin back up again and then of course they'd get killed so it completely defeated the point so I may try it and I'll update the description if it actually works but I'm not going to be powering off my server for a while and I'm not going to shut it down just for the sake of this so anyway hopefully this was interesting just thought I'd share that it is always thanks for watching 