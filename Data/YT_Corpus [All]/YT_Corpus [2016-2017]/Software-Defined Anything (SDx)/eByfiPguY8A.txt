 hello welcome everybody my alias is Abra and today on guide to hacker I'm gonna be going over how to install Arch Linux with persistence and encryption I haven't found a tutorial on this already but they're all there are other tutorials on installing and encrypted Arch Linux on your system there's tutorials on persistent USB but never a combine did there's a few tweaks that you have to input there that I found out from trial and error so if you don't get any of this or you want to try a different way like if you're installing this on an ufi system and not BIOS you can look up a different tutorial and kind of take parts in there I will explain what you need to do and what's essential for this to actually work so this is just for Biosystems and if you're curious I'm going to be installing this on a hard disk a portable hard disk it's gonna be the Seagate backup plus slim one terabyte it's a USB 3.0 this can be a USB device can be 2.0 it really doesn't matter space really doesn't matter it just depends what you're gonna be doing on it Arch Linux is fairly small so we're gonna get started here again to mention that I'm doing this on my system itself so I've installed Arch Linux on my PC and I have a hard disk linked up right now you can also do this from a USB so say if you have windows on your system for example you can boot off of Arch Linux and install and encrypted persistent Arch Linux but it has to be a different USB that you're doing this from it can't be the same one because you're essentially gonna be destroying everything and encrypting it and you can't work on a system like like that so get started here we're gonna open up a terminal and just log into root we're gonna have a lot of root commands and we'll need root access for this to work the first tool that we're going to use the CF disk and we're gonna use the dev sd and whatever your partion is right so if we take a hit tab twice you can see I have SDA now SDA is my drive that this Arch Linux is on I know that for sure we have as DB now as to be is my hard drive on the system itself to I know that and then we have SDC SDC is my hard disk and if you don't know you could just do a pseudo fdisk - L and you'll see everything on here you know the size of things hopefully you can figure out just by the size but it's usually the last letter that you plug into so you know SDA would be obviously a drive s DB is if you have a second one SDC if you have a third drive even and then after that it's wherever you plug in so we're just gonna use the CF disk cool and it's gonna be the SDC Parshin for me i've deleted everything that's what you want to do if you are just using Arch Linux on that system obviously you can do half but for simplicity sake I'm just clearing everything so we're gonna have a new parsha near of a hundred megabytes and this is the boot Parshin minimum is a hundred you could do more if you want if you want to be safe about stuff but a hundreds always work for me and I'm all about saving space here so 100 megabytes is fine primary and then you want to go over to the bootable flag here and select that this partion that we just created is what we're going to boot off of it has to be unencrypted so that our system can read it any whatever is gonna be in here is just telling the computer to type in the password and unlock the next portion that we're going to be creating so it needs to be unencrypted and we need to boot from this the next one is our actual encryption we can create a swap if we want but I'm just not gonna do it for this tutorial I think it's pretty unsecure and I don't really know how to secure it yet so we're just gonna be creating the system itself and it's just gonna be all the space and that's it you just write it and enter yes and quit so we have that all partion doubt now we're going to do is actually format it and set up our encryption keys so we're gonna create a device mapper using the lux encryption mode so we're doing the by the Crypt setup toys should automatically have this on your system if you're using arch and you're gonna use the third Bo's remember to tax two hyphens and the cipher and this is gonna be our what encryption method are be using so we're gonna use a yes I'm gonna send me XTS plain 64 so that's we're gonna be using it's really common and very secure a key size is going to be 512 and we also have to use the hash corresponding with that size so returns hash sha-512 and in my opinion this is very very secure really no one's gonna break into this what really matters if you're worried about people brute forcing your encryption which is possible you want to make it hard for people to do that so we're gonna add a it's ER time and I'm gonna select 4,000 here now this basically is is it's basically like a week time for when you log in and 4,000 means four seconds it can be long can be short this basically means if you type in your password you have to wait four seconds for this example for it to process obviously longer the harder it is to brute force the password but I think for second four seconds it's fairly secure especially with a long password they're gonna use a random looks format be sure to capitalize the F in Lux format and then this is gonna be our device that we're encrypting remember it's not the boot one it is the biggest partion pretty much so we have that on their minds SD 8 SDC - and we're gonna do that type in yes it in all caps and we're gonna enter our passphrase make sure it's very long and secure and we're gonna be retyping again I might have messed it up actually yes I did mess it up this would happen you have a long password and hopefully it looks like it's good so it's scripted the command is successfully and now we're just going to open it so we're gonna do that with the crips setup command it's gonna be open and then our type is Lux as we set it to and it's gonna be dev SDC to remember whatever we use it as in the previous command and this is pretty much think that as your user name this is what I think of it as I'm installing this on and already encrypted PC so that means I've already encrypted this PC and I've used a user name called crypt root that's what it says in all these other tutorials that say use crypto root and say it's you know it makes sense you know use this user name but I've already used it and you kind of want to do something different from this kind of make it unique if you're carrying this around so you can make whatever you want I'm gonna make it encrypt root I'm for the Sam I don't think anyone really uses that encrypt root that works fine for me and this is basically going to use that username essentially I just keep calling user names now user name but that's what I like to call it for simplicity sake so that's opened we have that open now we're going to create a new directory to work in so we're gonna use the mkdir dir and it's the make directory command in Linux we are going to create a new ext for oh I'm sorry we're going to actually know P with a P action MK directory P and this is going to make we're gonna make a new one called USB for example could make it whatever you want I just don't want to work in the mountain directory because it's actually my system and I do stuff in the mount directly so I just want to make a whole new one do that and now we are going to format our Parsons right so that mkfs dad ext4 that's the file system we're gonna be using and the boot Parshin so wherever you marked as bootable make it be XD for it's gonna run and pretty fast some 100 megabytes I never do the same command and it's gonna be dev mapper and then whatever it is so as you can see this is why you have to make it different if I do crypt root it's gonna select it it's already have crypt Roop in here if I press tab twice you'll see I have crypt Roop and encrypt root so you do need to make those different make sure no one has the same user name is you if you know chances are they won't but use something a little different so encrypt the root we're to format that it's gonna format everything for somebody take a little bit of time doo-doo-doo-doo there we go now we can mount our ext4 so use the T option and it's gonna be dev mapper or encrypt root for me and it's gonna be / USB again whatever you want to work off of I highly suggest you just do new to make a new directory after that you want to make another directory inside the directory you just made so we're new m'kay di are the P option and USB slash boot and we're going to mount txt for this is gonna be devastated gonna be again our boot mount that and that is all set now we're just going to install our base packages and base development packages for our system so we can actually go in and configure some stuff so we do this by first of all you want to install if you haven't already the arch install scripts as you can see I already have it installed so I'm not gonna install it again you will need that to access the pack strap commands we're gonna use pack stratum so using sudo pack strapped the I option with Slash USB or whatever your directory you're working off of and we're gonna do two packages bass and bass devel so about that sync up and we'll be back when this is all done all right guys we're back and this finished now what we're gonna do is generate our fstab file pretty much tells our system where we're at gonna do that by doing a gen fstab with a capital u option a lowercase P it's gonna be air / USB directory or wherever you're working off of and then USB et Cie s tab and it generates it now if you just want to figure out what you know what it says make sure it's all there cuz it doesn't really give you a progress you can see that it's going to be listed as this right here it's going to say that a dead order it's all set this is all set after that we're just going to go into our system actually so we can arch chroot into / USB as you can see we are in here now I want to set our language we're gonna set this by going to etc' locale dot jen scroll down or if you have to scroll down at all to your language i'm gonna be going to en underscore us if don't pass it there we go right at the top here and just delete the comment signs or the pound signs or hashtags we're gonna call them corresponding with your language I like to also uncheck the ISO but you really don't have to do the utf-8 and then if you don't know how nano works you just do control X to exit and then I ask you if you want to save the save the file you type or hit Y for yes and then the file name is just press ENTER to overwrite the file so that's all set now we can generate our actual file so we got rid of the common signs basically now it can read our languages so these are the two languages are going to be using now we're going to be creating a file we're gonna do this by the echo command and echo basically anything after echo is what you're going to be putting inside the file it's just a quick way to write a file so we're gonna write Liang equals e'en us at utf-8 again whatever it is for you make sure it's utf-8 and then a greater than sign which means we're writing it to slash GTC locale comm for configuration so basically if we cat into this file you can see that that line is just written it's just a quick way to write something in Linux if you didn't know now we just simply have to export what we just wrote so the same thing with obviously without the right so just export and we're all set with that now we're going to create a symbolic link with our time zone so you do that with the Ln s command you go to it's in the user share zone info now if you press tab twice you can see a list of countries in there so I'm in US and I press tab twice again and you can see different time zones right and we're gonna do eastern and then tab and then once you're good it'll make a space for you and then you just want to link it with et Cie and it's gonna be local time now this file is not gonna be it's not even there yet so that's why you're basically this directory right here means the same thing as this directory your file right here so those are linked up they mean the same thing now we're gonna set our hardware clock to UTC with the HW o'clock commands and we're gonna do two tax from the sy sto @hc and the new UTC option again to tax if I can spell it right let's see good luck lock at air BR after that we're gonna do our hostname whatever or hostname wants to be so do echo again because we're just creating this file hostname hostname what's a good idea for a hostname uh printer because this is everything but a printer want to trick everyone else that's what we're doing right now I'm gonna write this to eat DC host name so we are a printer next we're gonna set the roost password with pass WD run enter our password so just whatever password you want the root account to have hopefully I can type it in the same way without wasting your guys's time and no I guess not you're gonna guys gonna be here for awhile until I get this there we go now you can add a user if you would like I usually won't they'll give you the command for it just because I only used root on here I know it's dangerous but I do it for different reasons I only use root on this hard drive groups wheel if you want you can use games power optical audio video storage again these are just groups you really only need wheel for your admin group so wheel and then tack s slash bin bash know whatever your username is a prawn for example and click on your and it will add that and then just do a past WD for password space whatever the user name is and it'll set the password for you and that's basically it but again for this one I'm just gonna use a root account now we're going to do is we need to edit some files pretty much first thing we can do is just actually install grub so just pac-man s grub and install this package so we're gonna do this let that install we got to do some editing here so we're gonna do nano etc' default grub hopefully there we are default grub and what we're going to do is on this actual line right here we have to do a little bit of modification here and I might actually have to open up a to new terminal mat a new terminal menu for me at least if you can if not you know just exit out of there you're doing this on the actual terminal so we got this and we want to figure out our UUID and the reason why we can't set you know a dead SDC STD or whatever it is on this is because you know what changes it depends what's plugged in first and this is how we find the UUID is pretty much like a mac address on this so we want to do n sudo LS it be okay I'll make it simple and just add the no option name and uu ID oops and we are going to do the dev SD c2 so whatever your encrypted the voice is and there we go we have the SDC two and we have the encrypt root here now we are going to use this information again to copy the encrypted person right here I'm gonna copy that and we can paste it into here after we type in crypt device equals slash and then this is going to be let's see here I forgot what it actually I think it's like dev disk disk by you you you ID and then paste that in there and then after that what we can do is our user right so encrypt routes whatever definitely not user but you know whatever you put is that in the beginning and this is it this is how we're going to find our cryptid device here from the SDC to Parshin so we're gonna you know control XY enter to save that after that we want to nano ET c MK ini TCP IO dot-com and we are going to go all the way down to hooks as you can see hooks here and now we have to do some modifying here right so right after block you want to add encrypt just like that and that's going to add the in cryptic to this now you want to after you dev add block block and delete block before encrypt or after mod come comp and this basically block is just like a USB device and we have to read that first it will not work if you won't do this and obviously the encrypt the end tripped is for the encryption portion here make sure we don't have unneeded spaces from this so we got that all set up there and we can just save that so after that is done we have little to do really we are pretty much done after this we just need to actually configure grub itself we're going to install grub I'm gonna do this by doing grub install the recheck command and we're also going to have a couple additional options because of this that we're going to do we're gonna use a 32-bit to start off you start to start off of sorry to target equals i 386 see is it it's yeah - pc and this is gonna be dead SDC or whatever your label is don't include a number there that's gonna install grub for the 32-bit system again this is gonna be 32-bit because you might make I mean you might be booting off of a 32-bit system you know 64-bit can run on 32-bit but if you're running on a 32-bit system you cannot process 64-bit on a different computer so no errors were set now we're going to configure it with the grub MK config command with the option slash grub grub that CFG and just like that and now we can create the initial RAM disk with MK ini TCP i/o the P option and Linux so it's gonna build everything for us well let that image generate and once that's all set we can unmount and see how this works right so we can exit we can you mount our / USB / boot we can unmount the USB directory and we're gonna need to crypt set up clothes we're gonna have to close our encrypt root user and now we can exit exit and we can boot off this so I'll be back once I boot off this alright guys so I just booted into the hard disk and everything worked I cannot show you because then I'll have to set everything up and transfer everything I think it's just easier I'm gonna tell you that so you'd follow every single step in here make sure you include the right UUID and it should work for you again if you have any questions or problems you're running into at all just post in the comment section below or email me my emails gonna be in the description I respond to everything but thank you again for watching guys work for you subscribe like comment whatever you want to do thank you again peace 