 this is Richard Steenburgen from in lair communications and we're going to be talking about something that's very similar so it was just spoken about unfortunately although we kind of have a little bit more operational bent on it we give you the information that you need to be able to go out into the real world and do this in your network today hopefully with data you've already collect so we're just going to be talking about using net flow data in combination with routing information to you know further the further the the ideas of peering networks and even people who by transit so the first question is why would you even want to do this and you know there's a lot of reasons you might be trying to defend yourself against D peering from a large provider you may be trying to peer with folks and you need to convince them to pair with you you may be someone who just buys trains of today and really wants to find out where you send your traffic so that you can peer with you know a few strategic folks and reduce your transit utilization or you may just be a person buying transit who wants to look into the transit providers that fit your needs best that have the best routes to places where you send your traffic so all these are pretty common there's not really anything new there and the way that we look at our data and the way that we look at the flows that occur in our network is net flow hopefully everyone's heard net flow in some respect basically it takes data takes packets that are observed on network aggregates them via the five tuple that is the source IP address destination IP IP protocol and if it exists source and destination port takes that information and builds a big table out of it packets that come in that matched somewhere in that table have their bytes etc counted to that table row and if they don't match a new entry is put into that table if a packet that ends the flow for instance something that the ends of TCP session exists then that session is immediately sent to the net flow collection system if not then it's exported if some interval lists that an administrator can define so NetFlow only gives you the raw data it doesn't give you anything else you have to take your NetFlow data and really figure out what's going on inside of your network from there it's some net flow implementations give you origin a s or PR a s information but really a peering network or a network that wants to understand their traffic flows needs a whole lot more information and especially for to to construct a very good peering strategy you have to have more information you have to have information about where you send traffic to through your transits so that you can pair with those folks and things of that nature and for peering networks especially it's important to remember that the the real question is where can I send my traffic not where do I send my traffic today so we take all the net flow information and we basically just throw out everything except the destination IP address and the number bytes in the flow this works really well with sampling techniques because we're just doing a statistical analysis to figure out where our traffic goes we don't have to worry about aliasing we don't have to worry about you know absolute metrics we're just trying to get a statistical average of where the traffic flows inside of our network and to other networks so we throw out all that information and then we have to collect ribs routing information basis the basic idea is that we're going to take the routes that appear would advertise to us and figure out how much of our traffic we would send over those pure routes if they were preferred inside of our autonomous system etc so basically all we have to do after we've done that it's changed what a s we account the traffic to in the a s path we'll get into the details here but first a word about multihoming about why the entire technique works basically there's a ton of multihoming very very few people are singly connected to anyone is B what that means is that there are lots of different paths and that BGP obscures those paths since it only propagates best path information once the the best path has been propagated all of the other feasible paths are no longer visible to anyone outside of the provider that discarded them so what that means is that we have to look at routing day we have to collect our routing data from sources outside of our own network in order to be able to project our existing traffic onto these onto the peers that we we want to have access to so the first thing we do is we collect our peers are the routes for the the person we're trying to project traffic onto out-of-band somehow this could be done with the looking glass' this could be done by asking the peer hey what routes would you send me if we were appearing this could be done through and we have a number of different links at the end which gives some examples of where you could go to find a sort of information and then you also have to include the a s path on the right side there this same technique applies for transit providers that's especially where that's useful for now what we're going to talk about is setting n equals to 1 and for us is simply what a s in the a s path where you count the traffic to so if we set N equal to 1 we're accounting the traffic to the first a s in the a s path we then take all of our traffic take all of our NetFlow traffic and we push it through this new rip we say ok the destination address of this net flow flow is 111 dot two dot one dot one so I'm going to account it to the first record in that rib up there and because N equals one I'm going to account it to the first a s there so what we end up with at the end is a list of how much traffic we would send to each autonomous system that we have in our rim what you you can even expand this analysis quite a bit to figure out where you send the traffic to today so if you send the traffic to your transits you're a little bit more likely to want to move it off onto a peering session if you send it to existing peering sessions perhaps it's not quite so important we've got graphs later in the presentation that show this in a little more detail but that's a really important analysis point when moving forward and now Richard will do the rest so now we start talking about applications as far as actually being used in peering not just general data analysis so obviously some networks are going to be open peering whether it makes financial sense for them or not they have a policy they're open peering we call them peer leaders that term came from Wren and some people are going to be close parent they just have a natural inclination towards that for whatever reason some people will take a little bit of convincing and some people just never appear with you at all for whatever whatever reason so some of the reasons that that happens why they don't want to appear with you just because you're a billion-dollar Network doesn't mean you have any idea of where your traffic goes I've talked to to lots of people that claim to do traffic analysis and when you actually drill down into it they don't do much at all a lot of people rely heavily on trial sessions and and just general speculation another reason is that being on the inbound side it's much harder to figure out where that traffic is actually coming from on the inbound side you just don't have access to enough data to make some of those decisions so the person with the outbound view may actually be in a better position to make the to make the determination and no matter how well-intentioned the inbound person and then of course who needs actual information when you have company kool-aid by that I mean if a network considers themselves to be a superior network in a certain region if they think we have 16 million eyeballs that you can't get to any other way but us why do we need to peer with you that you don't even need to look at to assume that so having proof is a good way to when you are interested in getting peering from some of these folks to separate yourselves out from some of the people who are who are running a global fully redundant OSI 192 backbones that are actually easier coming in and pls on some one zebra router there's a lot of that going on these days so having having detailed information really help stand a network out when they're going for for peering didn't quite come out as as well as we hope so there's the technique called donut peering which is when someone won't work with you work around them because multihoming is so pervasive in the core of the Internet even if you weren't multihomed your upstream probably is unless you're buying from a tier one so really most most of the routes even a tier one ninety percent of their routes are multi-home through someone else so if they won't work with you you go through them you go around them so the ways that you go around them as always you can try to pair with their customers directly you can try to sell their customers or you can try to find their customers customers who may be more more obliging to working with you so really the question is how do you find that data and that's where this tool comes in so to start for example you obtain a rib for the peer in question through whatever means then if you set in equals one you're looking at the the first hop in the es path obviously you're getting an accounting of how much traffic you send to that network and I'll just give you an example a network the other day approached me and mentioned that they had 40,000 customer routes and I went and checked checked my rib and I was getting 3,500 from my transit provider so around 10% less than 10% and I was actually using around 900 so a really really small amount there's there's a lot of multihoming out there so then if you look at N equals 2 you're looking at where your traffic goes to their customers and that's all your traffic including what you're currently sending to transit now and what you're currently peering out now so another application for this is picking transit providers just because you're you're not appearing network doesn't mean you aren't interested if you're concerned about where you're sitting your traffic are you a high volume of traffic you're interested how your transit provider is handling that and also trying out new transit providers virtually so what you can do is obtain a route map for a transit provider either your own or someone else and projector data onto that see what would happen if you were to send your traffic to that network and based on their peering policies who they interconnect with and how they preference routes it can be vastly different and then you can concern yourself with their capacity to certain networks or they're appearing policies to certain networks based on how it actually influences your traffic and that lets you pick providers who are going to support your peering strategy so for example you may want to buy transit from someone who doesn't already appear with with a target network that you're trying to reach and then you can you can actually show the target network that you're trying to appear with how much of that traffic is being diverted around them and potentially interest them so now we get to the pretty pictures this is an example of how possible it is to donate around certain people the trafficking green here this is from a medium-sized content-heavy network in the US and the traffic in green is traffic that's already being peered out that's going to any of Sprint's routes it's in the over ten gig range and a little blue line at the bottom there is how much actually has to go to transit so you're really looking at around the 15 to 1 ratio against the big core networks if you really want to want to get aggressive and don't up hearing so here is a more practical example of a medium-sized Network medium large size network that is well-known for restrictive peering policies and deep hearing activities and before anyone accuses me of being mean that's the description I was told to use so here for example you see 4 gigs for gigabits per second peak traffic going to them and you see that 3 gigs of that is already peered out through other peers and you see that 1 gig is being sent to transit and so that network comes along and says well great we're we're 25% of the transit traffic you know we must be big and important but then we look at a more detailed analysis of where we send those 4 gigs so this is just taking the raw output of of our system and sticking it into a pie chart basically you see the different individual networks that you're able to peer around above net cogent can't really read it from here the usual folks that share a lot of their multihomed customer base and then you see how much it is sent to traffic around 27 percent which is a little over 8 gig then you're interested in what your transit provider does with that gig that you send them because your transit provider also has its own customer base has its own peer base that you don't have and has its own policies so again you see in red that only 17% of that traffic or a hundred and eighty something Meg's is actually sent out of that one gig to that network the rest goes to unit sprint Deutsche telecom open transit other customers the usual suspect folks so at the end of the day the conclusion that you come to is that a network that thinks that they have a large number of eyeballs who can't be worked around where you need to come to them to pay settlement appear with them you reality there's only seeing 4.8 percent of the traffic or out of the potential for gigs that they could be billing their customers for they're only seeing 187 Meg's now another argument that that they often put up is well that's all going to a flat rate customers that's going to DSL customers we're not going to see an increase in billable traffic if you send us additional traffic and that's where the next step and the tool comes from being able to identify exactly which of their customers but clearly here you see that only 187 Meg's are our single home at the actual mount that single home is probably less than that but you're just getting the traffic down to 187 Meg's is already making it pretty uncon sequential so the rest of that traffic where it goes obviously it bypasses them either being peered directly with their their multi-home customers or even worse for the target networking question goes to their competitors who are billing for that traffic so by looking at the next day as hop the data that we can we can gather from that is we can either convince them we can say listen here the the 20 networks the top 20 networks here's the exact amount of traffic that we'd be sending to you can easily look at how much you charge them for transit and do some multiplication and figure out how much additional revenue you'd be billing or if they're they're still not convinced now you have a list of customers to go either pay with directly or start poaching so there's a bunch of flaws in the system so far we've only talked about outbound traffic that's because albon traffic is the only thing that's actually easy inbound traffic is very hard you really have no idea from looking at external routing information we're at where traffic could come from you have you have so many cases where a network is sending you traffic but isn't isn't the preferred path for the reverse or or is the preferred path for the reverse but isn't sending you traffic also you need to gather these ribs it's it's hard work and you have to maintain them there's no existing unified system for gathering peer data if I want to know if I want to pick a random Network like SBC and I want to say what of their routes I could send traffic to I there's no easy source that I can go to to get it certainly not in real-time and they may or may not give that information to me based on their their policies and obviously you're not going to accept every prefix from every potential appear so while this gives you a little bit more more accurate data say for example you're considering turning up a new peer with 40,000 customer routes and you're only seeing 3,000 of them today you're obviously not going to install 40,000 but you're obviously not gonna install all the only 3,000 either so now we actually have a tool that does this unfortunately we were not able to get the source forward registration done in time so if you go to this link right now it will give you nothing wait a day it will be fixed I promise we did this in two versions one is a simple Perl version I wrote a version and C spent several hours writing a nice little little em try fib and making it optimal and then Nathan came along and wrote the Perl version in 15 minutes in about 60 lines it consumes a little bit more RAM but it's obviously a lot more flexible so there's there's a lot of area to work with with what you're most comfortable with the the Perl version is intended to work with with captured data from flow tools so if you record a 5-minute snapshot automatically which many people are already doing you just throw this at it it takes 10 seconds to run there's a hive start up overhead obviously but you you load the RHIB you parse the data and your five-minute sample and you get some simple text output the C version is intended to be more more long-running you are able to run it as a daemon have it have it run over long-term or how that process mini ribs give you an example of just the the data analysis that we do we maintain an somewhere over 200 ribs for all of the peers that we're interested in we taken a lot of data from a lot of routers so certainly by the time you get to that point and you want real-time output and you want to direct this information into rrdtool or some things that affect it helps to have a longer term version so there's some other resources here for getting the views that you need PCH runs a looking glass that has dumps of all the that people appear with them major exchange points around the world some of the more closed appearing people are not open to giving that data so tough luck but some people are you know we're getting renesis is also working on a collection platform for for doing this kind of data in the future perhaps to provide an automated system where you can just say give me the routes for this a s and and they have it based on you know kind of a a route views type project but dedicated solely to obtaining customer and peer routes for this data and of course if push comes to shove you can get out there and start looking at random people's looking glasses hurricane Electric is a good example of a very open peering network with a reasonable reach that has a public lookin glass so there's a lot of small data that you can mine there that's about it questions I had more some interesting observations one of them is that going to some large US carriers with this kind of approach we actually had a response that talking about ways that they could generate additional revenue to their multihomed customers by something that looked like traffic engineering could get them in trouble because the sarbanes-oxley auditors told them that they weren't allowed to do that because that might be unethical so that's one thing to be aware of you know whether that was pure so I made up on the fly and said the straight face and we bought or not I don't know another thing is when you look at ways to get into a network you know you have the doughnut you have their transit providers their peers and their customers or peering with them another thing that you can sometimes do is buy from their customers especially if their customers are asymmetric that may be easier for a content delivery type thing to do then if you actually have to put lines in but you can often figure out who their largest customers are and not only look at selling to them but if they are asymmetric in their directions complimentary to you partner up on their quote unquote transit connections and do that that's certainly a good idea and that works really well for CD ends obviously I come with this from the angle of a network so asymmetric transit networks or eyeballed networks or hosting networks at words it's a very good idea and if multihoming is and I think all them we're all screwed any other questions 