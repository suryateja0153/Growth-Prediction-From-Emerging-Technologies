 okay yeah all right hopefully everyone can hear me okay well thanks for coming along I know I'm between you and lunch so thanks for making the time so my name is Tim nice I work for red hat over in New Zealand one thing I'm gonna do first is give you an idea of the agenda that way if you want to leave you can leave early if this isn't what you're expecting so just an idea of the things we're going to cover off and then explain why yeah why are we doing this why am i interested in this area what are we trying to achieve there's a little bit of demo a little bit of walkthrough hope you get some value out of it please feel free to make this interactive they have asked that you use the microphones so they can record this I'm happy to take questions at any point during the tour not just at the end so key things we're going to cover nested virtualization how did you use thin lvm some stuff around snapshotting how to utilize technologies like Red Hat OpenStack or Rdio and what the difference of that versus things like dev stat and other methods for deploying OpenStack if we've got time I'll also cover some stuff around using atomic for rapidly standing up doc and Cooper Nettie's environments so along the way we're going to talk about how to choose the right kind of base image for building and deploying these environments making things as reusable as possible allow this is war stories got choose things I hope that you don't get wrong because I've got them wrong and it's not been a pleasant experience and hopefully a few power tips also I want to get your tips and your feedback during this session and then at the end where I want to go next areas i'm interested in what i want to play with next where I'm seeing in the data center so I start who me I Steven Alex I work for red hat in New Zealand so where's that so all way down there this is effectively my patch and part of an aipac wise solution architecture team my focus is predominately on new zealand-based customers and business partners but I casually advise on other projects or within the region one reason putting this up is you look at some of the customers some of the use cases that have already come up this week you look at the growth of technologies like OpenStack in the apac region it is phenomenal at the moment the things going on in China the things going on in India this region has the potential to be generating far more OpenStack and cloud revenue than the entire the United States which is currently one of the world's largest markets for this kind of technology so why do I do this why am I trying these technologies out why am I here occasionally I wonder about that book and I demo and walk through solutions for customers and for business partners on a regular basis I need a rapid way to stand up an environment occasionally with limited or no internet connection around a range of emerging cloud centric technologies so often I have to use whatever I've got to hand also you know this comes up what people say that they've got an itch you know why do we get involved with open source why do we fix open source why did we do these things and we go we've got an itch we need to scratch scratching that might be a patch it might be a fix it might be some documentation a guide of how to but one thing I've realized is over we recently I've been doing this for a long time I've been in IT for over 20 years is sometimes you have a scratch that you've forgotten about it's there but you have a workaround you don't fix it it no longer itches you have these problems that you live with I've got way of doing this and it's okay i go into IT organizations and they've got desk procedures rather than using automation because they can live with it and throw people at the problem so one thing i want you to take away from let's just think about a problem that you live with that scratch that no longer bothers you enough right and along the way I hope I don't end up teaching you all how to suck eggs okay I want to learn from you as well so that's the other big reason why I give these sessions I want to learn from the audience if you've got tips and tricks in fact I gave a version of this back in Australia earlier this year and one of the audience had actually fix something I've been fighting with so at the end of the session we went away and resolve the problem that was awesome I had a great outcome that was a really good session also you may guess from my accent I'm not originally from New Zealand I'm actually from Liverpool Germans have a slightly odd sense of humor so to make allowances for that I think we'll just have a quick joke and then some of you will get it some of you won't many of you won't but it will hopefully set the tone for the rest of the presentation so person of nonspecific gender walks into a bar ouch right so now we've got that out of the way my maid golem what does he say he says what have you got in your pocket you know part the topic of this is cloud in your pocket how can we use what we have to hand to demo emerging technologies to demo cloud centric technologies then if you actually bother to read the some of the texts i put in and associated with this tour one of the things is you don't always have access to the cloud I don't always have access to equipment in a data center I might be working in a secure environment so how do we deal with this so what's the first thing you all have in your pocket a phone we all have phones most of us do or tablets you think about the power in your mobile phone today quad-core octa-core three giggling to be great if you could and eating it phones now that get little mini projector add-ons wouldn't be great if you could walk in and demo or show off a range of technology just using your mobile phone what else I love these raspberry PI's I was going to bring one with me yes it fits in my pocket i cants it's too busy being used by my daughter at home so she wouldn't be too impressed I want a couple of these plenty of my colleagues have knocks be boxers gigabit breaks all these little lightweight units of hardware that make great little test hypervisors building aspect I can go in and run say my laptop as an OpenStack controller and these is the the compute resource and have a reasonable lab environment up and running really really rapidly just a prototype just to do a proof of technology or try something out and here's something else that's cool hopefully I won't not my voice back off this is the 32 gig USB three key fits in my laptop almost no profile I actually put a little dongle onyx always among verge of losing it I got a full implementation of red Enterprise Linux seven on this and the way I've done it means I can walk into almost any data center to almost any piece of equipment and boot it and have a fully running working environment and then using this which is just an external hard drive caddy that happens to have a 128 gig SSD in it run a cloud environment on a piece of customers hardware in their data center really low profile I'm not changing their kit but I can show stuff off for them that's really powerful that's effectively the cloud in my pocket so I've got that plugged into my laptop here running OpenStack so hard will so for the purposes of showing this off and my typical work environment question is what you use if your primary environment of choice happens to be Apple century please try and run a real operating system on it okay these babies will run linux trust me I've been doing it for a long time in fact the very first piece of hardware i ran a linux on was a pre-production power macintosh around mkay linux which is an interesting journey than our own yellow dog so linux will work only this hardware now my environments I work for red hat we use red enterprise linux my laptop i tend to use fedora on I want to play with what's coming next from the community for those of you who need a community centric choice go ahead and use Santos it's a great environment to do some quick prototyping from with the community most of my I'm talking about that you can easily reuse with other distributions centos ubuntu arch whatever your distribution of choices please go and use it so the purposes of this today I'm running fedora 23 on my laptop's got about 12 gig of ram internally it's got a 256 gig SSD but I'm usually well out of space so for a lot of my demos I use this external drive and as I just said the benefit the external drive means I can use that memory key and I can go and boot the customers hardware as well one going to show off today is actually showing the same kind of implementation both using red enterprise linux on our recent release of reloj sp8 as well as using our do our community build of OpenStack on top of Santos now a long way there will be a few dragons it we all know the term there may be dragons you know a warning my mate smog this is actually Wellington Airport you have to walk past this to get on your plane in a cool he's huge honest I'll take up the entire wall in here so there will be a few pointers things you really shouldn't do please don't have the same pain points I've been through so the first topic is about nesting family in the room and play with nested virtualization cool it's really really useful nesting nesting is important ah love nesting we got lots of birds in our garden using when it's really really neat so one things about nesting it gives you this huge benefit over straight qemu software-based virtualization so if you're gonna enable nesting now all these slides will be available so if there's technical nitty-gritty in here you want all this is copy and paste able so I will be available so if you'd only Intel hardware there's quite a few options you can enable now many of these give you interesting optimizations if you're running on xeon class hardware if you have a laptop that you actually an 8-hour able to turn on all of these please give me the model number i'd really like one my little AMD test bed at home i just simply set that option you can unload the module reload it things should be good ideally I recommend just doing a reboot just to be certain and then you should have nested virtualization hardware accelerated virtualization nesting enabled now when you're playing around with this use your SSDs don't do this on spin and rust you're going to have a world of pain but it can we start playing with thin snapshots thin lvm really simple test is HD palm HD palm will check that your hard drive is just working correctly a given SSD should be getting something in this Ranger above if you're talking about spinning rush you'll be down around 100 megabytes a second I've had strange cases where external hard drives get cranky and drop back down to USB 2 mode and then all bets are off and your demos just going to really suck so that's a real simple testimony plug the drive and just run that you know you're actually going to get the the performance you expect I've got a colleague who's really funny about these things he sees like I want u uz sartor why don't you use firewire these days for purposes of demo trying things out USB 3 is usually more than sufficient so Nestle is a shin I'll create an initial vm you could do on the command line I usually just use vert manager and then I'll go and use versa to edit the configuration and just turn on vmx right usually you need to just make sure you give me the right cpu type as well depending on your environment but vm x is enough to mean that when that vm starts up it thinks it's hardware and you'll get much better virtualization performance yeah ah so yeah if you're on an AMD hypervisor so one things under verte manager if you're using that is you can say copy the specification of your native processor if you're moving things around a lot like I want to be able to dump the XML configuration from this and use it somewhere else that's going to be kind of awkward so sometimes you might go for a low common denominator one reason I've got a nehalem and this is another gotcha at one point with kilo there's some it really weird with certain classes of Intel processors so I actually have to downgrade the machine class so so yeah you just watch that it's it's something you may need to tweak is the CPU class particularly if you're working in a mixed environment you may need to downgrade everything to a common baseline first big gotcha is watch your default networks one way around this is spin up your guest environment that you're doing the nesting in and something other than the standard default libvirt network because 192 168 1 to 2 will also be the network range in your guest and the moment you try and do any virtualization your guests will fail to start up and if you don't check this you'll go through the whole process you'll install opens that you're going everything looks good you're going to pull your first virtual machine and it won't start i'm debugging it is a complete pain it's not obvious but it's simply that you've got a clash of networks so either create yourself a new default network on your laptop your hardware or create a second network zone that you want to demo in or just change it in your base image now I use thin lvm a lot because it basically it means that that external hard drive kind of looks like many many terabytes of space I can spin up many instances as long as I manage it carefully so again a few pointers if you're using thin so thin lvm first thing create a thin pool now one aspect of lvm now is you can set it to auto extend a thin pool if it gets full so you might say I'm only going to use so much for our spare space on the hard drive and I'll let it x band and consume that over time but you create a thin pool within an existing volume group so it's fairly simple now create an 80 gig thin pool actually on my local laptop whereas in the case of the external drive I've consumed the entire drive all it is is one big thin pool and then I can create a image within that thin pool that has a virtual disk size of 40 gig so there's one Pharrell or sent us depending on your environment of choice I can then plug that disc in as the disc with in liver and then start installing my environment a couple of gotchas to watch for when using lvm and SSDs it's critical that you can pass down discard otherwise you're not actually using your SSD properly right you're not doing trim alright so you need to pass discards down for trim to work otherwise you can have interesting side effects you know get in the lifetime you expect that your SSD that's the first thing right out we run Lux encryption on our laptops so doing sin on lvm on an encryption and you want to pass trim all the way down was interesting this is the thing I actually much to get fixed one is it links comfort you earlier this year turns out christopher smart who works in the art labs team at IBM i actually blogged about this as references his blog on stay saying i haven't got it working and his hand goes up at the back he's actually in my talk so we went to the back and it turned out didn't working for door 21 but it works in 23 so what you do is you configure in your crypt tab look star comma discard and then you rebuild the in it using drakart well next time you reboot trims pass through things behave nicely okay all about that bass i'm going to giving you all kinds of weird songs stuck in the back of your mind right so what does your base image look like think about your workloads if I'm divine helping a customer define that soe the standard operate environment I want small I want really small starting point for them to do run their business on and then the layer up through configuration management tools like puppet or ansible or satellite their various business applications they want to do but this is for my purposes as demo so it doesn't have to be uber uber small it just has to be enough for me to run a range of workloads now the workloads I'm predominately targeting now are running OpenStack running openshift running things like darker and COO benetti's and trying out things like our open s cap security framework so on an environment that can own a suit all of those things so I've 14 l 14 santosham I have 14 other flavors of Linux occasionally have one for fedora as well from playing with something quite bleeding edge and I need to update that base regularly because everything's forked off it if it's not patched and every time you create a snapshot you're patching them and your use of your desk just grows expecting exponentially and one big thing think about how you're going to build that base image again there will be dragons when I was setting up last week and running some tests because we happen to drop new builds of Mitaka into our do an OS PA came up I went and deleted one of my base images by accident Bron command line gone about 20 minutes later was back kick start all good so I highly recommend use kick start if you have tools like satellite your business use things like that bruh have a way of recreating your baseline and the other useful things I can give that kickstart to my customers there's nothing special about it there's nothing proprietary about it it's a useful way to start an environment so think about your use cases don't skimp give it a decent size I'm using thin so it doesn't matter if the base images 40 gig because really on disk I'm using two and then I have a few reusable snippets I'm going to share some of these with you and a couple of tips about the kickstart so if you're using an environment for something like well OSP or Rdio and using tools like pack stack is a great way to prototype or try something out quickly then it's good to reserve some space for cinder so I need a volume group for cinder to consume so actually define to volume groups one for my base OS my root filesystem and one for cinder volumes now any of you who do linux and the enterprise probably have standards around separating / home slapper at separating VAR making certain things reading Lee this is a crash and burn environment never last more than a day or two and I'm destroying it recreating it so don't want to over complicate it small ish minimal ish so this is my standard set of packages here for what I'm doing I don't need network manager it gets in the way when you're trying to do OpenStack i turn on virtualization because most of the time that's one predominately using so that's my kind of baseline of packages then I have a couple of simple snippets one is I always inject my ssh key into every image that I build so straightaway I can ssh in as root which is great for using tools like ansible or just going in and configuring an environment I turn on the young cash because I live in New Zealand our internet pipes aren't that great particularly if I'm building demos at home I want to hammer my internet connection so what I do is turn on the young cash then I don't rsync the packages off and reuse them I'll go through that in a minute the last thing is the gotcha for some reason kickstart doesn't like volume group names that have a dash in it pack stack expects cinder dash volumes to be the volume group it's looking for so I just fix that up at the end and so I bake that into my kick-start this is now completely repeatable anytime I want I can bro that image away the base image and recreate it now for those of you who are red hat customers you need to entitle the base you need to put a subscription on it so if you're doing this with rell subscription manager registered the system now at Red Hat I get access to ridiculous number of content repositories the first thing you do is disable everything because I really don't want to try and install stuff out of an essay p repose tree and I have a high-availability repository an hour of eggs you know just gets crazy so pretty much you need very few channels as standard on a red hat system and then patch it right patch the base and then consider it done for now for this week for this month until some point you go back and reap a chit power tip mentioned earlier I've turned on young cashing so I'll rsync everything off when I'm done and usually when I'm doing something you am I rsync everything back in again I've got a little content cash on my laptop for those of you want to go a bit further what I'm doing there's actually i'm using create repo to create a local yum repository then I'm just injecting a young configuration so I'm able to build the environment again really rapidly ninety percent of where I need ninety-five percent in fact yeah I had to pull a few things down this morning just come straight off my laptop and if you're in the commercial enterprise environment use tools like satellite or the upstream skirt LOL foreman need a lot more storage I don't have it hopefully my one terabyte SSD arrives in the post today before I have to go home then I'll have enough room alright so patch the rel environment I'll do my little arcing yum upgrade I'll move everything back good to go cases sent us one thing I've got here is at all I'm sinking are the specific content repositories that I want because actually have a lot of other demos I do so don't want to pull everything in whereas in the case of CentOS excuse me all I'm ever demoing is our do predominantly so it has everything I need under that tree thin base right we were trying to be on a thin environment we want the base be nice and thin and trim you know I like pizza I lived in Italy for a year I like thin pizza none of this Chicago Detroit you know pizzas should look thin crispy I've award five pizza oven at home I do good pizza if you're in New Zealand let me up we'll do pizza it's all good alright so first of all clean up your vm young clean all or just young clean packages clean all get rid of all the extra your metadata so we just freeing up some discs for our starting point and then you want to transition this how many of you have used FS trim anyone know if it's true and if you use K part x k part x is cool right k Patrick's will take an environment that's like a virtual disk allow you to mount it through loopback intelligently so that you can do things and play with the environment so k part x mount my centos environment to as a additional dev map of devices are there mount the first partition which is / boot into montval um-- i'll run FS trim on it free up a little bit of space all right amount it then mount so there's lvm inside that environment so that L dm's now been picked up that VG's been picked up so I'll mount the from the VG Center 7 the root partition I'll run FS trim unmount it make sure you disable the VG and then run k part x minus d otherwise you're leaving lingering dev map of devices you go and start your vm up and you may not get corruption because of your local environment doesn't end well now that manager and thin it can't manage existing thin volumes if you look using the vert manager GUI to set this up you won't see your thin volumes it doesn't understand them but if you're going to add the path in you go Oh add disk you can type the path in gray remember my mate he'll burn your ass he really will doesn't end well don't manually into the path the moment you do that it says I don't know about this it deletes the one that exists that you just now spend the last half hour hour whatever curating and creates a brand-new empty one that isn't thin so use version and edit the config insert your desk then you're good to go better yet do discard inside your vm Turtles all the way down right get this right you can discard inside the vm onto thin and then discard all the way down to your desk all right so there's a few little tips here one is make sure your machine type in your virtual machine definition is greater than two dot one it doesn't quite work I moved a couple of VM images over to this as a test before this session and they were originally two dot one when I bumped up the machine types too for everything started behaving on the for each of your hard drives you need to set discard equal a map and you need to set the drive type to scuzzy rather than normal verte IO block now one nice thing about this is that when you do an install of rel or centos is that when drackett creates in it rd actually inserts both drivers so you don't have to go and rebuild a disk image because you know like in the old days you're missing a scuzzy driver or something no you can get away with this so you need to change the disk type to scuzzy but you'll then get a scuzzy controller up here you need to set the scuzzy controller type to various cozy once you've done that behaves nicely thin all the way down don't need to do stuff externally I can just run FS trim inside my guests right the really easy way boot your vm LS block with these options will show this max greater than zero that means FS trims behaving so i can now trim inside my vm ok but i want to make sure you know about k part x as well really useful tool snapshots so now i've got thin volume I've got my baseline I need to do something with it so you're doing this it's great on SSDs I'm not seeing a major performance loss not overall what you compare what I'm actually getting out of an SSD and it means i can create off the same base multiple images multiple environments try things out also it means I can layer things up so I've got my baseline I've done some an install of Red Hat OpenStack aid or I might have installed our do and now I want to go and play with networking or want to try something out so I'll snapshot where I am if any of you have got a quiesce support working with qemu guest or might having a chat with you about that otherwise yet you've got a power of the vm off take a snapshot bring it back up again he'll the vm start up in a few seconds and i keep lots of notes which means it's easier to write these decks one thing about sin if you're using it on a fedora environment or a modern distro thin doesn't also activate this is actually a really good thing right I might be doing this in the office I've got my external laptop plugged into my dock and I've got to go to a meeting and I've certainly got 20 thin environments active and I go and unplug my laptop and walk away leaving the hard drive on my desk yeah that's one of the Dragons right you may need to go and rebuild a few things so really easy lv change main- a why activate minus k forces it to activate where it's been disabled but it will only be active for that use case it won't stay on next time you reboot you'll need to reactivate it it is a lifesaver so don't consider it a bad thing it's a good thing so good let's build a cloud whoo so I'll start my vm now this is out of some of the standard pack stack install notes if you happen to have left network manager there get rid of it straight away switchback traditional networking if this is a OpenStack aid you now need to enable the extras repository as well as the standard OpenStack 8 repositories if you're doing this on centos again make sure you disable network manager then I'll go and pulling my content cash I'll sync everything in from my local hard drive or as I mentioned earlier i'll use my local yum repository that i've created with create rep oh alright this speeds things up dramatically so right now openstack platform I latest release so I love doing these things it's really great went on the Thursday before I flat on Friday we do an entirely new product release test that wasn't that difficult I'll explain why in a minute so pack stat is a real simple way to play with OpenStack it's great for users and it's great for operators to just stand up a micro all in one environment or something just a few pieces of 10 there's no h8 the controller layer it's no use for complicated architectures you want to do this in anger look at red hat director look at the tooling that we've got now using things like triple are using things like ironic to do this properly to vine a proper architecture but to dip your toe in the water packs that great so minus minus cinder dash volumes create equal and means it will actually look for the lvm backing store and then when I'm done I pull all the changes back so that next time I've got everything that's come down I'll go a modern repo reboot all good to go rdio very very similar we got a point at the latest rdio repository release effectively the same command line and again I'll sync everything back so that I'm not going online next time I'm pulling down a heart a ton of content I like to keep lots of notes use something to refer back to I prefer trying to keep digital notes where possible my tool of choice is a tool called track I have one for stuff I do for a home for private stuff I've 14 notes for all of the test beds and demos and things I do is part my role at Red Hat so I can reference all the different versions of OpenStack of trying to deploy if I am playing with the beater release I can go and easily keep notes about my book Zellers everything else I've gotta open also make sure you learn on modern distribution particularly Fedora CentOS and rel firewall command all the support for firewall d it's much cleaner and simpler way of interacting with iptables I've had cases playing with some of the beaters we're not all of the firewall rules have been automatically set up by pack stack so I can actually get into the environment once it had started up so if I hung just go so what I've got here this is what my hard drives look like the Fedora underscore volume group is all my local hard drive the VR HT volume group is on the external you can see just how many different images and things I've got on this you look at the bottom my sin pull on the external I'm running at fifty-eight percent use and the thin pool on my internal i'm currently running at thirty-two percent use all right get maximum use up my environment lots of different demos trying things out or bet off the same base lines now originally I was going to show you something else built the internet connection here hasn't been as reliable for me so I had to build some stuff back at the hotel but my environments of course are in New Zealand date but I actually rebuilt the centos environment a few hours ago when I was in the hotel so that's a sin or seven rdio environment and that's a rel seven rel 0 SP eight so Red Hat OpenStack aid environment there was just built a few hours ago so they're active and running right now in fact if I do just remember the I need that a 148 and the other one was 182 thanks they arrive so there's reddit openstack 8 latest release and this one's just coming up with the RDO build which is a more vanilla OpenStack environment so they're fully enabled up and running I can go and start some work loads up on them so they were just built just before I came in here I did will consider having them build while I'm on stage but building our do and ospa simultaneously while presenting not really good thing to do to my laptop ok so what's the big difference so OpenStack Red Hat OpenStack platform our commercial enterprise ready harden tested this is what we do with all the vendors they're here this week audio is a great way for the community to interact with that process it's effectively a fedora to our rel that's the best way to think about it so the process is upstream audio builds almost straight away in fact the audio release was out within a few hours this time almost of upstream GA and then we take time to get OpenStack platform ready and this is really critical because we've got things like ETS etsy defining things like open nfe we've got open day like we've got a lot of innovation going on in there and this is a great way to feed things down into the process so where am I I can document things I've can blow things away I patch my environments regularly I can re image easily I don't use a lot of internet traffic my life is easy my life is good but what I should be doing is automating this seems ridiculous you know what basically walk you through is a desk procedure to achieve an end point and we bought this thing recently anyone heard of ansible it's really nice of automation so if you remember anything just go there that's my playbook for doing this or for doing the core part of this so ansible playbooks are really quite nice and human readable so a few things in this rap ojos defines where my local yum repository is so that's easy to change now this isn't great ansible bits of starring points just way to look at this I've got it configured so I can do this either on centos orrell and either way it will then choose our do or rel OS Red Hat OpenStack platform the second bit here is I actually define local rep 0 and local OpenStack repo and again they'll inject to yum config files so that I make sure I pick up my local content cash and then at the end I do the pack stacked command it's all good to go now I was going to show you the output of this from running in a terminal but I lost power coming in here so that I've got to show you an archive of god of running it a few weeks ago so for a giggle i created the playbook i created a host file that specifies both my rel 7 environment and my centos environment around the same and small playbook on both environments simultaneously on my laptop yeah I ran out of high ops at some point but it went through check the environments install the repositories ran pack stack got to the end and confirm that both environments were up and running at that point I could point a web browser like I've just done at both environments and they were usable right so if you do anything go and pull my ansible playbook if you've got feedback tips and tricks really happy now we're running along on time so we're going to skip a couple of things I'll come back so some people said well why you might use lvm when you just use QQ cow support thinned or snapshots there's all these really neat things i really like lvm for this kind of use case I understand what it's doing on the disk I tend to use q cow for using things like relat oh mac which is our nice little micro environment for playing with cuban eddies and darker it's kind of got everything already in there do any of you use cloud in it on a regular basis so there's a number of you who haven't right there's a really nice simple guide upon the Red Hat portal on how to do this it's you know Nadi beginners 101 but it's enough to get yourself started you need to metafiles want to inject your hostname one to inject things like your ssh keys and other details say these this is all going to be available then you create an iso off that metadata and then you can use you then attach that to a vm so what i'm doing here is i'm taking the standard atomic instance from Red Hat you can get a sentosa Tommy can get a fedora atomic a great ways to play with with darker and Kluber Nettie's so I'm going to create a snapshot off that baseline image using qemu and then using vert in store i'm going to spin up a new vm with some round v cpus point it at the iso image and that will now start it up and inject my credentials at that point i can ssh into that instance it's all good to go all right one neat thing about this is i can reinitialize that base image I don't need to reinitialize that CD ROM my virtual environment still exists and liver so I can blow that image away recreate it and go back to a baseline any point in time I can also snap shot that snap so if I'm partway through a lab or trying something out I can stop everything do a snapshot and then carry on but please don't snapshot it while it's running it will burn you at both ends it will destroy your base image and the image you're creating alright so don't snap shot a running snap unless you've got the ability to quiesce the image so if you want to get involved and look at containers this is a great entry point a lot of things are taken care of for you and these are some really good examples really good walkthroughs these are on our public website they're publicly published articles so quick way of standing up a couple of docker images and then pulling them together with Cuba Nessie's to create an environment right you can do this on top of rel try out with the Tommy so where are we you know I said earlier about you know things that bug me that really should be bugging me enough to make a difference one thing that's bugging me in the data center is this how many of you have to deal with you if I on a regular basis now if you're not any of your dealing with still hardware in the data center you're gonna have to learn this you're going to have to understand this all your new hardware's UEFI now one of the things around this is I'm trying to pretend I'm hardware so to do that I need to basically make my virtual environment do efi what I'm doing right now is effectively old style but bio space boot you can do it but it's not very well integrated right now there's some licensing issues around shipping or the UEFI components of standard as part of your distro so there's a couple of guides out there but when I do it when I want to effectively do is redo everything which is easy because it's just kick start based I can recreate everything but I want to do so that everything secure boot that it feels like a data center and getting closer and closer to what my customers are really doing so to help me along with that that USB key is you if I ready now there's a few ways of doing this but a you need to create an iso or USB key you can install from that's UEFI ready so you can use live iso to disk and specify efi most of the modern install I Sosa AFI ready so you just dump them on a USB key and boost a piece of hardware make sure you force and I mean force I mean brute force the hardware to boot in efi only I've seen hardware in the data center that will do everything it can to go back to MBR BIOS tile installation methods and something you find your isn't he if I'd friendly you get no secure boot which comes back to my world of crazy things i love doing because it's just me anyway so I what I wanted was a full rel seven install on here a lot not a live environment with an overlay this is a real running environment it thinks it's a hard drive but I want it to boot both on a bios based old star piece of hardware and on a UEFI system so a couple of pointers the rel seven install you need to leave a little bit of space make sure you install it in you fi mode otherwise you won't get the efi partitions you won't get the other things you need to support you fi environments then you need to create an additional partition with part head that's tagged as bios grub because that's where grub will actually install all the bits it needs to boot on a traditional bias environment then install grub too but you haven't actually configured it properly then I need to basically mess around use a live environment to boot into legacy and rescue mode chamada in and then configure grub too once that's done it will boot either way and it will survive kernel updates and everything so it smart enough to update grub both ways the one inside the EFI environment and the grub 2 environment so i can update this no matter which way I boo so next what am I going to do next what's my next pain point so I want to rework my kick starts to mention earlier i want to make better use of ansible in this the ansible I've got up there some of its quite simplistic there's a few things some of the ansible modules are missing right now I have a feeling when I have to do a patch for upstream to just give it a few extra features i'm thinking maybe because i use this for a lot of different use cases maybe I should turn encryption on that might be a good thing I almost have a fully ansible driven coo benetti's atomic darker demo to go just needs a few tweaks on the road and I had a chance one thing I really want to play with though is this because arms coming to the data center so i want to be able to do everything I've just talked you through but I want to do an arm I've been using arms since the mid-90s and you're going to see a lot more about this and I've been talking to the IBM team I like power as well as I mentioned earlier I first round of linux on on powerpc so powers of another important architecture there's more to life than x86 so that's my story I hope you've all learned something I hope someone in the room has a tip or trick trick for me that something i haven't done before quite any questions stunned silence the slides will be available I hope it was useful and thank you all for coming 