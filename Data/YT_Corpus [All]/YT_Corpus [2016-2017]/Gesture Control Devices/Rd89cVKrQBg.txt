 so what is going on everybody welcome to your 16th Android application development tutorial my name is Miho and in this tutorial I'm gonna show you something about on touch listener now in the last tutorial we took a look at what on click listener was but on click kind of fires when you lift your finger from the particular element which you were targeting so let's say you created an on click listener for this button right there so on an actual device what will happen is that when you just tap on this button and lift your finger up then that particular even would fire well that might be something you want or might not be well in most cases you would like to have some more functionality associated with it like you want to know when the user touched the screen and you know how the users moving his or her finger on the screen so as accordingly you could place the elements or you know perform certain actions you want to so for that you need to make use of something known as an on touch listener so this on touch listener just like on create we could create that on a button but let's create that on relativelayout right so we could just get the touch on the layout in itself instead of just on a view so that we could work with these buttons later on as well so obviously I would need to first of all give it an ID Android ID here we go let's just say this is my layout let me just copy this so that it's easy to access now what I'm gonna say right here is private my layout or basically this should be private relatively out my layout let's just set it to null for now and as you can see it automatically imported that for me now I want to create my layout equals fine view by ID dot ID dot my layout and I need to typecast it explicitly to a relative layout and find me by D so now we have my layout inside my layout variable only so that is kind of similar names so I need to set on touch listener right so I need to set an on - listener now it's new on - listener and there we go so IDE is doing some good work for us and it just auto-completed all that stuff so I'm just gonna explain that what is happening here so what is happening is that set on touched listener just like said on click listener was would accept an constructor which would then call this function so on touch there are a couple of differences the first one is that one click didn't have a return type but it does it has a boolean return type and I'll just show you why so on touch has a return type and it accepts another argument which is motion even and trust me you're gonna love this if you like to play around with elements on screen because motion event is something which would no give you a lot of power and you know this is this kind of event this argument would be used a lot in like if you are creating interactive applications or like even even games you want to place an element where the user is touching the finger on the screen so this is kinda that kind of stuff so what I want to do right now is I want to say that toast dot make text get application context and I was touched and then I want to say that this is toes God and shot so obviously you know that it would just show me that I was touched but I to sell it to return true first now why the heck do we need return tie for on touch well this happens something like this so you pressed you you know you just started an on touch on the layout right and let's say you have on touch for this button as well and for layout as well so obviously if you just imagine a little bit you would immediately recognize that this button is all worth this layout so just try to think in three dimensions so this button is placed over this screen film which is the layout so that is why this button kind of appears to you so if you have a non touch even for that particular button as well you don't want to mix these events so what happens is that when you return true from an on touch listener then it tells unroyal pretty much that you have handled the even and you don't want other propagation to occur like you don't want Android to listen for or supply any sort of data to other events other similar even spread so what happens is that that's just like that so what I was telling you is that on touch would kind off fire for your layout and then if you return false from this then it won't fire actually because it would fire but Android will not supply the future data for to this even and what I'm saying would be clear to you in a minute so let's just first of all let me show you how this application looks like right so it would be kinda simple just like on click but it would rapidly fire this even again and again and again and again unless you just you know just return false from that particular event or you know you lift your finger up so that just destroys this on touch listener event so I just change this device to Galaxy s5 in case you were wondering just in case so let it build the application first for us looks like we are done so here we go and if I touch on this layout you'd see that this immediately popped up now the reason is that I am not touching the screen but the toasts are still appearing is because those kind of catch up in the memory because they cannot just pop up all at once so this would just appear the number of times this even was fired and pretty much it would be I don't know if you just slide your finger it fires a lot of times so you know you don't need to worry about memory and all that stuff and it would take care of that so I need to show you a little bit better application than this so what I'm gonna do is let's pick this button right so it has an ID of idea of let's just say lucky ID because this is a lucky button because we picked it from the tree so you can say that let's just create this button reference private button lucky ID is now right make sure that lucky ID is a button and find view by ID card ID not lucky ID right and what I'm gonna do next is something in frosting so I'm gonna say that first of all let me create two variables as well float X and float Y and you will just understand in a moment why I did that you can just and then private as well if you want to so now what I'm gonna do is I'm gonna say x equals event dot get X right and y equals even dot and get Y all right now what I want to have actually what I have in these two variables is that I have the X and my coordinates of where your finger is so if you have placed your finger right here so I have the X and the y coordinates of your finger right so now I have pretty much I know my application my code knows that there are you touching for the moment and using these values you could actually you know determine even if you are sliding up your finger in a particular time interval or sliding down sliding right sliding diagonals and you know whatever you want to know about that event so what I'm gonna say is I'm gonna say lucky ID dot said X X lucky ID but said Y as Y now what these evens are they are pretty simple to understand what the set X does is that it would set the coordinates of this button right here which was our lucky ID button to the x-coordinate which i'm passing right here which in our case would be the coordinate of our finger and the reason i named it as a float variable instead of int it's obviously clear that you could have coordinates in decimals as well so this application would kind of work but what I want to show you about is that there's something known as motion event actions so I'm gonna say if event don't get action now what it's gonna do is it's gonna return me what type of action is being performed by the finger of the user right so I'm gonna say this is motion event dot and now you can see that all of these actions right here you have right so for now I'm just gonna show you about action down action up and this button press button release then we have let me just see where's it action move right so what is gonna happen is that this even would rapidly fire as long as you are moving your finger so what happens is that sometimes you don't need to fire an event when the finger just lands on the screen or you don't need to fire an event when the finger is moving on the screen you just need to fire it on the landing of the finger and just when you are taking off finger from the screen so for that particular event what you'll make use of is motion event dot action down an action down would you know I know that a lot of guys confused this action down with sliding down or sliding up but actually what action down means is that you just you know made your finger touch the screen and action that obviously means the opposite so this action moves means that you are actually moving your finger on the screen so as long as you are moving the finger on the screen set this coordinates of the button as follows now you might have guessed by now what this code would do this code would actually pretty much make the button the lucky ID button follow your finger on the screen so make sure to return true right here and if you don't do that what would happen is that Android would not pass any future information about action move to your particular even so if you say write return false from here then and it would say that okay if you are not interested in handling the even for finger moving on your relative layout then don't worry I got other resources to manage so Android would probably not provide intro you know it would not send the event to eat your particular code block so right now I'm gonna say true and I'm gonna show you what false does later on so again let's just start our application and let's see how it looks like and here we go so now when I will click on the screen or technically I wouldn't touch this Android emulator then see what happens okay so our lucky button was the first one I I thought that this one was the lucky balance well anyways so our lucky button is actually following my cursor right if you see there so I'm just moving my cursor and it is a bit slow on the video because of my fps as well as this is an emulator so it would be technically slower than a real device so you know you get the idea that particularly this is following my mouse cursor because of the Android this even right there motion even action moves and you see that it stays there when I lift my touch because as soon as I lift my cursor this event is over and then the score does not get it's called and it kind of retains its X&Y coordinates which were said the last time so now check this out what happens if I do something like int I equals zero and I would say that if plus plus of I is greater than 100 or let me just change it to like 100 or 50 you know any number would work because I'm just gonna say show you something really cool so I have saved this yes so let's just stop our application and let's see what happens now and why is it red okay so wait a minute here we go here we go again so let's just play our application again and it's kind of run you know this button I just see it on you do very often so I'm confused with play but anyways so now our application is running now pay close attention what is gonna happen so I would start dragging on the screen and you see pretty much everything works nicely as long as I'm trying this I am you know just kind of drawing circles on the screen now you know that this on dirt I told you that it rapidly fires again and again and again and again as long as a touch event is going on so by the time I released this mouse click or technically my finger from this emulator what would happen is that this I plus plus would actually make I the value of I very large larger than zero which we set right here on this tile so I is technically very large now and see I'm releasing this button right so it has frozen right here now if I start again my drag doesn't work now now what has happened well what happened is that right here I have said that on touch I want this constructor to fire and this constructor actually fires this function again and again so if I declare this I here then this I would be initialized again and again every time that touch but since my eye is outside this function which is called again and again so that is why when I update I the first time it fires is that it returns true so it says that you know just keep handling that even so on the first go it says 200 odd I got this I'm gonna handle this event trust on me and all that you know stuff which would make Android you know Android would obey your instructions for this so what happens when you release the button well when you release the button and red suddenly destroys this even right but I value of I is still very large than 50 right so it is by the time I have released that it would be in thousands or you know tens of thousands so what happened is that on the next event it run like this but it's saw this code right here so it send me that if I plus plus or plus plus rather than 50 don't fault now once this was encountered an Android know knew that you know I'm just not gonna send any further calls for this even the action moved to your event because you just said that you had not gonna handle this it's not your job so and that is how pretty much and what we decide whether to send that particular event to your on touch function or some other ontouch function so right here if you return true then your even would be fired and none of the other even would be fired which would have you know kinda the same functionality implemented but if you return false then you're even won't be fired you are out of the league and pretty much you know you just said to Android dad I'm not gonna handle this event and yeah so that's pretty much it that's this code does so you could just pretty much do amazing stuff with this code and with motion even you get a lot of other tons of other options and we're gonna make use of motion event in future video tutorials but for the studio tutorials that's it I guess and pretty much and if you liked this tutorial then don't forget to subscribe thank you for watching I'll see you then in the next one 