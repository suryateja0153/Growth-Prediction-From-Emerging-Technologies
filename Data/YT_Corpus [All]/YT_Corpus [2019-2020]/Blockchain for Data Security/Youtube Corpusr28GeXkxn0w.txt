 Hey, friends. In a time that is riddled with security breaches, privacy violations, and data misuse, people want more control of their digital information and their online identities. Danny Strockis is here to talk about how blockchain technology might offer a solution, using a new paradigm called decentralized identity. I'm going to learn all about it today on Azure Friday. [MUSIC]  Hey, friends. I'm Scott Hanselman, and it's Azure Friday. How are you, sir?  I'm great. Thanks for having me.  So I've been doing all my passwords in plain text. That's cool, right?  I'll dig it. Not the identity card.  So it's a complicated world, and identity space is hard to cover in Azure Friday much less in an entire 40-hour workshop, on how to do identity and modern identity changes. The hotness was OpenID, and then it's OAuth, and then tomorrow it's something else. Are we searching for solutions? Do we understand the problem?  I think we're more just exploring possibilities, and looking at new technologies that become available, and how we can apply them to age old problems over and over again.  What is ultimately the age old problem?  Proving your identity on the Internet in a secure way that helps you keep your credentials and your information private. I think that's the summary.  Right. The idea is that we need to be secure, but we also want to be convenient.  That's the age old trade off.  I'm frustrated that right now we're in the age I think of biometrics, whereas we think that, well it is inconvenient to keep looking at your phone or touching your phone or touching it, but at least you always have your face and your fingers.  Yeah, I think people go two ways on that discussion.  Right. But for me as I log into my work machine, I'm thinking to myself, it's still me, I'm still here, it's the same machine, I haven't moved house, my IP address. So many things haven't changed and you threaten me dozens of times a day, but it might not be me.  It seems counter-intuitive or unnatural, doesn't it?  But you're imagining a world that maybe didn't even have passwords.  Exactly. So today if you're building an application, any user-facing application, you'll have to authenticate users at some point, and the status call of how you do authentication is with a username and password, or maybe with a social identity like Facebook or Google. There's Azure services out there that can help you add support for those two things into your application. You can use Azure AD B2C, you can use Azure app services right there, there's some built-in functionality there. But no matter how you implement your authentication, I think those two forms of credentials have some drawbacks. The drawbacks with passwords are pretty well documented at this point. They are hard to remember, you have way too many of them, they become a pretty popular attack for security target for attackers. The problems with social identities are maybe a little less clear. There's a lot of great benefits to using a social identity to log into an application. It's convenient. You only have to remember one password. You're generally logged in with your Google or your Facebook or maybe your Microsoft account on your device already. So you get the SSO, you only have to consent to get into an application. But more and more I feel like we're hitting the limit of where people are comfortable using their social identities to login. Personally, at least, I am not too excited about using a social account to login to my bank account for instance. I think people are also interested in exploring new ways of logging in because they're not really comfortable with some of maybe the behavior tracking, that comes along with using one of their social identities to log into things.  Yeah.  So we are here looking at new technologies, trying to explore the space. We think there might be a way to achieve authentication and login, and an easy convenient way like you say, like social IDs provide, but with some of the privacy guarantees and benefits that you might get with something like a password because when I use a password to login, I am establishing a relationship with that website directly. There's no like middleman or intermediary between me and that website to login that might look at my behavior or anything like that. So we think by maybe introducing a little bit decentralization to the picture, we might be able to get the best of both worlds. I'm not going to show a demo of authentication, but I'd like to explain to you how it works if that's okay.  Please.  So bear with me it's a quick diagram. We're going to start this picture. I'm a person. I have a goal of signing into, I have a banking website depicted here. I have what's called a identity Wallet app, which is a new application that I'm going to install on one of my devices. Here I've used a mobile device as an example. The main purpose of this identity wallet app is to store a private key for me. This private key is going to be my credential that I use to login everywhere. Pretty standard so far, and we're not using passwords. Next something is something kind of interesting which is, I'm going to take the public key associated with that private key, and I'm going to publish it onto a distributed ledger or blockchain.  Okay.  Now, to be clear. We're not proposing or building a new public blockchain. We're not introducing a new coin and doing nothing like that. All right. We're using existing blockchains that are out there like Bitcoin and Etherium. There's one on the screen here called Sovrin which is an identity-specific blockchain that's been built. We are building on top of those, and encoding a public key in a transaction that goes onto the blockchain.  Okay. So you need a database, you need some state, and you want to do it in a way that isn't a social company.  Precisely.  But I don't want to have an interaction with a website where I give them my text, my password, and they put it in plain text. So you're introducing an intermediary except that intermediary is a distributed albeit trusted.  Exactly. That's a great summary. When I give my public key to that peer-to-peer network, what I'm going to get in response is what we call a DID or decentralized identity or decentralized identifier, I should say. It's a unique ID that represents me uniquely in the world. It's generated by the ledger that I go contacts. I can use it, and nobody's going to be able to impersonate that identifier except for the holder of the private key associated with the identifier.  Is it a proxy for the private key?  It is derived from the public key.  It's derived from the public key.  Yes. Usually that's the case, and that's how we guarantee uniqueness of it. But I'll show you what I'm about to do with that identifier.  Great.  So I show up to a website like a Contoso banking website, and I'm going to assert to that website that I am DID, decentralized identifier 1-2-3-4-5 in this case.  Okay.  I'm also going to sign that message that I sent to the banking site with my private key in my wallet app.  Right.  The banking site is then able to go and visit the public ledger, look through all the transactions in the public ledger, find the transaction corresponding to DID 1-2-3-4-5, and locate the public key or keys that are associated with that particular identity. They can use the public key to then verify the signature, and authenticate me, and establish a session with me and, viola, I've signed into a website, not using a password, and not using any social intermediary to sign in.  So in the past, I might have my PGP key which is in a centralized directory, and I would then sign something, a message, send it to you. You would then go and look me up using my e-mail address rather than my DID-  Precisely.  -and do the same thing except that centralized thing is centralized, and can be compromised.  It's a perfect analogy. The key differentiators here about using decentralized ledgers for this public key infrastructure layer are one. When I put my public key on the ledger, the ledger is immutable, so nobody is ever going to be able to take that away from me. It's there for good. Two, if I want to make any modifications to that ledger, I have to sign a transaction with my private key in order to make modifications. So this thing is completely under my control. Nobody's going to be able to modify it except for me, and three like you say it's decentralized and public. So anybody can come read my public keys and reference them around the world.  Okay. Then I would even add 3A or four, there's an app involved which means PGP right now is hard. It's hard. It's old. It's crushed and requires a non-trivial amount of work, with a non-trivial amount of complicated tooling. But in a world of apps and app stores and mobile devices that are ever presence.  Sure.  You've simplified a lot of this.  If it's not usable, then nobody's is going to be using it.  So I lose my phone. Now what.  Yeah. So that's into a whole subtopic that you and I probably spent a lot of time on called key recover. There's going to be various different mechanisms. There's at least two or three out there being proposed. We're working with a open source foundation called the Decentralized Identity Foundation, and I'll provide a link to that later. There's various working groups in that foundation, and one of the working groups is specifically around the topic of key recovery. The option that people are most familiar with today is what's used in cryptocurrencies, which is you literally take your private key and you are able to print out the 12 random words, and write them down on a piece of paper and store them in a bank vault. That's how people are able to recover the keys when they lose their phone. They get the 12 words and they type them into an app. Not particularly usable, so we're exploring more usable option.  Yeah. I'm totally familiar with that using some of the different password systems how you do that. I do, in fact, have that in my bank vault, in a safety deposit box.  Yeah. Exactly.  But again, as you point out adds another point of lack of usability.  It does. It does. So this is signing into banking website. Right?  Right.  Pretty cool. But this is really only the beginning or the basics of decentralized identity. There's a lot more you can do with it, and now that I have this identity that represents me on the Internet. By the way there's in this application in the tools that go along with your decentralized identity. There's a bunch of techniques that help preserve your privacy and make sure you can't be correlated as you use your DID from website to website.  Right.  But now that I have this decentralized identity, I can do more with it than just log into things, and identity that's just a credential and a unique identifier is a little bit boring. So what I might be able to do now, you can imagine is, maybe associate some rich information with my identity, like maybe I could put my contact information or my preferences like my shoe size. Then when I go shopping online, I can login with my decentralized identity and the website can look up my shoe size. That's a simple example. But what's even cooler is that now other people, other businesses, and other agencies can now make assertions are claims about me, and I can use those claims to go and prove things about myself on the Internet or in the real world. This can all be based on the same DID system. So to help explain more, I shall give you a quick demo.  Let's do it.  So let's imagine my name is Alice and I'm a student at a university. I'm going to visit my same university portal that I always use it in my regular student life, and then go to the student dashboard. This is where I do most of my students things, and I'll login quickly with the username and password that I've always used for my student activities. I login and I see that the university now offers me a new digital student card in the way of a QR code. Here on my device which I'm hearing, I've installed that same identity wall there which we talked about. So I'm able to use the app here to scan the QR code. What I'm going to get in response is an offer from Contoso University to accept this verified student ID card. The student ID card is going to be signed by the DID of Contoso University in this case. So nobody else is going to be able to generate sign cards like this and issue them to me. I'm going to go ahead and allow this, because I'm a student of Contoso University, and I'll approve it with a bio-metric. So I have this verified signed cards sitting in my identity wall now along with my private key. Sort of like another credential, but it's specific to me as a student. Now I can roll over to someplace like a bookstore. This bookstore is offering me a new promotion that says students receive a 20 percent discount. So they present me another QR code and I'm able to scan again. Importantly, I will be prompted with a request to view that same card that I just got issued from the university. I can go ahead and approve it and do a bio-metric. My information will be verified on the bookstore site. The bookstore can trust that this card that they've just seen is not fraudulent because it's signed by the university, and also that it was issued to me because I was able to prove ownership of the associated DID with my private key on my device.  Was your device connected in that moment when you hit share. Was going up to the internet and back around?  Correct.  Okay.  Yes. It was signing a presentation of that card with my DID and sending it over the internet over some protocol the details of which are not important for this. Right. But the circle was completed that moment?  Yes, it was. So that's pretty cool. This is something that goes beyond just authentication into claims exchange, and it's something that personally I don't think we would have ever been able to accomplish with just social ideas or username and password. It's hard to imagine somebody like Contoso University being comfortable issuing digital diplomas against my social ID. But maybe they'd be comfortable doing it against an ID that's the centralizing that I as a student only control. So you can imagine this pattern being used for a lot more than just student ideas. You can pretty much use it for anything that you would approve about yourself, like whether you're a resident of a state or what have you. Use your imagination. So I'm pretty excited about this. I think it can make a difference for people. I think this is one of the coolest things going on at Microsoft right now personally, because it combines a cool new technology like Blockchains with a meaningful mission of trying to give people ownership and control over their digital identities, and at the same time maybe making the Internet a slightly more trustworthy place through the exchange of verifiable information like this. That's what I get excited about. So this is all being done open-source in a standards-based way, as is the par for the course and the block chain community. So we have a cool website, so you can visit if you'd like to learn more. There's a lot more that I haven't covered here. Aka.ms/didForDevs is a good place to start, if you want to learn about what Microsoft is doing in play around with our APIs. Try coding something up. There's lots of tutorials there, and then identity foundation is the website for the decentralized identity foundation where most of the project is run.  Fantastic. All right. I've got a lot to think about and hopefully you do too. We're thinking about a new way to think about user authentication de-centralized identities today on Azure Friday. [MUSIC] 