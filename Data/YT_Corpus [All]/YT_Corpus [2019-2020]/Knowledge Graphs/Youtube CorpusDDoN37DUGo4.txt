 good morning good afternoon good evening everyone and thank you so much for joining us today I have with me nav Mathur who is our senior director for Global Solutions here at neo4j he has over 20 years of experience in IT solutions and has has been with neo for almost three years now so welcome down thanks so much thanks good today we're talking about a really interesting topic that I think we've seen come up quite a bit more recently and so I wanted to sit down with nav and kind of dive deep into knowledge graphs specifically at financial institutions because it's something that we really have seen a lot of people coming to us to ask about a lot of financial institutions have started to reach out to us about it so now I think let's let's just level set first kind of just dive into what exactly is a knowledge graph and how is it different that I think a knowledge base and that kind of thing yeah you know like you said I think a lot of people are talking about knowledge graphs there's a lot of conferences going on around this topic so yeah I think first things first how do you differentiate knowledge graph from what we traditionally all have been used to you know the term knowledge base and so typically when you put any data any knowledge into a flat structure like a traditional database you know you you essentially when you search for that same data you get back exactly what you put in Nate versus when you add a piece of data or knowledge into a graph this data now gets connected to other pieces of data contextually related and so when you search for the same data you now get back additional pieces of information with it so more context more knowledge and and the more data you put into a graph and that is connected together the value of this entire you know data set that you have exponentially increases yeah and and so you know you you get a lot of data that you didn't even think was related when you start started thinking about putting this knowledge graph that's really interesting yeah so what what then makes a good good knowledge graph what are some components yeah so what I've done is I've kind of come up with these four pillars or key principles how you want to look at it of what a knowledge graph really is because I think there's a lot of misconception around what exactly is a knowledge graph is it is it the same thing as MDM is it the same thing as as a data warehouse or a data leak right but you know I think one of the first things obviously is having the data be contextually related and and being put in the form of a connected data structure like a graph right so that's obviously the key key idea but behind that is automation right so you don't want to be manually curating this data every time you get new data to put into this graph you want that to be automated now that automation can happen through kind of a traditional data ingestion pipeline that is you know constantly looking at the data coming in and then putting it into the graph or you can have more machine learning techniques to do that like natural language processing and and use that to essentially tag the data and then you know get the features out of the data and then put it into the graph and connect it together that way the third pillar really is explained ability and by that I mean when you put data into a graph you know you are able to go back and you ask questions of that data and Traverse through this data set to different points in the graph - then answer that question so you can go back and explain how exactly this question was answered over the key facts that you you traverse - that helped you answer that question unlike a more machine learning or deep learning techniques where there's some kind of black magic happening in the algorithm that is providing the the prediction or the response to your question but unlike that in a graph you can always explain how you got to that right and lastly obviously having you know a lot of different kinds of data in your graphics both structured unstructured data data from different silos in your organization bringing it together I think these to me are the four pillars of you know what a knowledge graph should be yeah interesting and so when I typically think of knowledge graph I kind of think of it as it relates to search sort of as kind of like the foundation for a good kind of search platform but I think with those four pillars you're kind of hinting at some really interesting use cases that you could build on from that so so how are fin serve companies using knowledge graphs what are they are they building some cool things with that what's yeah I'm really glad you caught onto that because yeah the first thing that comes to mind is obviously using a search function to search for the right content maybe you know if it's a if it's a people or person graph then you're looking at okay you know how are these two people connected together maybe they're the same address or they have a same phone number or something like that or you know if I'm traversing from you know a person a to a person B through other people you know what is the relationship amongst those people or something like that and those would be like typical search functions and very basic functionality from knowledge graphs but then to make real use of this knowledge graph and to really get the power of prediction or inference that that you're capable of an hour or impact analysis is another really good good use case from this so so typically what I recommend is putting some sort of recommendation framework on top of this knowledge graph to really extract those things out so for example we have eat our uni banku you know in the financial services space that is using us in a similar fashion to do characteristic analysis to look at you know the credit worthiness nor of just that individual applicant but also just looking at that applicant in the context of other applicants in that space right so using the power of graph to look at adjacent data adjacent companies what can maybe you know if they have a relationship with the poorly performing company that can kind of lower things like that and so those kind of impact analysis use case get through something like this that's really interesting so I think I kind of want to dive into one of those use cases in particular you mentioned a recommendation framework I know we've got a kind of a recommendation solution here at neo wondering if we dive into a demo of that and see a little bit more of how we can get started yeah sure I'd love to do a demo but before that let me just kind of set that up a little bit so what we have developed is a is a you know financial services you know recommendation framework and what that does is this is an example where we've put together a demonstration of portfolio news recommendations so if you look at the lives of analysts financial analysts they are tracking a bunch of companies they're inundated even all of us are inundated with news but imagine for them you know looking at the right news is money and and so they are super interested to understand or get recommendations on exactly the new stories they should read up on that impacts them on their daily life impacts the trains that they do the analysis of the companies that they they have to churn out on a day-to-day basis so this portfolio news recommendation service essentially trawls through the daily news on a real-time basis and puts together dashboard of the new stories that they absolutely need to follow depending on the companies that are in their portfolio and also what topics of interest that they have and and we'll look at that demonstration here here shortly so let's let's go right into it okay okay so let's look at the dashboard for the portfolio news recommendations application let's login with the analyst that's following tech companies his name is Harlan and right as we login to the application the system automatically calculates all the recommended articles for this person and also the organization's that they need to take a look at that's top of mind that should be top of mind for them this day and this is based on the company's tech companies that Harlan follows and the news articles related to those companies but also news articles related to other companies that are related to those companies and in addition to that the topics of interest to Harlan so Harlan can set the topic weights of the different topics of interest right here and and submit that and so you can get the recommendations on both articles and organizations right here you can also look at the article here and read through it if you like and you can also get an explanation of the score of the article which I'll show you in a moment but you can also see how the article relates to different organizations that have shown up in the recommended organizations list so for paying for example is related to microsoft if you look at this article on lawmakers hitting the like button after Facebook CEO visits Capitol Hill you see that it's not only just related to Facebook but also to Amazon Apple and alphabet and so if we want to get an explanation of of why this score is the top here we can look at this in more detail and see a graph widget that explains you know how all of this is related to the articles so we have the new story here and it's related to acquisitions and mergers and acquisitions which is of interest to Harland is also related to legal issues and company investigation is a subtopic there so behind the scenes we are getting this data this newest data from repetitive and we also have a graph of the companies and and their relationships to one another and I will show you that in the data model in just a second but here let's also look at it from the organization's perspective and so if we look at air B&B we see that there is a article about that in the Financial Times or if you look at Amazon there multiple articles about Amazon here that shows up in the recommended list as well and so if we click on the explain ability of the recommended organization again we get an a pretty detailed graph of all the different articles and the topics and this is your analyst Harland and you know it's it's it's a little messy here but we can obviously make a much cleaner application this is just for demonstration purposes but you get the idea it it can show you basically all the different articles that are related to to Amazon and obviously Amazon has a lot of stories popping up every day given that it's a highly capitalized new economy company and so you you get you get the pretty complex graph here but I think that's the real power of of graphs and being able to give you that explained ability real time so all of this application is actually running on top of neo4j s recommendation framework the recommendation framework uses a grand stack based architecture so if you want to learn more about the architecture of this application and the different components used you can look at grand stack dot IO and get a more detailed view of that alright so let's show you a little bit behind the scenes on this actually before we do that let me just change this the topic weights and show you how the recommendations can change so let's say now the analyst is more interested in legal issues you know not so much an M&A very interested in labor issues not so much on financials and capital changes and very much interested in disasters and accidents you submit that you know it refreshes and you know it it looks at a new set of articles or refreshed set of articles based on the different topic weights now okay so let's go and look at the data model next so here's the data model so it's very very simple so you have the user or the analyst you have topic groups and their weights attached the topic groups the analyst provides and then there are lots of subtopics or topics that are grouped together in topic groups and then there is an article that is connected to the topic and the article is also connected to the organization the organization has many relationships self relationships so an organization can be affiliated to another organization an organization can be a supplier of another organization an organization can have an ultimate parent this is based on the ownership and the organization can have an immediate parent that is different from the ultimate parent and the organization can have deals with another organization this is all the data that is we are getting from raffinate 'iv and we have put it in a graph and then on top of that we're getting the new stories as well from relative this here is basically a single relationship between article and organization that we have split up for performance purposes and so that's why showing multiple different relationships based on each day of of the new stories that just helps us to accelerate performance of the overall system here's more detail on that in case that was not clear earlier but it's a really simple data model and this is the basis of the knowledge graph underneath on which we are a recommendation framework that is providing the recommendations to the application the way the system is architected is that as soon as the article comes in we send it to a tagger language tagger that uses the article information the contents of the article to then tag the new story to the appropriate organizations and to the topics which in turn are related topic groups and the user follows organizations and ways the topic groups of interest so how this is how this is put together all right so now you have a good idea of the data model let's look at the recommendation engine now so this is new for J's intelligent recommendation framework and it's divided into two concepts engines which produce recommendations and database connections which represent the underlying neo4j database so in this case it's the portfolio recommendations database that I was just showing you the data model for and here it is using these two engines the article engine and the organizational engine so let's go into this framework and look at the article engine so the article engine what it's doing is it's it's matching for all articles in the last seven days related to the organizations that Harland is following and then it does a discovery so there are some specific phases that we have encoded into our recommendation framework and that helps essentially so that you don't have to write any infrastructure code you Russ right your business logic within these phases and it's like a pipeline of steps and you produce the output or the output recommendations to learn more about the recommendation engines you can look at neo4j slash solutions neo4j comm slash solutions and go to the recommendations area or we also have recently published a new blog series around this topic so you'll get a lot of information there about Commendation technologies but here what it's doing is it's essentially discovering a set of articles given the analysts the companies that they're following and the topics of interest to them and we are scoring these articles based on the count of the tracked organizations that they relate to and then we also further scoring that by adding the weight assigned to the article by to the topic groups that by the by the user so this is the cypher for for that and then what we're doing is we have a boost phase that is boosting the articles that are based on the weight assigned to the assigned to this topic by the user so we're adding an additional boost so that those articles that are very closely related to the topics of interest are boosted higher up in the order there a couple of additional phases for this pipeline there's an exclude phase to remove you know some noise from what you've discovered perhaps you don't want to include in the final output there's also a diversity phase to do not have clumps or very similar recommendations so you you can have diverse set of recommendations and again you can learn more when you go online okay next let's look at the organizational engine right here the organizational engine essentially discovers all the articles associated with each individual organization and it optimizes for and puts up at a higher score level the organizations that have the most articles that are related to the topic groups that the user has waited highly so this is the cypher for that and as we saw that certain organizations had a higher count of articles but it also kind of removes some of the noise associated with that so if an organization or an average like Amazon or the fan stocks if they have a lot of articles every day you know it will remove that noise and also so that lesser companies or smaller companies that have articles one or two articles that appear occasionally are also bubbled to the top and not just highly you know stocks that are have a high degree of news stories on them every day alright now that we have looked at the recommendation framework in detail let's switch our focus to the visualization aspects so this is bloom bloom is neo4j is visualization product and so let's look at the data in a visual form so let's look at the analysts Harland who we are following so this is Harlan so this is a natural language based search interface so you can just type keywords and it's going to look up those in the database and pull that up into the visual layer so here we have Harlan and let's look at the organizations that Harlan follows where this type organization and I get the relationship Harlan and all the technology stocks that Harlan's following so here we have those and then let's look at the topic groups that Harlan has waited so those are the topic groups and then if I just click on Harlan and inspect that node we can look at all the relationship types and we can see the different weights on the different topic groups here so for example legal issues is weighted a 5 vs. capital chain is weighted to which is what we saw in the UI layer earlier on alright now that we have seen that let's look at all the topics related to these topics so if we click on that we get many more topics and we can see the relationship of these topics the topics group so let's look at for example legal issues you can see that conviction right here trial these are all related to legal issues and many others all right so now let's explore the organization's again and since we are looking at organizations and relationship of other organizations to that organization so we're looking at these two hops deeper let's look at all the other organizations that are related to the first-level organization the 20-yard tech stocks that Harlan follows and we can see that's a huge number of organizations we have about now you know about seventeen forty four nodes that are on display here and then if we look at the different articles that the application has traversed through to calculate the recommendations we're looking at organizations and the articles attached to that you can see these are all the articles that are attached to organizations but then we're not only looking at these articles they're looking to little hops deeper at the organization level so look at another hop out to second-tier organization and the articles associated with those so you can see this is what you know in this instance for Harlan its traversing through all of these nodes in real time across these relationships to calculate out what to recommend in terms the articles and organizations for Harland as an analyst to see so that he uses his time appropriately in in looking at the articles of the most relevant and the organizations that are most relevant for the new stories in the last seven days so that's the demo folks and hope you enjoyed that all right so we have a couple of questions all right so how do we get access to the recommendation framework that you were demoing yes so the recommendation framework that we have today is being built with customer input and so the way we have it available right now is through a consulting services organization we offer it for free so there's no upfront fee for the framework itself but you need to use our consulting services in order to help you to customize the framework so because everybody needs a slightly different front-end perhaps or adjustments to the framework to suit their needs so we feel that that's the most appropriate way to make that available through a consulting services and Howard is that Mister they email or yeah you can email solutions at neo4j comm or sales at neo4j comm and we can set you up we do proof of concepts all the time with our customers as well and we offer you know trial licenses to both our Enterprise Edition which is what the the recommendation framework works only on our Enterprise Edition and we offer trial licenses to both the framework as well as the neo4j database and a prize edition all right great and then a question about the NLP tool that you were using in the demo yeah that that is actually open Cali it's a service by relative which is you know offshoot of Thomson Reuters they spun that out as a separate company so that's the data company now of those while Thomson Reuters which got acquired by Blackrock but the relative provides that but we also have other partners if you have other types of NLP needs that are not really satisfied by by open Kalia then we have other partnerships that provide NLP services and you know we can connect you with some of our partners in that space as well all right this one's a really interesting one so it's talking about data warehouses data leaks is that something that you're seeing kind of being turned into knowledge graphs how do you get started how do you see them being used in this context that's a great question because I think that's that's exactly you know what most people are faced with because they already have a lot of this data in some form or fashion and usually it's been dumped into a data leak or you know in in you know an old technology like a data warehouse and they need to unlock that into a graph to really start making use of it in this fashion so yeah we we we have lots of different architectures that take data from an ADA Lake or data warehouse you know pump it into the graph again as I said before through some kind of a ETL pipeline or you know in NLP based interface but you have to keep in mind two very important things one to have the right data model in there for J for this data and it's it's not not exactly similar to the data model you would have like in your data warehouse or your data Lake for that matter you need to really tackle this data model from the types of questions that you're going to ask of this data and and construct the data model from that perspective and that's hugely important the other really important piece is to bring only the relevant metadata so not exact ssin all the details associated with the trance action that you store in your data lake for example but you only bring in the relevant metadata that can contextually connects your data together right from from all your silos or different entities that you have in your data Lake and that's the metadata that you bring into neo4j so that kind of compartmentalizes the data or makes it more more discreet and that helps to do then you know write more performant queries and get the responses in real time that you're looking for yeah so it's really unlocking the value of the data that's within your data warehouse your big data leak that kind of that's exactly right yeah and and and you know is really acting more as the grease to your existing investments in a really great point yeah great question okay and then so where are you seeing these projects initiating within this organizations because I think as we kind of we're talking about like there there are a lot of different ways that the new knowledge graphs can be built in a lot of different use cases and so yeah I mean you know that's we see a lot of spots right where these things have to start from one of the areas that is fairly common is innovation groups because they are charted to use new technology to to you know benefit financial services organizations they are leading adopters of new technology typically so there are innovation groups and different organizational units and and those are typically that reach out to us there's also the core technology areas of the bank that organically some developers may have found neo4j played around with it you know piloted some use cases and now they they see some value there that's when they contact us to to improve that or to help them really sell that internally within an organization you know to the business folks and that's those are typically how these projects get started mostly mmm cool so I think we have time for one more question and I usually like to wrap it up with how do we get more resources how do we find out more about about this topic where should where should we go as a next step yeah obviously as I said before you can reach out to us over email neo4j I mean info at new for Jake amor sales at meal for Jay calm or reach out to me directly at solutions at neo4j calm and be happy to respond to you and get you connected to the right right folks to provide you more input on you know what what you're doing and and how to take your particularly initiative forward with with neo4j great thanks so much Navin thank you all for joining us today this recording will be made available to you after we wrap it up and after that editing is all done and thank you for joining us thanks Nev thanks really 