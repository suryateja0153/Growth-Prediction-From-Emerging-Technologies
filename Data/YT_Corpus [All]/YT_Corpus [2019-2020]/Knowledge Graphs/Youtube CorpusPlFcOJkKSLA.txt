 good morning New England greetings from just England old England hey steady on stereo we're not that old work gracefully middle ageing so it's lovely to be here love what you've done with the place looks very English to me kinda grey brown pallets with the side of don't mess with me limey we've got plenty of space for you in the harbor where the tea chests are right true story one of my colleagues literally said that to me this morning she's nice to you guys so my name is Jim and I'm near for Jai's chief scientists been with the company for nine years I'm old enough to remember when I was the only scientist at the company so if you're wondering how I got the grant I just got in first so now I've got you and rapped with my amazing credentials of being first in a queue I hope to keep your attention for the next 40 minutes or so to talk about how grafts are being used in machine learning and so I'm a fairly straight talking person which has my marketing team on tenterhooks so this is the NAM on stage they can't stop me it's it's great but if you were to row of nervous-looking people at the back saying what's he gonna stay I'm gonna talk to you they like this guy yeah so I'm gonna give you some no-bullshit definitions because if there is an area of computer science which is prone to today I can say this right because we're on the East Coast and people understand the swearing is fine and traditional parts of communication in the English language can't say on the west coast they get all vegan on you a pullet cities so no nonsense definitions I'm going to talk through my history of graph so it's a little bit kind of anecdotal person all this which is you know since I'm chief scientist maybe I should be more scientific but I've had a history with graphs there over the last decade or so as a user of graphs and all that ultimately you know kind of poacher turned gamekeeper becoming part of a graph company of building systems which had intelligent like behaviors that's really interesting and we have a look through graph theory and see what we've got in that bucket of skills that we can bring to the fore to build systems that appear to be intelligent towards the end we'll talk through contemporary our graph machine learning and what we can do at the confluence of graphs and machine learning and then we'll take a little peek into the future of graph AI and that's the only time in this talk that I will say the words AI without inwardly cringing slash laughing because that is a big lump of BS so if like me you're a complete bluffer at AI just again credibility with the audience that I meant to build this is my guide to AI Cronin's machine learning ml finding functions from historical data to guide future interactions specifically within a given domain so this is not cross domain learning AI is the property of a system that it appears intelligent to its users I think actually achieving that goal is really really interesting really useful whether or not we're using fancy machine learning frameworks to do it often but not always using machine learning techniques or if you're quite high up the AI evolution chain ml implementations that allow us to cheaply retrain models across domains this is often conflated with a plain old predictive analytics you use the past to predict the future general purpose AI machine learning with transfer learning so that learned experiences in one domain can be applied elsewhere you've know for example that hitting your head on a wall hurts so you don't try to hit your head on a desk unless you've been in this talk for 20 minutes in which case it becomes a slightly appealing prospect or indeed human-like AI so ml all the things what we do today well grab on clicky thank you very much we take tables tables and we extract features from them No now of course we could do that but you know we graph people right so what can we do which is better than that we could just take our data tabular data our column your data or even our you know a rarified document data and pump it you turn it into vectors and pump it through a regression model or a classification model or build a school code or what have you and that's not a bad thing right I am NOT saying that your machine learning pipeline is bad okay actually fine you get some value from it it helps it helps drive value for your businesses it brings something useful into your domain but actually I think we can do a lot more with data to build systems that appear intelligence before we reach for the ML pipeline I think the ML pipeline is kind of like the icing on the top of a very tasty cake if that cake is made from graphs and I'm definitely laboring that metaphor now so for the purpose of clarity the thing on the left is a graph the thing on the right is a chart and what you guys haven't noticed is there's a little unit underneath each of your chairs if you get those mixed up I press this red button and you get an electric shock right they actually chipped me at near 4j they've got the same thing in miniature here if I get those mixed up like so think on the left is a graph thing on the right is a charts are very useful for visualizations graphs are very useful for storing and reasoning data and in fact it turns out we all know graphs how many of you folks have come to a near Fiji event for the first time today and keep your hand up if you kind of still kind of graph curious rather than got graphs under your fingernails a few of you I'll tell you what one slide you're all going to be experts here you go it's my hometown it's a graph yeah it's a tube graph thank you so no good I'm not being filmed so you are going to London it's lovely you'll like it it's a lot like New England all right but we have accents and you're going to land down here this is Heathrow don't go to Gatwick it's like the moss eisely of London port it's a wretched hive of scum and villainy ah now bear with me folks the neo4j office is near here this is as you would pronounce it south walk and that's how we know you're American it's Southwark apparently w AR K is pronounced don't at me I didn't make up the language so you in experts with your large suitcases that block the tube carriages your challenge is to figure out how to get from Heathrow to Southwark how'd you do it jet pack okay so there are a few executives in the room they're already taking a black taxi that'll cost you about 170 dollars and inane chatter for about three hours in London traffic for those of you that are like me you say well I've landed in Heathrow and I know the rules of a graph I've only allowed to traverse from one blob to another blob if there's a stick connecting them right so if I said to you okay so now you know those rules what might be a quick way of getting from Heathrow to the near 4j office you can't have a cup of tea with us I don't you don't drink tea do you throw in the sea come have a cup of coffee with us all right we gotta get us off our chest right pretty good pretty good in human language now that was if that was a technically correct answer but he kind of undermined the pun that's coming so thank you you know you kind of followed these lines and you kind of amble your way through the network until maybe you found this and you came down here who thinks that you would go perhaps up the blue line up the other blue line around the purple line around the yellow line up the green line back down the red line down the black line and no why didn't you go that way that felt like a long path right so you were already able even as non-experts even as people who aren't cut you aren't called Dijkstra no one's called Dijkstra you kidding me okay so even though you aren't yourselves Dijkstra even your normal human beings you were able to intuit your way in a very Dykstra like way through the graph to kind of find a short path if you're interested and goodness only knows that my my fellow executives at near forge a need to learn this the shortest path by the way is to take this blue line change at Green Park and then take the silver line down to Southwark what they do is all sorts of stupid stuff that keeps them in traffic for two hours so you already know graphs what's interesting when I was at university as a student rather than as an academic to learn the equivalent kind of skills in relational databases took a big thick book and many of you probably had that book and it was like first normal form second normal form third normal form oh my god normal form right it was complicated the label property graph model can be described in one albeit widescreen slide we have nodes with optional properties and optional labels properties are data labels Express the role of the node in the network we have named and directed relationships again with optional properties so if you're really going to do shortest path you may have length or time to traverse a path on those relationships relationships never dangle they have exactly one start node and one end node which may be itself so that's it you've now learned the whole of graph almost let me just bring that home to you that was mentioned earlier that many of the people in the near 4j team are big fans of the matrix what you don't know is there's a competing fiefdom in near 4j involving the PPC I'm stealing BBC's intellectual property to teach graphs here so who knows Doctor Who I love you guys know you want to say that in the US it's like dr. what no whoo-hoo for those you don't know dr. who I'm going to prove to you that you already know grass brilliantly by also teaching you Doctor Who it is by the way the world's longest running sci-fi show goes back to 1963 so you know shove it Star Trek so there's this guy doctor who is a human or humanoid and the idea is that he can travel in time and space and he's like a do-gooder he goes round kind of sorting out problems this is doctor who played by Matt Smith a few generations ago and it turns out that the doctor is from a planet called Gallifrey is not actually a human he's a Time Lord and he is from planet Gallifrey so how do you read that we say word doctor from Gallifrey so you kind of read these graphs very conveniently in fact when I'm doing gruff modelling I find that if I can read a sentence conveniently it's probably a good model so we can enrich our model we know that the doctor stole a space and time craft that enables him to travel around the universe in time and space it's called a TARDIS for you new to Doctor Who fans time and relative dimension in space see if I was saying this with a New England accent you'd all be bored now but I know the tricks right you're all glued the English guy saying things listen he has enemies right because he's a do-gooder he goes round time and space putting right things that are going wrong and he really pisses people off so these guys are called Daleks and they looked like Pepper Potts with laser guns and I got to tell you as a child they terrified me all right but they have like screechy voices he's also made enemies of the Cybermen he's also made enemies of the Sontarans and the only reason the Sontarans are in is because one of my lovely colleagues says hey Jim you see the resemblance and it kind of stuck right well I'm owning it now right I'm owning it that's fine I'll take that but doctor he's also quite needy he likes to travel with friends and because the BBC budget is low those friends are usually human looking right because you don't want to pay for makeup and this case he's traveling with this is Rory and Amy so you can see see from you experts know this from a few seasons ago but Amy and Rory have their own thing going on they're in love Rory loves Amy Amy loves Rory that's nice right they've got their own I'm getting a bit into this now ah yeah they've got their own thing going on and in fact looking many of you are IT professionals so this model makes a bunch of sense to you for example love can be unrequited yeah in this case Amy loves maury Rory loves Amy but you IT professionals know that sometimes you love someone and they don't love you back because to them we're not even human right we know it we've been there wait ha ha I feel like you this is Oprah now isn't it yeah you get a book and you get a book yet now the thing is what we're all talking about grass there's love you thing about grasses grass have layers you can bring layers into your query or leave layers out of your query and there's a real world of Doctor Who I don't worry I'm not some kind of nut job that thinks this stuff is real I realize this is a science fiction TV show but there are elements of this problem domain which are very real and they come together in episodes so we know that for example all these fictitious characters appear in episode but an episode will also be linked to the writer the producer the actors that were in it the locations that they were there the bloke loves providing the bacon butties for breakfast in that particular quarry in that episode so all of these things come together in the real world so we can build this really rich graph of both fictional and non-fictional stuff and choose to bring layers in or out of this graph it's very much and then finally we we put our labels on things so that we're not explicit about the roles of those nodes in this graph so now particularly for those of you that are new to Doctor Who if I said hey how do I find out in which episodes am II battled the Daleks well you'd be able to do that very easily you would find episodes that the Daleks appeared in you would find episodes that Amy appeared in and then you would meet in the middle and in fact you in this case you would find the episode victory of the Daleks badly named episode they lost yeah hint yeah they're the bad guys but you have to do this so even now even those of you that are now just into Doctor Who and thinks it's absolutely amazing you already have some expert level knowledge right this is bright so if you want to know the doctor the doctor regenerates if you that's how he's kept going since 1963 the doctor can die and reform in a new body if you want to know who came after Matt Smith you could simply follow the links regenerated too so you can follow the Doctor Who history and in fact if you wanted to go back all the way in history through all of these potential or all these historical doctors you can do that now that's one two three four five six of eight nine ten thirteen of course I knew that number because I'm a nerd I knew that but I thought I'd count just for theatrics that's thirteen how many of you fancy doing a nested join 13 times on your relational database any any takers okay you can do fancy indexing no super fancy No getting a lot of love here folks now of course that's terrible but actually in the graph this stuff's pretty cheap to do so it's not a problem in neo in to be able to traverse effectively through thirteen joins because it's dead cheap so in this case I I'm just looking for that star there means links at any depth between me and Doctor Who and in fact that's pretty cheap to do on my laptop which is an overpriced new ish MacBook Pro that I hate can I get hell yeah from the nerds in the room oh my god I can do about 40 million traversals per second in a steady state database that's quite a lot of horsepower for me to be able to traverse this graph so if you want if I wanted to know how I'm connected to Doctor Who when I actually am at quite a depth this is it this is my graph this is my kind of bragging graph I've got no other credentials to give you but this is me it's actually me on my wedding date you can see I've deteriorated now I'm married I just after you know have to bother right it's great love it so I wrote a book or at the O'Reilly graph databases book and this is my mate Ian Robinson who was also a big Doctor Who fan and he wrote that book with me and he's an author and I'm an author Ian was also a landlord so he he owned a flat at Jean Birmingham my hometown and he sublet that flats - hoots - an actor - at the time an aspiring actor Chris Addison who actually became quite relatively famous in the UK who played a character only in a TV series called the thick of it which was a political satire or as we know it now Modern Life and in that series the thick of it there was a very very sweary character called Malcolm Tucker who is he's the Shakespeare of swearing you guys would love it but actually actor Peter Capaldi played Tucker and played a regeneration of Doctor Who so if I follow all of those leagues around that's how I'm connected to Doctor Who and that's super super cheap to build to process in a graph database so what do we want we want smart systems we can take a step back right we don't have to to do - to gain insight or to all systems that appear intelligent we don't have to immediately reach for our gpu-accelerated tensorflow mega framework we can do more with our data let's take a step back man doesn't that seem like good days huh long time ago it feels like a lifetime ago back in 2008 circa 2008 I was working for a North America and telecoms company and we were working on product recommendations and what happened was we were going to pay about 10 million bucks to buy some software and then we're going to customize it and we thought somewhere between three and five years later we would be able to deliver product recommendations to our web properties and to our call center and that was fine I mean you know the kind of buy and then customized thing was a bit awkward to some arguments there but ultimately we had a plan and then I went to Sweden to go and speak at our conference there which was brand and I met this weird guy tall weird Swedish guy and did this story gets worse and he sighs what are you working on I'm like I'm doing this kind of recommendation engine where I'm trying to encourage people that have a cell phone service from us to also take some internet and take some video on demand or some cable TV or whatever if there's a graph in that data I'd like looked all weird Swedish guy I know how databases work I have a PhD the d stands for databases databases have tables right square things you put data in them okay bye-bye and that was kind of awkward but anyways like no no like I met him a couple more times and he kept prevailing upon me that there were graphs in my data and I kept telling him look man look this is kind of an odd cultural thing but you need to get out of my personal space now because you are weird with your graphs right be away with you anyway funny thing that guy's my boss now so that worked out I went back to work I'm like hey wait a minute that weird tall Swedish guy was right this is a graph problem right because someone's bought something and I could see other products that depend on it and I could also see a way to not making conflicting product recommendations by looking at a dependency graph ah right what was that thing called again neo4j so I'd Google's neo4j and is this hellscape hellscape of maven and java and oh my word it was horrible I'm not even kidding you it was the biggest horriblest thing anyway about 10 hours later I've gone through the maven hellscape of java badness and I've written a query you guys write sci-fi I had to write stuff like this which apparently to Swedes that's nice right yeah yeah I tried taking that to the boss so I'd written something like this and I ran a query and then having told the system that I already had broadband service at home it could look at the dependency graph say but he's got broadband he must have a modem if he's got a modem that means we could sell him he's got modem does he have a telephone yes he's got telephone we could sell him voicemail but if he's got a modem we can also sell him the next higher tier of broadband and because it was just a dependency graph there was never a chance they were tried to sell me something I already owned and there was never a chance they tried to sell me something it was conflicting compare that to Amazon check these bad boys out bought pair of shoes off Amazon because I'm a middle-aged white guy that's what we do what did Amazon do now recommend me shoes like I'm an octopus right statistically I have a slightly higher than average number of legs but as a biped and a middle-aged white guy I buy shoes about once every five years now Amazon's recommendation engine has the figure that out yet our recommendation engine did this though blew me away because in one long afternoon we'd solved the recommendation engine problem buy me a beer later if you want to know how delivering that incredible business result got me fired politics I thought I'd invented Skynet because we built a system orbit very skeletal system appeared to me to be intelligent as the user and I'm genuinely not even kidding when that result came back for a few seconds I was genuinely flabbergasted because the system appeared intelligent then there was kind of a rational part of my brain that reasserted itself as a Jimmy Jimmy it's a patronizing thing the rational part in my brain right Jimmy that wasn't a I that was a graft surge that was that thing that you forgot from algorithms 101 oh yes how it was thanks patronizing part of my brain and sadly it's like well this is nice with data structures and algorithms we could we could build systems that appeared to be intelligent so it wasn't a AI but it was extremely effective it's strong it was unexpectedly powerful in one long afternoon we solved the problem that we thought would take us about three years to get solved with traditional tech I my thoughts where we wrap a rails front and around this deploy to the call center deploy to the website you know collect accolades so then over time the stuff matures here for J grows away from each java hellscape java maven hellscape background becomes a server that was my first contribution I built the Lear 4j server and then we put cipher around it it's amazing and humane to implement I was back in the UK some years later and we started looking at purchasing behavior for a large supermarket and we were enamored of this folklore from the US that on Friday nights if they put diapers at the air with a beer at the end of the diapers aisle they sell more of both and we were in truth as a cook for us it was quite entertaining so what we did when we took a bunch of transactional data and a bunch of taxonomical data so categories and baskets and we stuck him into a graph and it looked to you a little bit like this we created a bunch of a bunch of purchasing data and what we observed was we had this kind of you know our test case was this young father's pattern that is do I have someone who has a certain age and unlikely gender who's bought a game console who's bought nappies diapers or who's bought beer and we thought that that matched very well this kind of Friday night beer and diapers pattern and so we've got a pattern to search for now if we ran this if we'd run this through like a machine learning framework we know that's what it decides I can't believe I snuck that past marketing actually it's on my screen here as well so I can't avoid there's a guy taking the photograph of it sir stop this is the worst the hilarious thing of this is I know this was recommended to me by a deep or convoluted neural network so graphs even gave me this horrific picture that you see in front of you but actually apart from the giggles this is a huge business opportunity because if you spot someone that partially matches this pattern you have an opportunity to upsell them so if you spot someone that's bought beer and nappies but hasn't bought a game console you can sell them a game console or you can nudge them to do a game console and what we wanted to do is do all of this in real time in the old days the way that nudging people worked in UK stores was you'd swipe your loyalty card couple of weeks later some vouchers come in the mail you think that's spam from the supermarket you stick it in the recycling actually what you want to do is it says that we work with a bunch of psychologists and the psychologists were telling us that humans on the whole are not psychopaths and ladies of God doesn't it know it's like why is he messing with this jacket humans are not Psychopaths and what so what we really want to do the psychologist told us if you want some human contact figure you're welcome thank you for not being a psychopath that will found me one day gentle at the front I just thought I gave him a business card it's awkward right because he's seen me messing with my jacket he knows something's going on and yet when I gave him the business card he immediately read it that's now impacted him what we want to do is print out the vouchers and stick them in your hands because unless you're a psychopath you'll take them and you'll look at them and that encourages you to change your behavior a thousandfold more than getting some vouchers of similar quality in the post so what we want to do is be able to flog you stuff that seems intelligent in the clicks treat what we don't want to do is antagonize you so one of the things that the psychologist called a contraindication or or we as developers called taking the piss was when you're at the checkout I'm a northerner we can say it now let's check out beep bananas beep I don't know what mas doing what roast-beef English yeah there we go PlayStation 4 and then check out vouchers get printed 20% off Xbox one right that I'm faking if I still actually feel quite cross about that like I've given this to a half a dozen times now and it still makes me angry that they printed out a voucher for an Xbox one when they can see I've just bought a PlayStation 4 any human can see that's wrong so what you need to bring this right into the click stream in fact you can do that you take that graph you can turn it into ASCII art you can straighten it out you can surround it with a bunch of technical gobbledygook from neo4j language run this bind it to parts of the graph and get results from it quickly if you're wondering in my world Laurie Williams a Doctor Who character comes out as an ideal candidate to sell to so you can either do this at global population level run it as an analytical job or near fides quick enough at 40 million traversals a second to do it in the clicks treat as people are going through the point-of-sale terminal this was amazing it's kind of thing that Facebook does with graph search Steve used this stuff which are the sushi restaurants in New York City that my friends liked and it's this kind of graph is me I'm a friend of Andreas and Michael Michael likes ice sushi and dressed like sushi Sam they're both in New York and they both serve sushi cuisine trivial absolutely trivial query and even though that might be a huge data set this thing comes back very quickly because in graph world in therefore J world the latency of your query is proportional to how much of the graph you want to traverse it is not proportional to how much data you've stored so you're not paying for example the set-based penalty that we're all afraid of from relational databases so graph theory and I realize now that I do have a clock on this thing oh my word of a really blathering for 40 minutes Michael's going to be speaking really quickly in about 20 minutes time graph theory rich bunch of cool stuff going on in graph theory these two books once you've read a Reilly's graph databases which is like the premium book obviously on the subject these two books plus the graph algorithms book by Amy and Mark are here for J our brilliance the a bit more academically so you can look a bit more highbrow with these neck just amazing books but graph theory is a rich toolkit of things that you can do to analyze your data and give you intelligent looking answers from it first book the first parts of our book of tricks in graph theory is this notion of local properties and graphs are a bit weird right in the in graph small things localize things that can often have dramatic low global effects so the first skill that we learn in in graphs is this notion of triadic closure it's a bit of a kind of highbrow way to say make a triangle but that's what graphs are particularly graphs involving humans so you can see here I've got a small social graph bonus points if you know the cartoons here is that I stole the names from you can see that Kyle is friends with Stan star and Carly's friends with Kenny and you've seen this okay some of you have seen this some of you IT people with friends I know it's a bit of a push but uh come on I aimed me as well okay yeah and Southpark thank you I take your CR in your lives you've seen this kind of thing you've got two friends somehow transitively through you you're kind of sure those friends are kind of compatible with each other so over time those two friends themselves become friends because this kind of transitive trust between them right that's kind of cool it's also this notion of structural balance so in this case we've got Cartman who's a friend of Craig and cotton who's an enemy of tweek so it's a kind of interesting thing here that you could form a triangle like this where Cartman is a friend of Craig Craig is a friend of tweek and Cartman is an enemy of tweek but this is awkward right because Cartman's like hey Craig let's gang up on tweek and prank him and Craig's like there are tweaks my mouse I'm not going to do that so that's kind of an awkward thing yeah you don't really want those kind of awkward friendships around you right and as a walk word person I feel this acutely so what you really want is this kind of thing I mean you don't because he's horrible right this is terrible but now at least this feels normal now Cartman and Krave can both hate tweek right I'm not saying that's like moral but it's stable right so there's little to those little things so that's that's kind of sad but what you could do a stable structure what would be so you have three friends as a stable structure and that's much nicer so this notion of structural balance is a key predictive technique and its domain agnostic and I'll prove it to you this is the starting point for one of the walls worst periods of history this is actually a network of the Great Houses of Europe you are by the way conspicuous by your absence thanks thanks it's great I worry you still holding garage about 1776 come on so this is start this is uh this is a point of history that historians called the three Emperor's League and you can see that you've got UK Austria Germany Italy France Russia in this in this graph the the red arrows indicate enemies and the black arrows indicate friendships hence the three emperors league here Austria Germany and Russia and are in league or as I think of all of the Bond bad guys now Italy wants in on this so it forms a structurally balanced closure with Austria and Germany right that's fine the graph likes that they're friends that's good and then the Germans and the Russians kind of fall out and then there's a kind of freeway enemy ship there and that doesn't feel very stable the graph doesn't like that the graph reject said it wants to make these things stable so what happens is that France and Russia naturally gang up so that if necessary they can take on Germany all right that's a stable thing I'm not saying it's moral but it's stable two countries ganged up on one is a stable configuration and although energy state in the graph then something weird happens ask Elia different Sudan myself brilliant so this is the weirdest thing in history this is this is when the French and the Brits are friends you guys know the French right they liberated you from us yeah so we're holding a grudge at this point but then we become friends and it's called the my school boyfriend isn't very good it's called the aunt aunt called Yale which if you translate it into English means we surrender right and now that's weird Ghostlight now Russia the UK and France are in this kind of unstable awkward demographic so what happens is that the Russians become friends with the Brits we iterate over the graph we make more tragic closures and eventually the graph that kind of naturally falls into this low energy state where you've got only balanced closures here we brilliant for graph theory right because this is now the starting point for world war 1 it sucks to be a human that we've allowed it to get this far right you know can't we just pick up the phone and talk it has recently been invented after all but now this is a starting point for world war 1 so you can actually predict a particularly in social networks the behavior of things in the future I stole this from easily in Kleinberg it's a bit sad but that's not my kid so I don't care if you want to if you want to know more pick up the easily inclined by a book it's amazing there's one other property I think which is very interesting like the tragic closures can also have strengths and these weak relationships play a profound passeth understanding graphs because they separate neighborhoods so in this case Stan and Cartman are kind of half friends they don't really like each other so these weak relationships form bridges and you can see that here even though that weak relationship between Stan and Wendy they're it's called a weak relationship actually you can see it is the single point of contact between the playground boys and the playground girls if anything wants to go between those communities it goes via Stan and Wendy if this was an org chart you this would immediately make you know this would immediately make sense you you know where those weak links are in your org charts where the information flows so we can use these local bridges to start to pick apart graphs and see how they naturally decompose this is called it's the graph of Zachary's karate club it's from the 1978 US journal of anthropology yeah the cold winter nights do fly by my house thanks for asking and what's happened here is that the Crotty Club has grown from the original student instructor Martin mark no duan 2a as clubs grow and they brought on a professional instructor mote mark note 34 but because people suck there's politics here the club starts to kind of have friction some people like the professional instructors some people prefer the old student instructor and so what we wanted to do is say can graph theory predict how these social interactions will add up their graph partition is an np-hard problem it's algorithmically complex but it can be done and if we predict using graph theory how the club will split it looks like this and you can kind of see with your human eyes that that seems about right the kind of pink clump on the right clump you can see where the pink nose and the white no more embedded and that is predicted by graph theory now because this happened in 1978 we actually do know what happened who thinks that this is correct yeah I'm with you man I'm bold enough to say that it's yes watch node number nine ah so close so close so actually node number nine student nine should have gone with the professional instructor as predicted by graph theory what graph theory doesn't know is that student number nine was about to take their black belt exam under the original instructor and even though the graph says you're more embedded in this neighborhood student number nine stayed with the original Club now you can do this in neo4j you can do this stuff very conveniently in near 4j near 4j raw comes out of the box with a bunch of useful graph algorithms well you can just declare boy database process this for me do label propagation find weakly connected components and so on and that's trivial to do we roll out with a bunch of algorithms that are production ready and there are a bunch of algorithms a kind of lab standard that you can experiment with and it's fast now normally when you want to run these kind of huge analyses you phone your nearest carbon emitting thermal power station and say crank up the output lads I'm bringing a dupe into play actually because the foj is a native graph database this stuff is actually very quick this is a PageRank which is a friend of mine colleague my michael hunger so you might like this I've got a what is now a kind of pathetic desktop computer and I ran PageRank on a large payments graph three hundred million nodes 18 billion relationships graph twenty iterations of PageRank took about two hours on wise now I think you'll agree kind of less than commodity Hardware if you're going to do the same thing on Hadoop all right maybe you've got lots of knows maybe you can do in a week good luck but the point is having that locality and having the native processing engine that understands graphs not flat files is super good Michael answer I'm taking up your space I'm talking as quickly as I can and the people are the people are desperate for you to get here this is how a I was presented to me right as a kid there's there's a bunch of Millennials here alike woohoo this is the guy that liberated Germany from communism if you're wondering in in the car I like to think right AI was presented to me as this is kid AI the natural home for AI would be in the dashboard of a vehicle but I'm not sure how I feel about that anymore now I know what computer programmers actually do for a living but look graphs and a I are natural bedfellows there was a wonderful paper from kdd 2015 by Pharrell and what they did was they analyzed a social network looking for interactions that were spam and they only analyzed the structure of the graph they did not look inside the messages for like viagra or Nigerian prince offers you free money kind of thing they only looked at the structure of the graph and what they found was by extracting features from the graph features are native to graphs a page rank a degree a color or a label they were able to classify 70% of those spammers with 90% accuracy before they even did any further I think I just got told I've got five more hours this is great Thank You Blythe before they even did anything which is really useful right because what would you traditionally do to figure out spam you'd look at the messages right and try and classify them what we're saying here is that graphs the structure of the graph itself leaks a bunch of useful information which you can take advantage of to build intelligent seeming systems now most of what happens in in graph ml is still about extracting stuff from a graph whether it's a graph feature or extracting property data from the graph so you extract data from your graph turn into vectors and pump it through your ml pipeline this is fine I think it's actually quite nice you can mix structural data with property data in order to get even better predictions out of your model but we don't always have to vectorize graphs so for example knowledge graphs this kind of I think of knowledge graphs is kind of an evolution of the data lake you put you pour the some of your knowledge into the graph and then exploit that knowledge in them in domain-specific ways we've seen these be very successful at scale for example the eBay shopping assistant that runs on on your Google appliance you can talk to it and it will guide you through a shopping experience with with eBay an incredible castle incredibly large dynamic catalog incredibly large user base and it could figure out that when I talk to and I talk about bags because of my context it knows I mean laptop bags and I do have a fetish for laptop bags that is true it knows if my wife spoke to it she's probably thinking about because she's you know high maintenance she's thinking about upmarket handbags right from designer brands and so on and that context is easily distilled from our context in the knowledge graph we're then able to go a step further and say what we've got graphic convolutional neural nets this comes from ICL our 2017 and there's a really good presentation by Andrew Daugherty about this but the idea is here that we can take K partite graphs and begin to turn them into trivial records of non trivial recommend recommender systems bipartite graphs user likes movie trivial K fight art graphs user likes genre of movie with acts directly by blah-blah-blah-blah-blah much more sophisticated so what we do here is that we take it starts at one one corner of this problem take a graph of users that lights a particular genre uses like ticular movie feed it into a neural net take a graph of users who once rated one of those movies for example feed it into a neural net and then recursively train those new rule nets up until we've got the full K partite system in there and then we've got a recommendation engine far more sophisticated as I say that a likes B in fact if you think this is kind of you know kind of a circuit diagram is computer science it's not if you've ever used YouTube yeah this technique is radicalizing a whole generation of young people as we stand here speaking right actually not for my kid is like watching Lego videos but for kind of like you know lonely young white men in their basements it's radicalizing a whole generation of young people this algorithm learns on our apparently learns our proclivities and then amplifies them back to us so if you're running a business which benefits from that this algorithm is incredible and it's a graph but as we get to the top the structure that the kind of and this is the first time I always say AI and and genuinely mean it there was a position paper from I think probably the strongest consortium of AI practitioners in the business which is Google MIT and Edinburgh University in the UK but maybe not for much longer no I'm saying and the position of these researchers is that if we are going to build transfer learning human-like AI it's going to involve graphs the reason is that we need some kind of structure hierarchies to be able to hang our learning from and to be able to cross learn between it again the example of bang your head on a wall you don't need to bang it on a table to learn that it hurts now this is early stages but if some of the frankly the colossi are of artificial intelligence are thinking that graphs are going to be fundamental to AI I am NOT sufficiently qualified to contradict them their goal is to produce via graphtec perhaps not graph database but via graph tech transfer learning so that we can generalize beyond direct experience just like we can as humans which is kind of incredible now look all of this stuff might seem hard at first our credit mark needing for this I think all of us even those of us at near 4j we initially is like you have to unlearn so much to become comfortable with graphs where are my normal forms how do I index this all this kind of kind of technical stuff going on but once you're over that hump and you're in the I love graphs part of the curve you are never going back I went back once I was writing when I was writing the O'Reilly graph databases book and my climb colleague said that I had to ride the relational databases comparison section and he will attest that I was a grumpy sweary unpleasant human for about six weeks when I was doing that I am never going back up that curve so look lots of stuff going on in graph world like lots of opportunities for us to connect dots and build brilliant intelligent systems I'll leave you with one plea that this is not the graph we should build fun as it might be there's a lot of stuff going on if you can expand reason about your data as a graph you can already do so much to build towards building intelligent seeming systems taking that graph data and then extracting connected features out of it for your 4ml processing is a way of adding a layer of icing to that cake and composing those two practices together I think he's eminently sensible so look folks thanks for listening I'm going to hand over to Michael now if you've got questions I may be around all day please grab me and Allah pine some more so have a lovely day and thanks for listening [Applause] 