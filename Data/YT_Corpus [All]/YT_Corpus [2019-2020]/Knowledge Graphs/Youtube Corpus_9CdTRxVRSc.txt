 [Music] my name is Amy I'm gonna share with you a little bit where we think as John said the future is going for both Graff and artificial intelligence we know that artificial intelligence is very hot right now there's a lot of progress being made and as John showed us graphs are exponentially growing as well so it's probably not unusual that people would want to marry these two topics together but they actually have a lot in common as far as their use and one influencing their other grass add context for AI and when I talk about AI I'm talking about AI system so software applications that together are trying to make some kind of action or decision that's probabilistic and that is very similar to the way humans make decisions as well we're never really a hundred percent sure but we we think probably that's the right thing to do so we're talk a little bit about that and then we're also going to share some of the steps that we've learned with our customers that help people move along in the process and progress so first an interesting example I like this example because these things do not have anything in common for the most part so I've got smoking and voting here totally different behaviors totally different kinds of activities with different types of results now the interesting thing here is they actually found one thing in common and that's making predictions so how do you predict whether someone might be a smoker well you might say age demographics zip code income level how do you predict whether someone's going to vote hmm you know maybe the same things but what the network scientists actually showed through various different research is that those types of demographics we're actually not as predictive as their relationships so they could tell my accuracy it good predictions whether somebody was a smoker or not based on their relationships so you can imagine and maybe that doesn't seem once you hear it doesn't seem so surprising that if I know whether your friends smoke well I can kind of estimate whether you might smoke as well if you have a lot of friends that smoke they also found that if you have if you lose friends while you're trying to quit smoking that smoke a higher chance of successful quitting and what's even more interesting to me is actually the voting so this research was done in Texas where they were trying to predict whether somebody was gonna vote based on their friends and not surprising like the smoking you have a lot of friends to actually vote you're more likely to vote but what was even more surprising was they could do with high ACT even higher accuracy whether the Friends of your friends voted so if you think about that people you don't know are more predictive for researchers of whether you're gonna vote then your own first order of friends and that has to do with the power of the networks and the how you can make predictions based on a larger group than just individual general statistics and these two examples are actually taken from a book called connected from James Fowler and over and over again he showed how relationships are the strongest predictors of behavior so not surprising why we would want to use that with AI systems if you think about it now it's not just individuals that you can use we're talking about behaviors but we can also use this for larger systems so for example we have clients that are using it to understand contagion financial contagion as well as health contagions as well but as you if you can imagine the one chart on the left is looking at yep that's left on the left is looking at a contagion spread in the global markets around 2008 so looking at the pathways that things move these are all relationships and then the other picture actually is the trend where we see people going next is doing more local predictions so how do I do a financial ripple effect analysis in my local market how do I do that for a particular industry and using graphs so you can walk those pathways and do what if analysis in this example it was a shipping company that actually provided some manufacturing for trucks as well it turns out they were very sensitive to steel prices not surprising maybe not directly but the people who were manufacturing parts for them were very sensitive to steel tariffs and then they couldn't get their parts and then they couldn't get things done on time and then the shippers had trouble making the commitments that they had so trying to understand that ripple effect is another area where people are using relationships and we're looking at economics here but you can imagine in health and even even things like rumors you know how do they spread so thinking about relationships being strongly predictive of behavior thinking about the ability to track how things Ripple it's not surprising that we're actually seeing graphs influence AI research so this chart shows AI research that includes and focuses on graphs from 2010 to 2014 crease I am kind of curious to see where we'll be at the end of this year I suspect we'll still be shooting up there but it's not just in research we are also seeing our customers and people across different industries using graphs and data science things like fraud protection or fraud detection you can understand why fraud might have a shape to it and patterns of behaviors again thinking about customer segmentation do I just want to look at my customers by simple demographics or do I want to group them by their behaviors and by the relationships they have with other people or even products and if we're talking about products how are the products related to each other sub components you know things like that services that might help us with recommendations life sciences is an interesting area as well so one really interesting use case is to look at drug repurposing so there's a couple organizations out there using neo4j one called het dot io if you're interested let me know I'll get you the information on them but they actually use neo4j to look at drugs that are already approved look at what genes those target and then look at what diseases are involved in those genes and so what they're able to do is they they use drugs that are already approved for one disease and then based on the genes look at if there are genes in common for another disease and they can repurpose it it gets us drugs faster for new uses and safer as well a churn prediction we'll look at a little more in a few minutes it's a really interesting thing to do to look at whether you and try to estimate and predict based on relationships whether your customers are going to churn my favorite example on that is actually in the telco industry not just whether somebody's going to churn but who's influential in their network that might churn so an interesting I find kind of a cute story is anybody know in the telco world who's the most influential person in a subscription network it's your mom so if mom goes to another subscription service another telecom telephone company your siblings are likely to follow you're your nieces your aunt's are more likely so looking at what's that ripple effect of a turn you have to know who's influential in your network and various other industries like searches you can imagine very graphi think about Google and PageRank there a predictive maintenance and IOT is very important and of course cyber security any time you're talking about a potential intrusion as well wanting to understand those patterns so these companies and these industries use this because they can make better predictions with the data they already have so how many data scientists in the room okay if you if one thing I hear all the time from data scientists if I just had more information I could get better accuracy you already have more information it's hidden in the data you already have it's called relationships most data scientists models toss out the relationships they're looking at things as rows in column's keep doing what you're doing I'm not saying stop doing your your normal pipeline your normal workflow but add in those relationships you already have that data don't throw it out just add in the graph relationships so you can add in another dimension to your data and increase your predictive quality so if we think about data science the goals of data science are usually in three large categories I would say John have mentioned the first two better decisions how do we support people and domain experts that have to make decisions higher accuracy and that's all around graph based prediction when we're talking about graph data science and then the other goal that people want to attain is new ways of learning AI machine learning it's all about learning in ways that we're not accustomed to as humans you know how do you learn in a different way and then how do I trust my results and that is an area we're going to talk about a little bit and graph native learning that's a little bit further off that's a little a bit where the research is heading right now but I think it's an important step now there's a logical path that maps to these three big goals and I would say you know steps to get there and so these are very practical steps that people can get started with now knowledge graphs it's a well-known well-established way to bring in lots of information and and follow the connections graph analytics how do I look at my graph or my network as a whole and have insights about the entire structure graph feature engineering that's about adding predictive data to my machine learning graph embeddings kind of a type of feature engineering but on more complex structures and then the graph neural networks which is a little bit about the new ways of learning so we're going to walk through each one of these I'll give you a couple examples in each area so you can kind of see how that might apply and I should say I'm gonna go back one I always forget to say this the reason why I've got the arrows moving forward on this is that it it's not that you go from one step to the other and then you stop using the former tools knowledge graphs we expect to always be around even when you're doing very advanced AI and machine learning especially if you're using graphs you're gonna want a knowledge graph under there so they're more of a layer on top of each other as you add in more capabilities so knowledge graphs are all about being able to do connected advanced search and support your domain experts so an example of this would be with a company called Roof Inn ative they used to be part of Thomson Reuters and they spun off they have a tool that basically lays on multiple different graphs so not just one graph they have multiple graphs they're bringing together of financial information things like corporate data that's publicly available news that is about companies that might be in someone's portfolio or an industry as well as cross relationships and when I think about cross relationships it might be something like somebody I think John gave this example somebody who's a board member of one area might actually be a CEO of another company may actually have a large ownership in a third company and perhaps they have business dealings and so understanding those cross relationships is very important so they put together these different graphs and with queries there are a lot they have tools and dashboards for their financial analysts and they basically allow the financial analysts to look at what's in their pro folio and look at credit risk do investment risk and they would on average have about 200 companies in their portfolio and be able to do custom weights of the relationships between things so for example you might decide that somebody being on the board has a lower weight for whatever reason and somebody owning part of a stake in a company if it's above a certain threshold maybe that has a higher rate so so the analysts were able I'm kind of scared of the mic the analysts were able to basically wait things to what is important to them and they were able to basically search and do investigations and then make their decisions so this is supporting to the experts the decisions they needed to do as part of that a little snapshot they gave us in a one week time frame they were able to do about 800,000 shortest-path calculations in order to rank what news to give to people like maybe it's higher ranking if you're pro folio has a lot of oil and gas you want you know the news about oil and gas to be of a higher ranking if you've got a pro you know if certain company enter your portfolio you want that news to get a higher rank and I should I should kind of pause for a second say shortest-path calculations can be really intensive so if you imagine if I want to do a shortest path between a and Z and there's fifty or a hundred or a thousand potential different paths to get there I have to evaluate each one of those all the hops and then calculate either by hops or by weights which one is actually in your shortest path and they were able to get a hundred thousand in a week that's average what they would do and they were able to optimize those searches to be about ten milliseconds or less so very snappy very good so that your efforts could make the decisions that they needed to do quickly alright so the next area is graph analytics and that's kind of a broad term and when I talk about graph analytics I usually mean that you're either doing queries or algorithms in order to do some kind of offline analysis you're not necessarily trying to do real-time you're trying to understand what's the topology of my network where are things clustered together where are the influential nodes I want to understand different pathways it's usually what people mean by analytics and graph analytics now just a quick aside some people asked well what's the difference between a graph algorithm and a query so you can think about a query as something that you use you kind of type in if you're a developer or an analyst when you know exactly what you're looking for an example would be how many relationships does does somebody need how many relationships does Amy have it's a very quick analysis how many hops out are her first flagged friends for some reason so I know exactly what I'm looking at graph algorithms a little more unsupervised you're running those to understand the more about the whole structure of your network you don't know exactly what you're looking for but you want to find the best communities you don't know who's going to be in them yet but you want to run an algorithm to say you know what are the what are the tightest communities in my network so when you're using graph analytics using queries a quick example here is in the financial sector looking at fraud you're trying you probably already have everybody already has a pipeline or some process for fraud and you're really just trying to improve that so you might want to add queries like how many flagged account are in an applicant's Network for hops out would be an example I'd like to know if there are any bad actors for hops out from somebody applying for let's say a credit card um you also might want to know how many common login IDs or variables of this account are common to somebody else maybe that's phone numbers that might be common maybe it's address that might be common maybe it's the IP of their login that might be common now what people usually trying to do is generate these metrics and then add them to some kind of process so let's say somebody's applying for a credit card and you notice four hops out or five hops out they have a high number of flagged accounts things that are suspicious maybe you turn that credit card down maybe you send them to another offer now the interesting thing about this these are I call these deceptively and I thinking my mics off is that right yeah okay so well actually I stay here in case it magically turns on but oh and it did yeah so I call these deceptively simple because for us as we think about them as human it's like okay I just want to go the next hop out and the next hop out that's not so bad right and a neo4j it's not and it's very fast because we actually we actually the way we store information is very much like linking lists so I'm just pointing to the next and pointing to the next node computers are really good at following pointers but in a relational database management system going beyond three hops is really difficult and we talked to a lot of customers especially if their network is really large where in order to go beyond three hops it just takes too long and becomes impossible because if you think about it you've got all of your information stored as tables in all these different locations and you have to go to an index lookup find what you're looking for and then do a join and then a join and then another join and then another join and especially if we're talking four hops out imagine how that fans out at each hop your anning out to their friends as well and so that can be very computationally expensive it's very quick with graphs and so that's an example of how you might use graph queries to do graph analytics offline another area that we see a lot of use right now is in graph algorithms these are generally more unsupervised and as I said previously you're trying to understand the structure of your network these are five different areas of classic graph algorithms pathfinding how do I found the best route between a and F what's the least cost routing for my phone call centrality those are all about influence and importance so who's the most influential person in the network or what's my biggest vulnerability we see this a lot in cybersecurity and I like utility bottlenecks where's my bottleneck would be an example of a centrality community detection just what it sounds like how do I partition my groups maybe I want to look at who's you know I just want to see the most tightly knit group or some groups that are kind of off on their own for some reason so all about understanding the communities in your network link prediction is all about understanding and trying to predict relationships that will occur in the future so are these two nodes likely to have an interaction in the future or do they already have an interaction in reality and I'm missing it in my data similarity algorithms look at how alike a nodes are based on a tree buttes so maybe it's based on their cuisine preferences their zip code whatever attributes you might include to an entity it does it kind of a basic almost like a set comparison of you know what are what are the most similar nodes in my network so I don't expect you to read this but you can try if you want we didn't even get all of them up here so we have over 45 graph algorithms in neo4j right now we have a heavily used graph algorithm a library and the demand on that has been astounding for more algorithms all the time we've got a lot of enterprise customers that are starting to use this so we're actually developing another library we haven't announced this yet but we're going to extend the graph algorithm library and create a graph data science library leveraging a lot of the similar algorithms but we're going to add in a lot more enterprise capabilities like parallel graph loading we have the ability and we're adding the ability to do seating so that you can get more predictable results in production environments graph algorithms aren't all deterministic so we had to add in some functionality there we're gonna start with a subset here and then continue to add on algorithms as well in that enterprise grade library and that'll be available in the next few months so you can either hunt me down on Twitter and bug me or you can watch the neo4j news line and we'll let you know when when that's available so the next area that you can think about when you're walking on that path so you thought it you've got knowledge graphs how do we help those domain experts graph analytics how do I understand and gain insights from the data I already have in my network and now with a graph feature engineering you're using those same algorithms and queries but now you're going to shoot them off into a feature vector so metrics that are predictive and use that in your machine learning models to increase your accuracy and improve your predictions now if you feature engineering if you're not familiar with it it's just a fancy way to say I'm creating addictive components or predictive elements out of my data that's it your engineering features and you're usually combining information or doing some kind of an algorithm to create new information if you will or new data points that you can then do better predictions on now when you do algorithms or queries to do this you then have to shoot them out into a vector and that's just a fancy way of saying a list of numbers and here you can't really see that extraction down there you then extract them into a list usually it looks like columns and rows of numbers and then you run your machine learning on it and the reason why people get really excited about graph and feature engineering is that as I have said earlier data scientists always say I need more information I need more data but if you already have fairly good accuracy and you've reached kind of a plateau and you just add more of the exact same type of information you're probably not going to break through that plateau what graphs do is they give you a different dimension of information a different type of information those are those relationships that usually people aren't already bringing in and so you you can break through those plateaus by adding that different dimension so a couple examples of using that if we're using graph queries this is the Telcom turn example telcos and telecom networks look very graphi they translate to graphs very easily but there were some research to look at you know can we just do with some simple queries having the domain experts help us predict churn simple things like how many calls did the person make in the the recent past what's their text patterns look like do they have any friends or people other contacts that have churned recently let's again - did mom turn that should be an individual question there but just those simple queries they could output those into the numbers into the vectors and you I don't expect you to necessarily be able to read this either but at some point they would basically have their experts say which of these features that we've queried on appear to be predictive we're gonna spit those out into numbers then do our machine learning on it and they were able to get the accuracy to just under 90 percent using these really simple queries with the domain experts well it's a nice easy way if you have a graph if you have a knowledge graph already you're doing machine learning already for goodness sakes these things are just pretty easy to test and get going with now a little more advanced would be using the graph algorithms and again we're looking at structures here and trying to add in topology I've included a fraud example here with a couple different algorithms that you could use the first one is called connected components or union-find is another term for that and that looks at groups of interactions that are usually grouped off on their own I should say so you might use this to look at people that are sharing some kind of identifiers but aren't interacting with the big group so in red here the little circle you can see these little floater groups but they're not connected to the rest of the network for some reason that seems to be highly predictive of fraud and money laundering is you have people doing things on their own but they're not interacting with anybody else or very few people another example is PageRank okay can I assume most people have heard of PageRank yeah okay cool so PageRank is a really interesting history and that it was used to give credibility to webpages a Larry Page developed it but it has been used in just about anything you could imagine PageRank because it's about influence and it's about you know what has more influence in a network so in this case I don't expect you to see this little note out here this little node had a lot of connections but its connections had a lot of connections so the way PageRank works is it infers credibility or ranking based on not just a number of connections but the number of connections that your connections have so it's very circular in that regards and it can also be used to infer transaction volumes so you can imagine lots of relationships the relationship could be transactional and you can look at that by different industries as well so you might assume that certain types of banks or certain types of accounts have a high level of transaction and that's normal and other ones have a little level of transactions so the way people deal with that is they do a personalized pagerank personalized to a type of business personalized to a type of industry and then look at people with a high or accounts our businesses with a high number of those transactions levain modularity algorithm is another really interesting one in the fraud area so levain tries to maximize tight connections within a community and lower connections between groups so these two groups as you can see there's a lot going on there there's a lot of connections there but not so much with the bigger group so we're not totally isolated but the connections are lower and so they would have a higher Lew vein score in this case and you can make estimations you can also do hierarchies with levain which is pretty interesting the fourth one I've got listed here is jacquard and that's a similarity metric so you might look at what accounts are most similar or have a lot of similar attributes you may also try to develop a fraud profile so perhaps your domain experts have said hey we know these five things about accounts normally indicate fraud and I'm going to develop my own little fraud profile and then I can just simply run a similarity and say hey which you know with a 99% similar accounts to this one fraud profile and then I can investigate those further so the next area and I actually will say before I talk about graph embeddings the graph feature engineering is probably where we spend the most amount of time with our customers a lot of low-hanging fruit because customers that are order using machine learning can just bring in those relationships and see value right away the next area that they're looking at usually is graph embeddings and graph embedding is a type of feature engineering so you're trying to do that predictive components or those predictive l but there are little more complex in their structure and so people usually talk about those in a separate context people get a little more advanced when they get into that graph embeddings basically transform your graph into that feature vector into those numbers that we believe hopefully may be predictive or set of vectors and it describes the structure of your network attributes of nodes or the relationships of the graph itself you can do feature engineering the graph embeddings based on the node just to describe all of the connectivity components of the node I think one of the most interesting areas is the path embeddings so this gets kind of exciting because you're not just embedding you know what are these nodes like what you're actually embedding is what is the path between all of my nodes and imagine that looking at a path and how complicated that could be it's impossible to do learning on that unless you can compress that into a numerical set into that feature vector you can also do it on the entire graph itself and create a complex vector on that we don't see that used a lot except for in healthcare chem and chemistry in those cases there are reasons why that fits the biology a little better now I'm not going to walk through how that works but just to say here's a look tat graph embeddings this is a visual of the deep walk approach or you're basically taking a random walk along your network that gives you your traversal your paths and then you embed that you do some training on that and you embed that into your your feature vector I've just got two axes on here and XY you could have an X Y Z you could have many many axes as well so you can get very complicated with us now all right that was there's a lot there a lot to unpack there but why would you care about that well actually eBay gave us a really great example in a paper they put out about using graph and benning's for recommendations and so this is a fun example in that there's a person they want to make a recommendation for his name's Derek and he happens to have listened to his song called shape of you and there's some kind of interaction with this song from Tony I don't know what that is maybe he raided it maybe he bought it anyhow there's an interaction with Tony on that song and Tony actually happened to interact with another song called I see fire should I just recommend that to Derek hey there's some similarity there maybe but there are many many paths that you can take to get from Derek's listening of shape to you to another song maybe it's who sung it maybe it's the album maybe it's a genre and what graph embeddings allow us to do in this case a path is we're going to compress each one of those paths into a set of numbers and then I can do machine learning on it and give you probabilities and that's exactly what eBay did in this paper and they can give you the probability and I forget it looks like a castle on the hill wins it looks like castle on the hill which should be our recommendation and it's through the genre that we should be recommending it so hey you like this song here's another similar genre here's another pop song that we think you may like now if they had recommended through the album you might say hey we hear that you like the song on this album is another song that you may like so it allows us to tailor our recommendations I think the idea of being able to learn based on a customer journey or their path where are they on your website now where were they two seconds ago I want to predict where they're going to be on the next the next click or in the next hop are they going to go to Amazon to do a price check wait what are they going to do I think in recommendations this is going to be huge in the future because learning a customer journey and then being able to predict where they're going to go next with some probability is going to help serve customers better the other area that I talked to that a lot of people are interested in the graph embedding and path learning is in customer or excuse me patient care so if you imagine taking care of a patient especially if you have a long-term illness there's a journey that patients take and those fan out on every different diagnosis and every different test result you could take a different journey and so we've talked to a lot of people that are very interested in understanding patient journeys as well and then as you can imagine being able to predict with a probability where it's most likely they'll get the best success taking a next step so there we go so the final area that we're really excited about in grass and AI is the graph neural networks and that's all about new ways of learning and this is research that is going on now I don't know of anybody that's doing it publicly or commercially right now we're following this space really closely Google put out the paper about a year ago if you want the link let me know I'll get that to you and basically google deepmind's and several universities we're looking at where are we going to go next with machine learning we've made great advancements but what are the shortcomings today and how are we going to get over those what's the next big innovation area and what they came back to was that it was graphs and they believe it's graphs because they can abstract about topology better than any other neural net can do and they can actually do learning inside a graph now what the heck does that mean so it's a complicated paper I won't pretend to understand all of it but basically the idea is you're doing machine learning inside of a graph data structure and what's exciting about that is that you can input as a researcher with a graph format that you already have and then as you do your machine learning those transient states get maintained it preserves those transient states and then it outputs into a graph so input/output looks alike and I can preserve the transient say is anybody excited about this at the moment okay we got a couple people's they understand I'm gonna tell you the rest of you why this is so cool because it is really cool what this allows you to do is track and validate your decision pass if we've all heard about the terrible black boxes uninterpretable results not being of explain things so being able to track that path helps us understand and validate and Trust the results a little bit better so one that's the first point we get really excited about the other thing that we get really excited about if you geek out on this stuff is more accurate with less data now wait I said that earlier right so we we talked about adding relationships but what's interesting and machine learning is you have to pick what to add your data scientist has to pick the features to add so maybe you color as predictive maybe temperature is predictive maybe credit score is predict we don't you know you don't know ahead of time but you have to do your machine learning that's part of what you pay your data scientist to to test all these different models we believe with a graph need of learning that the graph needed learning can help tell us and inform us what features are really predictive and that'll help us get to models faster and will also help us about potentially from overfitting as well so we get pretty excited about that it is kind of a little future-looking but you can see where there's very practical steps that you can take to go from what seems fairly simplistic today with a knowledge graph to some very advanced things in the future knowledge graphs if you're not using them now they are the framework and the foundation for graph data science it's a great place to start because you can get value right away by giving your experts more tools to make better predictions and then you can easily layer on other functionality as you get more advanced we have several resources for you guys in the audience for people who just want to look at kind of the general context maybe the business level we have a white paper online if you're a data scientist take a look at our sandbox we have an algorithm sandbox you don't have to load anything it's all hosted online we've got the algorithm sandbox has data from Game of Thrones so it's a lot of fun and it has tutorials as well developers in the audience I highly recommend our desktop so you can download our desk it acts like a portal into neo4j and the graph algorithms book that you have posters out there it's free online at neo4j for at least another four or five months so early next year it won't be so get it while it's available I brought a copy so if you guys just want to thumb through it and see if you really want the electronic version but you really want the electronic version so we've talked about a lot of things today and I'm happy to meet with anybody and we can talk more about ideas but there's really just you guys can forget everything else that I've said maybe no you can forget everything else I just want you to remember one thing from here and that AI does not just equal machine learning you can't just do machine learning and expect great results you have to add in context in structure to have more accurate and more informed machine learning and artificial intelligence so with that I appreciate everyone's attention and patience through the microphone issues come find me I'm easy to find on Twitter I've got an unusual last name so I'm pretty much easy to find on the internet so appreciate and I'll talk to some of you later you 