 special shout out to surf shark  vpns for sponsoring this video   keep your entire digital life secure on all your  devices with just one account using surfshark vpn i'm ricky with Two Bit da Vinci and this is our brand  new series versus where we'll be pitting people   technology and ideas against each other now the  idea for my inaugural episode actually came from   a twitter feud that i had recently basically what  happened was a gentleman on twitter a tesla fan   said that elon musk was the man who could  develop a self-landing rocket so of course   he'll figure out self-driving cars does  the perceived difficulty of rocket science   actually make the south landing rocket  the more difficult engineering challenge   or is the self-driving car actually more  difficult so that is what i want to answer   today and i think the way i'm going to do it  is i'm gonna break it down to three categories   hardware required software required and lastly the  testing validation and regulatory approvals needed   in order for the technologies to flourish  as i mentioned this is a brand new series   so if you like what we're doing here consider  becoming a subscriber join us on patreon if you   want to be a bigger supporter of the show  or join us on youtube as a youtube member   all right so let's jump right into it and  we'll start with the self landing the rocket   i'm talking about is the falcon 9. the falcon  9 is spacex's bread and butter at this point   it can be grouped up into a larger cluster  called the falcon heavy and its payload   capabilities are pretty immense and they are being  operated right now sending payloads into space   so when elon started spacex his idea was to reduce  the cost of launches into space by a factor of 10   and in order to do that the obvious idea  was to make the rocket reusable before a   rocket has two stages and the first stage  was discarded after it gets you into the   upper atmosphere but this rocket has really  exotic materials and if it could be reused   that could save you a ton of money and that's  exactly what elon set out to do his goal falcon   9 was that when the stage one part of the rocket  was jettisoned that it could then have boosters   guide it back home and land at a landing site  allowing it to be reused over and over again   so that sounds pretty amazing and i completely get  why the guy on twitter was was fighting with me   on this and also one of the things he mentioned  which i thought was pretty interesting was that   if a self-landing rocket was so easy then why do  the chinese say that they're about 10 years behind   so that's actually a good point and part of  the reason why is flight testing and validation   and that leads me to my first bucket the hardware  in the case of the falcon 9 what is different   about it compared to every other rocket is that it  has flight surfaces and rocket boosters in order   for it to be able to guide itself back home after  the flight and in the case of what the chinese   or other agencies are way behind is because  their rockets don't have fins that can deploy   or thrusters that can help to guide the aircraft  back home and with rockets what's really difficult   is getting it validated if you take an old rocket  design and you throw on fins that can deploy for   stability you have to go through a rigorous  flight testing process because in flight there   are different envelopes for example when you  go from subsonic to supersonic when you break   the speed of sound or when you get into the  higher atmosphere and the air density changes   so all these complications can result in all  sorts of crazy weird flight characteristics   for example flutter or other things that can  cause your rocket to kind of go out of control   so as a result if you're going to do this you  kind of have to build it from the ground up   and this is where elon musk genius for me really  shines when he set out to build the falcon 9 he   knew it was going to be reusable from the day  one as a result the hardware that he was testing   on day one when let's not forget that they had  tons of accidents and failed tests but all the   while they were validating a system that could  land itself so from a hardware perspective you   have to have these kinds of fins that can deploy  you have to have boosters that can guide the craft   back home safely and as far as sensors go you  have to be able to have telemetry of your altitude   and your speed and feed that all back into a  computer and to calculate the information needed   to give you a safe trajectory back home now spacex  does land these rockets out at sea which is way   safer because if there's any kind of an accident  you just fall into the ocean and you have a rocket   like we've had in the past or on isolated areas  with open air space where there's a launch pad   finally let's talk about the computational power  needed in order to have a self-landing rocket   honestly a self-landing rocket could run on your  smartphone in your pocket it isn't especially   complicated and we've actually had flight  computers that can calculate trajectories   to the moon and back and to mars um for decades  now and they've run on very primitive computers   so now let's switch gears and talk about software  at the heart of the self-landing rocket you have   the gravitational equation and the idea here  simply is that the more massive an object is   the greater the gravitational force will be and  the second thing is the r which is the radius   apart they are the distance the part they are so  if you were to go twice as far away from the earth   as you are now the force of gravity would actually  drop off by a factor of four which is r squared so   the game here really is to feed in all this data  from your hardware sensors like for example your   gyroscopic data for where you are in 3d space your  altitude your bearing your speed and you feed all   this back in and then you continue to calculate  where your trajectory will take you based on the   gravitational equation and by doing this and  continually correcting and deploying fins and   applying booster power you're able to continually  guide the rocket and keep it on track now   i'm making it sound easy and this is anything but  easy it's literally rocket science but at the same   time it's an equation and it's just a couple  of sensors it's not actually as bad as it seems   and finally that gets into the third part which  is the validation testing and regulatory and i   might even break this up a little bit but the  validation and testing is incredibly complicated   for this system you have to test it which  means that at worst you're going to blow   up millions of dollars worth of parts and you  have to keep going over and over again and have   an entire flight test data team on site and  telemetry and and and data processing and to   look at what's going on and to make sure that  the rocket is flying and behaving correctly   this process has taken spacex probably about  10 years to do and that's about what's average   again why other agencies who are trying to  have self-lending rockets today are about 5   or 10 years behind but the final part is the  regulatory approvals because these companies   operate in huge open air spaces where there's no  other commercial aircraft and often they land in   the ocean for example a big reason why in the  u.s we operate out of florida because we have   wide open airspace and we're able to land  and if there's any kind of malfunction   the craft will end up in the ocean so in terms  of regulatory approvals you have to get approval   through nasa and the government the faa there's  a ton involved there to be sure so validation   testing and regulatory approvals is pretty huge  for the self-landing rocket all right so now this   wouldn't be a versus if it was easy and so allah  switched gears and talk about the self-driving car   one of the reasons i mentioned this to the  gentleman on twitter is there is a fallacy   that sometimes what is perceived to be more  complicated is more complicated but sometimes   just because something looks really simple doesn't  mean that it is in the case of a self-driving car   this is a perfect example before we get back to  the show i want to take a quick moment and talk   about our sponsor surf shark if you've ever used  public wi-fi at the coffee shop or an airport   your data isn't very secure using a vpn service  can encrypt your data and ensure no one can see   what you're doing online and with an exit node  in some other location people won't even have a   clue where you're coming from that's interesting  because where a site thinks you're coming from   might determine the price you pay for things  like airplane tickets so try a few different   locations and make sure you always get the best  deals or maybe you want to access streaming   content that is only available for people in  a specific region you could do all that with   surfshark so take your online security the next  level and get surfsharkvpn at surfshark.deals   tupa davinci and enter promo code tuba  davinci for 83 off and an extra three   months for free and thank you sir shark for  being a friend of the show i actually think   the self-driving car is one of the most difficult  engineering challenges we're solving right now   and it's because it actually involves quite a few  different disciplines in order to make it possible   let's start again with the hardware requirement  in the case of a tesla you have eight cameras   positioned all around the car you have radar  sensors on the bumpers interestingly tesla doesn't   have lidar and their reasons for not wanting to  include that in their tech stack is something that   i'll cover in a future episode but for this  video let's just talk about what tesla does   include so between the eight cameras and the radar  sensors there's also gps for the car for example   and also the car is constantly monitoring yaw and  steering wheel inputs and brake and accelerator   inputs and all that other sort of stuff all the  types of sensors you'd expect for a self-driving   car now all these things feed in together into a  computer that then drive the car for you so from   the hardware perspective the hardware required  for the self-landing rocket is more difficult   now let's switch to software and this is where  the self-driving car problem becomes incredibly   complicated and that's because unlike the  gravitational equation which is sort of a set of   code that you can write and predict how a system  will behave in the case of a self-driving car what   you're actually building is a neural network which  is a type of computer algorithm in essence that   has a bunch of series of connections and nodes and  as information is fed into it the computer learns   and makes better and better connections let's say  you start a new neural network and you say hey   is this apple a fruit and the computer says yes or  no it's basically a coin toss it might be right it   might be wrong but when it says yes it's a fruit  and you say you're correct it then says okay   it starts to make bridges and connections  maybe the shape of the apple or the color   or the perceived texture or lighting effect  whatever the computer vision systems can detect   it'll start to make patterns so now you show a  peach and say is it an apple and it'll say yes and   you say no and then you kind of continue to train  it this is a neural network and in tesla's case   all tesla owners have been feeding into tesla's  neural network for about 10 years now when you   drive your tesla what you're actually doing  is showing the road of what you're driving   an anonymized fashion and sending it back to  tesla so an example of this would be a bicycle   so tesla has made images of cars and the backs of  cars and tells the computer track cars and find   out what cars are doing on the screen but then  for the first time a guy drives by on a bicycle   and the computer says that's a car and tesla's  engineers have to say no that's not a car that's   a bicycle and now tesla's neural network knows  what a bicycle is and can start to detect it   but then there's other problems that arise  for example maybe the car in front of you   is towing a bicycle on the back of it like just as  a trailer attachment is that a bicycle should the   computer say that's a car and a bicycle no the  bicycle is kind of glued to the car if you will   but the computer doesn't know that at first it's  going to track it as a bicycle and start to react   to it like should i slow down is that bike going  to cross in front of me so what tesla then does   is okay interesting this was not what we expected  and by the way the way tesla does this is by   having kind of a ghost driver this is what tesla's  shadow drive mode is pretty much doing tesla is   watching you drive your car and predicting how  to drive and as long as yep he's turning right   i was gonna turn right great everything's good  but then suddenly i was gonna turn right and he   stopped that information to tesla is okay  something actually bad happened what's going   on why was not ready for that and that data  gets sent to tesla to review and it turns out   oh it was a bicycle so then tesla sends that  information and says hey all tesla's out there   go find you this thing called the bicycle and via  software update in the new self-driving computer   software the teslas will start to say yeah i  believe that's a bicycle and send it to tesla   so then tesla's engineers get it and they say  yep that was a bike that was a bike that was not   a bike that was a bike and continue to train the  network so the training and data collection goes   both ways engineers can say this is a bike and  send data to the computer and say got it or it   can ask the computers on your car send me pictures  of what you think is a road sign or a bicycle   and that information is sent to tesla for review  and approval and this neural network continues to   grow and get stronger the power of this system  is that the now one million tesla sold are all   out there driving and so this data is aggregated  and every tesla gets smarter all the time tesla   now has a beta their new full self-driving  beta which is showing a lot of promise   but you can rest assured that we're still probably  a few years away from having it completely 100   commercially available like typically as a  software engineer what i would do is okay   i made a program to take these files move  it over here back them up and do this   oh crash something bad happened okay what  happened turns out this file name had a   asterisk and the asterisk was not represented well  in the operating system and that caused the crash   okay i'll add code to say don't allow special  characters i'll let code continue to beef it   up but that is not how self-driving works  you cannot say oh okay he ran through a red   light stop at red light you can't just add that  code because the complexity of the real world   will never let you finish you can never cover  every single test case or use case instead   you have to build a model of prediction that  can reliably and accurately predict the future   to sum up the difference in software i'll say  that the self-lending rocket is deterministic   meaning i can program it to do something  and even if i find some variations i can add   extra use cases and extra envelope testing to  make sure that i can get the right result the   self-driving car is not i am developing a model  of prediction to understand what the world will   throw at you because i can never ever completely  fully determined what the computer might see   i did mention that the hardware was way  more complicated for the self-landing rocket   with one exception in the case of the computer  and the self-driving car the computing power is   dramatically higher in fact tesla makes their own  system on a chip or soc this is not like an intel   i7 or i9 off the shelf these are dedicated cores  with programmed instruction sets dedicated to this   sort of predictive neural engine operations so  as a result their hardware requirements for their   computers are drastically higher than any falcon  9 rocket all right lastly for the self-driving car   this is actually another scenario where it's  probably going to be way more complicated testing   and validation is going to be a huge effort  and unlike spacex who just has to clear with   themselves the self-driving car has to deal with  every other car company and every other standard   and protocol that's going to be introduced next  couple of years you've probably heard the levels   of autonomy and as we get closer to level 5  full autonomous cars you can imagine how much   conversations are going to be had between  regulators and car manufacturers to make sure   that everybody complies and adheres to all the  right rules plus the final part of this is the   regulators because i don't know if you know this  but we probably have the technology required for   planes to fly themselves completely without a  pilot today they could take instructions from   a flight control tower divert loop around the  airport for a couple of minutes and then land   or be diverted to another airport we can  have computers that fly airplanes that do   all that today but yet we still insist on a  pilot why is that the reason really is as a   human being we just don't feel comfortable with  machines in charge of cars and that is the other   challenge that the self-driving car is going to  have to overcome the cord of public perception and   you can bring up all the facts that a self-driving  car makes better decisions doesn't get impaired   doesn't get duis can see better at night is  more predictable and more communicable but   at the end of the day humans and regulators have  to get together and be okay with this technology   so to my mind the software and the regulatory  and validation process for the self-driving car   is going to be by far a much bigger challenge  so while elon is in charge of both and while the   south landing rocket is incredibly incredible and  very challenging from an engineering perspective   i think the self-driving car is by far the more  difficult challenge so what do you guys think   do you agree disagree i'd love to hear your  comments i actually ran a poll on twitter and   on youtube and you guys agreed with me actually so  you guys are very smart you guys all know this so   but let me know what you think and if you believe  the rocket is more complicated leave us a comment   about that as well finally before i wrap up i just  want to take a quick moment and thank all of our   patrons on patreon your support on patreon or as a  youtube member is what makes this show possible we   put a lot of time into these shows and if you want  to be a rock star supporter of the show please   check out the link and join us on patreon and  if you like this video and you want to see more   stuff like this check out our video on starlink  the cool satellite constellation that will bring   internet to every corner of this world or talking  about crazy incredible computers and how hardcore   the processing power has to be for a self-driving  car check out this video we did on quantum   computers and why they might be just the thing we  need for this kind of a undeterministic data set 