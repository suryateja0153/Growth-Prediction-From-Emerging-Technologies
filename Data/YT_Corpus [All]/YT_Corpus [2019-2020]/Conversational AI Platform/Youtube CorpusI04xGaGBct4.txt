 [Music] hi i'm omar aftab and i run program management for power virtual agents hello i'm marina colonies and i'm a senior program manager at power virtual agents team leading bot framework integration best power virtual agents and today we're going to talk about how power virtual agents microsoft's graphical about building experience for business users and developers can be extended with azure bot framework capabilities we're going to show them about this functionality in action and we're going to talk a little bit more about what's next so power virtual agents empowers everyone from subject matter experts to developers to easily create and maintain powerful chatbots using an intuitive low-code graphical interface there's no coding or ai expertise needed and bots are quick and easy to build and deploy customers rely on power virtual agents to enable their business users and subject matter experts to build these bots but when the customer has a specialized or custom need they can also extend these bots with the power of microsoft bot framework historically though this process has been rather complex you could only link to an externally hosted bot framework skill and even that process required multiple steps users could use the bot framework sdk they would have to download the bar framework composer tool from github you'll have to code up the skill create an azure subscription host that scale import the skill manifest into pva and then the skill would be hosted and run uh separately and the customer would get uh a separate bill for it but now uh with the work that we're announcing today extending a pva bot with bot framework is seamless you can easily discover and invoke the bot framework composer tools from with from within week pva developers can code up the bot framework functionality using the tool using the full power of the sdk using adaptive dialogs and language generation and they can publish it back to pva with a single click these assets then get hosted and run directly inside of the pva sas and the user can access them directly from inside a pva and of course now there's just the single pda bill and no additional complexity so to see some of this functionality in action and to tell us more i'm going to ask marina columbia to come up and talk a little bit more about this thank you very much omar hello everyone my name is marina colombia and it's my pleasure today to show the both framework integration track with pva that we have been working on for a while now today we're going to talk about the features that we're going to get in uh together with bot framework composer into pva and we will see a demo of those features in actions so let's talk about the features as omar has mentioned both framework composer tool is now available directly to use from pva and this is an open source tool which has been generally available for a while it is also available on github to download separately and there is no charge to use this tool it's free of charge whether you use pba ux or the stool or combination of both there is no extra costs so what do you actually get in both framework composer and why would you actually want to use it to extend pva well for starters you're going to get access to adaptive dialogues functionality and what is this adaptive dialogues uh technology in microsoft this is your way of coding up very complex event-driven dialogues which can handle uh cancellations interruptions context switching and you can do it using a guided visual experience which is available in bot framework composer it's also worth noting that adaptive dialogues actually have declarative notation so if you really want you can actually write them by hand in composer as well but the ui is there for you to help you with your rapid development so all of this and adaptive dialogues what does it actually mean for you uh for your user it basically means that your user can start your dialogue at any place they can traverse your dialogue in any direction they can come back and redo the step and they can completely switch context in the middle of the dialog tree on your board and your bot will be able to handle this very gracefully in addition to adaptive dialogues capability you will get language generation capability from microsoft with language generation in composer tool you can create very robust response variations in your bot to enrich your bot to make it sound less robotic you can create uh conditional response variations conditional variants of responses that will be picked at random at the run time for your body your boat will never again sound robotic you can also use probability functions which are available in lg and also function injections basically you can inject them in the middle of your response and the calculation will be performed on the fly in addition to prebuilt functions you will get access to a lot of functionality like ability to manipulate json ability to do complex comparisons uh language generation is very very powerful it is very simple to use the notation for language generation is a lot json-like so please you actually see it on the screen right now please go ahead and check it out i will give you a link later in this presentation so the next would be adaptive cards you will get the full power of adaptive cards together in your bot framework integration you can get them into pba with a single click adaptive cards allow you to create rich dynamic and interactive ui uh which you can display images you can display videos you can display image carousel you can create a form with a submit button you can of course create multiple options out of our generated list of items which people can just click on and get this data in this is a very powerful technology from microsoft which becomes available at your fingertip in composer of course you can connect to third-party services and apis by using both skills and also http invocations directly in composer and as for nlu options that you will get in the composer which is invoked through pba there are two options one of the options is to keep using pva nlu it is available to you just like you had in power virtual agents the same nlu is available to you in composer or you can use regex both options will be supported at ryan time by power virtual agents engine and you will have shared access to all the global variables entities and context as well so you can basically update and modify information and variables between pva scope and both framework asset without needing to have input and output parameters at all so without further ado let's actually see how it all works together for this demo i as a business user is tasked with creating a shopping bot using power virtual agents and i will enlist tony the developer to help me up to use both framework to build up a complex functionality for the shopping cart that i need let's see how it actually works in action so here in power virtual agents ux i already have a bot going on i have created a shopping bot and i have created a few topics in this board which represent my business logic it was easy for me as a business user to do so let's test it out what is it i have created so for my shopping cart i of course want to be able to add an item to my shopping cart let's add one item i want to add a sandwich and of course all of this i can just test out in my pva right away okay let's see if i actually have a sandwich in my shop in a cart let's verify that i have a sandwich great what about adding a can of soup to my shopping cart okay let's see what i have in my shopping cart now okay it only showed up the last item but i actually have more complex requirements for my shopping cart and i am going to share this bot with tony the developer to ask him to help him to come in directly into power virtual agents and code up complex functionality for me using both framework composer i have some business requirements that i have passed on to tony and for my shopping cart i want a lot of multiple items to be held in my shopping cart and but my user looks into their shopping cart i want them to see the whole list with visual representations what they have right now of course i want them to be able to delete something from my shopping cart and i also would like to ask tony to add some special telemetry to my dialogue so we can use it for analytics later on so let's see how he can help me here okay let's create a tony is in my boat and he's going to so for this demo tony the developer creates the shopping cart logic and bot framework composer and he can seamlessly publish it the power virtual agents bought for me to use and test out let's see how he can actually do it so i give access to my bot to tony and he can now go in and use power virtual agents ui to access both framework composer to create that i have the adaptive card power virtual agent bot loaded in bot framework composer and i'm going to show you how you can add functionality and expressiveness to a bot created in power virtual agents i can see the triggers as we saw earlier in the demo add delete clear and show and i can toggle into code mode to modify the bot's logic directly in composer using a text editor if i would like what you see here is the logic executed when we've understood the user's intent is to add an item to their shopping cart i'll modify this by adding a custom event called on shopping cart changed and passive information associated with the current term that my event handler can capture and do interesting stuff with i'll add type and value properties in an object to be sent with the event to represent the current operation and its associated metadata which in this case is the item being added to the cart i'm also configuring this event to bubble which means the parent dialogue has the opportunity to handle the event i'm going to copy this event action and paste it into the clear shopping cart dialog and modify its parameters to be the clear type and its value would be the count of items in the cart that were cleared i'll do the same thing for the delete and show shopping cart dialogs and skip ahead a little bit so i've configured this custom event to be fired when the user is making changes to their shopping cart and now i'll create an event handler called on shopping cart changed to capture these events for processing as well as generate and modify some computed data in the bot's memory the first thing i'll do is set a property to capture the information sent in with these events each event sends a single object parameter with two fields we defined earlier type and value i'll initialize another property that represents the last cart action that the user took in their shopping cart and lastly i'll also maintain a data structure that represents the history of all operations on the user's shopping cart and their associated metadata finally i'm going to drag and select this functionality and group them into their own dialog called handle shopping cart changed and what you see here is that the on shopping cart changed event simply invokes the handle shopping cart change dialog which is again editable directly in code mode as well the logic can now be reused outside of this event handler for future scenarios and promotes a good bot building practice of decomposing your logic into cohesive reusable units the last thing i need to do is publish these changes back to power virtual agents which i can do in composer by navigating to the publishing page and pushing the changes to the tenant and bot configured from pva when i started this session okay just seen how tony has created some functionality for me and he managed to publish to a pda bot literally with a single click and now it's available for me to test i am eager to see the changes now okay i can already see that there are a few new topics that came from tony and let's test out directly in pva how both framework functionality has enhanced my shopping cart i want to add a new item to my shopping cart eggs okay so what do i have in my shopping cart right now i have eggs and i can see that i have eggs that's an adaptive card what about bread great so let's see my shopping cart now both eggs and bread are there and i can visually see them what happens if i remove an item let's remove eggs so how does my shopping cart look now i only got bread left there and i can visually see it this functionality all came from both framework composer and i can import it into my pva port with a single click and it's completely testable in pva and as omar mentioned previously all of this is saved into pve and is there and running by a pva engine together with the rest of pva content there is no need for another azure instance there is no need to pay additional azure bill all of this now in a single pva instance and accounted for by a single pva bill but this is not the end of it this integration is actually bi-directional if at any point of time i as a business user want to change say the images for the products that are used in both framework composer assets or i want to change the link of the bot maybe i wanted to sound a little bit different and change the phrasing in there all i need to do is just to click on the spot framework dialog and i will be taken directly into the bot framework composer where i can do my changes and i can also upload them back into a pba bot just like tony did this is a true collaboration between a business user and developer being pulled together into the same cohesive ux so now that you've seen all those wonderful things that are coming up let's talk about the timing i'll be expecting this functionality to be landing in public preview later in the fall it will be announced in our pda blog so please check out our blog all the new feature announcements and webinar announcements are coming up in the pva blog also please check out our pva community site we have a very active site if you are working on your dialogues in pva and have a question please feel free to post it there or look for a solution there it's pretty rich by now and if you run into an issue please submit it there and somebody will come get back to you shortly we are very active on this side and there are a lot of people to help you out there with all of your questions also i would like to point out that we have this wonderful bot skills webinar posted on this link it talks about how you can use and leverage your existing bot framework investments and make them work with our virtual agents so it's very useful for people who already have bots running up and they would like to use these bots to extend power virtual agents as promised here is a link to portfolio composer please go in and check it up composer is as i mentioned open source tool it's free of charge to use and you can get it off github and start developing with adaptive dialogues right away you can learn a bit more about adaptive dialogues as well and all the wonderful functionality that they bring to the table language generation documentation is also available and it's a very rich capability which is very easy to use and code up for you and yet it's so powerful as well thank you very much for joining me and omar this session and i hope that you will join us for preview in the fall as well thank you 