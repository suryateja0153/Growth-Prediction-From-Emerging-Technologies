 (air whooshes) - Coming up, we're joined by Power Platform CVP, Charles Lamanna to take a look at the latest updates to the Power Platform that allow you to build intelligent, low-code, cross-platform apps and see them in action. So Charles, thanks so much for joining us from your home today in Seattle. - Thanks. It's great to be back on Mechanics. Thank you for having me. - Thank you. So before we get started, just a quick primer for those that are new to Power Platform. It's a single low-code platform that makes it possible to analyze you data with Power BI, automate workflows and communications with Power Automate and Power Virtual Agents, and then act on it by building new experiences around your data and processes using Power Apps. Now it integrates seamlessly with the broader Microsoft 365 cloud and has hundreds of connectors for you to bring in your own apps and services. So Charles, last time you were on, you introduced everyone to the Power Platform family and really how it can help build enterprise great apps. But what's new this time around? - Lots of new stuff, but three things I'm particularly excited about. The first is the new robotic process automation capabilities inside of Power Automate. We have a bunch of big updates since we last were on the show last November to really make it easier than ever to go record mouse clicks, keyboard inputs, and Win32 application experiences and then play them back in the background. That way you can automate tasks, even if there's no API and all you can go use is a Legacy application or Legacy experience. We also announced the acquisition of Softomotive, which brings an additional set of RPA capabilities to Power Automate. The second one is Power Virtual Agent. That's the newest addition to the Power Platform. We've gone and really improved a whole bunch of different experiences there, things like additional channel support, so you can work inside of Teams and WhatsApp, as well as making it easier than ever to go integrate with Azure Bot Framework or Azure Bot Framework Composer to bring in additional codefirst skills inside the Power Virtual Agent design surface area. And lastly, we've really been focused about how do we go make the Power Platform respond to our new remote work reality, which I'm sure if top-of-mind for everybody and it's the reason I'm at home right now. And we did that kind of in two big items. The first is making it so that we have much better Teams integration because people are spending so much more time inside of Teams. So Power Apps now has responsive app templates that work on mobile, as well as desktops, and better understanding of the context that's hosting the application. Additionally, we brought brand new mixed reality capabilities, so Power Apps Mobile can go visualize 3D assets in space, all without having to be an expert in MR. - So lots of really great updates. I know you're not one to shy away from some hands-on demonstrations, so can you walk us through a few examples of some of this tech in action? - Of course, and as you know, I like to always show the demos in the context of a real customer use case. In this case, it's a mobile application built by GSK, which is a global healthcare company, and what this is application is focused on is something called zero accident promotion or ZAPs. And what ZAPs do, is they make it so that the workers at GSK can record workplace hazards, workplace safety risks, and get them pushed back to corporate, as well as to go take actions in response them. So if I say click through and look at all the different ZAPs in my area, I get an incredibly different map experience. And what this map experience lets me do is visualize all the ZAPs that are in the facilities around where I physically am located right now. As I go click through all these different items, we can see that geo-spacial awareness is incredibly powerful, but I also have the standard list or gallery on the bottom for all the different ZAPs. If I click through into one of these ZAPs, we can then see I get information about what that workplace hazard is. In this case, it's a slippery area in a hallway where someone can fall if it's wet. I then can go rate each of these individual ZAPs based on a risk score, based on its severity, as well as its likelihood of happening. If you look at that risk score, pay attention to it because it comes back later in the demo as really important. Additionally, within GSK, the last item is that you should always be taking actions to mitigate risks and hazards in the workplace. And that's kind of something really core to the culture of GSK. If you see something, do something. And in this case, we can see I've updated in action that I've taken to go mitigate this particular risk and maybe I want to go put a cone or something like that to prevent people from falling when it's wet. But what's great is I can go use the brand new mixed reality capabilities so that I can actually visualize in 3D space things like the cone. So if I can say drag and drop this cone around and actually decide where I want to place it, I can do that inside of the Power App just using a completely native control without having to be an MR expert. And if I go pin it right there, I can even go record that location in the future, so when people can go scan and pan and see it. You can see inside my kitchen. It's slippery in front of my fridge, because maybe some ice cubes fell. So that's the mobile experience. Now let me show you what that looks like inside of Teams. So what I can do is I can go right into the Teams desktop application experience and I can say, "I want to manage my tasks." And this is an easy way to have a conversational experience on top of that same back end, behind the mobile application using Power Virtual Agent. It then comes back with a series of ZAPs that I can manage. I can just go choose whatever ZAP that I want to go take an action on and actually interact with it entirely via conversations, so I'll just choose 120. Based on that, I can then go take an action to say, do something like resolve, reassign, or escalate that item very easily, all inside of Teams. And beyond Teams, Power BI can also be used to visualize all that data being generated from the chatbot, as well as the mobile application. In this case, I use a decomposition tree control inside of Power BI, so I can start to slice and dice to understand what are the main drivers of risk and hazards in all the different locations across GSK's factory footprint. And additionally, it's not just about viewing the data. It's also down here in the bottom right. I can take action on this data, so I can go mitigate and resolve these issues even from corporate or from the reporting experience. And that's what's so special about the Power Platform. Across Power Virtual Agents, Power BI, and Power Apps, it's all wired up into a single low-code platform to build solutions incredibly quickly. - This is great. I loved the Power App. I love the integration with the bot inside of Teams, but can you walk us through how you built all of this? - Yeah, so right over here, I'm inside of Power Apps Studio, which if it looks like PowerPoint and Excel combined, that's on purpose. So we can see I have a great visual experience. I can see the same mobile application I was just running on my iPhone right inside of my browser. I also am able to go use a formula bar to go enter additional complex expressions. Very easily integrated. And now, if I go, want to add in additional capabilities, I'll just drill through to that ZAP screen, and we can see the map control is missing that I was showing on my mobile phone demo. And so, I can see all the same data in the gallery and that type of thing. So now if I go over and want to add a control on the left hand side, I go to the code components or custom section that I will go drag on the map control. And the map control combined to data, just like everything else inside of Power Apps. In my case, I have Azure SQL databases to go connect to and that's where the active ZAP list is actually coming from. I can wire up and connect to that directly inside the Power Apps canvas. And now, I just choose the active ZAPs collection I've already pre-built, and we can see it binds automatically and gives me a view of all that data coming from Azure SQL in real time on this map control without having to go worry about tons of different types of integrations. And all of this is filtered based on the ZAPs that are most relevant to me and where I actually am physically located. - You talked about augmented reality. We saw the cone in your kitchen in front of your fridge. How did you get all of that stuff wired up? - So inside Power Apps Studio, we have a brand new control, just easily drop on that will allow you to mix reality. It's called the View in MR control right over here on the left-hand side. And I can just drag and drop that right onto the form inside the mobile experience. I'll unlock the data card real quick. And this lets me go visualize on my mobile device whatever 3D asset I want to. And what's great is I can very easily bind any type of 3D object to this object. So if I go up here and say "Enter the data type," I'm going to go choose the output from the gallery on this card to choose between a cone or a chevron or a box or that type of thing. And I just have to write a simple little expression up here to take the selected object from that, and what will happen is when I run this on the phone now, whatever I select in that gallery, will be what actually gets displayed in 3D space. All wired up, very naturally and very easily inside that Power Apps mobile player. - You also mentioned this concept of a risk score and that it's tied to a Legacy app, and that you're actually entering data into that app. How does that work? - Yeah, in the background behind that mobile application, there's an app that looks just like this, something that hasn't been updated in 15, 20 years, doesn't have any APIs, doesn't make it easy to integrate with. And this type of application is a perfect use case for the UI flows or robotic process automation capabilities inside of Power Automate. So here inside the Power Automate visual designer, we now can see that I have a trigger that will fire whenever a ZAP is created that has a risk score greater than eight. This is listening to the same SQL database that sits behind that Power Apps mobile application. And this is what is used to go fire off all of my automation in the background, so when people to use a phone, they're actually going to go trigger an event to run on a server against that old UI. And the way I've done that is with a UI flow. You can see this UI flow took all the inputs from the SQL database record, so I can go flow that all the way down to the UI automation. And this is how I can easily go stitch together between API or databased eventing all the way through UI flows. So if I go drop into the entity, I can click through here and you can see all the steps that I recorded before. These are the UI visualizations of left clicks, keyboard inputs, different texts, and I'm able to go have these all stitched together seamlessly as part of a UI automation. And this can run unattended on a server in the background, which is something new that we shipped a couple months ago. And this is what makes it so powerful to go bridge the gap between all of your new experiences and all those Legacy applications that you have. And one of my favorite parts around this entire experience is what can happen if something goes wrong. Debugging, troubleshooting. So if I look over here, I'm in the debug view for Power Automate and I can actually expand one of those runs that failed in the past. And what's great is, I can see exactly which step is ultimately what failed, as well as to go drill through and see the GIF of the step that didn't work out. And what's great about this GIF is that I'm able to visualize in my browser exactly what went wrong, and if I open this thing up here and look at it, I can see it as the text fields are being entered, as the keyboard inputs are being run through. I can see which text field or which text box was responsible for the failure. And this troubleshooting capability is what makes it easy to have tens, hundreds, or thousands of different bots running in an unattended mode, but still be able to understand exactly what went wrong if you have an error or a failure. And all of this tied together across AI, API automation, and UI automation is what makes Power Automate so special. No matter where your data is or what your systems look like, you can go automate it using Power Automate. - You also showed a bot that was running in Teams earlier. How are we able to build that out? - So I built out that chatbot using Power Virtual Agent, which is the newest addition to the Power Platform. And we can see Power Virtual Agent has a low code experience just like everything else. And I can also go down here in the bottom left and use something called tracing. So when I enter text inputs, I can actually see how the chatbot's brain is responding to the inputs from the user. And this makes it very easy to iterate, tune, and improve my chatbot over time. I can just drag and drop up around, understand exactly which boxes were firing, and this is what makes the Power Virtual Agent so fast and so quick to build a chat-based experience. But it's not just about that chat-based experience. You of course want to also bring Power Apps inside of Teams. So we have a new capability so it's a one-click, easy experience to go bring all your apps from inside of Power Apps to Teams. So if I just go look at my app list I have here inside of the Power Apps maker portal, I can click on it, click on add to Teams, and get a great simple dialogue which generates a completely filled-out app manifest, which I can just turn around and upload inside of Teams. And this'll be converted to be completely API-native, so you won't even have to upload the manifest in just a month from now. And all of this is wired up so that I can then turn around and use this application across both a desktop Teams experience as well as on a mobile experience. So here we can see that Power App for crisis communication to go respond to COVID-19 crisis inside of our company. I can drag and expand the resolution or the size of my Teams desktop client and it just reflows in real time. It's been one of the top requests from our customers for Power Apps inside of Teams. But it's not just about what you can do on the desktop, of course. Like I said, you can also go do this on a mobile device. So if I go over to my mobile player, we can see that we have a great little experience, where I can have basically crisis communications application there as well, and I can drill in and see all the great functionality and a complete responsive reflow-based view on my mobile device. So now you can build Power Apps that target Teams as a destination, just like you would've done for web or mobile in the past. And it just works and feels very native inside that remote work environment. - These are going to be really excellent updates, especially for delivering feature-rich, intelligent low code, cross-platform apps. Now, if someone watching at home is new to the Power Platform, where can they go to get started and learn more? - So personally, I like to learn by doing, so what I recommend is roll up your sleeves and get your hands dirty. And just by signing up in the morning, you could have your first application in the afternoon, so there's two places to go learn more. The first is go aka.ms/lowcode. That's a great place to go sign up and get started. And the second is check out the Power Platform community. There's over a million members who are incredibly engaged, incredibly supportive and can help you on your journey. And you can get there by going to aka.ms/power-users. Go to those two URLs, check it out. Build your first app. It shouldn't take very long. - Good stuff. Thanks for joining us today from home, Charles. And of course, we're going to keep following the updates to the Power Platform. And by the way, if you haven't already, don't forget to subscribe to Microsoft Mechanics. That's all the time we have for this show. Thanks for watching. We'll see ya next time. (air whooshes) (electronic music) 