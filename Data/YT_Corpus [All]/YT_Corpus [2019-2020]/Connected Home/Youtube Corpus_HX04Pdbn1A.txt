 Hello People! It must have been 3 months since I last uploaded a video. There has been a lot of changes in the past 3 months. There were many of you who called or messaged me to find out when the next video would be uploaded. Thank you We will talk about the reasons for the delay later. In this video, we will see a simple and interesting automation project. Let's see what that is! I have an old Home Theatre. It’s been more than 10 years since I bought it. I don’t have the remote for it. Even the buttons are damaged a lot, so I’m unable to even switch this ‘On’. Even if I manage to switch it ‘On’, we have to select the input like whether its FM radio or the DVD input or through an external audio jack. Then we need to increase its volume. Then the default setting is 2.1 output. So we have to change it to 5.1. So many steps like these are involved. So, today, we are going to convert this ‘Dumb Home Theatre’ into a ‘Smart Home Theatre’. We will try to hack the hardware so that as soon as we witch it ‘On', all these initialization will be automatic. Additionally, we will add Bluetooth connectivity and convert it into a smart speaker Let’s see how to do that. First, we will open the front panel and analyze the circuit board inside. The buttons are damaged and don’t work properly. We would anyway not be needing these buttons for our Smart Theatre. We would be simulating the button press programmatically. If you need to pass a signal from circuit A to circuit B, you just need to press a button. Generally, Logic Low or Logic High signals are passed through when a button is pressed. If you see here there are 4 pins in a button. They would have shorted 2 pins to make it into a single pin. So each button now has 2 pins and there are totally 5 buttons here. Let's take a pin from each of these buttons and short it together So that we can give out 5 different inputs to this IC from circuit A to circuit B when a button is pressed. And circuit B can perform any On or Off functions based on its inputs. But, when we analyze the circuit board, we find that there is a common input signal for the 3 buttons and a different common input signal for the remaining 2 buttons. In order to know why they have kept such an arrangement of input signals to the buttons, we will analyze the datasheet of the IC where the button outputs join So, this is the datasheet. If you analyze the datasheet, the input signal K1 and K2 don't seem like a normal ‘On' or ‘Off' signal. They look like a clock signal. Now, I have connected the input signal of the switch to the oscilloscope inputs of my Analog discovery. You can see here, Instead of displaying just a low or a high signal, it looks like a clock signal. So, every time, we press a button, these set of signals change the state of the Home Theatre. Since we will not be needing a physical button press, We have to give the same signal through another way to change its state. How do we do that? For this purpose, I'm going to use my Arduino Nano board. Since the signal on the circuit A looks like a pulse width modulated wave we will ‘read' the input signal through the Arduino's digital pin and ‘write' it through another digital pin. The output signal from Arduino can then be given as an input signal to the Home Theatre so that without pressing the switch we can change the state of our Home Theatre. Let’s do a small test. My Home Theatre is now switched ‘Off’. Now I have set this programmatically such that, in the Arduino, as soon as the Arduino board gets reset and within 100 milliseconds, we will simulate the input signal of the power switch. I’m now loading the program. As soon as this is loaded, the Home Theatre should switch itself ‘On’. Let’s see if that happens! Programming starts! Yeah! It’s switched ‘On’! Similarly, we would need to program for the remaining pins too. We have now done the programming. We need to fix the programmed Arduino board to the Home Theatre. We will need to solder all the corresponding inputs and power signals to it. Let's stick this with glue. Alright! Time to test this! The Home Theatre is ‘Off’ now. Let me play a song now. As soon as I switch ‘On’ the power, and after 5 seconds, the Home Theatre should switch itself ‘On’. Powering ‘On’. 1, 2, 3, 4, 5. Great! Home Theatre is switched ‘On’ now! Now it needs to select the input from Audio jack, increase the volume and convert it to 5.1. Awesome! So, one part has now been automated. Let's go to the next part. I usually play music from multiple machines or using my phone. That being the case, it’s not practical to be connecting wires for all these devices. So, I am planning to convert this to a ‘Bluetooth Enabled Smart Home Theatre’. That's quite simple. I have tried many options for this. But the most appealing to me was to use this particular module. This is MH-M28 Bluetooth Audio Module. We have a Power supply input and a Stereo socket as well. Apart from that, we also have the pin headers for the power and audio inputs. Take a close look, we have the left side audio, right side audio, ground, and the power supply inputs. Let me now connect my speaker and power to the Bluetooth module. Let me now check if I am able to control this from my mobile. I am enabling Bluetooth and trying to connect to the module. I am able to control and play the song from my mobile. Now let's place this set up inside the Home Theatre and glue it. Let's remove the back panel. We need to find the pins connecting the audio jack to the PCB board and solder wires from those pins and connect it to the Bluetooth module. Let's close it now. The end-to-end set up is almost ready. Let me use my computer to connect via Bluetooth and find out if we can play a song. Awesome! That’s it. That’s all for this week. I’ll meet you all with another interesting video next week. Thanks for watching this video. See you again. 