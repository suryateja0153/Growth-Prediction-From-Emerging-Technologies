 I'm Shiv, Shiv Iyer, Founder and Principal of MinervaDB. So I just wanted to talk quickly about me. I'm an open source database systems operations geek, and also the founder of MinervaDB with core focus and interests on performance scalability, high availability and data SRE. For over 18 years I've been open source database systems, worked for some of the best companies starting with MySQL AB, Sun, mostly i was working from Asia-Pacific and Southeast Asian offices of Sun. I worked as a data SRE for PayPal, eBay, AOL, National Geographic interests, Yahoo Japan and Percona. I'm currently the Founder and Principal as I said, with over 350 customers worldwide.  Most of them are internet properties, so 90% of our customers are internet properties So that means the rest of the 10 percent are ISVs and that really has some connections to today's talk. Migration Talks, MariaDB Migration Talks. So most of that started as some curious conversations with some of the independent software vendors who are into the business of providing software infrastructure for banking, financial services, insurance and also connected devices for health care business. Interestingly both of them carry a lot of sensitive, private data. So when they started talking to us, They started the conversation like "hey we need an alternative for open source free software for Oracle and we can see you guys provide support and services for open source database systems." Interestingly, we provide the same... what more, or then, prospective customers were interested about, MySQL and MariaDB. The conversation started the biggest question for us to... the privacy and security, or that question it was the biggest concern and the conversation started like hey we're happy that getting a community-supported open source free software database systems infrastructure but then, what about the privacy and security. So every day, every meeting we had there was a conversation on privacy, so i'll talk about that in detail Of course performance rules the transaction processing system data data processing systems. Scale, most of the banking, most of the health tech companies have now of their consumer-facing internet applications on mobile devices, maybe even on the variables, so scale was definitely a big thing. The transactions should be reliable because sensitive data, which is governed by both the law of the land, and other industry compliance standards. The biggest concern started at some phase of the conversation which was also, during most of the conversation, was the complexities in open source licensing Some texts were even not clear for the corporate laws, so we even had an opportunity to sit with some of the lawyers and read the licensing norms. GPL was quite easy for everyone to understand. There was nothing... nothing missing between the lines or something was grey between the  lines, so GPL was good. BSD open source licensing was the one, but luckily we were in talking post basically The cost of maintenance operations... I talk about this in our slides, but then maintenance operations, licensing complexity, privacy and security were the leading topics of our conversation. So, what was so exciting about migrating to MariaDB? One, we are a big MariaDB fan company. Most of our engineers, most of our consultants are from MySQL AB, from MariaDB or they supported MariaDB or  MySQL for some of the largest internal properties. Open source, free and community-powered project was really a big point of interest. And again, they were all Oracle customers, they are all completely an Oracle shop. Their entire application was built on Oracle, so definitely they were looking for how we can have another database system which is 80 to 85 percent compatible, or feature-rich like Oracle, and how we can evaluate, and so the conversation was always in that direction, licensing complexities, the cost of ownership of the license, and the investments on the infrastructure for building an Oracle-powered database application and interestingly, very interestingly, the DBS bank story evolved somewhere close to that time period. So MariaDB supported DBS and that story was used several times, hey look, you know, there is a bank in Asia Pacific Southeast Asian markets, they are on MariaDB, also there are a lot of internet scale data infrastructure, like Google, Red Hat, Wiki, Nokia, and several of our customers are at least close to this volume. So we used to show them, hey, you know something, we process approximately 300 billion ad impressions for one of the largest ad networks in the world, very write-intensive, completely on MariaDB, and it works great, so a lot of production-level  benchmarks and the metrics we shared so that they get some idea we are talking something sensible. As we increased our frequency of conversation, the topic is always, like, hey how much do I have this ability to... the database performance metrics,  what are the native tools provided supported by MariaDB to give us this ability to troubleshoot more efficiently. Definitely, there was there was no compromise on the reliability, and the availability was, was one of the key areas, so the system should be capable of a redundant database infrastructure, there should not be any single point of failure, there should be a  MariaDB-aware load balancer in place which takes care of the failover. Like I said, there was no scope for data loss. It's a financial institution which also supports several health care providers, so that means they provide insurance... they have external connections with the systems which take  care of several sensitive, health care sensitive databases. Support was  always always a conversation topic. Every time when we tell the king or something we can build a highly reliable, fault tolerant, self-healing system on top of MariaDB, the first question is like, hey, are you sure that for this scale  of infrastructure we get people to support, so yes. So that was a good time actually, we talked to business, we talked to the community people, but it was a very interesting place. Capacity planning and sizing. So when i used to talk to my customers who always thirty percent, forty percent, interest that he knows something... When i say thirty, forty percent it's like our frequency started increasing, frequency of meetings started increasing, it used to be twice a month, it started becoming once a week, then it moved to a phase that every  second day we'll have a conversation about, you know, are we going to use the same capacity for this MariaDB infrastructure, do we need to oversize... oversize it or undersize it. How is going to be the efficiency, performance and storage efficiency, on ssds and how can we tune to make MariaDB even faster and most important, what have you seen gone wrong terribly on MariaDB? So people were very honest, there are good stories and bad stories, so I talked about this, but this was our checklist of choosing MariaDB, this is a business checklist,  this is a checklist which has been... which evolved after several meetings with the customer. Enterprise class database infrastructure. That means data reliability for web  scale, so when i say data there's a lot of differences with the customers we have worked with in the past, working with the financial institutions. We work with adtech companies, we work with gaming companies, we work with some of the stars. There are really traffic intensive ones, some of the biggest e-commerce companies, they're really big in traffic, but when it comes to transaction sensitivity, or transaction durability, reliability, demand... the financial institution and that includes core banking insurances and also the healthcare software companies with whom we used to work. It does look very heavy, at least for us who come from a internet data infrastructure operations background. So data reliability, for web scale, performance, so always the demand was like, how many transactions can we process if you scale our business from x to 5x Scaling horizontally. This is something very interesting, Oracle don't have horizontal scalable solution, they talk about something called a real application cluster. I'm not a serious Oracle guy, I read a lot of Oracle books so it's purely out of my technical interest but I don't work on any production Oracle system, so when i was looking at like hey, you talk on... most of the meaning we talked about scalability, how do you work on it somewhat of.. I understood that when they say scalability, it's a good share everything architecture, scalability, which is something that Oracle call Oracle real application clusters, but in the world of MariaDB, we have something called share nothing architecture and trust me, I took I took one complete week to finalize... one complete week to create a document which talks about how shared everything works, how shared nothing works for the business team, for the business team and communicate, convince and finalize on how share nothing architecture works great for a web scale, and is cost efficient Fault tolerance. The system should be available all the time. Fintech companies. So most of them were graduating from a bank to a fintech company so highly reliable system, data privacy, security, very important. Synchronous and semi-synchronous replication was one of the key topics, the reason being because when we say there is no scope for a single point of failure, that means that in a distributed redundant system, what could be the worst thing can happen is if there is a a day this instance crashes, or the primary release instance crash. What's going to be the data loss impact on the business. Pretty high. Seriously pretty high, during the key business I was [at], very very high, the numbers were quite shocking for us, we never thought, okay, what happens if a banking system goes down for five minutes or ten minutes? The numbers are too big, really big, so there have been always some... So when we go for some meetings, we'll be like, wow MariaDB is great, this is good, this is something which takes care of our data of the future, data infrastructure of the future. When we go for other meetings we can't compromise on data loss, so data loss means the loss for the business plus there'll be a lot of statutory of guidelines which could have a  severe impact on the professional career of the senior executives of the bank. So, there was no scope for that, and we need to really spend a lot of time in making them understand how MariaDB replication addresses the synchronous replication with Galera Cluster, works to make sure that it's everything or nothing. The transaction either gets completed, or gets rolled back, in a distributed system. Point in time recovery. Yes, audit, transaction audit, that is completely on the statutory guidelines. Columnnar tools for data analytics so, they've been like, hey views are confused. You know XA data, that's a plane so far, that works great for analytics. We use something like... So the idea was, Oracle is of a single vendor for me, for now, for database infrastructure. Now, when I move to MariaDB, it's something like, I'm going to have multiple vendors. The answer was like in MariaDB we definitely have the the infrastructure to power your different varieties of SQLs, different variety of queries, like transaction queries are taken very well, gracefully, by storage engines built for ACID-compliance... compliant systems, if you're looking for analytics, definitely made every solves that if you're looking at so we need to explain them, there is a difference between storage engine which is, this is very mystical MariaDB-specific systems or it's a very very specific tool I really give my skill I'm compared to Oracle you don't have something like a storage engine there so, when I used to go for the meeting, I just like hey, you know something we can use you know db we can use area maybe after day or two I got a question like, do you mean to say these are the two different database some system stack from MariaDB like no this all be inside single MariaDB so yeah how can we troubleshoot more proactively systems can behave re viewed it's it's acceptable but then we should able to troubleshoot them so what are the technology infrastructure already be provided to troubleshoot MariaDB even better optimal indexing and how is the indexing MariaDB work different from, from Oracle or Microsoft SQL Server disk io performance optimization partitioning capabilities and tolerance and partition funny again every every of our conversation every or four bullets on the meeting will have a ha high availability and upgrades and migration this is the last points in our most of meetings but then at some point of time it was like, the cost of upgrading, something very high, a proprietary software big business because of the licensing complexities but then now open source what you see is the complexity is... what's going to be the reliability of the new release and what's going to be the responsiveness in the bugs reported and how the workflow work and so for that conversation we even pulled out you know MariaDB is not a, not a just a new company it's been built by the business, by the team by the community, or spend several decades on database systems, so we even started pulling this up okay, this presentation I have used from CIO, CTOs of multiple banks and several hospitals with my isv partners so i go with my asp partner or my sv partner telekin or something we are coming in the new database system some of the banks is like, no it's okay, but then... when we say that you know new database system is from MariaDB and remember this, these guys don't have any any exposure to open source systems, so when you say this is built by the people who are data systems geeks, they power google, they power, they work with Facebook, so they've seen, they are very very close with, associated closely, associated technically with some of the planet scale internet properties founded by MariaDB, it's a very old team, like started in 1982, the history is like Sun bought and and the core MySQL engineers left Sun for good Oracle bought Sun, and MariaDB Foundation, so this is something very interesting. Right now MariaDB, we strongly recommend our customers MariaDB for one big reason MariaDB Server project is supported by MariaDB Foundation not for profit MariaDB Foundation is never ever going to be owned by a single entity, business entity or business or corporation whatever is that or a single individual it's completely a social innovation powered by a community and all the repositories are on GitHub, all the source repositories of MariaDB Server are on GitHub managed by MariaDB Foundation, so when we reached a very senior, serious level of discussions, we made one one single page for our  MinervaDB internal engineering team to mail it on our walls or like we have virtual corporation, so most of... all of us work from home so all of our offices have this checklist, what we should think about when or what we should advocate on when we are recommending our production ready or daily systems for an enterprise a strong community because support is the lifeline of the database systems, bug database transparency Which is a human managed approved managed uproot and visibility to general public and how do we troubleshoot for performance for our, for tuning the database systems and the tools for reliability and archiving security so we started writing out like,hey we need definitely a point in the recovery database recovery tool that's very important should power application You should have load balancer, native load balancer that means they should be aware of how MariaDB systems work and what are the future commitments or complexities with the open source licensing so who owns the davies there were several people who were the owners of davis initially we thought like our meetings are going to be only with the dba so dave is architecture some data sorry a production engineering team but then it started growing we started talking to the ceo we started even talking to the board, board was curious about how how severe can be impact if there was something goes wrong during the migration, post migration data theft some of the the government bodies, they were like we will have the statutory audit on the transactions especially on the payment, payment cards, card payment you know industry right, we have every quarter we look at all the transactions on the categories what we qualify that means we need the entire transaction history, the origination the workflow and the destination we need the audit of everything, so we spoke to them we worked on the auditor metrics is how it looked like so interestingly we started realizing that in a data powered economy right what do you call data nomi today it is not that the ownership of data is just with the dba technically it is always dba the owner of the database system but then there are different stakeholders and all these stakeholders look for how data infrastructure can benefit their business and this included both technical and functional interface and operations which include like who approves a change in daily systems parameters, who decides which metrics are going to be monitored, who approves a high availability architecture for database infrastructure but technically right, All of our meetings on  the data ops responsibility for more adb infrastructure it's technically the database infrastructure MariaDB database infrastructure is going to be a dbe and please do not get into the pockets of a compulsive automation disorder like automation is great, automate all the repetitive tasks but then don't get into the phase of you know automate the task which which has very sensitive information don't do that for example the alert validation please do not automate it alerting is great that's an automatic one but then who is going to validate or who is going to approve any workflow from there it's going to be a false alarm or if it's going to be something which needs immediate attention please do not automate it so at some point of time it has been very clear, evident for us and the customer, so we started feeling like hey good or whatever time we are spending in this our conversation is going to go good because the customer functionally agreed to come out of Oracle to MariaDB, that was a big deal so we want to make sure that we'll never make things complex so like you know um 90 of your data types in Oracle are what we have shared now and these are the alternative for that and when you do the sizing, we personally see with you because we neither of we want you to oversize it causing a very fragmented underperforming sql intensive database application or even undersize it that you have future data data or operations issues like the data is too big to get accommodated there and we found that it really fixes, because we work up continuously with some of the largest internet properties which are generously sized and over a period of time we say, know this generously sized you know always big is good is definitely not good every time our learnings we are playing here. We'll be very conservative we'll not oversize it, now we want to approve column by column we approve it because we want this migration to be successful and that really helped on our you know second, third phase where we are going to get data into MariaDB. It's quite straightforward sql_mode=oracle that is from MariaDB 10.3 which is pl sql compatible on database system sequences, introduction of sequences in MariaDB 10.3 was was much weighted, sequences were like really, because most of the Oracle guys are very comfortable using sequences for their database architecture and so we have a sequence engine and it's a distributor as a plugin and that takes care of your sequence generation, auto generation of unique numbers okay this isn't to offend anyone right, this is... I was scared when I made this presentation, I was very scared because I was going and talking about this to people who have been working on Oracle for 15 years or 20 years but then after making the slide and when I was in the office or presentation in my, my customers office and presentation I was really scared like, bye bye Oracle but then it is good people are actually happy they're like you know something we are making thing... things for a bigger internet scale uh presence of our bank or hospital and it's going to be an open source data system which means more security right so open source is definitely more secure and the cost was really a driving factor right we are not going to spend any more for complicated licensing terms we have a party for this side over here the data semantics or the transaction semantics what I mean by that is the structure of transaction handling in Oracle and MariaDB were very close to each other, we declared a transaction and we'll have us equal any comment and Oracle default isolation level is read committed and there was there was always a conversation about how repeatable read is different from read committed but there is a differential differentiation factor we built during our entire conversation of this upgrade, look we should be aware about how Oracle's internals work like you know where you have multiple memory structures and background processes which talks to your data files where whereas in MariaDB you have schema objects are owned by several databases. The schema objects are nothing but the tables indexes use them and the physical structure of these sub logical schema entities are your database files, db database files when we were using InnoDB in most of the conversation because  Oracle to InnoDB closely related. Both are transaction oriented systems right. Engine is InnoDB Oracle's transaction processing system So this is quite clear, we wanted a system which is acid compliant,  built for start searching you know efficient and query performance fulltext search support archiving data archiving still complex graph and cloud radio cloud efficient this is... this one slide would have saved several hours of money during my meetings trust me when i have won this slide itself in MariaDB you have storage engines. If you are talking about acid compliance, strictly acid compliant transaction processing robust system you have InnoDB and XtraDB we are talking about a columnar data store for big database analytics, big data analytics right there is MariaDB Columnstore please do not move the data across storage engines unless you are really confident about it so this was one most of our meetings on storage engine choice  I used to tell you this choose the storage engine best fitted for you so if you're looking at something a lock structured merch restoration engine for storage efficiency and right performance definitely MyRocks but then MyRocks which is RocksDB as a storage engine is not to supplement InnoDB. None of the storage engines are there to supplement each other, they're all going to complement each other. When used appropriately, they all form a very robust ecosystem for data ops, data handling. Archiving to cloud - S3 storage engine. It was very new. By the way, let's say we never got a chance to talk till recently. So when we're talking about absolute observability and visibility to the database infrastructure, we're going to be very clear, one we want to have SQLs monitored by response time SQLs purely monitored by latency response time, not on throughput, not on the resource usage consumption and the efficiency of database objects which means more focus to indexes, index performance the indexes which are used are redundant and missing. Can we troubleshoot the query performance by looking at these metrics. This is because in Oracle they have all this... so every information like hey hey sure you know something in Oracle this works like that how did it works in MariaDB, so I was like okay I was making a future list of Oracle what they use a detailed feature list, MariaDB what we continuously do research in MinervaDB. So the effort was via proactive sizing on... size build us a proactive team engaged in infrastructure sizing and capacity planning and how do we validate  the availability, or how do you validate of the database performance and reliability so how we can have custom alerting and notification system with integrated workflow to make sure that database infrastructure on MariaDB is going to be reliable so in Oracle they talk about hey you know something we have a lot of trace files you have for status expects generic files lot of files to troubleshooters what we used to tell to them was you know there is nothing short in MariaDB ecosystem if you want to troubleshoot MariaDB using logs you get a lot use them very carefully only use them carefully you get a lot of information, slow query log good if you're like the most recommended one if you want to troubleshoot the query performance faster if you want to find out the queries by latency and top two queries so top five queries by latency which is impacting database performance by 70% or 80%. If you want to make a list of it, retain it, spend time on it, it's worth because you improve performance by that x% like 70% 80% by tuning six seven queries. It's a good exercise Error log, it's good, really good if you want to report MariaDB bugs or any critical errors. General log, you get everything but but you want to be very transparent you know there is always not just in this log most of our conversation we want to be transparent with this customer like any customer there are always some good and bad of everything gen log is going to be resource intensive now you want it you're going to spend a lot for the storage and for the the compliance and regulatory audits we strongly recommend audit log and that really worked that there is quite exciting for them like something we have on opensuse jb system built for the data privacy and security concerns or if so let me tell you interesting quick story there when I used to talk to... my customers on sorry i'm troubleshooting performance on my db on more and more on logs suddenly one of the dba is liking in oracle it was more easy we used to have a lot of cables data dictionary tables which you get information about does that mean that in MariaDB we don't have much layered dictionary cables for this as like of course course it's there it's like fine-tuned performance schema enable performance schema fine-tune the variables and you have access to several data dictionary tables MariaDB-specific data dictionary tables which you can query and find whatever we're talking about now there in the slow query log you get the same of them or more from the performance schema so so the number of parameters each database systems provide is insane like i'm sorry i'm just putting this like insane like just several parameters very difficult to even remember like it runs in thousands in oracle MariaDB is no less too but then always always what i understood from a... from a customer interest was like more parameters of more problem right how he can have very minimalistic performance tuning parameters for an optimal performance and definitely MariaDB is highly tolerant on unlike many of our proprietary database systems MariaDB is highly tolerant when it comes to tuning the system parameters or system variables. I use the word parameters after talking a lot with oracle dbs like yeah yeah that's good learning is good so i was like hey you don't need to you want to really work on several parameters for a really optimal performance less small most often like InnoDB buffer pool size which is about how much memory you have for you know db log file size some it's good but then it's not too big it's not too good there it's good to size it optimally handling threads tuning my db thread handling mechanism the pool of threads on a web scale works optimal most of our benchmarks even network for customer too connection handling and the the udb flush log on each and every individual transaction comment so this is something like hey you're looking at a good performance you can keep it zero too but definitely not for a bank or for any business the transaction every transaction means it's a bit there's a lot of reputation and a lot of money in that so we are like we strongly recommend one it's okay sometimes reliability stands more than the performance and that was good like the conversation was always on the best interest of booth right and more booth and definitely for the end customer so these are the compliance like pci gdpr hipaa and medical data access some control data access privacy and protection laws and how the irestar the rogues equals so like i said right the compliance was always always a big topic of interest or the very very serious topic like how we make sure that our our card processing systems are safe and how the transactions are audited like I said it's isd with lot of customers across europe so how we make sure that gdpr compliance is validated how on the health care data is protected how we can build the end-to-end encryption on our adb so MariaDB provide data protection for both on in  transport as well as address was really interesting for them so as the advanced encryption standard for the data at rest and transport their security algorithms on data in motion gives a clear indication of how we are building or proposing a more adb infrastructure which protects the data, which makes sure the data is safe in rest as well as in transport data masking and sequel injection block of blocking stick sql injection atoms with MariaDB firewall configure mac scale make sure that you know like your your davis infrastructure is protected against some the attacks like daws and diaz denial of service and distributed denial of service this is like um very important right um should not be like uh any um any data reliability issues when you are building a financial system or a health care system so we found this square down quite a serious focus this section is complete he was talking about it like how we can use MariaDB proxy on to build a very robust transaction on the safe and secure transaction processing system with very robust firewall rules also you know like how we can build the database infrastructure operations on the results are set size even if someone get in they can't pull down so much queries like how we can restrict on the result set so the the firewall was purely well the rule of the fire was purely built on on the areas like the queries from each user is strictly controlled by the duration the time of the day the type of the query even look these are all even from the legitimate bank employees or the bank partners but then not all the queries at all the time of the business is not acceptable all the query type is acceptable also the syntax sauce like there is a common syntax which application the isv is not rolled out as an api to access the data but then we maintained a strict syntax rule that is approved by the business and integrated at the load balancers like multip max scale to make sure that we are queries are strictly controlled or orchestrated at our database firewall so data obfuscation was about data is always encrypted safe so when you're using depu extra db is like you can encrypt all the tables or even the selected ones area was works good for all the tables but then you have a pre-requisite of so when our conversation started close to getting MariaDB in production percent of the time that conversations like inner db compatible one because something as i told before right i'm very close to our right so just like you know and and you've been up front right um all these the data encryption data security there are there are assumptions exceptions actually right the log files are accepted includes audit logs locally log error lock channel so that means that you need to work hard there are there are definitely threat areas for them it's been notified in advance my id audit plugin records everything which includes the the host username the query success query is executed and the table is accessed that is very important this slide was very important for us because we need to make sure that seven out of ten times banks engaged in the payment system in the payment functions of the bank and the payment card industry is highly governed by respective statutory law of the land so the audit reports like very expensive like when I say expensive they're like they're highly highly respected reports that respect i would say like they're very they're very key reports for the surveillance auditing of the banks so reliability so we want to put it very clearly you know like we can't say that there is a solution for all all the problems there are some problems or solve some problems there are dependencies like for example power outages when you're talking about data reliability if you have a power outage issues like then you cannot blame database system so what you can blame data system what you can't bring during the system you can blame data system for power outages you can blame for a hardware software you you cannot blame databases for power outage you can't blame a data system for a hardware failure software failure yes like data system itself is failing maybe due to bug or configure wrongly the human error yes you know you can blame the application engineers dba is definitely allowing everybody to have the equal access like somebody went ahead other than dba table or dropped a table definitely db is responsible for that not everyone should be smart data theft to an external database team database infrastructure operations team national disaster not completely responsible and then how we can make system which are definitely not going to be a single point of failure so include so these are like directly accounted to davies infrastructure operations team or dbas or data srs you will call them standard server investment on hard backups testing and validation of the backups archiving delayed slaves the backup tools are the backup options like what are the backup in my db like it's been like between several backup strategies each one of them carry their own importance like logical backup definitely it's not recommended in a production online definitely an online backup but then the logical backup is also important one which happens in every bank every 50 days percent news for me this is we do have customers internet space also they use logical backup because one you can um it's a highly reliable backup you can edit the backup hard backup is online backup incremental full backup so these are like what's the direct go for us like here you know doesn't already be support all this of course right you can use my db backup so my db backup is in maria backup which can do a full backup on restore which can do incremental backup and restore and do a partial backup and restore like in fact uh backup and restoration our conversation is to go very fast because maria backup provides everything and the logical backups are supported so like i said you know like our most of the meetings are like we need to make sure that there's zero downtime technically it was like debatable right and it is not possible but then functionally from a daily basis infrastructure operations because it's going to be a database of migration davies when a migration from oracle to MariaDB right so how do we make a system which is going to be and this this diagram was like was strong enough to convince the entire business functionally the synchronous replication make sure that that there is going to be no transaction latency between the master and slaves all the nodes in our applications are going to be synchronous on a transactional transaction level the load balancer takes care of which is MariaDB MaxScale takes care of failover and archiving to build a very lean database infrastructure operations that is like primary database is always retained lean MaxScale with mq and t filters was taking care of archiving from the primary database cluster infrastructure to an archive database system student thank you so thank you for giving me an opportunity to share the story like how we spent our time to upgrade our migrate three of us largest isvs in with a great footprint and in america as an asia pacific to migrate from Oracle to MariaDB what's interesting a lot of learning of off-grid was worth of food but though we spent a lot of time this is good place a lot of learning of experience and there's a good effort because we could migrate more than eight banks in last 23 months to MariaDB that's some of the largest hospitals in in middle east in americas indonesia you can you can write to me at shiv at minervadb.com i accept most of my link almost all of my linkedin rights follow me on twitter on our facebook page too so if you are hiring, MinervaDB is hiring contact me if you're if you're idea of skype or devops guy if you're davis engineer happy to talk to you thank you 