 (gentle music) - Hello, my name is Dr. Jonathan Butzke. I'm not a medical doctor. Instead, I'm the Robot Doctor. Mobile robots often need to move from place to place in order to do their jobs. How do they keep track of the obstacles around them? How does this robot know what is around the corner before its sensors can see that area? The answer, is that robots keep maps so that they can keep track of their own location and any obstacles that may be in their path. In this episode we will look at how robots sense obstacles and determine their locations, as well as how they store this information for later use. We'll do all this using the math you already know: geometry, trigonometry, algebra, and a few concepts from physics. This lesson will cover some ideas from probability. You'll definitely want to take notes. Robots must be able to sense obstacles and store the location easily for later use. Robots working around the house, to avoid furniture and walls, must remember how to get from the living room to the kitchen without having to explore the whole house. In many cases the environment will have some elements that change, and other elements that remain constant for long periods of time. For the house example, the walls probably won't move. The furniture will move only occasionally, and your brother or sister's junk will be in a different place every day. How do robots keep track of this? Hey robot, did you get your stuff? (gears whirring) Let's start by talking about one of the common robot sensors, the lidar, which stands for light detection and ranging. In principle, this is similar to a radar, which uses radio waves. But with lidar the sensor will send out a pulse of light and measure the time it takes to get a reflection back in order to calculate the distance to the object. Let's look closer at how lidar works. - [Narrator] The most common type of lidar for robots is the scanning, or rotating, lidar. This type of lidar spins around at high speed allowing it to rapidly get measurements in many different directions. If our lidar system produces four pulses per revolution, it may tell us that there is an object five meters in front of us, four meters to the left, three meters behind us, and ten meters to the right. However, most scanning lidars have many more than four pulses per revolution. A common low cost lidar has more than 1000 pulses per revolution. This results in a high resolution, which can allow scanning lidars to map the surfaces of complex objects and perform highly accurate surveys of such things as houses and other buildings. - What the lidar produces for the robot is a list of directions, called relative bearings, and an accompanying distance in each of those directions. They are called relative bearings because they measure the angle between the robot and the object, rather than from some absolute reference such as the x axis. We'll use the Greek letter Phi to refer to the relative bearings from the lidar. The data from a scanning lidar is essentially points and polar coordinates. If you remember polar coordinates, they consist of an angle and a range, exactly the same as the range and relative bearing the lidar produces. As the robot moves around your house, it collects lots of measurements in this form, from all different types of objects. So what does the robot do with this data? It could try to use it directly, stopping motion if the sensor detects an object in front of the robot within some minimum range. But that approach is better as a safety system, rather than a reliable method for long term navigation. We need a way of storing the information that a robot gets from each scan, so when it returns to the room, it remembers where the door and chair are and that your sister's toys are still in the middle of the floor. - [Narrator] One way of keeping track of where things are, is probably the method you thought of yourself. The robot should build a map, just like you would do mentally if you were trying to keep your bearings in someone else's house. You would keep track of where the walls, furniture, and other obstacles are located. The robot has a big benefit in this situation since the lidar is very accurate at measuring distances. The way a robot makes a map is by dividing up the world into discrete chunks called cells. The robot treats each cell as a single unit. The cell is either all occupied, or it's all clear, or possibly it's unknown, meaning the robot is unsure if the cell is occupied or clear. Using cells, the robot doesn't have to keep track of every single item in the room, only which cells are free and which are occupied. - Our robot senses a few objects to the north. How does the robot actually store this so it can use the data later? The easiest method is to simply store a grid. Imagine making a grid with 50 centimeter by 50 centimeter cells. In our case, let's assume we had an object 5.4 meters away at a position of 6.1, 7.9. So we would mark the cell corresponding to the range 6-6.5 on x, and 7.5-8 on y as having an obstacle. That can work, but it only really works well for things like walls that don't ever move. Once I mark a cell as having an obstacle, there really isn't a method to remove the obstacle. But let's think back to how we got that data point for the wall. We did get a light reflection from something at 5.4 meters away from us, but it tells us something more. It tells us that we did not get a return from anything between 0 and 5.4 meters away as well. It tells us that the light went all the way to 5.4 meters without hitting anything. So not only can we fill is the cell at the end of our laser's trip, we can clear out any cell between here and there as well. If lidars worked perfectly, that would be a great plan. And indeed I've done this approach before, but lidars don't always work perfectly. - [Narrator] Lidar tends to reflect off of shiny surfaces without returning back to the sensor. And it occasionally reflects back off of dust and other particles in the air creating false obstacles. This means there is uncertainty for the robot. How does it know if there is an obstacle or there isn't one? For example, if a robot gets 100 reflections back from a cell, and only one of those reflections indicates the cell is empty, the robot can still be pretty certain something really is there. On the other hand, if we have 100 pulses go through a cell and only one reflection back indicates there is an obstacle there, that one reflection is probably wrong. The cell is probably empty. - One way to keep track of our belief that a cell contains an obstacle is to keep track of the probability. You'll start off by assuming that any cell could either have an obstacle or not, with 50% probability of each. You'll also need to know a little bit about our sensor capabilities. How likely it is to detect an obstacle, and how likely it is to correctly identify a clear cell. For any given part of the world, there either is or there is not an obstacle in it. Also if our lidar points at the cell, it'll either get a return, or it will not. Let's start with a cell that we know has an obstacle. Suppose our example lidar will detect a return 70% of the time from that cell. We can write this as the probability of getting a return given an obstacle equals 70%. This is also called the conditional probability. The probability of getting a return conditioned on the fact that the cell has an obstacle. Since we either get a return or we don't, the probability that we don't get a return from an occupied cell must be 100 minus 70, or 30%. You can do the same analysis for a cell that doesn't have an obstacle. Suppose our lidar will produce a return when there isn't an obstacle 15% of the time. We can write that as the probability of a return given a clear cell is 15%. Just like the first case, we also know that the probability of not getting a return in the same cell must be 100 minus 15, or 85%. Now we will use these probabilities to calculate two other terms: the total probability of a return, and the total probability of no return. Since we know there are only two options for our cells, it can either be clear or they can contain an obstacle, we know that if we have the probability of return given a clear cell, and the probability of a return given an obstacle cell, those account for all the ways we can get a return. The total probability can be calculated by taking the sum weighted by the probability of each case. Remember that the probability of a clear cell is one minus the probability of an obstacle cell, in this case .5. Substituting in we find the probability of getting a return in all cases is 42.5%. Since we must either get a return or not, the probability of no return is 100 minus 42.5, or 57.5%. Now we have everything we need to update our cell value. We'll use a formula you may not have seen before called Bayes Theorem. We won't get into where this comes from, but we will walk through how to use it. The theorem says that the updated probability that a cell contains an obstacle is equal to the probability of an obstacle based on whether we got a return or not, multiplied by the current probability of there being an obstacle, divided by the overall probability of a return. Looking at our cell with an obstacle and an initial value of 50%, let's calculate our new cell value. Since we had a return, we multiply our current cell by the probability of getting return given an obstacle, which was 70%, and divide by the probability of getting a return, which was 42.5%. In this case we end up with a new cell value of 82.4%. For the cells we are clearing, we perform the same process. For this cell, between our obstacles and the robot, we know the lidar beam went through it without a return. Returning to Bayes Theorem we again want the probability that the cell is an obstacle given that there was no return, which is equal to the probability of not getting a return given an obstacle, which we know from our chart is 30%, times the current value of our cell, which is 50%, divided by the probability of getting no return, which we just calculated to be 57.5%. Combining and solving for this, gives us 26%. If we were to have another beam go through the same cell in the future, we would perform the same process. But instead of starting at our initial value of 50% for the cell value, we would use the new value of 26%. In this case a second measurement showing no return in the cell would cause the probability to drop further to 11%. In this lesson we discussed how lidar works and what type of measurement it provides. We also discussed a method called the Bayes Theorem for storing map data. It allows us to keep track of our certainty that a map cell is occupied. We now have confidence that errors in our measurements won't erase walls that are really there, or add phantom obstacles where there aren't any. Now, get your pencils ready for this week's challenge questions. Start with a three meter by three meter grid with one meter cells, as shown. The robot is in the center of the bottom left cell. Initially the map has a value of 50% for all cells. Use the probability of return given an obstacle equals 80%, and the probability of a return given a clear cell equals 10%. Question one: the robot gets a lidar return from the bottom right cell. Which cells will have a change in value? Question two: what are the updated values for each cell? Question three: If the robot gets a second return from the bottom right cell, what are the updated values now? I'm Jon, the Robot Doctor, see you next time. - [Narrator] You can find these video lessons at wqed.org/therobotdoctor. - Hey robot, did you clean up? (gears whirring) 