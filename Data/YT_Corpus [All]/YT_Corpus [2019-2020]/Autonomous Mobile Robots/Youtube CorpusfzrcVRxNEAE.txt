 hello good evening from Berkeley California my name is Scott Stanfield and I am on the autonomous systems team I'm the engineering evangelism manager and we have a lot to talk about not a lot of time so we're gonna first hear from my general manager Marc Hammond and one of the cofounders of Banzai about some of the announcements that we made today so we're gonna roll a short video like four minutes I promise when we come back it's all demo and all hands-on so with that let's roll the video hi I'm Mark Hamill general manager for autonomous systems at Microsoft last year we unveiled our autonomous systems platform empowering engineers to apply state-of-the-art technology to their physical systems and processes and showcasing some of the amazing things they'd already created today I'm excited to announce opening these capabilities to anyone to try with a preview launch of Microsoft Project Banzai what exactly do we mean by autonomous systems and how does project Banzai help you realize them let's consider the evolution of automation where we can see a steady progression from mechanized systems powered first by steam then by electricity which were controlled by manual operation leading to increasingly capable systems leveraging software to provide automated control for fixed operations to today's systems which are increasingly leveraging AI to provide intelligent operation in highly dynamic environments these systems include a wealth of scenarios across industrial robotics motion control machine tuning and calibration smart buildings and homes process control and automation and more as we look across all of these a few key common elements stands out for existing control systems which are suboptimal data centric approaches are proven to not be enough to optimize them rendering the majority of machine learning techniques insufficient rather deep subject matter expertise and experience are the powerful ingredients that can be leveraged to create successful solutions and all of these systems must be able to deploy and scale in the real physical world bridging from the world of bits to the world of atoms for example chemicals business scg has been able to optimize their chemical production process minimizing loss and reducing calibration and tuning time from month today's to better serve customers demands and at Microsoft we're using our autonomous systems technology ourselves to enhance the HVAC controllers for our campus to realize these state-of-the-art autonomous systems we are providing capabilities across four essential dimensions first we need to harness that deep subject-matter expertise and experience this is realized through a powerful technique called machine teaching this is a fundamental and powerful shift in perspective instead of focusing on how something like the brain or a neural network works we enable you to instead focus on what you are trying to teach and how best to teach it this allows you to leverage your deep domain expertise to efficiently and effectively guide the acquisition of intelligence just as you would for a new employee in terms that are understandable to you and your colleagues instead of only data scientists or machine learning practitioners you don't have to know how your team members brains work to train them but you do have to use your organization's hard-won knowledge and experience to teach them effectively machine teaching gives you the ability to do the same for machine learning for your system to safely in rapidly gain experience following your machine teaching programs we bring together powerful professional simulation capabilities from the likes of math works and any logic with the massive scalability of Microsoft Azure allowing your system to learn across hundreds or thousands of concurrent simulation instances running in the cloud and we keep you focused on teaching these systems by abstracting away and automating the low-level mechanics associated with the underlying AI when your machine teaching program compiles and runs things like neural networks and reward functions are generated automatically on your behalf and once you've built your controller we provide the runtime capabilities needed to deploy and integrate it with the rest of your software stack to help you get started on this journey we have in conjunction with our growing ecosystem of partners created project Moab an open source machine teaching robotics hardware kit which allows you to quickly learn by a fun desktop balancing platform it can quickly go from the seemingly straight but in actuality decidedly non-trivial to the exceedingly complex all while enabling you to learn how to harness sophisticated simulation and machine teaching capabilities for your own use cases the Microsoft autonomous systems platform allows you to drive real world innovation build trustworthy autonomy and scale human expertise now that we have a sense for what capabilities this technology unlocks let's dive deeper into exactly how it works to do that I'm gonna hand things over to Scott Stanfield autonomous systems community principal program manager he's going to give us a tour bringing all of these pieces together to create sophisticated control for project mohan scott okay so you've got a little sneak peek of Moab let me kind of set up this example you're at a kid's party and you've got a table of six-year-olds and they've got paper plates and you've got ping-pong balls for some reason it's your job to entertain them so you say just flip them over throw the food away hold the plate up to your head and okay kids let's see who can balance the ball the longest okay this is a relatively simple skill maybe you have to teach the kids and go over the rules again like see who can balance the ball in the center the longest without it falling off the plate and you know I being a human had gotten pretty good at this I'm using my binocular vision to look at the distance between the ball in the center and then moving my hands up and down did you get the idea this is easy it's actually quite challenging to do this on a machine and I think that's what makes this very interesting I'm going to show you this new this new machine here this is this is the this is project Moab so what we see is the same plate and I'm gonna put the ball in the middle here and try to balance it with this joystick so we're in this manual mode so something that seems wow we have an engineer Mike who knows how to do this really well but I'm having a hard time doing this because simply translating what I see now into the joy from the joystick to these three servo motors is a it's a complex inverse kinematic problem that I haven't quite learned myself but for a classic mechanical engineer actually back up a classic engineer period we the word software engineering but when I refer to engineers I'm meaning now mechanical electrical chemical engineers they have a technique called a PID controller it's a proportional integral derivative controller with three magic numbers that are used to determine what gain is needed to change the to reduce that distance over time in order to get this really amazing balancing experience this is it's fascinating it works with nearly any object that's the color egg shape any controllers are really robust and it's a good thing they're robust they're using about 97% of mechanical systems today they are but they're not approachable for someone like me and frankly for a lot of the people with simulators trying to solve industrial control problems you can only go so far with a PID and I'm going to show you maybe how we might be able to go farther and just like we taught those kids how to balance a ball we're gonna teach this Bo AB unit to do it as well now I have here the one and only clear mode version to show you what's inside before we go any farther there is a single camera a low Raspberry Pi four right here connected to a custom servo custom power distribution with three servo arms and a fan and a whole bunch of magnets and twisted wires to pass FCC certification this was designed and built by our fine friends at fresh consulting up in Bellevue and let's take it through its paces so I'm gonna switch over to this demo machine here and show you project bonsai and this is what we announced today and we have the ability to start with two simulations we have a classic cart pole and for those of you that may have seen me before or holding a broom up in the past cart pole is essentially an extension it's a it's an inverted pendulum on the end of a box with wheels and you have to teach the pole how to stand up the problem with cart pole is that you need about six linear feet and pretty dangerous fast moving motors so we wanted to build a similar academic sample but could sit on your desktop and so it could sit there so you could train it and learn a lot more about what it takes to build a brain to control system so I'm going to create a new brain a control brain today and I I always use the date and a letter I think we're on Jesus and golf so we we just have this workspace here on the left hand side we have a list of the the brains or controls that I've built earlier today the default starting point for this teaching parameters here the language called inkling which I'll go over and finally the system on the right let me start the training right now this takes a few minutes so I've just kicked off the training well train it to do what let's go back and look at the teaching protocol here give myself a little bit more space and I'm scrolling through here there's a few constants that we have in this language we have the radius of the plate which is 22 centimeters we have kind of the first thing that that indicates that this is something a little bit different we have this state now remember earlier I said I could look at the plate in the ball and see where it is relative to the center of the X&Y position I also can infer the velocity from the simulator now the simulator also exposes two actions I can change the pitch in the roll and this corresponds to me moving the stick forward and backwards or left and right we've normalized these numbers so the servo motors would normally be between like I think it's zero in 22 degrees in this case we made it easy by going between negative 1 and 1 so so far we just set up the stage we have a simulation called Moab and it's kind of tucked behind this page right here and if I go down to the simulation you're gonna see this in a few minutes but this is the total state that it's exposing that now this is a simulator that we built in typescript on the front end and the back end is Python now this is the one of our two main simulators that we use for teaching humans about teaching machines and in this case it's already deployed and I have a few instances it looks like 20 that are going to be running to and the background to teach the system so let me go back to my code and now we're nearing the core we blued are our Moab simulator to our actions and our configuration but these these few lines right here the goal the goal is the goal here the goal is taking language in terms that are familiar to a subject-matter expert ranging from like say you're a chemical engineer and you're depositing zinc and between a one and two micron layer on galvanized steel or you're trying to optimize the supply chain distribution to improve and improve your delivery of quality products in a crunch time like we are now in this case I have a pretty simple problem I just want to avoid falling off the plate and drive the ball to the center so take a look at these two lines I can express this as some simple math around the hypotenuse and the goal is to get keep the ball within a range of 80% but if I go beyond that the 20% the ball is probably to fall off so anything above that will call that failure and we'll start over with the training and likewise with the center we want to get the ball to the center close enough within about 250 iterations now our cycle time is about 30 Hertz so we get about you know 250 times before we we move on to something new and then the last bit of inkling code here is setting up our random starting conditions now I kept these kind of narrow for this build session we don't have a lot of time and so we're keeping it to where we're pretending to drop the ball within a pretty narrow range of the center and we're giving it a pretty small initial velocity so it's not super challenging but if you think about the way you might teach another human the curriculum that you might come up with let's say it's two to hit a ball to hit a baseball it's a pretty challenging skill but you would start first by putting a ball on a tee and then picking it up and maybe soft tossing and underhand before you really rare up and throw it fast pitch overhand and so I'm building up from small steps so I've started small and after this we would improve it to add more features more more steps so we are training right now and we just got fired up we have 20 Sims connected in the background running about 180 iterations per second now we're trying to satisfy our overall goal which is a combination of the two sub goals and if I scroll down we have this lovely 3d view the Moab simulator the nice shiny this is this special metal edition I believe we can see this ones this one instance of the 20 humming along the different iterations per second feeding the brain on the back end and that brain is learning what is the backs best action to take given a particular pair of ball X on my positions should I roll left or roll right and so I'm going to leave the velocity out but you can see this sim is humming along you we would know this is really successful and it's settled in once these two lines converge to zero but you can see all these minut Corrections that's because this is an under actuated control problem in fact it's part of an undergraduate mechanical engineering class and to solve this with a PID it's a bit of work now let's see if we can solve it a little bit differently so I'm going to go back I have a brain I created literally let's see did this one just finish I did this 33 minutes ago so part of part of well we hit a hundred percent so let me stop training this one and then we're gonna move on to the next phase so we've gone over inkling code we've gone over the training now I want to export this brain into a docker container I can pull down on to Moab so now let's go to the bottom left corner of this page so down the lower left you see my list of exported brains I have let's see one I did a little bit earlier today if I click on well F is exporting I'm gonna grab this docker pull command and grab that this represents a docker container sitting in my secure Asscher container registry and I've previously given the credentials to my moab unit which is sitting behind this terminal and you can see the control loop is performing over here i'm gonna go into my docker compose file and by the way this this is amazing like a lot of the code here you see first of all we we plan on making this will be open source we're just waiting for the rest of the bots to show up and there's some really great practices here including some code here that ani wrote around the docker compose and i have to admit I did not think that I would be doing docker ever I kind of like it and I really like it now because of this feature you're about to see I'm going to override the brain called custom one so let me paste this in and delete this one okay so this is the one that we just grabbed and I'm gonna save it now I need to you know be gentle with docker composed and take it down but I don't really have the patience so I said ctrl C the arms just flatten down now I can do docker compose pull to go grab my new brain from ashram and I called it custom one and why that was quick you guys everyone must be watching my demo they're not actually online trying so let me bring this back up docker compose up ok and we have liftoff let's come back around to this camera and let's see how our brain is performing so if we go back to this to the camera here and it's running so let me go into I called it my mic I called it custom one I believe and there's the brain ok this is good because if you recall I had pre small initial starting conditions where the ball was closer to the plate in the middle and the initial velocity was pretty slight I'm gonna show you a brain that was trained that's kind of baked in this was trained about I think a week ago and I'd really like it and this one is incredibly robust it has it's very eager it's like a German Shepherd ready to play fetch and not only can it balance it pretty aggressively if I'm good I can get it to play catch watch this stuck the landing oh look at that I think it just picks the best-looking one so so let's let me show you one more thing I got a couple more minutes before we have some questions my friend Paul Stubbs is up in Redmond fielding the questions let's see though if I can do one more thing Paul before we we go to break so I have brain here try to show you something that would be very difficult to do with classic classic engineer controls I have a special plate then one of our engineers journey drilled a hole into thank you and if I put some plate I have he gave me a brain I didn't even look at the source code for it the brain for this he gave me in the ACR and I have installed it and I'm running it now this is a really interesting behavior in fact wait let me go back to the classic mode so this is the classic mode response when there's an obstacle in the plate it doesn't clearly the classic mode doesn't know that there's anything here so if all of a sudden you have this system in the real world and something unusual has happened you would have to go back and redesign the supermoon however we can just add that to the scenario the inkling is five lines longer we've included a bit of code to tell it where this obstacle is in space and now when I put a ball on here right it's gonna do everything it can to avoid this it's a little bit little bit tough to see if I have a top-down camera I can go around the loop here and try to get it to touch that peg I can't quite get it and it's just this amazing experience and frankly I designed the system so it can be really quiet so you just leave it here all day occasionally I will forget it's running and all set I hear the fan kick in which is a good thing but understand that this is more than simulations and the application of controls to a mechanical robot style device in fact we we really believe the application for the system really far exceeds just as simple control systems we have two very important partners and can go back to the my demo here two important partners math works in any logic that are part of our launch here today they have built-in support right out of the box for Simulink models and any logic models to do training in the cloud this is amazing you could take a essentially a zip file of your Simulink world drop it in here and instead of being constrained by the resources on your engineering workstation you could upload the models and do the same training in fact there's a whole set of videos that are available on our pay which I'll show after we answer some questions but you can go and watch the videos of the same inkling code but training and running against a math works model so I think this is a really good opportunity for people like me in the world of development and software and AI to find a way to kind of connect back with the physical world and it's really the reason I took this job I've been really excited about taking concepts around AI and how do we reach out into the real world and make things better and improve existing physical systems find a way to move from atoms and into bits and I think well I know this is going to be a great way to do it so thank you for watching this I will be back on again tomorrow at 6 a.m. California time and then again at 3m Pacific if you wanted to see it three times but now Paul Paul has been waiting patiently and I'm sure there's at least one question hey Scott yeah this is super exciting you know one of the questions I think we have here is it's interesting that I can do Simulink or any logic but what if I have my own simulator yeah so we have an API you would expose a couple different things you need to expose your your state through a rest interface so what kind of in fact in this model if you have the wrong screen but you would hit I could upload any existing sim that you might have so you can bring your own for sure you name it tell it how many instances you want as long as you're adhering to our SDK which is state what actions can you perform and what some other configuration information and it's really surprising the the math works folks were able to build a simulator of Moab using the CAD diagrams from Scottie afresh and got it working in five days because they know engineering tools so there they were able to move very quickly now the training and the teaching it's going to take some time we are putting this really really amazing wrapper around some lower-level reinforcement learning technology and we're making it so you don't have to mess around with the hyper parameters and is apex PPO I mean you can get down to that level if you need to but really we're trying to bring that technology up a level and allow non-ai experts but really you know the people running the plants my cousin runs a bred plant he makes bread and it's an assembly line and I ask him what does he try to do with it every day what's the goal it's - it's a balance between throughput and efficiency every day you have raw product coming in you got bread coming out and it's a similar problem in other industrial controls in our house and so they have a simulation and it's believed in rods with any logic and so they can take it and fine-tune it to do something I guess more bread so talking about industrial control systems how should I think about the diagram of the graph you have on the right as it relates to an industrial control system so back on the screen we've got your your face and lower right-hand corner but this is this is a well engineers will be familiar with the concept of a plant diagram so in control theory you have your black box your model of your system of your factory or plant and you have observable state coming out you have to decide what to do and you affect your action coming in the difference here is that earlier in the teaching when we're training it you saw the loop but now that loop is cut because I've saved it and I've exported this brain that means it's baked in so when it's deployed to Moab it's not learning it's not learning as it goes it's already static in fact we have some great technology behind the scenes for us how we handle stochasticity and taking probability distributions but that's that's for another time and probably funny the last question really is how should I think about project Moab and then real engineering problems that I may face at my effect yeah well project Moab is a sample it's a sample app it's a tutorial it's a an academic learning exercise but it's more than that it's first of all it was a labor of love for a lot of people and a proof point that we can use RL to train real systems physical systems in the real world but it's the on-ramp for our customers and partners so our earlier customers scg great announcements today that you may have seen in the video we for the partners and customers coming on our sim vendors are our SI partners and our customers they will use this Moab tool to learn more about how the product works and to use it as a benchmark for their own skills and improving it and really get into this new like it's not a DevOps scenario but an AI ops machine teaching scenario to improve their throughput in how they take these generic skills and apply it to their simulation and teaching cool and then probably the last few minutes we have left can you tell me some more information some links I should go to to learn more why yes I have a few lengths and I'm glad you asked there's three so we'll come back to the demo and the first is if you won't learn more about this page it's a kms / Moab Moab it's a great national park there with there's some rock formation I'll just leave it at that so we'll scroll down you can learn more about here learn more about what's coming a little bit behind the scenes we have this beautiful sketchfab model you can zoom in and and explode have exploding diagram and see all the pieces it is real and this is how we built it but you can learn a lot more about the components we have some tutorials that would allow you to get started without actually having a Moab unit so you can balance a ball on a virtual Moab you can learn how to make your brain more robust like the the default brain through domain randomization and finally how to go a little bit farther by avoiding obstacles now this obviously we need you know the main link there's really two key things and I want to make sure this is really important if you want to learn more if you want to spend an hour with me or Denise or John Alexander you can go to aka.ms/offweb let so we have these short links a s slash preview you sign up here and this looks like one of those kind of generic forms there's three people we we're reading it like well not tonight but we are reading it you will be hooked in to learn more about if you want to be a customer if you just want a hands-on tour of the system if you're a partner and you think you have an opportunity for one of your customers let us know through this page and we will get back - but finally the main the main page is a kms / bonsai this was the the big launch today this was the start up in Berkeley that Microsoft acquired over two years ago this is a very important proud day and I am super thrilled to be the one to tell all of you about these announcements today but know that there is a really hardworking group of engineers in Bellevue and in Berkeley and around the world so we're really really happy to bring this bring the system to you you can go through here and learn more about our customers some other stories about our kind of where to go next you know it's we really want to give people an idea that they can take their existing skills and their very specific world and their scenario and unpack it in a way that they can bring their simulation or if they don't have one we can help hook them up with a partner that can but bringing it to our platform and teach it to do more and we believe that starting today we have a way to make this exposed to a very broad group of people and we'd love to have you along for the ride so again Quick Links are a kms bonsai which you saw here a kms Moab which is our teaching tool here and finally the link to go sign up a KA MSS preview [Music] 