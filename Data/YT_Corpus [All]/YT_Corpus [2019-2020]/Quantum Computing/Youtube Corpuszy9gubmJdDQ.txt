 and welcome everyone to uh what hopes to be an exciting uh kiska global summer school so throughout these labs what we hope is to have all of you introduced to quantum computing and also make sure that you have a community around you as you try to solve problems throughout the labs so today i'd like to introduce you to the format of the labs how you can quickly start solving problems on the labs and also how you can get your computer set up to be able to do these laps so let's switch over to this screen where i'll be showing you exactly the kind of setup that we'll have so to be able to do the labs you'll need kiskit installed on your computer and there are many ways for you to see the right documentation to be able to do this what i've done here is put forward a series of tools for you to be able to use in order to do this so right now i'm showing you the installing kisket documentation page on kiskit.org so you can find it at kiskit.org documentation slash install.html here we have a series of laid out steps for you to get started installing kiskit but the main gist of it is that you would first install anaconda and then you'd start by installing kiskit in an environment if you haven't done this before and you also want something very easy to get started we also have a video that says how to install kiskit as part of our coding with kiskit video series so if you look for episode 2 of coding with kiskit you can also see instructions for how to get started once you have kisked installed and ready to go what you'll find is every day we will drop one of these labs into the discord channel for you to solve so the labs will be delivered as zip files which you can then download to your computer and immediately you would extract these zip files so i'm going to extract the zip file for lab 1 here and you can see once you have the zip file extracted inside you have an exercise file which is a jupyter notebook here we have only one exercise and a series of folders you don't need to worry about the folders to solve the lab all you need is to open that jupyter notebook so there are several ways to open a jupiter notebook i'll get you started very quickly by showing you my favorite way to do it and that is by opening uh my terminal window in your case if you have a windows machine you would open your anaconda prompt uh in in a linux machine you'd open your terminal window on a mac you do exactly what i'm doing here which is user terminal window and type jupiter notebook and then simply drag and drop the notebook into your terminal window which drops its file name as soon as you do that jupyter should open and show you exactly the contents of the lab for that day so for the first lab there are a few things that i wanted to point out to you that would be helpful as you solve the problem first what we're trying to do is take you through a series of exercises that show you how to manipulate and visualize single qubit states eventually getting into the topic of manipulating multiple qubit states solving some problems that are ungraded and then talking about measurements and really compiling all of these lessons into one final graded exercise which will be the main challenge for this lab in this graded exercise you'll be talking about the topic of quantum teleportation which was covered in your first lecture the goal here is to teleport this specific quantum state from one qubit to another and you'll be doing the quantum teleportation protocol as discussed in your lecture so the way we've set up this problem for you is exactly as you saw in your lecture by giving you a few places where you can type in code to eventually build up the teleportation protocol as discussed in your lecture and here we have the main body of the work so as you might remember quantum teleportation consists of a few uh steps we initialize the state that we want to teleport we create entanglement between two qubits we do a bell measurement and then we apply some classically controlled quantum gates using the the results from that bell measurement so the structure has been built for you and you simply have to fill out what each of these functions is doing so we have cr created space for you here that says write your code between these lines start to end where you would insert your code and eventually build out the teleportation algorithm once you're done filling in the code what you need to do then is submit your first name and your last name in this last cell and your email and simply run this cell to get the right or wrong answer submission process check so once you find that you've you've gotten all the way through the exercise running the cell you can run it over and over again until you get the right answer and you're satisfied with your code now i want to point out a couple of important things uh so if you go to the very top of the jupiter notebook for lab one we've put together a link here that we think would be useful for you if you've never used jupyter notebooks before the main thing to remember with jupyter notebooks is that if you'd like to run a cell so these are the code cells that you see that are in a slightly grayer color you'd immediately type shift plus enter once you're on a cell so for example to run this first cell i would place my cursor in that cell and then hit shift and enter and as a cell is running you'd immediately see that inline change to a star and as soon as the cell is done you'd see it change to a number and you can do this throughout the notebook by going from top to bottom until you see that your work is getting built up and you eventually have the quantum teleportation protocol finalized i will also point out that we have uh a first cell here that does all the necessary installations for you so i'll i'd like to point out that you run the cell first and run all the cells in order as you're working through this in terms of the content of the lab as i mentioned the goal here is to get you from single cubic states to multiple cubic states to quantum teleportation and there are a few cells that you'd run that would show you different parts of kiskit from the state vector quantum information module to the visualization tools in kisket that can help you in your work 