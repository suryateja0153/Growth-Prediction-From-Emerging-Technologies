 let me start recording start streaming and come on and we're live i think all right  yeah and i can't even hear you that's perfect yeah i recently switched to the headset that i  got when i started at microsoft um my yeti has   been very uh temperamental lately well you know  things happen yeah did you see the tweet of uh   scott kate he broke his uh headset too oh no the  surface i think it was the surface that's at one   i think it's like i think he shared it on the on  twitter that i was mostly used by uh his daughter   but yeah they broke in the middle oh wow they  crack and just like i was joking like did you   sit on them or what like how did they crack  like that apparently it's just but i don't   know maybe a lot of traveling yeah squeeze and  push and i don't know yeah i don't know well   you know i'm very just dating like the i heard a  lot of good things about the surface headset too and i was there but i have like the bows that are  good they are not pushing on on my glasses so like   i can wear them comfortably for a long time but  they are they are big so i'm looking for something   smaller less less in your face yeah i i gave  a name look you know on on your phone when you   pair them you can give a name to your device so  my bose headset is called leia like you know in   the star wars because of her it looks like her  hair yeah yeah i i have honestly way too many i   have a drawer of headsets that's how many i have  my favorites probably my pink phone i sometimes   connect this to either my regular cell phone which  is why i originally bought it or um if i'm taking   calls during the day and if i'm using my yeti i'll  connect it to the bottom but usually i use my my   beats i mean because i got them for free when i  got my mac and so um that's how i got those but   these i actually got when i started at microsoft  and they're really good um i really like them but   you know you know i like pretty stuff so yeah they  are regular they are efficient but you know less   sex i have also a nice headset with a mic it's  very convenient like when you want to isolate   yourself and like yeah for speaking this is cool  if i go to the office most of the time it's that   one because it kind of mute everybody and like  people where i'm on the phone or a call with   them they don't hear with anything else but yeah  yeah they are efficient it's just it's interesting   how the noise cancelling ones uh how much of  a difference they make when you take them off i notice just how much louder life is  beyond the noise cancelling headphones   oh yeah but there's different types so  my my bows are really good for like the   like ventilation or in a plane or something  like that but the other one is the jaw bra   jabra is better for voice if people are talking  around you like that's better on that kind of   noise canceling i don't know like i'm not a  i'm not an expert i'm a user right we're the   customers yeah that one like for this purposes  but both both are black i don't have any pink oh   it's okay yeah it's all right so foreign  is saying she already love you oh thank you   you'll have to keep an eye on the chat for me  today frank i um i've had recently had some   bandwidth issues so usually i look at it on my  other computer but today i'm going to keep that   one closed so if anything interesting comes yeah  well we just get raid from visual studio with 48 bunch of hellos right now coming in yeah and uh  how about we get started because i'm sure you have   a lot of stuff like usual yes i am i am ready  let me make sure the hololens is yep hollywood   is ready let me do that little intro and we get  started bonjour hi welcome to the stream i'm frank   boucher i'm a microsoft cloud advocate and today  with me i have april who's also a cloud advocate   she's an expert in mixed reality definitely and  she like to build stuff to make us look smart   is it good i'll take it today it's like you always  come with like those project or ideas like it   won't fit in like an hour and a half like it looks  too complicated but then like you explain it and   like and everything it is simple so like yeah you  definitely have that talent where like you know   you you simplify things it's awesome yeah i i  love it and um i will say full disclosure if you   haven't met me yet or tuned in to um either the  past couple week streams i've been here with frank   i myself recently started in this entire extended  reality space just last summer so it's been a year   now i will say officially it's been a year  since i started learning how to do anything she's awesome but that goes to show you that  it's not rocket science and you don't need   years upon years of experience the only  other programming experience i had beyond   this was python and i can't even say that  python and this are connected in any way   so um it's been a lot of learning but a lot of  what i like to show are things that i feel are   projects that are approachable for beginners  and so that's what i have to share with you all   today so are we ready to look at the project  link yes i am so should we start by a demo   um before we switch the demo i'm just going  to explain what you're going to see exactly   so we show your screen um yeah so um for me is  it be still or me show me first alright i'm right   now i'm seeing your your screen okay cool so what  i'm going to do is show you the project that i've   made and it's a remake of a prior project that i  had made with monuments where you can learn more   about different monuments from around the world  and there will be some facts what's great is that   i also included our our azure bot service as well  and the old example that i had there was a button   that you pressed and you had to read all the facts  but now i have a bot that you can ask questions   and then they will or the bot will uh respond  back to you so before we do that let me make   sure i remember some of the questions that i have  all right i see them and let's head into doing there we go let's go into live preview  i'm going to get up and there we go all all right and we are in a movie everybody hello and welcome   so frank i just want to confirm you can  hear you can see you're smiling great   all right so i will speak as loud as i can so the  mic picks me up what you're seeing in front of you   is a monumental world tour is what i call  it and we have five monuments in front of me   we have the great pyramids of giza  we have the great pyramid itself   i didn't mean to trigger it sorry we have um  christ the redeemer which is right here the next   one big ben then we have um constantine's arch and  we have the parthenon and then over here on to the   right i have a microphone and that's how i'm going  to activate the bot itself now the monuments are   sitting on what's called the dock the dock is  a experimental mixed reality toolkit feature   or ux building block that you can incorporate  into your mixed reality projects but what happens   is that you can take an object off the dock and  once you do you can set it into your environment   and then if i back up i can see it i can  look at it i can also walk around it as well   now what i've done was um add a bot whereas you  can ask questions and the bot will give you a   response so i'm hoping the bot is picking up  as she talks so let's start how big is big ben big ben is 315 feet tall so i'm hoping you've  heard big ben is 315 feet tall if not i apologize   um we have the parthenon here to my right   so let me put this back on the dock and it'll  go back to its small size as you can see   i'm going to grab the parthenon here this is so  cool uh let me lower it a little bit oops i didn't   realize it wasn't all the way off the docking  all the way it doesn't like being pulled away there we go so that's pretty big i have to back up  a little bit so you can see it but you can kind of   see it from the side here i can walk around it if  i come around my office there it is um i can ask   this question when was the parthenon destroyed the  parthenon was partially destroyed on september 26   1687 by an ottoman ammunition dumped  inside the building ignited by venetian   bombardment during a thieve of the acropolis  all right so i'm going to return this to the   dock i can just grab it and there it is so  i hope that you were able to hear that and your voice the butt the image was crystal clear at  least for me i don't know chat you can confirm if   it was also for you i think i think april will  really appreciate that uh it was awesome uh we   could even hear the like your voice repeating  probably in the video playing on your computer   like that's probably what it is okay all  right that's everybody saying i was awesome   oh yay all right who was it so uh bill i said oh my god the arc of  trivium i live five minutes near it should go go out and wave for us and that would be cool right yeah so yeah so that is  what we're going to walk through today and i'll   show you how to add all the azure fun because  the bot itself was made possible with azure and   that is going to lead us right here into the q a  maker which is what should be on the screen now   and so if you've never used q a maker i'm going to  be 100 honest my first time using it was last week   and i'm already at the point where i'm continually  using it and and it seems very intuitive i first   learned about it last year at build and i saw a  demo and i really liked it because for those of   you who do know me and those who don't know me  i come from a world of primarily making bots and   i love working with bots so i find the q a maker  to be a very intuitive process as it says here no   code experience and that's 100 true you don't need  to know how to code to use this there is automatic   extraction i watched a video of someone uploading  um things like a manual for example and then based   on like how the headers and such was made it was  able to pull out the different context that was   needed for the bot and so that's pretty helpful  so you don't necessarily need to only have it in   a script format with the question and answer  you can as you can at the website says it can   semi-construct the content from faq pages support  websites excel files sharepoint documents product   manuals policies so you have a lot of options  there which i think is really helpful if you um if   you want to extract from existing content you have  some multi-turn conversations i haven't personally   used that yet but in my experience with using that  it's really helpful if you want to direct your   conversation in different directions and so the  bot itself there's actively learning and so also   you can use chat in more than 50 languages which  is great because i love when things go beyond   just english so you have the flexibility of using  a lot of languages and as frank knows i love   languages so that part always makes me happy so  when i first started working on this the very   first thing that i did that i will also suggest  for you all at home to go do if you're brand new   to using the q a maker is to actually use our  learn module that we have for building a bot and   frank um if you could share the aka.mslash learn q  n a bot with everyone at home and that will bring   you here to the learn module itself the reason why  i suggest trying out with the learn module is that   it's going to open up into um at some point  there's going to be a um a visual studio um   yeah which one i don't see it's the very  last one i sent via email it was in the   one yeah why why are you doing that to me you're  sending it in the wrong order that's worse she's messing with me perfect that's fine so i'm just you know yeah thank you  okay it's shared so um i will suggest taking   a look at this learn module because um towards  uh when you get into like the meat and potatoes   of it of the actual exercise you're going to be  working in a visual studio code space and there's   a notebook in there that'll walk you through how  to create your bot i personally say try this out   because it is it's almost kind of like a guided  lesson on how to use the q a maker and so i just   wanted to share that with you all so that way if  you want to just learn how to use the q a maker   itself that is where i would suggest starting now  i already have it open here and i already have two   different bots created one is margie's travel kb  that's the one that you're going to create over   in the learn module and so again highly suggest  trying that out the second one though is the one   that we're going to be using today which is the  monuments april one that i have already made now   when you're starting out with the q a maker the  first step would be to create a knowledge base   and in here the first step i think there's three  or four steps there's four five five steps the   very first thing is to create a q a service in  azure so you will need an azure account you'll   sign up for that and then you'll create the q a  service itself i already have one created which is   great and if i go to my resources i believe that  one's going to be it's one of these that that's in   here i can't remember exactly which one but when  you do press the button for create a q a service   the window will automatically open up to azure and  that's where you'll create the service once you   create that service you'll go into step two which  at that point you're going to come back over here   into the q a maker you'll click refresh here and  that's going to help populate with some options   based on what you've just created one thing i  will say that's a slight gotcha that i ran into   when i created mine was that um it kept telling me  that the user didn't have permission to use this   particular resource if that happens there are some  permissions i think there's a permission setting   somewhere that you can go in and add and let me  see if i can find that really quick um because   i don't 100 remember which one it was in i think  it's this one so where it says access control um   in there is where you can go and you can add um  some oh maybe this one isn't it it's one of these   i think i'm going crazy frank because i know i saw  it and i've done it a million times so let's see   it's in one of these so trust me when i say that  it happens and you will uh need to come in and   do it so sorry i can't find it right now but  if you run into that issue just remember that   there is an access control that's where you can  come in and add your own account as an admin   so that's just a fyi and then um in here once  you refresh that your azure directory id will   already be populated so mine i created mine  under my voting code name so that's why it says   voting code there and then azure subscription name  that's where you'll select your subscription type   the azure q a service will be based on what you  have available so i only have two because i have   two different bots select the bot that you just  made in my case it would be the monument stash   april and then for language i already have english  selected because that's what i was created for   but um it very quickly went away when i tried to  show you all there's a long list of languages that   are available for you to choose from so that is  your moment to to select your language and so to   reiterate step two this is where you're connecting  your q a service to your knowledge base now the   knowledge base itself as i mentioned earlier it  can come from a the actual documentation can come   from a variety of resources whether that's product  manuals policies q a guides websites what have you   azure is smart enough to extract that  information from it and put it in q and a   pairs and you can modify that so you're going to  give the knowledge base itself a name and then   down from there in step four this is where you  can either point to a particular url for example   or you can upload a file i personally uploaded  a file for mine and because this was a prototype   i don't have facts for every single monument i  did it for i believe two but i did mine in a qa   in a q a form in excel as you can see here so  one um one column says question the other one   says answer and then down below i have some  questions and then the corresponding answers   as well so it doesn't need to be something  that's large and grand and in some very   interesting convoluted format if you're doing a  q if you're doing the excel route like i did this   format here with one column questions the other  one answer is good enough okay so you'll take that   and you're going to click add a file if you're  doing that approach and then you'll upload the   file there the next thing that i like in here  that's in step four is chit chat and so this will   give your bot the ability to also engage in small  chat i mean in small talk which i think is pretty   great when working with bots because i feel for  the most part when we are speaking with bots we   know we're speaking with bots but when you're able  to add some personality to your bot it really does   make a difference and so we have five different  options for chit chat that's professional friendly   witty caring and enthusiastic and so in the chat  to say oh i wish there's a sarcastic chat style   that would be cool it would definitely be cool  i would say for when you're adding chit chat   to your experiences if you've never necessarily  worked with any of these options added to your bot   when we head to the next page you'll actually  see some of the different phrases that come   with chit chat we also have a link that will take  you to more information about chit chat as well   for this spot i initially had used friendly  but i didn't feel that any of the uh any of   the conversations from the bot made sense for the  experience so i deleted it so that's one thing to   keep in mind is that even if you add one of these  chit chats into your knowledge base you don't have   to keep it you can remove it and then finally the  last thing you'll do is create your knowledge base   so as i said i already have one and that's what  we're going to be looking at today i'm going to   head back to my knowledge bases and i'm going to  click on monuments april so here is my knowledge   base based on the questions that i provided and as  you can see it pulls in very nicely with questions   on one side answers on the other if you were  to utilize something like a manual for example   it'll also pull into this format but what's  great is let's say you don't like the way it   was pulled in you can modify whatever is here  to your liking which i think is really nice   as well so that way you have some flexibility now  what's also great is even though i'm using my bot   for talking purposes you could also use your bot  if it's going to be in a chat window for example   and that will give you the ability to use  things like images or even emojis for example   in hyperlinks and so on and so forth so you  do have that flexibility there we have some   alternative phrasing so let's say for the question  where was the great pyramids of giza located   if i wanted another way to say that i  could also say where is the great pyramid   because maybe someone will ask a question in that  format the purpose of the alternative phrasing is   to really think about how other people might ask  questions because for an experience where you're   starting off with saying hello let's say like  hello was the trigger to start the was to start   the uh conversation i might say hi frank might say  hello someone else might say what's up so you want   to have those different ways of phrasing something  uh same with the answers as well there is whatever   the answer is that's in the answer column that's  what the bots going to respond with there are   follow-up prompts that you can add as well i  haven't added those necessarily but you could   add that and then of course if yeah what would  be an example of uh follow-ups prompt so let's   see use i haven't used it with our service but  we can find that right now actually so follow us   i usually use um in my experience i usually use  these when i work with um it's a non-microsoft   product but twilio also has autopilot which is  very similar and follow-ups is how i usually chain   my different bot responses to create a much longer  conversation so it's it's kind of also it's kind   of like mapping the conversation to different  other things that the bot can do but in this case   we can actually find out together now so follow-up  prompts can be used to guide the user through a   conversational flow and are used to link q and a  pairs and can be displayed as buttons or suggested   actions in a box so it's the same thing so it's  linking the different um questions which i'm very   glad that there's consistency in how the bot world  approaches these so yeah so you can use these to   link um different potential other things that  the bot can say or or do so for this particular   experience i did um a good example if if i were  to if the question was where was the great pair   of mizuki's located and then there was it would  respond with this and if the bot was to follow up   and say would you like to learn who built it for  example that would be like a really good example   of using a follow-up prompt in this particular  example um also while in here we can also delete   any of the questions so if i decide i don't like  any of them i can delete them and one other thing   that i noticed earlier when i was testing this  out is that i actually had a typo in my original   file and i was wondering why the bot kept saying  september as september it didn't make sense to me   and then i looked back and saw  that i spelt it as september   so that's something to keep in mind is  that the bot will say what you give it   so in this case because i have the option  here to come in here and change what's here   i'm going to add the the b in september so now  it says september and when the bot goes to say   the answer to when was the parthenon destroyed  it'll be the correct one also what i like is that   the bot seems to do a pretty decent job  with pronunciation there was something one other thing to keep in mind is that if  she's doing numbers for something like how   how big is big ben and her response is big ben and  315 feet tall um the number itself is written 315   but for something such as uh when the construction  begin i sometimes like to space those things out   so since the answer is 447 bc i didn't want to  have bc together because i wasn't sure how she   might say that um verbally so i spaced  those things out it's kind of like when   you're working with um alt text for example  and if you're working with a screen reader   you want to make sure that you are typing  it in a way that it can be read to actually   be verbalize the way that you intend so what's  great is that even though i just changed this   here that actually leads me to the next step of  the q a maker which is um saving and training it   so now that i make this change even when  you're first starting out creating this   you'll click save and train and this will train  the bot with whatever updates you've made to your   knowledge base and so while that's updating the  other thing i want to point out is that you can   also test this as well in the browser so here in  test um it'll open up in like a chat window and   i could say where is the great pyramid i'm  not sure if you can see that but it's under me   sorry um idea let's make this like this  so now you can see it yep like that so   here in this chat is my head still blocking  it frank no that's perfect cool so what i did   was i typed in where it's a great pyramid  and then this is what the bot gave back   but since we actually want something verbal  it's better to test things like this over in   unity which is what we'll do in a moment so that's  just as a heads up so now that i have my knowledge   base saved and trained i'm going to close this  test and from here you go to publish and then   if you've never published the bot to if you never  publish a knowledge base at all this screen might   look a little different for you but what's  going to be important and completely the same   is clicking this publish button so because i just  made an update i'm going to go ahead and publish   it so that way when we use it over in unity later  it'll update with that change i made to september   and then from here you're going to create a bot  if you haven't created the bot yet i've already   created one so we're going to look at the one  that's already been created but if you haven't   created your bot you'll click create bot that's  going to take you over to azure and the screen   will be different it'll take you to um i think you  have to search for resources or no i think it'll   take you to the creation of the bot service itself  and i already have one so we'll take a look at it   and this is essentially what um the bot channel  or the bot service itself looks like in the   learn model that i share there are instructions  for how to go through and setting um or what to   fill out when you're doing this and i also have  a um a tutorial that i need to share in a moment   that'll also walk you through this but in any case  you'll create the bot and then once it finishes   deploying the very first thing you're going to  want to do is come over here to the channels and   that's going to be let me close this that'll be in  this left menu that says channels and by default   it gives you a web chat but we're not going to use  that because we need what's called a direct line   of speech we want to make sure we can add voice  for our bot now if you've never used direct line   of speech before totally cool because guess what  we have a doc that walks you through it and so   i believe this one frank is i don't think i  gave you this link no i didn't give you this one   but there is a maybe i can slip it into the  skype chat yeah sorry frank that's the last   minute we'll add it and i will add it in the show  note when we publish the blog post and the uh   the youtube video thank you so this document  is step-by-step instruction of how to add a   direct line speech channel and essentially what  you're going to do is i'm already here at step   twos which is where you come in and you add  direct line and what it'll do is ask you to   select your cognitive service account and so for  me i chose the one that i already had created   and then from there you click save and then once  you've done that i couldn't quite show that on the   screens i already have it set up but once you get  done with that the next thing you'll do is come in   to settings and you'll need to enable streaming  endpoint and then once you've done that there   is another thing configuration you'll come into  there and once you're in configuration you'll   come to general settings and you're going to  want to ensure that websockets is on so that's   setting up the direct line speech so once you've  set that up then the last thing you need to do   is head over to unity and then we can  go add it to the experience itself   before we head into unity there is one other thing  that i do want to share frank and it's the this is   a little long of a link but it's called interact  with a bot in c-sharp unity oh well okay so that   one i already share so it means that was the last  link i have so uh then belt that us was was right   the first link i shared was the wrong one  because that's the last link i had do you   earlier earlier there was did you  see our aka.ms learn q a bot link i don't think i have that one is it in the  email you sent me it was a follow up in the   email but worst case what i can do i have the if i  go from the bottom i had the interact with the but   c-sharp unity i'll share that again i have the q  a maker i have windows device portal i have mixed   reality tool html h2l and get it started okay so  this was the one that from earlier when i was in   learn it's aka dot ms q a bot um at this point if  you want to try the learn module that i mentioned   then the aka ms slash q a learn q a bot will take  you there but in any case um the one that we were   just talking about interact with the bot in  c sharp unity looks like this it is a boom   i shared it thank you it is a code sample which  will walk you through how to interact with the bot   in c sharp unity this is literally what i used to  create this experience in itself or at least to   get a bot working in here because i did my own  little april magic as well but this was what i   followed and so if you're looking for where you  can find the script to add to it this is where i   will say start you will also notice in here that  the instructions are also going to walk through   similar steps of what i'm going to walk through  as well today so that's just a heads up if you're   looking for a code sample that you can try  out on your own as as the world waits for me   to add my samples to our samples browser which  i'm working on so over in unity let's go have   some fun i have the project set up here already  and what we're going to focus on today is adding   that azure component in here but what i will do  at least is just highlight some of the different   some of the different mixed reality toolkit areas  that i think is worth knowing so starting off   when you are in unity the very first thing that  you want to do is configure your computer for   windows mixed reality development and then you'll  also want to import the mixed reality toolkit   i have two links that will walk you through how to  do that frank the first one if you could share is   i'm ready i don't think i'm  ready let me think which one the first one that i want you to share is let's see i forget my own link sometimes which  i think is a normal thing i think this one   is the ms is it the q a maker the device i think  it's hl2 tutorials but let's see yes uh wait no it's nothing important h2l import i  think so let me see hl2 rtk yes you   are correct frank it's the aka.mslas hl2 import  mrtk link you are a genius prank no no thank you   i'm cookie pasting here come on it's a hard  task so that link will take you here to steps   on how to set up your computer for windows  mixed reality development and there's also   instructions on here on how to add the mixed  reality toolkit i talk about the mixed reality   toolkit a lot because it helps accelerate your  mixed reality development and as someone that's   new to this space i find it to have been a life  saver the mixed reality toolkit is um available   this documentation is currently available within  github some github pages frank if you could share   the getting started with mrtk link please and  that'll take you to this page as if you want   to know more about it this is also where you  can come and get the actual unity packages   follow the instructions here the mrtk release page  is where you can get those packages so again your   computer or your project needs to be configured  and set up for windows mixed reality development   following the instructions on the two different  links that i just showed and then the other thing   i want to point out is how i got to this fabulous  view of a dock and so on and so forth so one thing   i love to do is reuse whatever has been previously  created i'm a big fan of that so if you happen to   also download the mixed reality toolkit examples  package which i highly suggest doing that'll give   you access to all the different examples that we  share on the mixed reality toolkit github pages   what's great is that there is already an  existing doc example so that way you don't   have to configure this from scratch and that's  what i did and so i pulled that out of here   and that's where that's how the dock exists in  addition to that i then needed some monuments   to use and so for those monuments i took a trip  over to the unity asset store and i purchased a   trip to egypt and all those countries you know and  um i um i purchased and downloaded this monuments   pack low poly by interactive project if you want  to do something similar i would suggest giving   this one a try um unity does refunds if you don't  like it so that's worth knowing but there are um   there's a good amount of monuments available  for use and so that's where i got my monuments   from i personally like using assets from the unity  asset store because unity does have the ability to   import them into the project while here in unity  and i don't have to worry about making sure that   the materials and stuff gets added to it and i  don't have to worry about issues that i really   don't feel like dealing with basically that's  why i use the community asset store but i have   used sketchfab as well but in any case i get them  from the unity asset store i bring them i import   it in and then that's how i have the objects and  so let me just go over to where they are here   in my scene they i keep them all over to the  left reason being is that when the scene starts   they're going to automatically dock to where they  need to go so it doesn't matter that i have them   large and over here to the side they're going to  go to their respective places on the dock and so   when you're setting these up just before we get  into the azure part one thing i want to point   out is that your objects will need three or four  different things um one the object needs to have   a collider do not make the mistake that i made and  not add a collider so ensure that you're adding a   collider component to the object and um so that'll  be the box collider in my case the second is   there's going to be a script called dockable that  particular script is what you can add to an object   to indicate that it will be docked or that it can  be docked to this dock that we see in the scene   the next one is going to be the object manipulator  and the object manipulator script is going to be   used to allow you to manipulate objects with your  hands so that's how i was grabbing the objects   off the dock you can also add some scaling and  rotation constraints as well in the very first   example i made of this we were able to make the  objects or the monuments large or small so i could   have a tiny big bend or i could have a really  large big bend for example and you can do all   that with your hands the last script that you want  to add on here is the near interaction grabbable   and that's going to allow you to do near or close  interactions with objects which means i can walk   up to it and grab it with my hand so those are  the four things you want to add to that if you   are using the dock now as for the azure pieces  here what we need to do now is create a script   that will make use of the bots that we created  earlier and we also need to add in a button so   that way we can start the microphone to hear our  utterance so that way when we ask the question   the bot then can take what we say and use that  to map which of the responses that she's to get   so the first thing i would say to do is for  creating the microphone itself i personally   like to use buttons that are in the mixed reality  toolkit which is why i suggested importing that   into your project they come with the toolkit as  prefabs and so if you are digging around in the   um the project files for the mixed rally toolkit  that is imported into the project you're going   to find them in the mrtk features ux um prefabs  folder and no it's in the interactable folder and   then inside interactable there's a prefabs folder  and that's where you can find all the buttons   i always use this pressable button hololens 2  because to me it's already perfect it looks just   like what i need i can come in here and switch the  icons out so i personally used a microphone icon   and then you can change the label as well so  mine says microphone on it you'll notice here   that it says say button and that's because you  can add voice commands to trigger buttons as well   we're not doing that for this experience so i  didn't configure that but that's just a heads   up that you could also do that so we have the  microphone already created the other thing that i   added to the ui as well is some text and this is  because the script that i use from that sample   that i shared earlier it calls for some text  elements that'll let you know that first the   service is connected and then it'll also output  what was recognized and then the other thing it'll   also output is any errors that might be happening  so i created that using a quad which is one of   the primitives of the unity primitives it's a flat  surface that i personally like to use to add text   on and then i added two text elements as well  one for words recognize and the other ones for   connection status and an error so i added three  actually so you'll want to make sure you have   those ui elements because when we go to create the  script all that's going to be required when you   connect things to the script so we are  now ready for the actual script itself   and we're going to look at some code now  as i mentioned i personally made use of the   sample that we already have in the repo that i  shared with you the reason being is that we don't   have to start from scratch and i personally  do not like starting from scratch i like to   use existing scripts and then making them my  own and so if you happen to um to clone this   download the files there will be a script in  here that you can use one thing i will call out   is that when i tried this recently i did notice  some adjustments to be made and i opened a pull   request and every or i open an issue for it and  it's currently being under review so hopefully   by time you take a look at this you'll see the  updates that are made but i'm going to actually   walk through that for you so you can see what i  did if you're following along at home or watching   this later but in this particular sample there  are two scripts that you're going to use and   if i open in here the one first one is called  audio data that one you can use as is you don't   need to change a thing at all the second one  they call it dialog service connector sample   i renamed it as bot in my own experience because i  did my own tweaks to it but those are going to be   the two scripts that you need so if you don't want  to download this entire sample at least get these   two scripts because that's what you need so with  that said we're going to head into visual studio   and the audio data one i wish that i could say  c sharp was my best friend but it's not and so   i'm not going to be the best at explaining what's  happening in here but i can confirm through trial   and error that you absolutely need this script or  the service won't work because the bot script that   we're going to look at in a second it references  this particular script so as i mentioned you can   take this script copy and paste it as is and save  it there's nothing else we're going to do to it   but this is just to show you what's in in here in  itself my belief is that this is what's going to   be needed as azure sends back that audio file  to be played in the experience itself so again   this particular audio data script copy and paste  exactly as it is there's nothing that you need   to change but what we are going to do is modify  the bot one so when you open the bot one there's   going to be a couple of different things that we  need to add to the usings to make sure that we can   use these libraries when we're working with this  script and remember exactly which of the ones um   i 100 added but the ones i know for sure of we  need to make sure that we can use the cognitive   services uh speech and then speech.dialog and  then speech dot audio and because we import the   mixed reality toolkit you're also going to want  to add the mixed reality toolkit um ui as well   and that's because those elements that we made for  the text for example um is is so we can use that   later in the script itself and then i believe  everything else came with the script as is oh   and tmp tm pro that's going to be text mesh pro so  those text elements that i added earlier are from   the text mesh pro and you'll need that so we can  use that later in the script in the next section   so as for the different um i wish i was like  the best at explaining c sharp so i'm going   to use my april terms of how to how to describe  what these are i think we will all love that yes   so um this first section is what you're going to  add before the week in the start in the update   method so for those of you who are familiar  with unity you're aware of the wake start and   update methods for those of you who are newer to  unity when you create a new script in unity the   scaffolding provides a start method and an update  method and the start method is what's called when   the scene loads the update method gets called  every single frame so if you want something to   happen as soon as the scene loads you put it  in the start method if you want something to   happen every single frame you're going to put it  in the update method and then there's also this   other one which is awake and that doesn't come  automatically when you create a new script with   unity this um get you can you add this yourself  manually so we'll get to that in just a second   but that's just a heads up on how this is  formatted now for the different elements that   i want to be able to modify through the unity  ui i'm going to create those as public strings   and that's essentially what that'll look like  if i head back into unity and let me go to that   microphone because that's where i have this and  let me collapse all these this is where that   script is but here where it says subscription  key and then one says regional one says bot   id that's where you can insert your cognitive  services description key and then your region   and your id so in the script itself i created  these as public strings created them as public   will enable you to add them over or see them or  modify them if you will over in the unity editor   the next thing that we have is the pressable  button and that one's going to be listen once   button so the pressable button is going to be  that microphone button that we added earlier   if you're not using mixed reality toolkit then  the type is not going to be pressable button i   believe it's just button but because i'm using  the mixed reality toolkit i went and looked in   the documentation that we have for um within  like the reference area and i found that it is   of the type pressable button so for that one  it's a pressable button and it's going to be   called listen once button the listen once button  the name came to be based on the script that i   grabbed from the sample i showed you earlier  so you don't have to call it that but if you   do change it make sure you change it wherever else  it might be referenced as such in the code and so   over in unity as i have it in the unity editor the  listen once button is going to be the microphone   object that i can drag from there to that  particular field so after that we have three   tmp text elements and those are going to  be for the different texts that i mentioned   earlier the one is going to be the text that's  recognized the second is going to be the error   text and then the third is going to be the  state indicator now for a real world example   of using this let's say that this particular  app was used in like a classroom for example   you probably wouldn't want to add in a recognized  text error text date indicator but all for all   purposes of testing things out and ensuring things  are working i would highly suggest adding that so   that way you're aware of if your service is even  connecting because the worst thing to happen   is to to think that maybe it's a different issue  when really it just never connected to begin with   so for all debugging purposes if you will i  would say start out with that and then once   you can confirm that it's working you can get  rid of those things and modify the code as such   so that way you don't need those um and then from  there we have three private strings and those are   going to correspond with the different um those  different text elements that we mentioned earlier   when azure um does its azure magic and it sends  back what it is uh what it heard at least in terms   of the utterance that she said that's what's  going to come back in the recognized string as   that'll come back as a string um if there's any  error it'll come back as an error and then the   state indicator that's going to let you keep track  of what current state that um it's currently in   so from there we have a thread locker and moving  down we have the actual dialog service connector   and that's what's going to help connect our bot to  actually communicate with us and take in questions   that we have and so on and so forth and then we  have some audio fun in here and again audio is   not my thing but this is where i can confirm that  this part of the code is referencing whatever's   happening in this script so again that's why you  need the script because i tried to create this   once without this and unity crashed which by the  way i will tell you as you're creating this if you   don't use the correct um subscription keys  and such unity will crash and i have probably   10 different times that has happened to confirm  that unity will crash so if you um do everything   and you go to play press play in unity  and unity gives you a crash error   it's probably nine times out of ten because either  you're missing this audio script or your azure   credentials are incorrect and it's probably  the azure credentials so that is a heads up   i've learned the hard way for you  so that way you don't have to wonder of course so here in the awake method is what's  going to happen when the service starts so i'm   not sure if you heard when um when the scene first  started because i think i was talking as the bot   was talking but she always starts with welcome i  don't know how to change that but i can confirm   that that is something that does happen but what's  happening here at least in this awake area i think   it's um it's connecting at least to all the things  that we intertwine and connect the bot to so that   we can bring it into this experience down here  in the start we have a comment which is great and   this explicitly calls connect async on the dialog  service connector and begins listening interaction   so basically what it's doing is it's making the  connection and then it's going to start listening   for when you talk and in our particular case  we have implemented a button that starts the   microphone so what's really happening here is  we're checking that the button has been pressed   and then once that button has been pressed that  activates the mic in whatever device you're using   and then you can talk and then once you talk  then that's what um azure oh that's what the   experience captures and sends to azure now  what's been added here in the start method   is um it's a conditional statement to check  to make sure that you do have a um a ui button   assigned to it so that's why this is here in  the event that we forgot to add the ui button   and that's going to be here then we will get an  error and we can't start the whole experience so   it's kind of one of those you didn't add this  so we can't do anything sort of situations   now just below there we have the update method um  here's thread locker and then from there we have   a conditional statement one day frank i'm going  to learn what threadlocker is i always see it   and i tell myself i'm going to learn what it is  and then i never go back and research it so one   day i will do that but i can tell you what's  happening in this conditional statement so   here in the conditional statement what's  happening is we are creating that clip to play   when the bot responds back with whatever the  response will be for um the question that we act   so that's what's happening in here and then just  below we do have a button click method and that is   going to um call start listening and i feel start  listening with something that we either created   i think is probably created below yeah it's going  to be something that we create below in the text   or in the script so um here we have a create  dialog service connected method which we talked   about a little bit earlier up top but this is  where we are confirming that we have our correct   azure credentials and so what it's first checking  for in the first when the first conditional   statement is that the subscription key itself um  is uh is there and that the region is also there   and if it's not then we're going to get um a a  nice error telling us that we need to add that   and then just below that we are um we are making  we are doing the config for the bot framework   and so there's three things you need here one is  the subscription key the other is the region and   then the third is going to be the bot id the  subscription key is going to be your cognitive   services speech subscription key and then the  region is going to be the region that you created   your bot so for me i always use us too because i'm  here in california the bot id itself is actually a   very tricky thing to find and where that's going  to be is i earlier slightly quickly showed it um   but without going back and showing my credentials  it's going to be in the we'll get as far as i   can go without showing my credentials at least  do you use the azure mask i don't yeah you'll   have to tell me what that is what it is mask  now it's called it's a project created by uh   brian clarks who's also a microsoft cloud  advocate it's in github and it's a tool   you could like it's a an extension of chrome or  edge chromium you could put it there and it will   hide a lot of information it's not perfect so  sometimes it shows like the key but a lot of   time when you're doing demos having that enabled  will you know just blur the key so you could show   where is it without displaying your i will share  that after the show with you that's smart that's   good to know um i'll have to try that out for  the for everybody right now yay everyone gets one so for the um the bot id when you are in the azure  portal and you go to your web app bot resource   and you're going to click on settings and i can't  click on it because it's like right there as soon   as you get to it but when you click on settings  there's going to be this box on there that says   um wait let me pull it to the side because i  don't want to tell you the wrong thing one second   it's going to say microsoft app id and on there  it'll be grayed out and uh that's actually going   to be the id you need so if you're wondering where  is my bot id that's where it is so heading back   into unity um let me go back to my visual studio  and so that's the different credentials that   you'll need when you're doing the config here and  um if you don't provide one you'll get an issue   and if you provide the incorrect combination  unity will crash so keep that in mind uh   from there we have um there is some audio config  happening as well and sorry so when you say crash   do you mean like dead or just like crash showing  an error or something like that like it comes yeah it's powerful when you don't  have the right azure credentials   okay like i was not sure like first i thought  crash and style maybe like maybe it's not crash   but like you just like your application  is crashing like in and you just sneak in   okay it goes bye-bye it'll it'll give  you a nice notification with like an   air message thing that um it has crashed  and then it'll do its whole unity do you   want to send this off to wherever they collect  their feedback for crashes and so um yeah i i   learned that like i said i think it's not like you  play just crash please uninstall it and reinstall   oh goodness that would be horrible it did that  could be worse could be worse sorry it could be   worse so yeah keep that in mind um from there in  the code we are doing the audio config and this   is um picking up from the mic input input that  you have and as we continue to go down let's see   we i'm referencing that audio data script that's  here and just below we have a on this able method   and my assumption here with this one is  that it's disabling um the service in itself   and then from there we have the start listening  which i mentioned this one earlier so that's   going to be further up here in the code in that  button click so that button click is going to be   when we press the microphone it's going to call  that start listening method and that's the method   that's going to be right here which is where  it starts to listen for you and we do have some   some messages that will pop up if you  haven't configured that correctly which   is great which is also why i really  like using the samples that we provide   in all of our various microsoft doc stocks because  there's a lot of ways to confirm whether or not   the service or the app is ready to go before um  before it does what it should be doing and then   down below i think this is the last section  let me make sure because now i'm getting a   little fuzzy on explaining exactly what's  happening but as we get down in here   i passed the start listening method then we  are getting what's recognized so whatever it   was that you said azure is giving us back what  it heard and so um i didn't quite show that in   the demo but off to the right there was a like the  canvas and it showed whatever it was that i said   and again i like to use that when i'm trying  things out to confirm that things are working   properly but also just to check to make sure  that maybe i'm saying something incorrectly   for example or maybe it's picking up the wrong  words because like the tv's on in the background   and it's hearing me and something else talk  but in any case it's it'll show you what it   was recognized um so like the speech to text so  yeah that's display the text return and yeah yep   yep that's exactly what it'll do and then um down  below we have if it's canceled so um that's what's   happening there and i think this here is going  to be the last section which is where i get super   duper iffy on explaining what's happening but it  has to do with the audio that's set up in here   and uh i think from there yeah that's it so that's  what's happening in the code and once you've   updated this script then over here in unity you're  going to add it as a component to that microphone   um object that we have so i have microphone and  then you're going to want to fill in everything   that's happening here so assuming you've created  the different game objects for the different   text that's here you'll drag them over to their  respective um fields and then what i'm going to do   is add in my credentials really quick  and frank if you could just show my   left face for a moment just give me one second  because it doesn't switch i will tell you when   we are secure it doesn't work why it doesn't work and if not i can do it on my other monitor okay   we're safe okay so what i'm doing behind  the scenes right now is adding in my   my credentials oh goodness i  make myself laugh all right so   let me just confirm one thing  before we bring back my uh   all admired your chair hello and welcome all  right awesome so that works so you can bring back   unity yep okay let's try my button again see  if those works okay there my buttons are back   cool right so what i did while the screen was away  was i added in my credentials for the subscription   key and the bot id again that subscription key  would be your kind of services speech resource   that you create and then your bot id is going to  be your id for the bot and then your region will   be whatever region you selected make sure all  your regions are the same that's another gotcha   i had used a cognitive service resource that  had west u.s too and i think one of my services   that got created was west u.s and then i had  some issues there and i hit that kind of issue   i did that mistake yeah definitely make sure and  i think the best advice i can give there is to   take your time because i rushed through it and  that's how mine got all messed up so we're at a   point now where i can test this out and um given  that we have some more time to play with i think   i might add some more facts here in a bit so  you can see just how quick things update with   the bot um but now that we have this working i'm  going to press play here and i think you should   be picking up sound from hello and welcome do you  hear that oh yeah okay cool so using my in editor   simulation which is why i really love working with  these sorter tools is because even though yes i do   have a hololens you don't need the device to work  on these experiences if you're using mixed reality   toolkit you can simulate everything here in unity  which is great so i'm going to make this bigger   for us all i can bring my hands up using the space  bar and i'm going to press the microphone icon actually let me i need to get rid  of this little thing so i'll do that   later but any case i'll use my simulated  hands i'll press the microphone and then   let's ask that parthenon question again to make  sure that she doesn't say september instead   say september so let me bring  my hand up press the button when was the parthenon destroyed the parthenon was partially destroyed on september  26 1687 by an ottoman ammunition dump inside the   building ignited by venetian bombardment during a  siege of the acropolis perfect and so as you saw   um here on the or as you may have seen here on the  screen that area where i said we want to get that   um that speech to text back to see what was  recognized that's what showed here and that   was a question that i asked when was the parthenon  destroyed so that's perfect and then the bot gave   us back the correct update and that said september  so what i'm going to do now is show you just   how quick things update if we want to add more  questions for example and so for here let me come   out of this part of unity and given the different  ones we have let's add something for um let's see yeah does anyone have any suggestions or facts  that i should add if not the internet will always   give me one that's what i use for these um and  i like your uh you know little uh windows where   you showed the output because it like it's it's  the uh mixed reality version of the trace of the   you know variable say like cuckoo i'm here or  whatever like we all do when we're doing a program   so like it's just very useful yeah um let's  add another one for let's do something for the   parthenon unless something comes through in the  chat yeah right now we don't have any suggestion   from the chat all right so we'll do what i did  i just typed in parthenon facts that's what i   that's what i recently did when um i did it and  let's add the height so it says it's 45 feet   so what we can do is coming back to the q a maker  we're going to go back to my knowledge bases and   from here we're going to click on the knowledge  base and now i don't have to go through the   whole uploading an excel file and all of  that fun again because all i need to do is   come back here into the q a maker click add q  a pair and i can ask how tall is the parthenon   and then the answer is going to be 45 feet alright  so from here i can click save and train that's   training them so i have a question for you yeah  because this is cool like you know you could like   optimize and blah blah blah but like if you're  losing it or if you're deleting it or if you   want to recreate it in another one like you should  still do it from an excel right to keep the import   possible yeah so could you work in excel and just  re-import will it override or like you know maybe   you did like that was an unplanned question i know  but no you're fine and that's something that's   worth finding out let's see if it's in settings  maybe it's in settings yeah here in settings if   you are in your knowledge base um all i did was  go from the edit to settings tab here and then in settings and then in there you can add the the excel  file if you will if you had uh you want to   keep the bot so yeah you can do it that way yep  you can connect more either you want to add some   urls for the bot to pull stuff from that'll  make it more rich with uh data which i think   would be really good though too um you can also  export too so if you for whatever reason you   had so much happening here you wanted to export  everything there's an export knowledge base um in   that fancy ui and just like live so you're adding  stuff stuff stuff and then when you're ready say   okay like i have via 1.1 then i export and now  you have your data source if you want to reproduce   yeah you can do that cool so yeah you have some  options and so um after we made that one change   i saved and trained if i come to publish and  then i can click publish in here and it'll   just publish it'll as it says it it publishes  knowledge base to the q a maker or at least the   bot that we've created itself and so now when i  come back into unity the question that i added was   how big is the parthenon i should be able to  click play and ask that question hello and welcome how big is the parthenon the parthenon is located in absence she  didn't get it so maybe it's not trained   that quick so let's see and i can add  a play mode hello and welcome let's see let's come back here and let me make sure that  everything's saved as well   i only know it works because i  oh i exit how tall is a parthenon   that'll make a big difference that's also why  you have alternative phrasing hello and welcome how tall is the parthenon 45 feet yay so as you can see um assuming that  your way to ask the questions are accounted for   unlike what i didn't do the updates that  you make they're going to be pretty quick   so you don't have to worry about waiting  you know 20 minutes or an hour or whatever   time for updates to be reflected in your bot  and then for even experience like this once   you make that change over in the q a bot  maker you save and train and you publish   come back over here into unity  and you can try it out and the   questions have been updated and added so this is  one of the cool projects yeah but that is the uh the demo whoop did we last you oh okay  you're back no i'm here could you zoom the   ark because there's a belt that is uh  challenging you on the constantine arc   hello and welcome let me oh i guess i could  have could could you zoom that image yeah   uh you know what maybe it's better if  maybe it's here on the other screen   because he says it's uh you think it's uh the uh  arch and that concern so this is this is where   i get confused because the person that made the  asset set um and i've already updated it in here   initially they had it labeled as that over in  here in the in unity but then on the assets   uh store where is it that's where that's  how they have it labeled in there so the uh   the author of the package they have it labeled two  different ways but the way what you just said is   actually how it was originally labeled over when  i did the uh the import into unity but here's a   better view if possible if that's possible to see  a little better there yeah i i yeah i don't know   enough of those two arc to make to be sure maybe  we could uh just uh search on internet but uh yeah   i was just saying that it was a say i think it  may be the arc de triomphe instead of constructing   constantine's arc gotcha well you know this  is more reasons for why we need to travel   let's let's wait a little bit more but  i agree with you i missed that yeah   and i think when i when i first created this  experience um it came from a place of i had   plans to travel this summer to europe for  the very first time and i was going to be   gone for two weeks and get to see all this great  stuff and now i can watch it in my hololens so   almost the same but not oh yeah yeah exactly  the same yeah oh my this time is the traveling   part meaning all the the people around like  like when you do user groups and like you're   really with the developers and the creators and  everybody around the i miss that part a lot it is   different yeah so yeah but i will say um for those  of you who are looking for let me turn this back   around just sharing the two of us now oh okay for  those of you um oh yeah you don't need a shoulder   screen but for those of you who are interested  in doing any sort of mixed reality experiences   especially if they are educational i can 100 say  there are a lot of assets available online and you   don't have to necessarily pay for all of them  some of them are free one of my most favorite   places to get some from is actually from the  smithsonian so me as someone from washington dc   i spent years growing up going to the smithsonian  and they have an entire catalog of 3d models that   you can use and it's and it's it's it's it's free  so you can use what's available there as well   and i was working on like a museum exhibit at  one point where i was just going to do like a   museum exhibit here at my own house and pull  some of the different 3d models that they have   um in their catalog and i was going to do like  you know portraits on the wall and i was going   to have the pedestals with objects but it would  have been cool because if it's a mixed reality   you can actually pick up the objects and move them  and things like that and you know you can't do   that in most museums so maybe one day i'll come  back frank and share that we'll see of course   you're always welcome like if i could i  will give you like a vip pass yeah like was it like um oh let me are they um they have a  tv show in quebec and like uh what's the it's um   and they have a pass they give to special  guests and the guests could drop any time   oh wow i forgot the name oh shishu uh but yeah  what's the like how do you translate that anyway   shushu was like just like kind of favorites  so they could drop and unannounce on the show   oh yeah we we need that for your show i'm not  sure unannounced because you know if someone   else prepared a long demo i'm sure they will  appreciate but uh definitely having you and and   the source you mentioned uh dr argus earlier share  that so it's already in the chat the 3d.si.edu yes   thanks for sharing that yes yes thank you for  sharing that it wasn't you know why i shared   the link and it was not working so he spell it  that was really funny and i validate and the   link was legit so i pasted it in the chat perfect  yes thank you yes yes definitely um they're good   i know there's other places who have more so apis  if you're looking to pull in different things into   your projects not quite uh assets you can download  but i know like getty announced last year or was   it this year that their archive is available  for use and different experiences as well so   the reason why i say all this is because um if you  want to try this out play with things like that   assuming that you have internet connection and  um your pc can handle running unity for example   you can get started with the stuff at home without  having to worry about spending additional money to   try these things out even with azure because when  you sign up you you have is it two hundred dollars   in credits i believe it is uh like whenever  you sign up for the first time there's a 200   credit there a lot of time when  you're working in different uh   company they have the msdn subscription because  you're using visual studio or something like that   and inside of that there's a azure benefit and if  you activate that it's depending on what kind of   azure sub uh not azure but the visual studio you  have you could have up to 150 monthly so that's a   lot of azure credit you could do a ton and i was  about to say another word you know start by s and of azure stuff with 150 bucks a month so  that's pretty cool so if you have access   to visual studio in where you work ask for the  azure benefits and enable your msdn subscription   and you have a lot of credit there so like  yeah and then you could do a lot of stuff   definitely suggest that and um i know myself  personally i do a lot in unity because that's the   the game engine i prefer but most recently our  very wonderful mixed reality team has updated   documentation for those of you who are unreal  um developers and so if that's your preferred   platform for creating experiences and such  definitely give that a try i'm gonna be bad   frank and give you a link that you didn't uh  that that uh i should have gave you before   let me see if i can find that link let me see  all the stream along yesterday he gave me a few   links and then like dropped me like 10 links i  didn't have so that's right oh yeah it is live   it's because we want you all to know about all the  cool things that are it's not pre-recorded yeah   so this link that i'm about to give  frank will get you to the unreal   uh documentation that we have and there it is  all right so yeah that'll get you to the unreal   documentation um i can't necessarily speak  to unreal because um i i'm a unity person i   go where i know but if you have been wanting  to get started creating things of this nature   give that a try you can also use mixed reality  toolkit and i always talk about mrtk which is   mixed valley toolkit there's documentation as  well within the link that frank just shared   that'll walk you through how to import mrtk as  well into your project so that way you can use   it so highly highly suggest checking that out and  there's a there's a new cool uh chess experience   in there um and documentation that you can try  out as well if you're like freshly getting started   so you play chess frank by chance uh i know how to  play chess i used to play chess a little bit more   uh when my grandpa was was alive he was a huge fan  of of chess so my father teach me so i could you   know play with his father uh so i play a little  bit i'm not really good at it but uh i can enjoy a   few you know games once in a while yeah i learned  in the fifth fifth grade fourth grade fourth or   fifth grade i think it was the fourth grade yeah i  learned in the fourth grade how to play and then i   didn't play for years and then now in our home we  have a ongoing game in my boyfriend's office where   every couple of days will move a piece and yeah  so we're playing that way and then we also have a   whole second um chess set in the living room so we  have like two different chess boards essentially   in our house i'm not i'm not the  best i will definitely say that but   it's it's fun playing especially since  like you know we have a lot of time   right now those that play chess and we're in no  rush to have people make moves so sometimes we   go days without you know police but i say all that  because we also now have tutorials of how you can   create your own chess experience in mixed valley  using your hands to move the pieces which i think   is also like super duper cool too so definitely  like the mixed reality is is is really awesome   yeah yeah um just uh going back to the  chat for a few seconds so we have uh phil b rex translating the name in  english sorry for the delay   like a little bug in my brain fart is it how  you say that i'll say that says uh you love   the bunny chair by the way oh thank you frank  and i have made a wager to see how many times   we announced our mention today we got a first  one we got the first one and uh yeah and uh also mentioned that for azure for students there's  also a special thing so if you are a student and   you want to start playing with azure  i will put a link here in the chat   and it will give you i i'm not  sure of uh the amount uh um mention 100 bucks it's possible i know there's  a few but the fun part is it's monthly so that's   again when it's monthly you could do a lot of  things with that yeah and like also like for   reference i know i've been on here what three  weeks now frank for four years twitch stream   and monthly it's how my address description is and  i i haven't even put a dent into it at all from   like all the different stuff that i've created  so it it that the 150 will definitely go far yeah   like if you turn it off when you don't use it or  if you don't go crazy you could like i'm running   a bunch of stuff for demos and like website that i  let open like if like you could do a lot of things   with the 100 bucks or 150 depending on again on  the different msdn subscription you have yeah yeah   so we also have another comment say they yep they  they noticed the chair so cute oh thank you too   oh thank you so much i was sharing with frank in  the beginning everyone that i'm thinking about   getting a second one so we'll see there  might be two bunny chairs at some point   i will draw ears on my on my wall just to match yes definitely yeah my entire home office there's  animals everywhere in like art or little like   things i have in terms of like decoration but um i  i love love love love animals i would say so yeah   even my like my little magnets i'm looking at to  my left they're all see if i can grab one really   quick while we're still here but can you see like  it's a little giraffe oh yeah it's super cute   yeah and then i also have if i can also have  like an elephant magnet but then i even have   like this card that i'm using as art because i i  like when animals have like have like clothes on   which is probably like a very weird thing to  like but um between that and i shared this   recently with someone i did a call with at work  hopefully you can see it but even like the work   that's back here on the wall yeah the the artists  they combined um like victorian edwardian dressing   style with like animals which i thought was  interesting the animal yeah i found that on   amazon of all places it was a i think it's a  guy that makes it but yeah so my my office i   can say you'll find a lot of like little small  details here and there because details matter um we have a last question maybe the last question  of the stream since we are about the the end   so it's coming from michael say okay april you  have a favorite mixed reality project that you   oh you are working so far say it one more time  so say april do you have a favorite project in   mixed reality that you know so far what's your  favorite one that you can talk about um i can   talk about um all the ones that i'm creating i can  talk about at least and it would probably would be   the very i think it was the first one i shared  on your stream frank which was the flash card um   uh app because for my very for the first time ever  i was able to create something that had multiple   scenes and as i shared on that stream that was  my first time creating anything mixed reality   that was more than one scene in unity so i think  that was a really big confidence boost for me   uh usually things that i feel like most excited  and proud about are things that are confidence   boosts so if i feel that i've created something  that i did what i wasn't able to do before   then it really puts me in a really nice mind  space but i really like that one though because   as i've told some folks i've been learning  french since quarantine started and so that   particular flash card game app it helped me with  my pronunciation and it helped highlight different   um issues that i needed to to fix in terms of  how i was saying different words in french but   also um seeing that i was capable of also using um  some of our azure services in which in that case   it was speech translate or i think that for that  one i use speech to text i didn't do translation   with that one but um for me it was really more of  a life-defining moment that hey i can do this and   that's why i really like that and like 100 like  disclaimer the projects i've shared on the past   three weeks including this week um you know for  some of the different areas of it i recently just   learned how to do so that goes to show that in  terms of capability of building a different thing   said in the beginning you don't have to be  a genius or have been doing this for like 20   years um it's really a matter of taking your time  slowing down and just really understanding how   technology works and making tweaks here and  there so yeah the flashcard app one um i am   working on adding that to our samples browser that  we have uh here at microsoft so that way you can   download it yourself and try it out and go have  fun with it go use it however way you want to do these projects so you all can run with them  cool hopefully that's why last question from   scrabble was asking hey any repo so it's coming  yeah it is coming um it is definitely coming   i will say uh when it is available it will be in  our samples browser which is at docs.microsoft.com   samples there are literally so many samples in  there from so many different product areas that we   have at microsoft but we'll be adding some mixed  reality ones and per usual i will announce on   twitter once they are available for the projects  that i've been working on and whatever else my   team's working on too because they make equally  if not better projects so make sure you follow   her vogue and code on twitter and if  you have any question i'm sure you can   ask her and she's a very busy woman so i'm  sure she will reply in time i will reply   thank you a lot to uh coming by and you're  definitely a shoe of the show so feel free to feel free to come back and uh thank you all to  spend our time today with us it was a pleasure   tomorrow it will be brian at this time same  time tomorrow it's brian and clark they are   continuing to explore python so very interesting  too with that i will say au revoir everybody   bye thank you all have a good day 