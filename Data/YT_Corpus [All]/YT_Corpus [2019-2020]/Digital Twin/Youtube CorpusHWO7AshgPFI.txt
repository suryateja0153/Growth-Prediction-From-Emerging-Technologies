 Hello I'm Kim Warren and in  this presentation I'm going to   explain about how we might move from Strategy  models to Digital Twin models based on system   dynamic models by taking you through  a business case example. But first to say is that  you can get this slideshow at the link  shown there - http://sdl.re/SDS-LA-DigitalTwin.   System dynamics models are typically  built to serve two common purposes - either [1] to solve one-off challenges like fixing  poor service quality or fighting off a competitor   or [2] to set up longer term plans - a business plan for  example or a staffing or marketing strategy.    But system dynamics models can do more - they can get  very close to mimicking the continuing performance   of an organization, a department or an ongoing issue.  And that gives us the possibility of a model   becoming what's known as a "Digital Twin" of the  situation ... and *that* opens up the possibility that   the model can guide both operational *and* strategic  decision-making. Most articles and  models you will find in the literature are more to  do with long-term strategy and policy rather than   operational issues. So what is a Digital Twin? - well,  this comes from the engineering world. If you buy   a piece of equipment from General Electric or  other major manufacturers, you' will get a   piece of software which is a digital replica of  potential and actual physical assets processes   people places systems and devices it provides  both the elements and the dynamics of how a device   operates and lives through its life. A true  Digital Twin has two important characteristics -  [1] there is a physical or a virtual connection  between the physical reality - the physical thing   that it is mimicking - and the corresponding software  model. And [2] that connection is established by   picking up data from the equipment, using sensors. So real-time data is continually flowing into the software model.  So what might a Digital Twin  for management look like? Well, just go through   that definition and replace the word "device"  with "organization" and what you get is this ...  a management Digital Twin would be a digital  replica of potential or actual organizational   assets, processes, people, places and systems.  (Not devices, generally). It will provide both the   elements and the dynamics of how that organization,  that department, or that issue operates - continually.   We are not usually concerned with organizations  living through their entire life cycle. Rather, we are   looking at ongoing organizations. And instead  of that *connection* with physical reality   there is a 'correspondence' between the  organization's real world elements and the virtual   model. So things you see in the model are matched  against things that are observable and measurable   in the real world, and instead of picking up  real-time data from 'sensors', we are picking it   up from the reporting systems that  every organization operates. Now an important   distinction here is that those physical digital  twins pick up every single event that happens   to that piece of equipment. So the equivalent here  would be that we would pick up every *transaction*   that happens to the organization - so every person  hired and fired, every customer purchase event,   every item ordered and flowing through the  supply chain and so on. That would be a   huge, huge model. I am not saying it's impossible  but it would be enormous and it would be very   demanding to specify and create. However, I believe  we can get most of the benefits we're looking for,   fast and easily, with a rather more limited  specification of such a management digital twin.  So I am going to give you an illustration here and  we're going to start from a very minimal staff-hiring   process model and we're going to switch  it to operate on very short time units of days.   That staffing level requirement is driven by  demand for customer support in the business that   this staff group is actually a part of. And what  that leads to is a potential digital twin model   for staffing management in this demonstration  example. And that digital twin could be suitable   *both* for operational short-term decision  making *and* for long-term strategic planning and   policy development for the organization. Now many  if not most managers I talk to, when you use the word "model", they think you're talking about a  Process map. Because when we get down to the   operational details that a managerial digital  twin requires we will be looking at processes in   some detail, we need to understand what the link  is between a process map and a dynamic model. So here is   an extremely simple hiring process ... You  place a job advert - you screen the applications -  you issue job offers - you receive acceptances -  you check whether you've got the people you need.   If you have, then you stop hiring and if you haven't  you go back round and place another job advert.   In that process map what you're seeing are  the *activities* that are being done by the team   involved and the elements of the system - first of all they're qualitative there's no numbers on any of this. But secondly they're *verbs* - they are things that people or groups actually *do*. Now here is a matching system dynamics  model of *exactly* the same process. The difference here is that  you're looking at the Stocks and Flows   of applications received, applications for review,  offers sent out, candidates considering the offer,   appointments being made. And we're accumulating the  total number of staff hired on the right hand side.   As in the process map, we check if we've got the  staff we want, and if we haven't we go back around   and place another job advertisement. See that the things in the diagram are actually *numbers*.   They are quantified, and they are *nouns* -  they are actual things that you can see and touch. You can try this model yourself. It runs over 20 weeks and it looks at a single   hiring campaign, trying to get up to 35 people  that you need for for some task or other.   Now in the demonstration of the Digital Twin we're  going to change this a little bit. We are going to  pick up that same process but we're going to  adapt it for a more extensive business challenge.   Here we're looking at an insurance business  with hundreds of thousands of customers.  It needs customer support staff to respond to  calls coming in from those customers. A percentage of those customers call each month and  support staff handle those daily calls.   If you have under staffing, what you get is  overload and calls are badly handled.    And the loss rate of customers (there's always going to be  some customer loss rate in a business like this)   but the call overload and badly handled calls would  cause that customer loss rate to be increased.   Now if you have a staff shortage, what happens  in the model is that triggers a hiring process   like we looked at on the previous slide.  Now because there's variability in that   call rate coming in from customers, you  can optionally set a percentage uplift   on that staffing target, to handle those peak call  rates. Furthermore, because there will be episodes   that happen in our business - and we can look in  particular at marketing campaigns to bring in   more customers - we may need to impose extra hiring  episodes to plan for things that are coming up.   So here's the system structure of that  staffing challenge. At the top you've got   that stock of customers, being won at a rate  that is being driven by the marketing campaigns   that the organization is running. But on the right  hand side, a number of customers are lost each day.   Down at the bottom you've got support  staff who are appointed each day,    and there will be some rate of staff turnover  depleting that stock of support staff.   The balance between calls coming from  customers and the capacity of the support staff   determines the workload on that  team, and if that workload gets too high then customer support quality goes down and  that increases the rate at which customers are lost.   But what the model does is it takes that workload  and it triggers, when necessary, hiring campaigns.   And that brings in applications to exactly  the same hiring process that we looked at in the simpler model. So we are going to look at  this challenge on two different time scales.   The wider time scale is the *strategic*  time scale. This business is a continuing   business - it's been running many years will  continue to run for many years. When they're   looking at the strategy for the organization  they'll be looking probably back over the last   two years, so we're starting at the beginning of 2019, and  we are looking certainly out to the end of the   of the next year - that's 2021. It could easily  be a three-year plan going out to 2022 and 2023. But the immediate *operational* time window is  the current period of time and that's around   the period September to December 2020. So  the person responsible for customer support   needs to be looking at what's going on on a  daily basis inside that much narrower time window.   So here is what's happening in that time window.   (The time markers here by the way indicate the   *start* of each month so 'October 2020' there  is actually the period after that vertical   line and 'November 2020' is the next period along  and so on. We are looking at an episode which   is going to happen shortly and that episode is that the  marketing department are going to run a campaign   that they believe will bring in 40,000 new  customers. You will notice that - except   for that campaign - the numbers of customers  are actually falling by about 200 per day,   but it's a bit *more* than 200 per day because an extra  number of customers are lost each day when calls   exceed the peak capacity. Now why would we allow  that? Well it's very expensive to have enough   people employed to handle any possible rate of  customer calls coming in. So we get the occasional   daily spike when there are some bad service  episodes and an extra number of customers get lost.   But what happens when we trigger that marketing  campaign? You will notice that those peaks are   more bunched together in that period so the  marketing campaign brings in more customers that   we can't handle !! So customer support quality goes  down and we have a short period of higher customer   loss rates. Eventually, though, the workload-driven  hiring catches up with that higher call rate   and the customer lost rate falls back to a lower rate.  But we don't want that higher loss period to happen.    We know this marketing campaign's coming up, so what  do we do? Well, we add a short-term hiring campaign   in advance of the marketing campaign so over  on the left-hand side there's a period where   applications are received at a more continuous  rate over a number of days. That means that   we've got an 'in-tray' if you like of applications for  review in the first stock in the chain. We send out   offers to a number of those people, so on any day  there is a number of offers outstanding. That's   much higher in the orange scenario with this  extra hiring campaign than it would normally be   (in the blue line with the lower hiring campaign). That leads  to the current number of staff being increased   rather quickly over the period before that  marketing campaign hits. What that does is it   cuts that excess customer loss rate quite sharply  and as a result we retain more of the customers   that are won by the marketing campaign. Now how  do we use this in practice? Well, what you would do   is you would, every day, add the latest number  of calls received from customers. This is a   continuing daily operation - every day we look  at how many calls have come in. You would   also probably look at the number of badly handled  calls that result from that incoming call rate.   The next item in the model there could track that  actual number of badly handled calls, not just the   the total number of calls. So let's change this  from a *short-term* view what's happening between   September and December 2020 and look at the same  issue over that three-year strategic time horizon.   And what do we see there? Well that hiring campaign  at that particular point in time just looks like a   short-term 'blip' in that much longer time scale.  You can see it compressed if you like into a   very short episode in the three-year period. It is still there, and furthermore those customers who we retained because of that extra hiring campaign  are actually retained out into the future,   going out into 2021, because our regular  normal hiring policy ensures that we   take on enough staff to mostly look after those  extra customers that we've taken on. Notice, by the way that we've only done *one* extra hiring campaign  here. In reality of course we would probably do   it again for the next marketing campaign, and  again for the next one after that, and so on.   This is a a screenshot of the whole  model. Up there at the top is the   section of the model that handles the customer  growth and losses. In the middle you've got the   call rate coming, in the workload, and the service  quality that's triggering that extra loss of customers. Down at the bottom you've got the staff  hiring pipeline and the policy that drives that   over on the left. In the purple area at the  top is where you set the marketing campaigns - when they will happen, and there's a little look-up table  there that says how many customers are brought in   by each of those marketing campaigns. In the next  purple section is where you actually enter the   updated daily calls-received data. And in the next  purple sections, that's where you set the staffing   uplift that you want to choose to avoid that call  overload and where you set the additional hiring efforts. Here is the link to that model.  So what I have shown is how we might get from strategy   or policy models to Digital Twins. What is involved  here? Well, first of all normal system dynamics   principles apply - there's nothing in the model I have  shown you that is not pretty standard for system   dynamics models that are used in all kinds of  situations. But a key difference here is that it is   running on very short time units. We *could* make them even shorter and look at maybe hourly events, but   it's probably not necessary for the operational  challenges that we're looking to solve here.   Another difference is that, as in this case, you  may need to make processes explicit. In a policy-level   model only, hiring would just be a flow rate  in the model. It might be a *delayed* flow rate but   that's all it would be. Here we are looking at  the steps along that process - the placing of job   advertisements, the screening of applications,  the issue of offers and the appointment of people  who accept those offers. When you do this,  you may well hit "small numbers" issues. So for example,  there is a staff turnover rate in this model, but  individuals leave on a pretty infrequent basis. So on many days it's zero - on other days it's one. The other  thing you'll need to do is "zoom" the time scale to   provide operational *and* strategic insights. I have  shown you this model running in detail over a few   weeks and the same model running over a three-year  strategic time scale. Just note by the way that   these issues also apply in non-profit and public sector cases and equivalent models are equally useful there.   Now we can adopt the same principles  and look at a *whole business* Digital Twin ...   This concerns a company called Opun.co.uk. What they do is provide support for people   wanting to do home improvement projects. They get  home-owner inquiries with web-based marketing and   word of mouth. They recruit and validate  contractors to do those projects - improve your   kitchen or build a roof extension or whatever it  may be - and they employ skilled staff to help the   homeowners with designing the project, producing  drawings, planning the work, looking after the   building work itself, and handling warranty claims.  Here is a control panel for the business that   the management actually uses. At the top you've got  the project pipeline - that's how many   inquiries per week are coming in, how many projects  are currently in planning, how many projects are   being completed each week. At the bottom you've got  quality and conversion rate indicators, to do with   how well inquiries are being handled and how good the  actual projects are that are being done by those contractors.   On the right are the financial results - the revenue, costs and profits of the business. And on the left are the key decisions to do  with hiring staff, seeking contractors,   and spending marketing to bring in those customers.  Now something I have to explain to people who are not system dynamics experts is that  there's nothing mysterious going on here !! Just think of   each object in this diagram as the equivalent of a  spreadsheet column with its name in the top cell   and each period's values in the cells below.  The arrows are like cell references.    Those thick green arrows are also a kind of cell  references but they are just a different kind of   formula - "customers this quarter" is "customers last  quarter" plus "new customers" minus "customers lost".   Each object holds a simple formula. In this  case "total sales" = "customers" multiplied by   "sales per customer". So we're not looking at the kind of  abstract Excel-type formula like A24 multiplied   by $B$3 - it's actual natural language we're looking at,  so any competent analyst can do this. You don't need genius-people to do this. Here is the core pipeline for the OPUN home projects business. This is running weekly over two years, with marketing  bringing in those inquiries on the left, projects going into planning, projects being managed ...   and that drives the need for staffing at the  top. Completed projects drive the revenue, and   down at the bottom you've got the impact of  quality on the loss of customer enquiries   and loss of projects in the planning stage. Here is the full  model for this case. In the middle there is that   project pipeline. Up at the top is the calculation  of staffing and workload. At the bottom is the   taking-on of contractors to do the work for those home improvement projects. The quality-consequences of    an imbalance between projects and the number of staff and contractors is calculated over to the right  and the financials are up at the top right. So this is a really successful case - OPUN launched in February 2015 and the CEO Rod Brown  built this model *before* he hired anybody, before he   tried to raise any money, or anything. He built this  model of how he *hoped* the business should work   and he added early data as soon as the business  started operating. He shared the model with investors   to raise £3 million of new venture  funding early on in the life of the business.   He and his team now use this as a digital  twin for weekly operating decisions. There is a recording where you can hear Rod explain  how the business works and how the model   helped him at the link shown here - http://sdl.re/UponTalk. The latest episode in the story is that the   business was acquired by one of the UK's leading  retail chains, the John Lewis Partnership group.   If you want to know more about dynamic business  models there are actually more slides at the   end of the slide-set that I showed you the link  for at the beginning of the presentation.   In addition to the models themselves that I have shown you here, there is a free short course   on how to build these models at http://sdl.re/BMgetstart and there are full modeling courses   at http://sdl.re/BMcourses. Both of  these are available for teachers. 