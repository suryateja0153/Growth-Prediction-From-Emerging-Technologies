 Hey Guys, welcome back to electronicsinovation.com In one of my previous videos, I had gone through how we can make a low-cost ECG monitoring system with Arduino Board. but that project is purely based on offline. You can monitor ECG signal only when you are present at that system. So, considering the current scenario, I thought it would be a better solution if I can connect that system with Intenet and make ECG & Heart monitoring possible remotely. So, In this video, we will see How to make an "IoT Based Low-cost ECG & Heart monitoring system with esp32 and Ubidots which costs less than $15" So without wasting time lets get started. This video is sponsored by PCBway.com, PCBWAY is one of the best PCB manufacturers in the current industry. PCBway is offering services like PCB prototype, SMD Stencil, PCB assembly, Flexible PCBs & Advanced PCBs. At PCBway.com we can get 10 pieces of 2 layered PCBs at just $5 with 24 hours build time. The Best part of PCBway is the Instant quote feature, just enter the PCB size, choose the quantity, layers, and thickness. That's it, we will get the instant quote. place an order by clicking on saving to cart. Required Components: 1. ESP32 Module 2. AD8232 Sensor's Breakout Board 3. Electrodes connector with 3.5 mm jack 4. Electrodes 5. Breadboards 6. Connecting wires. Circuit Diagram: Here is the circuit diagram for IoT Based ECG & Heart Monitoring system. Connect the AD8232 Sensor module with ESP32 as shown in the circuit diagram. Setting up Ubidots: Before jump into the programming part lets setup the Ubidots Platform for our solution. Visit ubidots.com, Ubidots is one of the best IoT Platform to connect things and visualize data. as you can see here, Ubidots have wide no of data visualizing options and it has an eye-catching userfriendly interface. Signup by providing all the required details. Go to my account, Click on devices, create a new device, select blank device, Enter the name for the device then click on this green tickmark to create the device. That's it the device is successfully created. Click on the freshly created device, Click on add variable, then choose Raw option, Now rename this variable with some name. That's it variable also successfully created. Click on Data and then choose Dashboard. Click on add new dashboard, Keep all fields default and then create it. Click on add new widget, you will be prompted with a bunch of data visualization options, choose one among them, I will use a line chart to plot graph using the uploaded payload data from esp32 Module. Click on add variables, then select the device, and select the variable, Add a name for the graph. keep the rest of the options default. Later create it. Since our device didn't communicate with Ubidots, it will show No Data Found. Once our device started posting data, we can see the data here itself. Let's move to the programming part. Here Is the code for IoT Based Low-cost ECG & Heart monitoring system with esp32 & Ubidots Platform, This code will be available on the Project Page which is mentioned in the description below. As we are using the ESP32 module, we should have the esp32 addon installed in our Arduino Ide. I have already installed it. You can install it by clicking this button. Follow above tutorial for more details. These are the libraries we are using, these two libraries are pre-installed. you don't have to install them. we have to install these libraries, We can install them from the Arduino Library manager itself. Goto library manager, type name of the library which is "PubSubClient" and install it. Repeat the same process for NTPClient. We need to provide these details, to make this code work with your Ubidots device. Provide WiFi SSID and password for Internet Connection. Then provide Ubidots token, we can get this from the Ubidots itself. Go to API Credentials. Copy this token and past it over here. Enter MQTT Client name, Then enter Variable label & Device label, which we have created on Ubidots earlier. let me explain the code breifly, defined A0 as SENSORPIN where the sensor is conneted, Coming to the most important thing in the code. This line is used to write device label to the string called "topic" in the Ubidots Required format. This line is responsible to write Device variable to the string called payload, These line are used to write value along with Sensor data to string called payload, and these lines are responsible to write Timestamp to the payload in epoch millisecond format. Then publishing this data to the Ubidots cloud using this line. After that printing the payload on the serial monitor for debugging purpose. Now, this code is ready to upload to ESP32 Module. Follow any of these methods to place electrodes on the human body, but I will follow the second one because of my electrodes shorter size. Once electrodes placement is completed, connect ESP32 with Laptop. Check the Uploading configurations like board: ESP32 Dev Module, Uploading Speed, and select the right port. If everything is okay Upload it. While Arduino log showing like this, press and hold the boot button until it turns as writing at some address. Then release it. After successful uploading open serial monitor, On the Serial monitor, we can see our ESP32 successfully connected to the programmed wifi and allocated with IP address. Then initiated MQTT connection with Ubidots cloud and connected to it. Then it started publishing ECG data along with a timestamp. Each data packet contains Variable Label and 4 data points with the exact timestamp. Go to Ubidots and reload it. You can see the live ElectroCardiogram on Ubodots dashboard. Ubidots receive data from our ESP32 Module and plot the variable on the graph with provided Epoch Timestamp. Since we are sending data with Timestamp, there will be no delay because of server latency on the graph. This helps ubidots to plot an accurate Electrocardiogram. Now go to Devices, here we can see the last activity details, you can see the device status whether it is online or offline from here itself. Click on the Device name. Click on the variable that we have created earlier. we can see the same electrocardiogram here also. Below the graph, we can see each data point with its human-readable Timestamp. So, Now anybody from anywhere in the world can monitor the particular person's heart by just logging into this Ubidots Platform. We made this solution with ES32 and AD8232 Sensor within $15 of the budget. That's it for this tutorial, making an IoT Based Low-Cost ECG & Heart Monitoring solution with ESP32 and Ubidots. See you soon on the next interesting project. bubye.... 