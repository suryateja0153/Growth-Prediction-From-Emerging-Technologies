 Hey everyone and welcome to the season finale  of 'IoT All the Things'. -I'm Rudy. -And I'm Wale and in this season finale we're going to have Traeger Grills join us  to dive into IoT, analytics, serverless, data lakes. It is time to kick off the summer  with a season finale of 'IoT All the Things'. Rudy, this is our season finale  so I couldn't think of a better way of just like, sending ourselves  off into the sunny sunset with having Traeger Grills on. I think it's going to be incredibly cool  and exciting, exciting story. It's like I'm hungry for IoT  and I'm hungry for grilled meat. I'm a vegan but I can work with this. Vegan burgers are delicious. With that in mind we should definitely bring in our awesome, awesome guest, Dan Woodward from Traeger. So, Dan, how's it going? It's going well.  Thank you guys so much for having me on the show. We are excited, Dan. I think it's like so cool just to be able to just talk about all the great stuff you're doing and I think your story is pretty fascinating. Because there's a lot of things with Traeger Grills in terms of background but you move super quickly - like in terms of what you're doing with IoT. So, love to hear a little bit more about you  and then all the things that you're thinking about with Traeger Grills and a little bit about the company. Yeah, so Dan Woodward, cloud architect with Traeger Pellet Grills. I've got a deep background in data and using services within AWS. As far as Traeger goes; Traeger was founded about 40 years ago and has had a long history  of delivering great products to its consumers. The focus has been disrupting this industry with a premium product  that enhances the experience and allows anyone to make great food. We have a variety of different products  including grills, which are our main focus. We've got wood pellets, food rubs,  we offer cooking classes, and just a ton of various accessories to use with your Traeger Grill. We want the experience of cooking to be very simple. So, how a Traeger Grill works: To the left of the grill we have something called the hopper. And you fill the hopper with wood pellets, and this is what fuels the Traeger Grill. You can then select the temperature of your grill  and place your food on the grill. And that's it. You fill the hopper, you put your food in, select your temperature, like bada-bing, you're done. -Yeah. -I think that's really cool, too because I was joking, I mean I am a vegan  but like, we grill out all the time. Right? Like you can make  some awesome, awesome food. I think the cool thing with your product too  is that your users get all this control, right? Like you talk about like you can monitor  temperature, you can get all this information off of sensors. So it's really, you know, this science and art kind of coming together with food. Oh, for sure. It's an exciting company to be working for right now. There's some cool things happening. Cool, cool, and then the interesting thing  is when you think about the technology, as you're able to bring the grills into the connected space. So what are the kind of things  that you're doing with IoT and how did you get kind of started  on your IoT journey? We like to take a customer experience focus on IoT. It's something that's super important to Traeger. We want each touchpoint with our customers to be in line with the Traeger brand. So this includes listening to our customers about what they like about the experience using Traeger products and what we can do better ultimately. A good example of this is within the Traeger app. We have a whole set of recipes, vegan and vegetarian recipes as well. You can choose your dietary preferences within the app. Another cool thing is you have a whole bunch of control over your grill from your phone. So if you're doing a long cook,  say cooking a brisket all day, and you basically have the option  to monitory your grills internal temperature from the Traeger app; and an external probe  that you can put into your food to monitor your food's temperature as well  within the Traeger app. Now, if you, say you forgot something for dinner? You can go to the store  and check on your cook while you're going and grabbing stuff out in public. - no way..  - That's true multi-tasking. Yeah. Dan, I'd love to, I know like you work  with some really cool partners at AWS like OST. So how did, kind of working with a partner, and then we talked a little bit about  serverless technologies, which is all things like Lambda, API Gateway.. How did the partners and serverless help you kind of migrate your application to AWS? Yeah, so a little bit of background. Our road to AWS is a little bit different than most organizations. Our first implementation of IoT was with a company that at some point was bought and given a sunset date to shut off, so... Which meant we needed a new IoT broker. The pressure was on. So what this meant was we needed  a new IoT broker and to be exact, we had about three months to do this. This is not a small task. We're talking about seamlessly moving  all of our grills over to a new platform without any downtime. The experience of using the Traeger app  needs to be rewired to this new system. Bits and pieces of our website needed to be rewritten and we needed to move into a new data lake,  build a new data lake, a digital data lake. So, at the time this was all happening, we didn't have any IoT technical resources at Traeger, so we needed to find experts in this area. And this is where OST come in and partners with Traeger. And OST is one of 14 companies  that are accredited by AWS to build out these IoT frameworks. And they've been really a part of the success of what we've had at Traeger. It's funny, we would always have  stuff going on with migration where we basically would think of something that would have to happen with migration and OST had already gotten it finished  and they finished the next like 10 things. - Nice.  So it seems like, interesting enough, like the partner was able to kind of help you kind of accelerate and then. We talked about serverless as well being one of those technologies that when you get used to it,  especially when we think 3 months is super fast. So, you've got to figure out how to  shrink the amount of infrastructure you need to manage and how you're going to build it. I would actually love to dive in to  how you got to the role of your initial architecture, and then maybe even figure out how that migration ended up with where you ended at the end of your journey. Yeah, so one of the things that we really liked about OST is they followed the same  serverless architecture that we followed at Traeger with our data side. So, just looking at this architecture document at the bottom. Every thing that we build within AWS is done through CloudFormation, and specifically through the serverless framework and YAML files. This gives us a competitive advantage  because if anything, any of our infrastructure is missing, we can go re-deploy this with one script. We also use CloudWatch for logging. We use Systems Manager for hosting our keys and credentials  within our platform. We use IAM for role credentials to the trigger app, the management portal, a lot of these consumers that we'll be talking about. And our main identity provider  for our website and our app is Amazon Cognito. - I see it's a very serverless-based architecture, but the one thing that I really like about this is the grill. I must say, I have to say it, the grill. And just to let you know,  I am a very big fan of grilling or as we call it in South Africa, braaing. I even have a little sign here  that says "nou gaan ons braai" which is now we're going to braai or now we're going to grill. So I just had to point that out that for me, the thing that stands out in your architecture is the grill. But, you've got other services. Before I digress into that,  you've got IoT Core, you've got Lambda, you know, all these serverless technologies that you're using. Can you kind of talk about the scale of your architecture? - Yeah, so at the beginning of 2019 we had about 20,000 connected grills and where we're sitting at right now is about 200,000. So, this platform needs to support new connected grills coming online in the future as well at projections of going to the millions. So, serverless has really helped with this. What's super cool about serverless  is we can request service increases on our, say, API Gateway, Lambda, IoT Core, whatever it may be and usually within a day AWS gets back with us and our platform is scaled out within  24 hours, which is super cool. - Nice, nice. - Nice. I think what's really interesting, you know when I think about serverless too, Rudy, what I find interesting is, and I've just seen this with other companies is it's like, you just have to do code, right? Like, there's no infrastructure demand. Like the tough thing is you're sitting there  and you're like, man, do I really want to go in and patch this server or do I want to like, write code? And so it seems like you're getting to do more  of the things you enjoy doing, and then kind of letting the infrastructure  really manage itself. - Yeah, serverless allows us to focus on writing code and writing applications. And we don't have to worry about what's going to run that code and what's going to run those applications. We can really focus on building out products. - That's fantastic.  And grilling? Yes. And grilling. - And grilling, yes. - But are there any large scale events  that you guys have dealt with recently or in the past? Whenever a big event is coming up,  we want to make sure that our infrastructure is ready for that big event. So, a most recent one was the Super Bowl back in February. This was the first kind of major test  of our IoT platform. Everyone's cooking all day and they're all  cooking at the same time, so it really tests our platform. We particularly were interested in services like API Gateway, Lambda, and various things within IoT Core. When we talk about the  amount of requests coming in per second. Thanksgiving are a big one.  Everybody is cooking their Thanksgiving turkey. We've got Christmas, New Years,  Mothers Day, Fathers Day and the Fourth of July. - All this data that's coming in, right, is there a way that you're using  maybe data lakes? Can you go kind of into the business analytics side of how you're utilizing the data  that you're collecting from all these systems? - Yeah, so I'm going to use the example of temperature change within the Traeger Grill. So, when you request a temperature change within your Traeger Grill, we post to a topic in IoT Core and then really, when it's in the topic  we can do anything with it. Specifically firing a rule off  and we fire this rule off to send all of this data real-time into our, we're calling our digital data lake at Traeger. So looking at this architecture,  is super similar to our IoT platform. We've got CloudFormation which we use  to deploy all of our infrastructure. We use Amazon DynamoDB  to track our data going through our data lake. We use CloudWatch for logging, and we've recently just added this  is, Lambda layers are pretty new. For specific libraries that we need  in our data lake we can put into a Lambda layer and pull into any of our Lambdas  within our data lake. Nice, nice.  I think what's really interesting about the data lake architecture  is that, again, you're kind of carrying that serverless theme through again. So, I see in your system you're able to do things like Athena. So like, you know, Athena is serverless. if you need to query your data at scale with something that, you know we always talk about those concepts  with like 'schema on read' 'schema on write', and you can do things with Athena where you can do your 'schema on read' and then kind of figure out what queries you want to run later. So can you talk a little bit more about how you're using Athena and then how you kind of get the right data and even to Rudy's point, some of the scale you run into  especially on Super Bowl Sunday. - So we're collecting about 2 terabytes of raw JSON data coming off of our grills and one of the biggest problems with, or one of the biggest problems to solve in your data lake is how do you collect all of these IoT messages and combine them into files that make sense and partitions that make sense. So we use Firehose for batching  all of our files. And we store all of our data in  year, month, day, hour format. JSON doesn't really pair well with Glue and Athena. You can get it to work  but there's better formats. So we use Lambda to convert this to Snappy Parquet. And what's cool about Snappy Parquet  is you can run queries on Athena without uncompressing your data  sitting out on S3. The data coming through, we combine it into these files, we convert it over to Snappy Parquet, and then we use two services within AWS Glue. The first one is the Glue Crawler. What this does is it crawls your data sitting out in S3, and collects metadata around this data. So, file size, how many rows that you have in your data,   where it's stored. And it creates a record and a table  within the Glue data catalog. And what this allows us to do  is once we've crawled our data, we can now query it in Athena within seconds. - That's really cool and I think if we  bring up that architecture again, you brought up a couple points that I think, you know, people just tend run into  when they think about their architectures. One is that, all this data comes in in a format that's different than you need to actually query it. So, you know, IoT customers will say I want to new binary, there was a question about doing Z-Wave. And normally you might be doing something like CBOR. So like these compressed formats of data  that aren't really in the right format for analytics. So using things like Kinesis Firehose  and Glue Crawlers, a literal crawler, you're able to then take those formats  that are optimized at the edge and then put them optimized for analytics. So that's like a really, really cool  kind of approach. It's something we see pretty often  with customers, to figure out how to get the most out of, you know,  the data they get in the right format they need it in. - Exactly, and what's super cool  about Athena is, it's so cheap. It's $5 per terabyte of data scanned. And when you talk about compressing your data into Snappy Parquet,  when we're talking about 2 terabytes worth of data, you're talking like 97% compression,  which is nothing. You're paying cents to crawl your data. - You hit on another thing that's pretty interesting, as you start to scale, is how do you kind of figure out  how to optimize cost at scale. We can post this in the Twitch chat  but we have this Well-Architected guidance and one of them is around cost optimization. So it's like, as you continue to send more and more data, how can you have the curve kind of  do this with your cost as opposed to continue to just kind of go up. So, it seems like as you thought about  this architecture, figuring out ways to kind of keep your cost kind of  in line with the growth your expecting. - Yeah, and that's exactly what  serverless allows us to do is we can process our data in real time. And if we ever need to reprocess our data  we can use Lambda to pick it all back up and redrop it like within a matter of minutes,  which is super cool. - Is there a way that you're kind of improving it? You know, what's next for Traeger Grills? What's version two, let's say? - Yeah, so not all of capabilities that we want  are within this version of the data lake. For instance, we can't access real-time data in say like a caching layer. So, we're exploring options around doing real-time graphing within a caching layer. And there is some off-use cases where, say our support team needs to look at  somebody's grill's data, we can push that to something like Aurora and have them read off of Aurora in real time, so they can help our customers real-time. - So you're improving, essentially the data access mechanisms and making it so that people can respond in real-time  versus getting I suppose, stuck in the weeds. Which is great, I mean, you want to  improve your customers experience. And like you said, they're measuring  everything from the temperature to amount of pellets or whatever else  attributes that you're capturing. I think it's just fantastic where you're going with it. So it's great to hear that this is the next version of it. Are you actually going to implement  any other kinds of serverless technologies? Maybe containers, Fargate? - We are.  So, some of our Lambdas that take longer, specifically around our integrations, we'd like to move to Fargate, and we've been exploring with EKS as well. So we'll see what happens there. For now we'll just keep the serverless architecture  but we are exploring those containers as well. - Dan, I think it's been super, super cool  just to get to dive in with you, especially with all this stuff you're doing at Traeger Grills. So, I think it's like, as you kind of go forward, I need to go again, go talk to my wife  about grilling Saturdays. But this is awesome.  Just the technology is cool and everything you're doing with it  is just fantastic. - Thank you guys so much for having me. I appreciate it. 