 Hi guys. So in this video, I'm going to show you how to collect data from your legacy industrial devices such as your PLC's and indicators and send that data to AWS IOT platform, where advanced analytics could then be performed on the data. So here I've got a typical Industrial device that talks Modbus TCP. And connected to its analog input module, is this potentiometer. So I'm going to be collecting this potentiometer value and sending it to AWS IoT platform. Now to do that, I'm going to use this industrial IIoT gateway as an interface between this industrial controller and the cloud platform. So I'll be using the Node-Red platform that is running natively on the IOT core box to collect the data from the industrial controller using Modbus TCP. And then acting as an MQTT client to publish the data to the AWS MQTT broker. Okay so I'll login to my AWS IOT console. And then I'll click on manage, and under Things I'll select Register a thing, and then click on Create a Single thing. And then I'll give my thing a name, I'll call it MyDemoDevice. Then here I'll click on Next. Now here we click on Create Certificate in order to generate certificates for authenticating our communication between the IIoT gateway and the AWS IoT platform and when you do that you'll get links to download your certificates. So for the first three certificates you just download them onto your machine. And when you click to download your rote CA certificate you'll notice that a separate web page is displayed, so on this web page you select this first option here. And that will also take you to another web page, and all you need to do here is to copy this text and save it in a file called Amazon_Root_CA_1.pem with a dot pem extension. And then copy the other downloaded certificates onto the same folder. Okay now we can go ahead and click on activate to activate our certificates. Now that we are done with authentication, we go on to authorization. So first we complete the registration of our Thing. Okay so we've successfully registered our device, now we go back to our IoT console homepage. And then here we select secure, then choose policies. And then here I'll click on create a policy and I'll call it MyIoTPolicy. Okay so for this policy you can specify the actions that can be taken by this device, so we could select one of the actions but we're going to use an asterick to include all of them. So our device, in this case, is able to publish, subscribe etc. And then we're going to replace this topic specification with an asterick to allow our device to be able to subscribe to all topics, and then we go ahead and create our policy. Ok so our policy has been successfully created. Now to complete the operation, I need to attach this policy to my device so to do that I go to Manage, and under Things I select MyDemoDevice, select Security, choose this certificate which is the one that we created earlier. And then here under actions choose Attach Policy and then select the policy that you want to attach this device to, and then choose Attach. Okay that's done, now let's access Node-Red editor on my Industrial IOT gateway. Now before I do that, I'll go back to my console home page to grab my MQTT broker address to publish to. And then I'll select interact, so this here is the REST API endpoint that I am going to use as my MQTT broker address. So here on my browser to access node-red I'll enter the IP address of my IIoT Gateway at point 1880. I'm going to use an MQTT node to publish data to the cloud, so I'll drag that onto the canvas. I'll select Add a New Broker. And then I'll paste my REST API endpoint here, set the port to 8883 for SSL communication. And the client ID is MyDemoDevice. And then I'll enable SSL, then add new security configurations. Now here I'll upload the certificates that I downloaded earlier. .. And then I'll call this awscertificates. I'll click Add, click Add again. And then here I'll publish to a topic called MyDemoDevice. Okay now I'll add an inject node and set it to publish data after every five seconds. And then I'm going to use a function block to prepare my Modbus message. So I'll copy this object which specifies my function code, unit ID, register address, and quantity. And then I'll get my Modbus node, add a new Modbus client, enter the IP address of my industrial controller. ... And then I'll add another function block to convert the Modbus response to a float value. I'll paste the code that does that here. And then add a Debug node. And then I'll deploy my flow, so we should be getting our reading every five seconds. There we go. Okay so we can now publish this value to AWS IoT cloud by connecting to the MQTT node here. So I'll turn down my potentiometer, and then I will turn it up again. So we're getting 63. Okay we should be getting our data in the cloud now, so let's head over there and check. So here we go to Test. And we subscribe to the MyDemoDevice topic. And as you can see our data is coming through with a timestamp every five seconds. Thanks for watching and if you found this video useful please don't forget to like and share with your connections. 