 Welcome back to the OpenVINO channel What if I tell you that in few clicks, you can get remote access to many systems by Intel And try them out, without purchasing them or installing anything? Pretty cool, So, I have a deep learning based model I'd like to use, Or I even have an application ready but I am not sure what will be the performance on my target system Or which hardware system even to choose Intel has a variety of selection for CPUs, Integrated GPUs, VPUs based on Movidius, FPGA and more. OpenVINO allow me to use almost the same code to run inference on all of them. But I do not have all of them. If I want to build a cascade lake server or an FPGA based solution, I cannot purchase all possible platforms, and try them out, some of them are pretty expensive So the solution is Intel dev-cloud. Basically you can get remote access to Intel hardware, benchmark your application and decide if the performance meet your expectations before actually purchasing the machine.. Another advantage is that you can remotely connect to a machine that is already installed, learn about OpenVINO using code samples, without the need to prepare anything.. Basically we are providing you with a remote access to a wide set of machines, that are already installed and all you have to do is bring your neural network or your application and test it. Since we want to give you the real performance results, we need to make sure the machine resources are dedicated to you So you can get the full potential of the machine So basically, you are getting a remote access to a Xeon development server, as you can see here in #2 You can bring your data in, your files, code and so on and try them out in a Jupyter notebook environment. Once you are ready, you can submit your code to a job queue and send it for execution on multiple compute nodes of different architectures as you can see in #4 Then, we can collect the results and you can check or compare them on the development machine. We'll see an example in a minute First stage is to register, Follow the link below or just google "intel dev-cloud" Intel has few cloud environment for testing of OneAPI and others.. We will choose the "edge workloads" one.. In order to get access you'll need to register, And we are in.. On the left hand the "get started" part, on the right the "Advanced" And you can see here the selection of Intel platforms available for you. OpenVINO overview, and the devcloud overview And tutorials.. Let's try the Classification tutorial It opens a Jupyter notebook environment with all the instructions and explanations ready If you've never used a Jupyter notebook, it is pretty easy.. Here is a piece of code, I press here to execute it, and see the result I'm editing the cell, to print "good morning", run it.. It's working You can execute the cells one after the other, read the explanations, edit the code if you want.. This is a great way to learn how to implement inference using OpenVINO We ae preparing an input image It's a dog image Run inference Process the results.. And with a probability of 57% it's a husky Run it on a different image, it's a cat And let's use a different image I have here an image of a laptop from the Intel site Let's read the image Run inference And it's classified as a screen or a computer... pretty good The last option n the "get started" side, is the "smart video workshop" Before we begin.. And this is important Please check for updates as the content is evolving and we are trying to keep it up to date Important to run this cell and get the latest code. BTW, if something went wrong, or you cannot go back to any selection, A good practice is to delete your browsing history, This will let you start from scratch The smart video workshop will take you step by step on a full design from with explanations and the actual code. This for example is how to train a model in tensorFlow step by step.. Nice Now let's go to the "advanced" part. If you choose the "Connect and create" You are getting an empty Jupyter notebook and the ability to view the file system. Let's choose the "Sample applications" Here you can see many real life code samples, with full explanations Let's try the Object detection sample.. You can see here the code, step by step of downloading mobilenet-SSD model Converting it to IR files, We are taking a video file that looks like that and running inference using the SSD model on the video Here we are running on a CPU, And you can see that the task is divided to three separated parts, for better comparison granularity And we can run the same workload on a Xeon CPU.. On an integrated GPU FPGA, NCS2, an HDDL with 8 myriad-X And on an "up-squared" device.. Pretty cool, not easy to get hold and set up all of these devices, and you basically have it all just ready. All these jobs are running in parallel, and here we can see the queue progress.. Once the job is finished, we can see the result on any of these platforms.. And maybe the coolest part.. You can see the performance comparison for all of these devices.. Very useful. So we saw how to get access to the dev cloud, How to run tutorials, how to run the samples and how to open your open Jupiter notebook where you can copy paste your code and benchmark multiple Intel Hardware system I think this is a great capability and a great offering from Intel Especially for new types of hardware you would like to experiment before purchasing or just for learning how to use OpenVINO It is free, it is easy to use.. Use it. Subscribe to our channel to get more videos like this one. Thank you 