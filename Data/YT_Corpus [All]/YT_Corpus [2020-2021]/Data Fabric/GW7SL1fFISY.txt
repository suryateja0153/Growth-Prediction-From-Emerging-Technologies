 Welcome to the Teradata Vantage on the Azure Do-it-Yourself How-to Series. This series will walk you through common steps in administering Teradata Vantage on the Microsoft Azure public cloud. Please note that our Premier offering is managed on Azure delivered as-a-service where Teradata provisions and manages the environment for you. With the do-it-yourself offering, as shown here, you are personally administering the system. So to give you a hand, in this first episode in the series, you will see us provision a 2 instance Teradata Vantage system. Just to let you know, last year the product known as Teradata Database was rebranded with the Vantage name. Let's cover some Basics. This is a technical video series and you are likely in a DBA, Advanced developer, or Consulting role. We expect that you're familiar with the Azure portal and with Azure concepts in general. Before you can launch Teradata Vantage on the Azure public Cloud, you will need an Azure subscription as well as an Azure user with the appropriate permissions. Please note, if you were trying to provision your own system, but the screens are slightly different, then congratulations! You were working on the latest continually improving version of Vantage. So, let's jump right in and launch Teradata Vantage on Azure. Let's go to the Azure portal page. That URL is portal.azure.com This will bring us to the dashboard of the Azure portal. So to launch Vantage on Azure, we're going to start by clicking on the Create a resource button. In the search field, we're going to type "Vantage". This will show us the public offerings of Vantage. Here is where you can launch an hourly subscription. You might use our hourly to experiment with cloud environments, or for short projects like POCs or test and development. Hourly is also known as pay-as-you-go. In my case, I see a button called Private. I see this button because my subscription is tied to a private offering of Teradata Vantage that was pre-arranged with an account team ahead of time. This is a much cheaper option. I'm going to go ahead and click on the private offering and I'm going to select Teradata Vantage. Now we're at the first page of the Teradata Vantage solution template. This page provides us with some overview information of what's included in Teradata Vantage and which ecosystem components our selected tiers are going to have rights to. So, let's get started by clicking the Create button. There are 13 steps including in the Teradata Vantage solution template which is presented in a step-by-step wizard. With each step, you will be asked to provide needed configuration information for the Teradata ecosystem components that are going to be launched. It starts with step 1 here which is called Basics and then goes all the way to the end to Step 13, which is the final step called Buy. So let's begin to configure our basic settings for our Teradata Vantage system. The name we enter for this first field is the SSH admin User name for all the Linux VMS that we're going to provision for our Teradata Vantage and Viewpoint nodes. I'm going to go ahead and use a naming convention for our how-to series by prefixing all the names I enter with "hts". So let's enter a User name and call it "htsadmin". Next we see we have an option for Authentication type. We can either choose Password or SSH public key. To keep things simple for our purposes, we'll leave the default. Now the Password needs to be at least 12 characters long and needs to have at least 1 capital and 1 number in it. So let's go ahead and enter a password for our htsadmin user and the password we enter, will rekey into the next field called Confirm password. Next we have to select a Subscription for our deployment. Mine happens to be called Global Learning. The one that you use will have a different name. The next field is called Resource group, and when you're using the Azure Resource Management method for deploying any resources in Azure, we need to provide a resource group. It's essentially a container for all the resources we're going to provision and deploy. Also when we deploy Teradata Vantage, the resource group we select needs to be empty. We can also simply create a new resource group for our deployment. Let's go ahead and do that. We're going to click on this Create new link and we'll call it htsrg. The last field lets us select location which identifies the Azure region in which we're going to deploy our Teradata Vantage ecosystem. Let's select "(US) East US 2", and with that we've completed the configuration of the Basics settings. We can click the okay button, which will bring us to step 2 where we're going to configure the Teradata Database. Now the first field System name prefix. The name we provide here is the name will see in the list of the Vantage virtual machines in the Azure portal after our deployment is completed. We'll call it htsdb. Now the DBC password needs to be at least 12 characters long and needs to have at least 1 number and a special character. Now we're not going to need Japanese language support so we'll leave the default set to "No". And for the Database Version, we only have the one version available 16.20. Next we're going to select the Database Tier. Now the Advanced tier is a great blend of features, workload management, and price. Go ahead and click on Advanced. For details on what's included in each tier, please go to www.teradata.com/Azure and find the pricing page. Now we need to specify the VM Size we want for our Teradata Vantage nodes. It defaults to "x Standard E16s v3" which includes 16 CPUs, 128 GiB of memory. We'll keep that default, but let's go ahead and click on change size, so we can see the VM sizes that are available. This shows us the Select a VM size blade where we can see the list of VM sizes that are available for Teradata Vantage VM nodes and the technical details for each one. You'll notice that the default size is highlighted in blue. You'll notice also that you can go back to the configure database screen by simply clicking on the X; and that returns us to the Database Settings blade. Storage Size Per Node is next. Data storage kind of interesting. 129 00:08:29,700 -- 00:08:32,799.9999999999418 This is actually the amount of raw storage that's attached 130 00:08:32,799.9999999999418 -- 00:08:34,100 to each of the nodes. In this case 132 00:08:35,100 -- 00:08:40,299.9999999999418 I've got six terabytes, but just to a quirk of math. 133 00:08:40,299.9999999999418 -- 00:08:43,900 It turns out that the raw storage is about the same as the actual storage just because of compression that's involved. So we've got 6 terabytes. That's the minimum per node. That's good for us. That brings us to Scaling In, Scale Out. Now, you always have the ability to scale up. So in our case since we selected the Es v3 series, I could go from the E16s v3 to a E32s v3 doubling my CPUs and memory per node to get even more compute capability, perhaps if I have extra processing requirements, but in this case, what I can do is I can actually scale out. I can double or even quadruple the number of nodes that I can put in the system. Now by default. I'm going to start with the number of nodes I've selected which is 2, but perhaps in the future, I want to go ahead and scale out; but I don't need to do that right now. I'm going to go ahead and select Scale Out-Ready. So that way I've got the capability in the future. Next is Number nodes, we'll keep the default set to 2 now with 2 nodes all the data is automatically duplicated across both the nodes so that if 1 of them fails, you've always got access to the system. You've still got all your data and the system is actually going to try to replace the failed node and bring you back up to a 2 node system. Next is Temporal. We're going to go ahead and keep the default setting of Yes. The other remaining options we'll leave off by default. Teradata Intelligent Memory is an additional level of caching. But again, we're not going to be pressing the Vantage system that hard, we're just going to leave that No. Row Level Security is a great way to add even more security to tables and views using programmatic features, but it's a little bit more advanced again, we're going to leave that set to No. Secure Zones is another way to add compartmentalization for databases. Very good for multi-tenancy, but it does change the data dictionary views a little bit. We'll leave that set to No. And then finally Mainframe connectivity. I don't have a Mainframe. We're not going to be connecting to it. We're going to leave that set to 0. And with that we can go ahead and click the OK button to move to our next step Viewpoint configuration. First we need to click Yes in the Viewpoint settings blade. The first field is Viewpoint system name. The name we provide here will be the name we see in our resource group and virtual machines blade after the deployment is completed; htsvp. The system nickname already has a name provided it's htsdb. That is the name we provided to the system in the previous step. The password for the Viewpoint portal admin user needs to be at least 12 characters long and needs to have at least 1 number. So let's go ahead and enter a password. Now, when provisioning Viewpoint we see that there are three versions. There's Teradata Single System, Multiple Systems and Single System Data Lab. We're going to keep the default of single System. Since we only have the 1 VM size available to us for Viewpoint, we just go ahead and go with the default and click the OK button, which will bring this this step 4, Configure Server Management. Next we need to click yes in the Server Management blade. Now the first field is site ID. This side ID is a way for Teradata Support to uniquely identify your teradata Vantage system from other customers of teradata. By convention, since we're in Teradata Vantage on Azure, that's going to start with the site ID of AZRTD, and then give it maybe six to eight characters after that. The next field is the Server Management System name prefix. The name we provide here will be the name we see in our resource group and virtual machines blade after deployment is completed; htssma. The Server Management admin password needs to be least 12 characters long and needs to have at least 1 number. Next the Server Management REST password needs to be 12 characters long and have at least 1 number as well. That brings us to the Server Management VM Count. Now by default it's going to suggest 2 servers for server management. That's going to be a highly redundant deployment. We don't need to do that. So let's go ahead and change that to 1. Since we only have the 1 VM size available for us for the server management, we'll just go with the default. And with that we can click the OK button which is going to bring us the step 5 Configure Teradata Query Service. Now Teradata Query Service is the foundation for supporting RESTful APIs into various Teradata products. Since we're not going to include this component into our ecosystem, just leave the default set to No and click OK. Now since we are going to deploy Data Stream Controller, we're going to go ahead and click Yes in this first field. Next we need to provide the DBC password for our Teradata Vantage system. The DBC password needs to be at least 12 characters long needs and have at least 1 number and a special character. The password for the DSC admin user needs to be at least 12 characters and needs have at least 1 number. Next is the DSC system name prefix. The name we provide here is the name we'll see in the resource group and virtual machines blade after our deployment has completed; htsdsc. Now since we only have the 1 VM size available to us, we're just going to go with the default and with that we can click OK and we'll go to step 7 Configure Ecosystem Manager. Ecosystem Manager provides workload design and control as well as end to end job monitoring, applications, job servers, tables and system readiness. We're not going to include this component into our ecosystem, just leave the default of No and click OK. Data Mover is a utility designed specifically to copy data and objects such as tables and statistics from one Teradata system to another. Since we're not going to include this component into our ecosystem, just leave the default to No and click OK again. Teradata 259 00:17:09,800 -- 00:17:14,99.99999999988358 Query Grid, which consists of Query Grid Manager and Query 260 00:17:14,99.99999999988358 -- 00:17:19,400.0000000001164 Grid Connector, minimizes data moment and it processes data 261 00:17:19,400.0000000001164 -- 00:17:24,700 where resides and transparently it automates analytic processing 262 00:17:24,700 -- 00:17:27,400.0000000001164 and data movement between systems. Since we're not going to be including this component into our ecosystem just leave the default to No and click OK. Unity provides a synchronized and unified data warehouse environment. It routes users and queries, synchronizes databases, provides end to end monitoring of processes and data flows, and intelligently moves data between systems. Since we're not going to be including this component in our ecosystem, just leave the default to No and click OK. Now the VMs were going to launch, need to reside in a Virtual Network. We're going to go ahead and provision a vnet and a subnet here in the General Settings blade. To keep things simple, we'll accept the defaults. First, go ahead and click on configure subnets. And then we're going to go ahead and accept the defaults for the subnet name and the subnet address prefix. Next is the NTP server list. Let's just keep that default there. The last is time zone field. Since we selected Temporal when configuring the database, we need to go ahead and store all the dates and times internally to the database in UTC format. Now, that doesn't mean you can't show times in different time zones, it just means how the database is going to store the data. Since we selected temporal, we need to keep that the default of UTC. Now with that let's go ahead and click OK. When we arrive at step 12 of the Teradata Vantage solution template, the Summary blade will run a validation and check to make sure our subscription has the required resource quota limit based on the number of VMS we'll be deploying. If there's an issue with your quota limit, it's here where you're going to see the problem arise. Once the validation has a completed we can go ahead and click on the OK button. And that's going to bring us to the final step; step 13, which is the Buy step, and it's going to provide you information related terms of use and privacy policies. The final entry that we need to make is a Name, then our email address is pre-populated, and we will go ahead and enter a phone number. And with that, we can click on Create and this will begin the deployment process. So let's go ahead and click that final Create button. Now what we will see here in the upper right hand corner is a notification icon, and it's telling us that the deployment is in process and it's going to take about 45 minutes or so to complete the deployment. So I'm going to go ahead and let that run there and in our next episode we'll pick up from this point. Well, we hope you enjoyed watching us launch Teradata Vantage on Azure public cloud. If you need help launching your own environment, you may want to start with our website, Teradata.com/azure. If you are interested in having Vantage delivered as-a-service, where we administer the environment for you, please contact your Teradata account team. Thanks for watching and please join us in our Monitoring and Connecting episode. 