 hi everyone thank you for coming so can you see me all right because I'm a short person so I wanted to make sure that you see me okay let me start by introducing myself my name is Rebecca I'm from history Brazil have a lot of people from Brazil here it's a little place with a lot of Sun a lot of beaches a lot of ocean so I recommend - I graduated in the computer engineer by the university of pernambuco and I work on vintage software and we have some coffee so we don't want to bring the coffee back so please go get the coffee we work mailing with pile and we are like a software studio from Brazil what few thing before we start I love football and my home team now it was gonna be playing for the finals of the Brazilian third division yeah third we suck but I love them so I'm not gonna be able to be there because I'm here so I'm gonna I want to wish all the luck and love and bring this title home boys so let's start I try to be funny on a title but I will be talking about data normalization okay I hope you all understood but we're gonna be talking about an organization so Jane Doe is the name also we have a link for the talk you can follow up anytime that you want and that's it Jane Doe is a name that we mostly use when we don't know the person name but we just want to call the person something and an organization is way beyond just replacing names one example is the Netflix precision who knows this decision okay not many people right so Netflix in 2009 they released a data set with like 10 million records with some information about movie ratings and their main goal is to like have a better recommendation system so people got this data set in dangers let's see if we can find who this person's are in the Netflix dataset and they were able to link Netflix dataset with the IMDB dataset so if a person has four ratings under MDB data set they could be uniquely identified and this just cause a few problems for Netflix and they went through a few lawsuits and it was like a problem another example is in this picture we have a map of a military base of the u.s. in Afghanistan we should not see this you know but soldiers when they are in the field they like to run I don't know if you know that but they run a lot and they use fitness trackers so these data of this fitness tracker they went online they just publish but the data is a non mais because we don't have information about users but we have information about location and this is a secret location and you might be thinking wait is an optimization even possible because there's a lot of people saying that it isn't and a lot of articles saying that you're not safe but in each stock I wanted to show you that it is possible of course we too feel like exceptions but in the general one is possible and I want to show you this with all examples that I can show you here's an outline of the talk I'm gonna be talking about a little bit about regulations then pseudonym ization then anonymization let's start our musician is the thing that was there has been studied for a while now for a lot of different fields and all of this just lead to regulations and we have the biggest regulation okay it's general data protection there is for European citizens and this regulation has a lot of sections he has a lot of rules they have to follow and has a lot of rights to the data subject but the main idea that this regulation has for you is privacy by design today if you're thinking about releasing data from your users if you're thinking about building a product you think about the privacy of the person first the first technique that this regulation talks about each student on musician is a technique field to protect the customers data and Sudan organization is still considered personal data but you just like kind of hide the information in a different manner you have a few techniques to do sudonym musician the first one is data masking approximation encryption intercalation and we use this on a day-to-day we use this a lot and we might not even notice one example is when you have a jungle project you you build models to just store all the attributes of your entities and you have user name first name last name and emails but you don't use this personal information to your system when you want to do relationship relationships with other models you just link these models with our unique identifiers so that's right there a type of an organization because you just link the models with abstractions another example is how stripe deals with payments they do not just deal with all your credit card information and security token you security code they build it okay and the user talking to charge you although all your personal information might be easily found they just deal with the abstraction there's a really great talk about pseudonym ization there was from General Colin last year I totally recommend there's a lot of puns and few callings that I love your callings me too so check it out let's get into what matters today there is an organization and we want to build something that will not reveal anything about our customers we want to reveal something that it's like can't potentially need five persons and we are now will be held accountable by the GDP are we have a few approach to an organization if you want to thank you approach we can do first at economization we can do it dynamically or you can just not anonymous anything you're gonna just build a synthetic data set they just have a similar distribution to a real data so we are not gonna be talking about synthetic data today because it will be a really long talk and I don't have that time we're going to be talking about static and dynamic anonymization when we first think about applying these techniques on vinta we deal with a static anonymization method so what we did was we get we destructively alter database and to just build a fake let us at first attach so we wanted to have local and staging environments that was just have the same same type of data as production and this was the first thing that we did an example here it's like assume that I have this is the Django add me assume that I have customers and Taylor Swift is my customer as well as few colonies and Caetano Veloso that is a Brazilian singer and I want to share this data with someone I don't want to reveal the privacy of my of my customers so what we did we have user model on our project pretty much the same as I show you before and we build anonymizer class that would deal with all the anonymization of the user model we're using a library here to just make things easy so we define a class that is user anonymous okay and we just define how we want to anonymize the fields like email and username first name last name all these things and we're using like a fake card library to just generate fake data and we just register and then we run this is a video but I don't think it will run just show you this great shot we just run a comment like regular comments in Django and you just anonymize all or user model in a very quick manner but we just have five users and well we no longer have table shrift you'll no longer have few columns we have just random generated people but you can see that I did this with five users so imagine if I have a thousand and I did this with one model imagine if I have a thousand so this is a problem that does not scale well so it's good because it keeps the data structure but it's bad because it can take too long to run and right and correct anonymization and that was a problem that we face and we just take to talk too long to run an organization process another thing that I wanted to that I want to point to you is that Illumina zation must be precisely defined so you saw the I precisely define what I want to anonymize and user model so if in the future if I forgot to anonymize something I can have a private bridge or if in the future someone sees some I have some background knowledge about my dataset this person might just look through my data set in first something about my users and that's why this static method is obtained only Sudan organization not real analyzation you have to be like careful when you dealing with that a second method that tries to solve this is key anonymity and before going to the definition I want to just share our example I think in the 90s the US Census made the research in the UNIX users figure out what was the demographic pattern of the US citizens so they find out that for the necessary for you to nickel identify a person you just need to know three unique attributes of a person there was if called date of birth and gender so if you just know these three things you are able to uniquely identify a person in the u.s. census database and these attributes that there are not personal information they are just attributes the but when they are used together they can be used to Nick identify persons this is attributes a name croisine it fires the main idea of key anonymity is to just create groups with this quasi data fires so we're gonna put people in these groups and you will not be able to uniquely just point to this person and it does that by using generalization and suppression let's see how this works in practice okay suppose that I have a person and I have information about this person and this person is single and this person is 20 years old just by looking through the table here I can say that Jo is the one I'm looking for jo committed a theft and you and can eliminate wants to just solve this problem just by now industry information I don't want to be able to identify a person assumed so we're gonna partition the domain space into several region in order to put persons into groups assume that I have my data set as this space search here and what I'm going to do is I'm going to separate this person's into groups so I'm gonna just group together people they are separating single into one group and I'll do it a cut in my database so I'm gonna do another cut and I'm gonna separate people by age now so I'm gonna put together people who are younger and I did another cut in my database and I have a resulting table in define look I just don't I can't just say what is the person that I'm looking for if I have a single and if I have if I know that a person is 20 years old but we have a problem here and the problem is I know what types of crime the person may have committed so the problem is I protect people against identity disclosure but I don't protect them against attribute disclosure another thing about anonymity is that you feel like doing multiple release you need to coordinate this release to make sure that you are not releasing one data in one data set or not releasing other type of data and you're not a data set and background knowledge attack is still a risk and that's why there's a few more fineman's to this technique so they all search for ways to change the variability of the sensitive attributes to a show privacy and we have a few use cases of this technique they have a have I been pound solution Yusuke anonymity to just break your password into chunks and then send the chunks to the service so the server doesn't know your food password you just search for separately and also octopus protects and maybe a project if you do something please tag me I would love to know nice privacy is also very important let's see another technique another technique about showing parvis is differential privacy and this is like the golden standard of privacy in the Theriault to Jericho field and this is a type of dynamic anonymization and the main idea is to preserve privacy when doing data analysis and interesting thing here is that this is not an algorithm this is a definition this is a formal definition and the main goal not not ago but the main idea is that you can learn about a database in to learn all about the information there all the correlations without learning about the individuals on the database so the privacy of your individuals are protected that's just very interesting let's see how this works let's assume that I have an analyst and design alice is doing previous to two data sets the variables one is no database two is equal to database one plus my data and differential privacy states that the results of these both queries they must be just pretty much the same so the database should have the same distribution and this is so good because an attacker he will not be able to tell if he's doing prism with my data or with down my data so if he doesn't know how we would get in personal information about me says he doesn't know in which data set he is doing queries and this gives you a plausible deniability you find the video is or isn't in a data set here we have a form on that it's pretty much exactly what I say here since I've came for an engineering background I do not know if I miss playing at the formula very well so I'm gonna try and if I do not explain it very well you please just stop me someplace that I will continue to try to explain but pretty much we have a PR there is suppose a subset one you have pure plus Delta there is a subset two and then we have a mechanism that is read as a randomized mechanism that gives you a different epsilon differential privates for all the data sets and this epsilon is e raised to the epsilon power so it's a very small number and I show us that the difference between the data sets are very small so the distribution of both our assets is pretty much the same and this is very interesting because we can have we have a private last measure so we can how how private or queries of being made so we have a private budget and you can turn the amount of privates let's assume that I have a previous budget of 0.1 and if I do one query with epsilon value of 0.1 I would just take all the privates and I will not be able to do more queries because if I do more the privacy of my customers will be compromised so I can do small queries with small values or absol and this will just increase to my privates budget until we reach the limit and there's a few challenge to this technique and the first one is usability from our experts so we feel don't know how this works if you don't know that math is a little difficult for you to just use it another problem challenge actually is that it's difficult for you to provide support for all the queries that we do today with signal so differential privacy works with a few mechanism and all of them mathematical methods so it's very difficult for you to just match this with your like regular queries another challenge is that you need to integrate this with your environments and if you have two data sets this must be like twice as hard you don't have much real-world examples and I'm going to show you some examples but you're gonna see why am I saying that we don't have much and it's still bound by the fundamental of of information recovering and what does this law say you say that if you do love lots of accurate queries on a data set with time you just have all the private information that you are trying to hide so you need this is tightly related with the previous budget that we talked before and we have a few good things about it there is you protect us again every try risk so if in the future some person just got some data about my customer you'll not be able to just link my data with this new data because the mechanism of differential privacy protect us against this another thing is that we can quantify privacy laws so we can know exactly how private lost works and can know how this works in a bigger scale there's promising applications of machine learning a to show privates when doing when dealing with machine learning projects and is used by a lot of big companies and now I'm going to show you some examples that are real nice for example the most used emoji this I think by Apple was made using the friendship private so they use a technique to just know what types of emojis do you just type to a friend and to know which was the most used without hurting your privates we don't know a specific who you are while doing but some research say they were not doing very well so yeah that's container we also have a ubirr project of doing queries with privates when you're doing queries to a data set and it's like two years ago the last commit so it's not very much updated and there's also people that say that it's not fresh or private that there's a few problems and we have a new one that is from Google there is quite recent and I'm throwing recommend everyone's check they have a posterior extinction I think they were they weren't like beyond everyone else because they just give us tools to use it so I didn't see anyone yet just comment or saying that it's wrong office right but in the future I think some people will write some reviews and there's a nice article that goes with it I totally recommend real nice and now you know just knowing through these things it doesn't mean that we have but it means that we are in the right way to do to generate privacy to do queries with privacy and protect your users while doing so and I would like to leave you with a few concerns when anonymizing data sets and the first one is that data cannot be fully and unwise and remain useful there is a trade-off between privacy and usefulness so you must like to find how much useful do you want your data to be and how much privacy do you want your data to be read enta fication is not the only risk the risk is what people can do with the data that they find so assume they have a patch-up I don't think that a lake on a patch shop will be like so critical but you mean if a lake on NSA is like very critical queries over large data set are not protective as I told you about the fundamental of of information recovery if you do a lot lots of queries you get information very odd it is problematic it's very hard to hold it queries especially when there are many similar statistics are not safe because you can just trick the questions in order to get private answers and we're really you're the net effects may be problematic so if you just follow ordinary facts through time if something changing this fact you just can infer a lot from the person and the last one is computer security is not privacy protection so it's at some point you may have all encrypted and stored and the best way but someone from the inside may just leak your information so you have to think about all the possible steps and that's it we have reference here and use the link of the slides thank you you 