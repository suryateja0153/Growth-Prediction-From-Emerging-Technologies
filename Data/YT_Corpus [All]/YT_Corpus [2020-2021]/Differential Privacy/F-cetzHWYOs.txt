 Renting virtual machines is a widely adopted solution for hosting websites and applications. While a VM's disk can be encrypted, its RAM content is unprotected from hypervisor access. AMD SEV tries to solve this by encrypting the VM's RAM content with a key unknown to the hypervisor. In SEVurity we show how to exploit SEV's encryption mode to make controlled changes to the plaintext of a ciphertext. This is possible because SEV uses AES-ECB with an address based tweak, meaning that the result of a decryption changes based on the address at which the ciphertext is decrypted. To exploit this, we reverse engineer the tweak values and build a database of ciphertexts with known plaintext. This way, we can inject values into the VM by searching through the ciphertexts in our database until we find one whose content is changed to the desired value when it's decrypted at the targeted address. Building on this, we execute arbitrary code inside the VM. 