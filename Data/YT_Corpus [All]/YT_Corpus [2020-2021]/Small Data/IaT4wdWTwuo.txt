 [Music] we're gonna be talking about material sameen building annex building expressively with material components oh and I have the clicker and I'm yes being a VN I'm a design advocate at Google and I'm Michele Alvarez I'm a designer on the material design team at Google and in 2014 we introduced material design as a system for creating beautiful bold and consistent digital products and with the system it came principles and guidelines we used paper as a metaphor something that everyone is pretty familiar with paper is something you interact with usually on a daily basis it moves when you touch it as well as casting shadows and we kind of wanted to build upon this reality that was grounded that you would understand and we use color surfaces and typography to create emphasis to really give clear signals to the user what they could do in a product and with that we had some style of decisions we used Roboto which provided a great San serif for Android to really build great user experiences that were easy to scan and we also provided some color palette actions that really allowed the really good pairings that looks great in your UI and was the Roboto type scale and all the surfaces in shape and our guidance around that and our fixed color palettes we really created this unified design system which really unified all apps across Google whether it was on mobile the web or desktop as well as Android and beyond unifying all the apps at Google we also unified millions of external apps that had launched using material design on Android iOS and the web and the consistency was great for usability it allowed users to easily navigate an app across platforms and it was just really easy to use you looked at it you could recognize it and you knew what you were doing but it also left little room for expression in this example we have our Gmail app which is a Google product and on the other side is a competitor email client and they look pretty similar right besides changing the color it looks pretty pretty much the same so we asked ourselves how might we allow for brand expression while maintaining the usability of material design and that's when last year we announced material theming it provided more flexibility excuse me it provided more flexibility for brands to express their different styles so in order to create material theming we needed a playground for these ideas we knew that third parties were coming from all different content types and contexts and we wanted to be able to support their needs so what we did was created eight hypothetical products everything from finance to editorial and we didn't just create this idea of a product we created a brand style guide and a logo and these really helped us drive our design decisions so we knew why we were making certain decisions in our UI and when we first started material theming the idea we started with really broad explorations this was probably the most fun I've ever had playing around with UI we explored the ways that we could really push material design to its limits we looked at big bold typography we explored this idea of tonal color palettes and applying them to whole surfaces of the UI we even looked at some of that surface metaphor that as me and mentioned in the beginning of the talk and here you can see we're sort of changing the different z-index of these surfaces well we had two real things in a little bit and look at these three core areas in order to make sure that what we were delivering would be consumable and able to be used by everyone so we had to look at our material principles were we still staying true to our core ideas of material design we had to think about content and context and that was sort of thinking about these brands and how people use these in context of their product needs and then lastly and probably most importantly we needed to think about the user needs not just the what the product needs but what your user needs when they're engaging with that product so this is one of our case studies this is fortnightly and this is our editorial product and we didn't just create hero screens for these hypothetical products what we did was create whole flows and we even explored information architecture across all of these hypothetical brands this way we knew all of our components were aligning to all of their navigation needs so something that makes sense for editorial like a navigation drawer might not make sense for another product or another ia here we have Raleigh which is our finance app and you can see how the UI changes to adapt for this content so here when the user is trying to engage with numbers and lots of content we have more of a dense UI using a dashboard and more condensed list thinking about the user was super important to us when we were thinking about material theming so when we created these brands like basil or recipe app we thought about how is the user engaging with this content and we thought well the the basil users are just looking for Leanback browse content so the component that we felt was the most appropriate was the image list it's super image forward the users can just scroll through and take in content in a really visual form but then when we thought about some of our other apps this is our hospitality app when the users intention was really to drive deep down and find the best price for a flight we used a more utility based component like a list or a card where the user can scan the prices and we did this all while exploring visual ideas so we looked at shape and color and typography and iconography through all of these brands and we didn't just do this for our hypothetical products we did this for Google and this is our Google material theme that uses our proprietary typeface Google sans our Google color palette and our Google icons and we had all these expressions but we needed to create a way to enable anyone to create their own styles while still maintaining that consistency that material design provided so we needed a starting point a way to make expression accessible we updated the baseline components based on the original system and included new components and expanded state information and we also needed code we hear you we wanted a place to start where designers and developers could be on the same page for enabling theming capabilities so we released material components which are open source code available on web iOS Android and flutter and we identified three ways to systematically express style typography shape and color so and we've identified these three areas but we have this component set and we needed to find ways to inject these styles into our components so we took a look at our simplest component we have here our button it's made up of a text string we can change that text ring we can change that typography and allow it to express your brand the button component also has a container when you start with the baseline components like Yasmine mentioned earlier you're starting with this four dip corner radii but we want to allow third parties to be more expressive with their button so they can change the shape and then the button also so this button text and this button container can also change its color and you can have this reflect whatever brand color you'd like so the button is a pretty simple example of one of our components but we have lots of components lots of more complex components and we did this exercise pretty exhaustively and it was really important not only to get all the designers on the same page around what the different elements of the components were and how we could change those parameters in order to express theming it was also super important that we shared this document across all of our disciplines so that designers engineers PMS were all in the same page around what we were designing we needed a system for both designers and developers to express and control brand at a global level so we created a simple architecture so we have this idea of injecting styles but we wanted a way to really simply explain it so we created these three levels the first level is a set of categories those categories each have a set of attributes and those attributes have values and this was our abstraction that we've created for material theming something that we knew would be extract enough for designers to understand and abstract enough to be applied to all of the different platform thinking but let's look at this a little less abstract Lee through our type system so the material design type system is made up of a type scale the type scale are all of these different categories that you can use to create hierarchy with your type in your UI so everything from headline one headline six and caption and all of these categories map to the same set of attributes and material theming and these were intentional design decisions that we've chosen as ways to be expressive with typography so we wanted to allow you to be able to change the font family size weight letter spacing and text transform in order to be expressive with type so if we look at just one category let's say button you'll see that it starts with a set of values these are the baseline values you'll get these values with the baseline components and material design and here's our button again so we can see here we have Roboto medium 14-point this is what you're going to start with but you can change those values for your button category what we're changing here to railway medium 14 pretty similar to Roboto it has a good feel and when I change that button category it not only changes in the one instance it's also going to change across all the categories that map to button in our component set this ensures that your typography is really consistent across all of your components so we knew with this new material theming capabilities we would need to expand our guidelines in order to give more granular details around how to team so what we did was added some more type guidance we have here one example that we found was a good place to be more expressive in UI is with larger headlines so here's a place where you can use funkier more displayed type typefaces and it still retains that legibility and readability because they are at larger sizes we do have some don'ts in our guidelines don't use these really expressive typefaces as really small sizes because your readers won't be able to read any of your UI we have some more granular details like cautions in our spec and this one I think is important to call out so I mentioned earlier that you're able to change the case in your categories of your type scale which is either sentence upper lower or all caps and button typically is an all caps category and we do this intentionally in order to really drive the user that this is an interactive element that they can touch and something's going to happen when they do that so if you are to change that text case to upper lower or sentence make sure that you also provide other visual cues like here we're providing color to indicate that it's still an interactive element in our UI and we also want to provide some resources you could start theming right away and with google fonts it is the largest open source repository of typefaces on internet that you can easily embed into your web and Android products and with that let's look at building our own to your theme and let's take a step at looking at through typography cool so we found a font that we liked great google fonts off google fonts available tell us more about this font face great this is where a la which I mentioned earlier it's pretty similar to Roboto it has a good utility feel but it's a little bit more playful has some of those rounded curves that Roboto doesn't quite have it also is a little bit wider so it was actually originally drawn as a display face used for larger sizes but then was expanded to smaller sizes and have more weights so this is a pretty good typeface to use in your UI alright but I actually want to see this in action we keep on talking about code and that we've made it available but I haven't seen anything yet so lucky for all of you we have starting today two new projects interactive projects on the web as well as on Android and I'm gonna give you a demo on how to use that if you go to material do on tools that build a material theme do it afterwards after the talk after you watch it you can go ahead and start seaming and customizing it through all of our components so you can visualize your thing and the two interactive projects on the web is built on glitch which allows us to easily see all of our changes that we made and then on Android studio which is something that a lot of Android developers already familiar with so let's actually take a look so if we were to implement this typography in the web you would change your mind sass file and you would import this the railway typeface as well as changing the font family across all of your components are we gonna go for the demo thing we're gonna go for the for the demo here now it's a one second Oh yep let me go back to the slide for a second okay all right great let's go back to the demo so we have that this build a material theme project that's available on glitch and you can easily remix it so it's essentially forking it and creating a copy that you can use and change lucky for us I already went through that process and we have it all set up so as you can see on your right hand side you have the baseline values and all of the components they're built with code so you can actually go in here and interact with them it's the real life code so what the changes that make are actually going to be what you see in your product so let's implement our new type base so we're just going to comment here the railway and add it as our font family and you can instantly see that now railway has been applied throughout all of our components now let's go back to the slide so we can also do this on Android very easily and that's by setting your font family and then changing your text appearance so if we go back to the demo you can quickly see that we've already checked or changed our text appearance and added railway for our font family and we can see that we have this new you know all of our components visible here so let's run it again to see our changes take place and now you can instantly see that railway has been applied to all of the components and again all of these are interactive so you can play with them and know what your app is gonna feel like let's go back to the slides so this is also available on flutter and this is how you would implement using dart and since we also have material components available on iOS this is how you would apply your new type scale of ikana iOS great so now I'm going to take you through that same system of categories attributes and values and how we apply that to the material design shape system so our shape system is pretty simple it's made up of what we call our shape scheme and it's made up of these three categories small components medium components and large components and similarly to typography all of these categories in the shape system will map to the same set of attributes and here in the shape system we allow you to tweak both the shape size and the shape family so here we have our button again our typography is already applied that's railway there and we can see the button maps to the category small in our shape scheme and the values what you're going to start with are those baseline values so when you start with material baseline you're going to be starting with the shape size of four and you'll have that nice rounded corner but this brand and this theme is a little bit more playful and wants to be a little bit more rounded so here we change the values of the category of small component to be round and 20 dip and again when you change that one category it's not that you have to go into all of your other components and change those specific shapes that change will get applied to all of the categories that it inherit that small category we also provided some shape system guidance since this is sort of a new theming capability for material but a lot of the principles were sort of still existing in the core of material design so strong differences in shape we find really drive the users eye and this was the original intent of the floating action button so this is the circular button that lives in a world of rectangles when you look through a UI there's lots of squares and app bars and cards and images but then you see the fab and it's this big circle in the bottom corner and it really draws the users eye and they know that it's an interactive element we also explored this idea of asymmetric shapes these can be used to draw emphasis they should be used pretty subtly in the UI but when you do use them make sure you're using them intentionally here this app is using a shape in the top corner to draw the users eye to the navigation drawer we also found that shape can be used to communicate state so this theme is using a shaped corner of their card to indicate that the user has just really swiped and favorited this item and it not only gives a visual cue of the iconography and the color we're also giving that small affordance of the rounded shape in order to really drive that state to the user we do have some don'ts for shape this is one of them don't be too literal with your shapes in your UI this will not this will be confusing for your users they won't understand that this is supposed to be a button they'll think I'm not sure what they'll think it is but what about my brand is like a truck don't do it don't do it that's mean and we also provided some tools to help you start with developing your shapes game and we have a in line customization tool available on material that allows you to customize your radius as well as your families so if that's cut corners or rounded and you can see how it gets applied to the small medium and large components so you can really go in there and change your shapes game all right so let's go actually and build this material theme using shape let's go to the demo all right in the new interactive project we can see that all of our theme we have a theme summary view and that tells us what our shape system is as well as our typographic scale and color and we have some handy links that link out to the tools that we just talked about so let's develop our shapes game Michelle I'm thinking for small what do you what do you have in mind I think we were thinking about 20 dip 20 okay slide so but I kind of like it it's very kind of friendly round approachable now let's see what that looks like okay that's how it's gonna look like applied to our components let's look at our medium components what do you think maybe more like 16 16 okay no 24 maybe okay so let's go to 16 and we see how that gets applied to the medium components and last but not least let's check out the large components which is going to be more of the like navigation drawer that gets applied on bottom there side so what are we thinking here maybe bump it back up to 20 yeah no 36 0 20 okay all right oh look at that 20 perfect so we comfortable with the shape scheme you think you you liked it we're good yeah looking good so we got 24 small 16 for medium and 24 large all right let's go apply it to our interactive project here and see how it looks look at that we have the code already written yeah let's look at the let's look at the slide to go back and look at our ships game so as you can see we chose our 20 dip for small or medium components 16 dip in our large 20 depth which really makes a little bit more friendly and approachable and if we would apply this on the web we would go into our sass variables and you can easily see that they're grouped by small medium large components that you can easily change so let's go back to the demo since we have all that code written let's just uncomment it here and just like magic boom our shape scheme has been applied to all of our components so you can see that it's already changed the radius for the button let's go back to our slides so if we're gonna apply our shape scheme on Android you would go into a shaped XML file and here you set the shape appearance for your small medium and large components as well as well as choosing your corner family in this case that's rounded so we're going to choose rounded and then we choose our corner size and well let's stay on that slide for a second all right let's go back to the demo so in the demo you can see that the code is available here again selecting our corner family and corner size and let's hit run to actually see this changes take place all right and now we see that shape has gone through all of our components and I'm feeling pretty good with the same I like it alright let's go back to the slides and flutter is going in to introduce shape theming it's gonna be coming soon but this is how you would do this on flutter and dart and we also have this capability on iOS through material components and this is how you would apply your shape scheme on iOS cool so lastly we're going to talk through our color system and again our color system is structured in these same ways with the system of categories attributes and values so our color system is made up of a color scheme these other colors that get applied across all of your components in the UI everything from primary secondary to surfaces and backgrounds the attributes of these categories are container hex and content hacks this is to ensure accessibility and contrast ratios are meeting the accessibility standards so here's our button again we have our theme typography we have our theme shape but we're still with our baseline colors so this is again the material design baseline you'll start with this purple but you can go in and change these colors so button maps to our categories primary and here we're going to change the color to more of a deep richer purple but keep that typography white and ensure that accessibility contrast ratio so when you change your primary in one place at the global level that gets applied across all of your components and we also added some new color system guidance to our material design spec so I mentioned primary and secondary colors we find that these are the best ways to inject bright bold branded colors into UI this up here is using a branded color bottom app bar and it's using a secondary color as this pop of yellow to contrast against that blue one of the main principles of color and material design is to ensure that you're allocating semantic meaning to your color so in this theme the primary and secondary color are this nice deep purple and the secondary color is this pop of red that works nicely together but we also have a category inertia in our color scheme that is allocated for error and typically an error State will be a red color this is sort of that visual cue to your user that something has gone wrong and that red really reinforces that but in this apps use case the red is part of their brand story and they don't want to conflate the idea of error and red so what they did was chose an alternate a nice orange color to indicate an error state in the UI one of the last principles of color that we really want to drive through with material design is ensuring accessibility and contrast ratios and we also provided some tools to help you pick your color palette we have a material color palette generator that allows you to pick a primary color and if you don't have a secondary color it provides some options for you to choose from but it also creates this total palette that you can use throughout your UI so let's build a material theme using color sorry let's go back to the slide lucky for us we already have a brand that we're gonna be working with yeah so this brand you can see that its logo type is made up of this deep purple background that's most of the color in this logo and then it has this nice pop of red that's on the top of the crane so we're gonna use those colors that exist in this brand to apply to the color scheme so the primary color will be this purple and the secondary color will be this red and again the error color is going to be something contrasting so it's not conflicting with the brand expression and this is how you would apply those color changes on the web using material components for wet so you have your theme primary themes secondary as well as your theme error now let's look at the demo so we've already added a lot of these values that we can quickly just comment out and we're gonna instantly see the changes take place yeah strange looks pretty good Michelle I feel like I feel like it's kind of missing something though maybe a background color maybe a background color let's look at our wonderful theme summary and it links out to our wonderful pallet material palette generator tool lucky for us we already have a you know primary that we can just copy from here and insert it into the tool which provides a wonderful tonal palette but we also have this secondary so let's just add that there great now we can see that this is our tonal palette that created um what about if we changed it to a lighter color and a fade what do you think I think that's great the tonal 50 value is the lowest in the material design tonal palette and it's great to be used for bigger splashes of color like backgrounds alright let's try it out you whoo so you can see just by changing some color it really changes the whole interface and all of this is easily done with just some few lines of code on the web this is looking nice I kind of want to use this now in my product yeah all right let's go back to the slide and you would do the same process on Android through your colored XML file you would set your color primary color secondary your color error and your color background so let's go to the demo to look at this in action again we've already set our values already so we can quickly just outer run it again and see all of that changes take place just like magic you have a consistent theme that's available on Android web look at that that's nice and all of these projects provide a theme summary view so you can quickly look at it and look at all of your colors as well as your shape system and your typographic scale both on Android and on the web this makes it really easy to add a glance look at your theme and say hey I think we want to maybe change some things and you can do it in code and you know that whatever you as a designer see the developer is going to implement as well because you're working off the same codebase let's go to the slides so again you can implement this on flutter by changing the color scheme and changing all of your values for primary and secondary surface background etc as well as iOS and both of these projects that we demo today on the web using glitch and within Android studio are all available on material do flash tools slash build a material theme just go to material you'll find a link in there but all of this is available for you to start theming and playing with and we're really excited to see what you all do with it we'll wait some time for you to get that humoral picture but we've wanted to really enable developers and designers to have a great starting point and through this project what you see in the changes that you make are actually represented in code so that is actually what you're going to be seen in your products and we really can't see all the wonderful material themes that you'll be building with today so please again go to material do check out the projects that are available on Android studio as well as the web using glitch and you can really see your themes come to life and we can't wait to see what you what you build thank you we're also demoing the building material theme in our sandbox yes in our sandbox which is right there sandbox II we're gonna be demoing the building material same and you can actually print it out which is pretty fun and we're also going to be asking sorry not asking questions you're gonna be asking questions that we're going to be answering them so we're gonna have QA in sandbox e in the box talk QA area and thank you all so much for coming you can go to material Daioh to find the latest as well as following at material design to get the latest updates from us and again don't forget to try out those tools and share with us we'd love to see what you come up with again thanks so much everyone for joining [Music] 