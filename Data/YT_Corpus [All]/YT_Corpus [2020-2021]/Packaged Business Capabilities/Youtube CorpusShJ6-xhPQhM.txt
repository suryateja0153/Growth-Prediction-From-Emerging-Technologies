 devops adoption is widespread and results in improved efficiency in any organization's i.t operations as it automates the agile methodology let's take a look at how continuous integration and continuous deployment practice can be set up in your data integration projects with stambia stambia data integration solution provides three components first stambia designer which is based on eclipse and stores the source code in xml format the designer can be easily installed on any operating system with a simple decompression of an archive directory [Music] using the designer and projects users create three objects metadata mapping and process in the designer plug-in and use any standard source control or versioning system to manage the version of these objects second is stambia runtime a java component that saves the session logs in a database stambia runtime is hybrid as it can be placed on premise on cloud and can also be containerized and the third component is stambia production analytics this is a web interface used for operational activities and needs a web server production analytics can be on cloud can be containerized or called externally through apis now let's take a look at how these fit in the integration architecture while users create designs using the designer and manage the versioning and sharing using a versioning server they can then test their designs on a local development runtime and launch executions on source and targets the designs then can be deployed on production runtime using production analytics web interface in a typical deployment the final versions of the designs are packaged and using production analytics ui production analytics apis or via command line the executable is created with the environment specific configurations which is then deployed on the runtime the api is in command line capabilities enable the use of any external devops tools using these devops tools users can set up continuous integration and continuous deployment pipelines this automates the entire operational process like package build and deploy and speeds up deliveries to serve your customers better let's take a look at a small demo here on a windows machine we have stambia designer get and docker installed on docker we create and run containers for dev test and prod runtimes production analytics mysql and jenkins the cicd pipeline will be created by using jenkins integrated with github in stambia designer we have an existing project with the git plugin installed to push changes to the github repository we can optionally create a web hook to trigger the jenkins job based on an event now we create a docker compose file to have the mysql production analytics all the runtimes and jenkins environments specified [Music] using the docker compose up we will start all the containers [Music] and verify all are up and running on the jenkins dashboard we create a pipeline job that is configured to execute a set of command line operations and call production analytics apis to perform deployment and finally let's take a look at production analytics where we have added the runtimes on development test and production containers with empty repositories as well the delivery project has no deployment at the moment let's make a small change to a process that is to be published as a web service inside the process we open the mapping and modify the output of the web service to add company name now this change can be pushed to the github repository this kicks in the cicd process and the web service gets deployed to all the runtimes we can verify that the changes have been pushed to the github in jenkins the deployment job is triggered by the web hook in the console output we can see that the package has been successfully created and the deployment apis have been called and are finished successfully on the production analytics ui we can refresh the delivery project and see that the process has been deployed on the three environments delivery on each environment can also be seen under the specific runtime repositories in case of deploying other processes like a data loading job etc these can then be scheduled to run based on a frequency using the scheduler in production analytics now we can call the web service from the production runtime to check the result external artifacts repositories can also be used for the packaging and building docker containers etc stages can be defined in jenkins for better management of your ci cd process to know more check out the article at stambia.org or contact us at stambia.com 