 I'm Micah Smith and this is #AAillustrated in this  session we're going to be covering part two of   intelligent automation so this is a continuation  of our last session on intelligent automation   where we introduced what is intelligent automation  we looked at a couple example use cases and we   introduced this problem where we said hey we want  to create this bot that's able to automatically   sort the incoming emails that are coming for an  it help desk and so we want to be able to classify   them and we will be able to respond to the  original sender to say hey you know your email for   it support has been forwarded to the appropriate  hardware group or the appropriate software group   or to the account access team and we wanted to  create a bot to be able to do that i know that the   last session was a bit of a cliffhanger because  we introduced this tool and we said hey we can use   this to build machine learning models and it's  super easy and it's all local and then we just   kind of had to end the video because we ran out  of time so i want to make sure that we're taking   enough time in this session so that we can do the  full bot build we can introduce the tool we can   talk about how it works and we'll give everyone  the code right so you have the code you can modify   it you can go from there so first off what is aa  illustrates so a illustrates is an episodic series   where we cover topics related to rpa right and  specifically for developers on automation anywhere   we want to cover concepts like how to use some of  the different products that work with automation   anywhere how to use the different tools you know  different topics that developers are interested in   this is very much a community driven initiative  so you know let us know the content that you like   let us know the content you want to see less of  and and we'll be sure to create that for you so   reach out to us on our twitter on linkedin and  or comments on youtube we'll be sure to address   those and we'll make sure that we're creating  the content that people are interested in seeing   so again flipping back to what we talked about  last time we we introduced this concept of like   what is intelligent automation and we said you  know sometimes you'll hear the phrase used as   intelligent automation sometimes you'll  hear it called cognitive automation   really those phrases are used interchangeably  and we said that you know rpa is really that   rule-driven task-based automation where we're  automating on top of gui's and on top of apis   and we have that flexibility to work between both  and we said that artificial intelligence is this   really broad categorization where we're using  data to drive or mimic human decision making or   cognitive decision making and we said that  the sweet spot in between the two of those   is where we find intelligent automation and  so we introduced that concept we talked about   a problem statement where we introduced hey  you know we've got this help desk scenario   i send an email to the help desk i said hey my  monitor is not working it won't power on i've   tried to plug it in you know et cetera i send  them that email traditionally a help desk would   have someone who's just kind of monitoring  that email inbox they might reassign that to   the appropriate sub team right maybe that goes  to desktop hardware so they might have someone   who reassigns that to a particular sub team or a  particular set of individuals and then that work   eventually gets done and we said what if a bot  was able to automatically interpret the emails   that were coming in automatically  sort them to the appropriate group   and then automatically you know you could  take it from there right you could have it   create a ticket and service now or do whatever but  uh we wanted to at least take care of how do we   read the emails how do we figure out what they're  trying to get at right what group they belong to   respond back to that individual and then and then  that's what we'll we'll break it so uh we talked   about some potential solutions in the end of the  last video we had a call with myself and a friend   of mine named harish we went through this tool  that we created and so in this session i want to   dive deep into how we can use that tool to solve  the problem at hand so we're very much bot build   focused on this one this is designed to be really  hands-on we've got links in the video description   which include how to get to the resources that  i'll be using so definitely build along with me   this bot and the all the you know reference links  are going to be up on our bot store and so you'll   be able to find those there all right so let's hop  over to my screen here so we said that you know   one of the most important things for us to be able  to build this machine learning model and be able   to accurately predict like where does this email  belong to and who should this be forwarded to we   need a lot of data now i looked online and there's  really not any great resources for like help desk   tickets and their classifications and so what  i did is i reached out to my network and i said   hey i need your help i want to do a special  community based you know bot build and i need   everyone's help to fill in some help desk tickets  so i put this up and we actually got really good   responses on this more than i expected so here we  can see that you know i created this spreadsheet   and i open it up for everyone to be able to  participate and i think we got about 266 or so   yeah 266 well 265 i guess because there's a header  um but a lot of people participated right and the   good thing about this is that i wrote the first  like five or ten maybe and then from there on else   i really didn't write any right and so the nice  thing about that is like these are kind of written   in the mica smith language of like how i would how  i would phrase a a help desk ticket but the rest   of these are written in other people's language  and the the important thing there is that we don't   want to just classify every time micah sends in  an email to the help desk we want to be able to   classify every time micah does but also tammy and  sharon and steve and all these other people right   so we want to make sure that the language is  you know representative of the way that lots   of different people write and that's what this  does so i did some prep work on this spreadsheet   and again i'm going to give you all these files so  you'll have all of this but i want to kind of walk   through exactly what i did here to prep these so  i have the here i have our full emails or our full   sample emails right and this is just the the  excel spreadsheet version of this and what i   did is i went through and i added sorting to this  and so i went through and i said okay of the let's   say desktop software category how many desktop  software emails do we have and in this we have 76   right and i wanted to see the same thing  for like let's see general questions   for general questions we only have 40 right so  what i did as i said okay for our train versus   test set which is what we talked about last time  right the train set is what we use to actually   train our model and the test set is what we use to  validate our model to know how good our model is   so i said i'm going to take 15 of you know each  of the categories so in this case 15 percent of 40   i'm going to take 15 percent of that and i'm going  to save that over to a test set and i'm going to   leave the remainder as a train set and i did  that for each of the different target categories   right so i couldn't just blank it and say hey i'm  going to take 15 of the total i'm going to clip   these off and i'm going to make that our test set  because i wanted um i wanted responses that were   representative of each of our different categories  and i tried to you know weight it evenly right   so if there's 40 of these i'm taking 15 of 40. if  there's for networking let's see how many we have also 40. so not a not a great example there let's  look at desktop software for desktop software   there are 76 right so i'm taking 15 of 76 and  that's what i'm using for the test set so i broke   those up already and what we have here and again  i'm going to you'll have links to these as well   my train set is right here and it's a tsv right  and that just stands for tab separated values   so we've got our target which is our you know  target categorization our target categorization   right here and then we have our email and so like  desktop hardware and then this is the email and   then uh general question and this is the email  so that's our train set and we have the same   thing for a test set okay so again we don't have  the same number of questions for desktop software   as we have for you know general questions or  networking just because we had a larger sample   for those so i know i'm beating that point  to death but i just want to make sure that   you understand that i didn't just clip off 15  in total i had to take 15 percent of each type   so i had tested this earlier just to create a  sample model i'm going to delete that what we're   going to do is we're going to create that model  live so i'm going to go back to where i actually   have the source files for this and again check out  the links you'll you'll have this exact same um   solution file you can modify it you can see  the code whatever you want to do so it's in the   bin um debug folder that we have the exe so i'm  going to go there and i'm going to open that up   again the thing that i really like about this  what i'll be honest what really geeks me out   about it is that it's all local right so i don't  have to worry about like how much am i paying aws   for you know hosting this particular cognitive  service or something like that this is all just   local it's fun to be able to play with the model  you build is local consuming the model is local so   you know it's to me that's like a fun solution to  be able to play with anyway um we've got two tabs   like we said we've got the the get doctype  which is where we really consume the model   but on the build side we can build the model  so we've got our build tab up i'm going to   move this over let's go right there we'll put  this on this side okay so um what i'm gonna i   don't want that full screen what i'm gonna do  is go back to where i had the help desk tickets   so i've got my test set and my train set so let's  browse out and grab those said browse right here   so my train set nope that's the ham spam that  we looked at with harish um there's my train set   browse this is my test set for my model location  i'm just going to save it in this exact same   location that we just had by default it's going  to create a file called model.zip that's fine   i'll leave it um okay so i'm going to hit build  model so it takes a few seconds and it will   come back and tell me that it had a success  notice that our model accuracy is only 61   so we would really benefit by having a lot larger  of a sample for these emails especially because   we have five different categorizations of email  types but uh even at 61 percent i think we're   going to find that it's good enough for what  we're trying to do obviously if i was trying   to do this for like my company or if you know  my organization is going to depend on this   i'm going to try and get as large of a sample as  i can and i might even try to rebuild the model   you know month over month just to make sure that  like as i continue to get more and more samples   that i'm considering those as i do my model build  and especially as like let's say helpdesk has to   reassign one i want to make sure that i'm  capturing that reassignment so that it can   be corrected in the model so next time we  build it it's even more accurate all right   so we've built our model it exists right here  i'm going to copy this is the same path right   so there's the path and i'm just going to say  slash model dot zip and let's test it out some so   we'll we'll test it with a couple sentences or a  couple you know fake emails of each type and let's   see how it does so let's say that i need to have  some software installed i need someone to install   adobe acrobat on my laptop right that's a total  common scenario for someone to send to the   help desk if i hit classify the model says that  it's 97 sure that is a desktop software request   i agree right so so far we're good we're one  for one let's try one for desktop hardware uh my   monitor is just showing a blue screen when i  plug in my laptop right to me that sounds like   it's likely a desktop hardware situation i'm going  to hit classify here and again the model came back   and said it's 98 sure that's a desktop hardware  related problem cool we're two for two let's try   one for account access i think my account  may be locked out my password seems to be   wrong i need to reset it i'm sure you love hearing  me say these sentences slowly as i'm typing them   all right so so that's you know to me that sounds  like an account access kind of situation if i hit   classify the model agrees 98 sure that that  is an account access related issue so good   so far so good uh one that i think is  probably the most difficult is general   questions right and this is one that's like  kind of the catch-all i might say i need   someone to teach me how to use automation anywhere  right that's another kind of general question you   might get probably not to automation anywhere's  degree but you know i i need to learn how to use   a particular piece of software that recently  got deployed again the model here agrees with   me and says 94 sure that's a general question  the last category we want to test is networking   i'm just going to say my laptop keeps  disconnecting oops connecting from the network i also need to get my phone set up on the work  wi-fi if i hit classify here it's 92 percent   confident that that's a networking related  issue again i would agree so you know building   our model kind of testing it out there right  now it looks like it's good it's something i   want to keep an eye on right i want to see how  accurate it is as we might send more emails or   things like that but the fun thing is is that we  you know without a ton of work there without a   really all that big of a data set we built a model  that's working pretty well so the application's   working fine i'm going to minimize that for  right now our goal for this though is to build   an actual bot that can do this stuff so what  i'm going to do is i'm going to go over to our   control room and i'm going to close these other  tabs out because we really don't need those now   and i want to create a bot so i'm going to go into  bots my bots a illustrates i'm going to create a   new folder right if you've been a part of my a  illustrate sessions before you know that i'm real   big on making sure that you do proper organization  of your bots directory otherwise you're going   to look back at it and be like oh i have another  file called test seven what does this one do right   you'll never be able to find your stuff so uh try  and name stuff accordingly so i'm gonna say uh   this we call this one intelligent automation part  two right that was the name of our video session   so we're gonna hit uh create folder i am in here  so i'll hook create a bot again as you're naming   your bot just make sure that it matches the folder  that you expected right if that path was different   you know just pay close attention  there so i'm going to say email sorter okay so as we think through our bot build  and i'm going to minimize this over here so   we have full screen as we think through our bot  build i'm going to build this one exactly how   i think about building bots right and and this  is you know when i'm starting a new build that   i don't necessarily know how it's gonna end up  or how it's gonna work this is the path that i   follow so the first thing i always do is i try  to map out like very generally what are the   basic steps that i need to follow so  i'm going to put those down here right the first thing we need to do is actually connect  to our email so for the purposes of this session   i've set up a gmail account and this gmail  account is i think it's like a illustrator   gmail.com or something like that so  we're going to use this for all of our   emails right so i'm going to i'm going  to send an email to this account and then   this i expect to respond from that account back to  the original sender so we're going to use this one   so the first thing we need to do is  connect to the email and set up a session so let's just say connect email  session that probably is the   best way to actually write that okay after that we need to actually open up our  machine learning application where here it's   called ml classification so let's say launch ml  classification and and we need to do more than   just launch it right because when it when it opens  up it doesn't have a model that's been selected by   default so i want to make sure that i launch the  application and that i fill in the model location   so that we know what to consume and again  the cool thing about this is that if i have   multiple models and i want to use those across  different processes i can do that easily so we'll hit save on that okay after that we've   connected to our email we have launched the  ml classification now we want to loop through   unread messages and and that's how we're going  to read the messages that the inbox has right so   let's say we run this bot every 15 minutes right  and every 15 minutes it'll check and any new   messages or any unread messages it will read those  we'll do our classification and then we'll respond   so i think that's good for our steps if we need  to add more later we can do well let's add one   more right one more step i think that we want to  add is we want to close our ml classification app and we do that because again in a real scenario  right this is probably something that would run   on an unattended bot runner we don't want  to leave applications open after our bot   is finished because they may interfere with the  next bot that's running right maybe the next bot   is also using this ml classification app and now  if there's two sessions open we could have some   some issues when we start to fill in fields and  things like that so i would always you know i   always try to make sure that if i open something  during my my session that i'm also closing it all   right so let's do the email connection um so  we're going to go up to the email package here   and there is one that says connect and that  will allow us to connect to an email server   so notice the session name i establish a session  name i will reference that same session name   when i do my looping okay so that's why  it's important that i have that session   for my connection information again you wouldn't  necessarily use the same account details that i'm   using if you're going to just use your local  outlook that's totally fine if you want to use   a gmail account that's cool too or whatever email  server you're using for me i'm going to be using   gmail so it's going to be an imap connection  so it's going to be imap.gmail.com   the port is going to be 993 for my credentials i'm  going to use some credentials that i previously   stored in the credential vault if you're  not familiar with this the credential vault   allows you to securely store credentials  and then retrieve them as needed securely   right so i'm only retrieving them  for the purposes of this particular   um action to be able to run i'm not just like  writing them out to a text file or something   all right so mica locker illustrates gmail and  then password so that's the connection details   for my gmail account that i set up and then i'm  also going to check this box that says to use   secure connection and then we should  be good so i'll hit save on that   now that's all we need for that email step  the next thing we need to do is launch our   classification so for me that path is  let's go back here machine learning   classify machine learning classify bin debug and  it's right here i think i can do copy as path no i'm not seeing it there i might have screwed up  my uh my control shortcut there so i'm just going   to copy the path right there to get me most of the  way there and i'm going to go up to application   and then i'm going to say open program file   okay so with that as a part of my process i'm  going to go over here to the location program file   i can fill this in if i have the full path  obviously i don't so i'm going to hit browse here and that's going to launch an explorer  window for me i can hit open so i had   the path up until this point and then machine  learning classify.exe is the actual executable   so now the path is complete and i'll hit save  now i'm going to hit reset here i'm also going to   clear this out so this is what the app  looks like when it first launches right   my cursor is by default in the text to classify  and my select model is not selected or anything   like that so i want it to look like that because  when i start to interact with the application   i want to make sure that it looks like what  it does when it originally would launch   so i'm going to go down here to my recorder i'm  going to drag a capture action right under here   and for my window i'm going to hit the refresh  windows button right and this is going to just   get the title of every single window that's  open on my machine and from here i will find   the ml classification and then i'll hit capture  object so again if you're kind of new to this you   just hit capture object i just clicked and  then you let go and then when you focus on   whatever app it is it'll start to highlight  stuff in red as you move your cursor around   right so for me i'm just going to click right  here which is the select model text box you know   i could go through and do like the browse and find  it that way but i like to just do it this way now   i noticed when testing this before that if  i just did set text it doesn't actually work   so what i'm going to do instead is i'm going to  left click and then i'll do a simulate keystrokes   so it's really kind of like a two-step thing and  that's exact exact same thing that happens when   myself as a human tries to interact with this  as well right if i wanted to fill in the select   model field i have to click and then i would  type so we're just replicating that same thing   first for any reason you know this particular  application didn't work when i just hit set text   that's fine i'll just do it this  way so i'm going to hit save there   so now we've assumed that it's clicked and our  cursor should be right here in the select model   field so now we will go to the simulate  keystrokes package and we will drag over   the simulate keystrokes action for the window  we can select from the recently used ml   classification and then for the text this is where  we want to enter the full path to our model so for   me that is in help desk tickets and then model.zip  so i'm going to copy this path right here   and then i'll just type in model.zip at  the end there cool so that should get us   the model selected inside of our select  model text field so we should be good on that   minimize this one so our next step  is now to loop through our unread   messages it was important that we did the ml  classification launch before we start looping   because i only need the app to open one time  and i only need the model selection one time   but you know the looping through emails i  might have to fill in the text multiple times   or things like that so i want to do that  outside of our loop let's add a loop now and the loop we'll drag over right here for our  iterator because we have an email session that's   been established i can select for each mail in  mailbox now when i do each mail in mailbox i   can choose whether it's all the messages only the  red messages or only the unread messages for right   now i'm going to leave it on all and i'll show  you why in just a second so for this you know i   i say what inbox it is for me i only have this one  inbox so that's fine i'm going to leave everything   else default i am going to select that i want the  message in plain text though i don't want the html   formatted message i just want the plain text one  now as it reads each of these emails it's going to   save the results of that email in a dictionary and  but i have to specify that right so i'm going to   hit this plus sign here to add a new variable  and i'm going to call this d so i'm prefacing prefacing it with a lowercase d so that i know  that it's a dictionary when i see this value later   and i'm going to say current email right because  i'm going to be looping through this multiple   times so this is going to be the dictionary  representation of the current email that i'm on   now i don't know all of the return dictionary  values or the keys off the top of my head i'm   sure that the documentation has that someplace  if i go to like docs.automationanywhere.com   short of that i'm just going to do a quick test  to be able to find those values and so one package   that i really like using for that is this java  fx package i believe it's already installed in   community edition if you don't have it in your  enterprise edition you can go grab this it's   at bot store.automationanywhere.com but show  dictionary is a really helpful let me drag   that again one time hold on show dictionary show  dictionary is a really helpful um just like dummy   action here so that i can see everything that's  in that dictionary so i'm just going to set like   a button label that says close for width i'll  do 500 for height i'll also do 500 and i'll hit   save i'm going to run this now again this is how  i do my builds in real life right whenever i'm   building for a customer or preparing for these  kind of builds if i don't know exactly what values   are going to come back to me and in what context  i'll very frequently just do something like this   to you know kind of show me what what i have right  now what's available so it's going to connect to   my email it's going to launch that application  we'll have it launched a second time actually   because i had one open already but that's okay  it clicked it put in the full path to that model   and here is our first email now if we flip back  to my gmail session here i actually only have   one email in the inbox so it and it's like the  welcome email when you sign up for for gmail   so that's what we're seeing here in this window  and i can see that like these are all the values   so i can see who it's sent from what the subject  is what time i received it all this kind of stuff   the value that i'm most concerned with here though  is this key for email message right so what i'm   going to do is i'm going to make a note of that  in my notepad here just so i have a reference   to it and the actual value is email message i'm  going to just move this over here for right now   because when we actually have to fill in this  value to our machine learning classification app   i need to make sure that i can reference that here  um so that we can appropriately classify the email   so i'm going to close we're good i'm going to  close i'll leave this open for a second actually   i want to have one of these open because i'm going  to need to do some more recording stuff with it   all right so back to our bot um i'm going to  delete this action now because i really don't   need it anymore if i needed more values or more  properties for my email i could do that and again   if you're really going to build this kind of  solution for your organization you know when we   trained the model we really only had one feature  and and that feature was the body of the email   if i wanted to build a model in a different way  i could add multiple features and another feature   might be who the email came from another feature  might be the subject of the email right those   could all be used to help me build my machine  learning model so just keep that in mind that   is a possibility for our example we just did it  with just the email body but you could expand on   that later all right so i'm going to delete this  so we're inside of our loop i'm going to change   this now to only show unread okay so remember  that point i'm only showing unread now because   i got the dummy email that i wanted and inside  of our loop what we need to do is we're going to read out our let's do an assign here  i'm going to grab the value from my   dictionary and i'm going to assign that to  a string so what i'm going to do is hit f2   d current email is my dictionary of strings and  my dictionary key is email message and i'll hit   yes insert and i'm going to save this into a  variable that i'm going to call s email body okay so i have that now i want to put that email  body inside of the text to classify here so   what i need to do is just like we did  before i'm going to use the recorder here and i'm going to select window and ml  classification and hit capture object   i'm going to click into  this text to classify field   because again i don't know what iteration of  the loop i'm on but the last thing i could   have done on that application was entering the  model location so i need to do a click up here   left click and then just like we did before  i'm going to do a simulate keystrokes   and with that simulate keystrokes for my window  i'm going to select ml classification and then   here for my keystrokes i'm going to hit f2 and  i'm going to enter s email body and hit insert okay i'm also going to do one other thing now that  i think about it i want to pop up with the email   body just so that we can see what it looks like  as we go through this for the first time so i'm   going to go to message box i'm going to let's see  pop that up right here this will be s email body we're gonna leave it like that all right so that  should be good um so we've put the email body   into the form now i need to click the classify  button so what i'm gonna do is go back to recorder   drag a capture here select my ml classification again and hit capture  object i'm going to highlight over the classify   button again notice that it's got that little  red box i'll hit the button to click classify   and then for my action i'm going  to select left click and hit save all right so we've clicked classify now we'll need  to grab the value from the document type and the   confidence score i don't know what property  those are going to be off the top of my head   so what i'm going to do here is i'm  going to fill in the path to the model   that we just had right model.zip oh  this should be slash model that's it   here we go and i'm just going to type  in some text right i'm going to say   my laptop screen has a big crack on it and i can't  see anything on the display if i hit classify   it told me that it's 90 sure that's a  desktop hardware problem that's fine what   i'm going to do is i want to use the desktop  hardware to look for here in a second so   what i'm going to do is add another capture and go  back to ml classification and hit capture object when i highlight over this document type   okay again it turned red what i want to look for  here in the object properties is to see where   it has the word desktop hardware because that's  going to tell me you know kind of in a backwards   way what the value is or the key for that value so  it's actually in the word value so what i'm going   to say is git property and here it's going to say  well what property are you trying to fetch i'm   going to type in the word value and then i'm going  to assign that to s current email classification create select okay so that's going  to store the classification of our   email i also want to capture the confidence  score so if i go to window ml classification   capture object i'm going to  highlight over this confidence and scroll down a little bit again value is where  that's being stored now notice here we have the   two like kind of grayed out quote marks that tells  us that this value is a string so just keep that   in mind when we return it and when we try and do  some kind of manipulations with it so i'm going   to say git property i'll say value again and then  here i'm going to assign the output to a new value   i'm going to say s current email classification  confidence super long variable there and hit save now i only want  the bot to respond to the email   if the confidence is above a certain  threshold and for this example we'll do 50   so what i'm going to do here is i'm going to  say let's go to the if and let's drag that over   so my condition i want to say if number  let's see where is that if number condition   so notice here and again kind of similar  to that same clue we just talked about   this has a pound sign here which is representative  of this requiring a number data type if i go to   type in my variable which we just had right  s current email classification confidence   and i try and move off of that field  right it's going to give me an error here   right and the error is because i just put a string  into a field that's requiring a number so one way   that i can work around that is if i actually do  let's see dot string notice that the intellisense   comes up with a bunch of kind of like inline  actions that i can do one of them is two number   so this allows me to convert from string to  number uh all in one line so i don't have to   have this extra command and an extra variable  just to store that number temporarily i can do   it all in one command now one caveat to that is  that it's not when it does that conversion it's   not going to store the decimal places right with  an inline conversion so just keep that in mind   if the decimals really matter to you for us we're  just going to say if something is greater than   49 which would be 50 and above then then  we're fine so this one is not like a super   scientific one but if i needed to to be  concerned with uh the number of variables   that are being maintained or the number of i'm  sorry decimal points that are being maintained   i might need to do this a different way all right  um i i might have actually just said that wrong   i think it actually only does that when you go  from number to string not the other way around so   ignore the advice that i just gave all  right so what we're going to do here is for   our if condition this is where we actually want to  respond to that email so i'm going to go back up   to our email messages and i'm going to go to reply  let's drag that one more time there we go so um   i don't need an attachment i don't need to  cc anyone again because this is working with   the email that's currently already you know  kind of in our context or that we selected   i don't need to worry about who it came from  because the reply is going to handle all of that   for my email i'm going to leave it as plain  text for my message let's put up let's put   a friendly message here we're going to say thanks  for reaching out to the it help desk your message   has been forwarded to the and this is where we  will enter the classification type so i'm going   to hit f2 here to bring up our variables  explorer and i'm going to put the current   email classification value there so that will say  something like desktop hardware and then i'll put   in the word team afterwards right so your email  has been forwarded to the desktop hardware team   you should expect for someone to get in touch  with you within 24 hours i'm gonna uncheck this   go green message just because we don't really  need it uh and then for my uh send email   i need to fill in some uh details here to  connect to gmail again so this time because   we're sending a message it's going to be an smtp  connection so i'm going to put in smtp.gmail.com   this time the port is 587. i'll  leave the check box for ssl   i do have to fill in my credentials again  so i'm going to hit pick from my pick list   to go to my locker and grab my username  for gmail as well as my password for gmail all right so that will authenticate and   send the message that we had selected  actually let's put a from here right let's do   uh yours truly is that how you spell truly i  think it is yours truly um i t help desk bot um we'll hit save all right so we sent the  email and then the last thing we want to do   so two things we want to do right because we  already have a classification that's occurred   here i need to hit the reset button on the  application because if i'm in a loop i don't   want to accidentally grab the document type or  confidence from an old classification so we want   to click the reset button so let's go back here  and we'll do capture again this is going to be   outside of my if condition there because the if  is really only on sending an email and i could   add an else that like forwards it to a human  to review the ticket or something like that but   for the purposes of this exercise we'll  just we'll just have the single if i'm going to click reset that's going to  reset the results there and if i'm in a   loop that allows me to take on the next the next  email or do that classification hit save there   and then the last thing we're going to do is  close the ml classification app and again this   would be outside of our loop so this is once  our entire bot run is complete and in the window   package there is a close action so right there  we will select ml classification and hit save okay so moment of truth test time i'm going to so  i've opened up an email my email has a signature   that goes on by default i'm going to take that off  just for the purposes of our test here because i   don't want to have lots of different variables  that could that could impact our test and let's   say let's let's go for a networking one right  my wi-fi is really slow and keeps disconnecting   we'll just leave it like that uh need some help  accessing the network i think that's a good one   so i'm going to send that to the a illustratesbot   gmail.com for the subject again we're not  pulling the subject or doing anything with   it so i can fill one in but the bot's not going  to ever see it let's just say help desk test we'll hit send so i'm going to make sure why  do we have a yield sign here oh we forgot to   select our action of click sorry good thing  we noticed that all right i want to check to   make sure that the email is actually received on  the gmail side there it is so help desk test i'm   going to leave it as unread because i want the  bot to actually read it so let's hit run here moment of truth shoot i forgot to close i'll close it real quick   nothing happened yet so we didn't screw up the  bot uh it hadn't even connected to the email yet   all right so now we've opened the app  it's going to fill in the model hopefully there we go now it should be reading my  email okay so notice that we got the email   but we've got a bunch of extra carriage returns  here right i can see that because usually the this   text would be a couple lines up i'm going to copy  that just so that we can test with this afterwards   but for right now we'll just hit close so  see we've got a bunch of extra returns there   for our classification it didn't seem to matter  right we still have a really high classification   but my view is that the text that we had  when we trained our model was all cleaned   up right we didn't have carriage returns  and line breaks and stuff like that in there   and so because we've already cleaned up the text  that we had to train our model we should also   be cleaning up the text that we use to consume  our model and we should follow that exact same   cleaning and so that's going to matter when you do  this for yourself maybe some other use case or you   know something else that you try to try to play  with make sure that when you're cleaning up your   text to train the model that you remember exactly  what you did so you can do that same thing when   you actually uh consume the model so what we'll  do here and we just got an email response so we'll   check that here in a second what i'm going to  do here real quick is we're saving this into our   email body so i'm going to add two quick commands  to help clean that up i'm going to do the string   replace action and for my source  string that's going to be s email body for my find string i'm going to do the slash  n which is going to find new line and that's a   regular expression so i'm going to click that and  then replace with i'm going to leave that as blank   because i want to replace it with nothing and  then i'm going to assign that back to s email body and i'm going to do that exact same thing one  more time so my source string again is going to be   s email body my fine string is going to be  r which is going to be my regular expression   for a carriage return so i'm going to put regular  expression there again replace with will be blank   and s email body let's save let's bring up our  email real quick so this is the response from the   bot and the bot said thanks for reaching out to  the it help desk your message has been forwarded   to the networking team you should expect someone  to get in touch with you within 24 hours perfect   that's what we expected let's send one more email  to the bot and we'll test just to make sure that   that text cleanup part worked but i think we got a  success here uh let's do a desktop software uh i'm   having trouble with my installation of microsoft  office needs someone to re-install it again for me   all right so let's send that let's  go back to check our gmail here and again also notice that the bot ignored  this welcome to gmail email that i got   because it was already read so again it's only  considering the new emails all right so we got   the email to show up there help desk test two  let's run this again the only difference this   time really should just be that it cleans  up the um cleans up the the extra lines that   we had above the email body i don't know why  those are there but at least we cleaned it up so connect to our email fill out the model oh i forgot my signature that's probably  going to screw it up uh let's see what happens huge signature there okay so it still thought it was desktop software  but the confidence was much lower than i think   that that message would have been otherwise so  again that's just something to keep in mind if   if email signatures are going to be something to  consider i might want to look for certain html   tags or for certain ways to clean that message  up or clean that signature off before i actually   start to do my classification because i don't want  someone's signature to throw this off so again we   just got the email back thanks for reaching  out to the help desk your message has been   forwarded to the desktop software team you should  expect someone to get in touch within 24 hours   perfect that worked alright so let's go back  to the powerpoint we'll finish up real quick   so just as a recap there's more than one way  to solve all these problems this is just one   way to do it you know if you wanted to create  a machine learning model and call that within   python and you were comfortable doing all that  more power to you uh the example here was just to   create something that was friendly enough that  anyone could do it right so if you're a citizen   developer or if you're an i.t developer but  you don't have experience with machine learning   cool you can try and use this app just to play  around with just to see how it works and solve   kind of an interesting classification problem  how could this be taken further well there's   lots of different classification type problems  that you probably have within your organization   that might be tasks in a workflow right we've got  all these different workflow tasks and they need   to be assigned to the correct groups or to the  correct organizational units and we need to figure   out what they are what they belong to because  they kind of just get thrown in this one bucket   that would be a good use case for this emails  from customers right maybe we have this   one inbox that's just like a gigantic inbox  and like everything goes to this one inbox   and it's not really well monitored but if we do  get customer complaints we need to make sure that   we're looking out for those so maybe we do this  just to like hey every once in a while just scan   for customer complaints and make sure we  address those it could be social media right   maybe there are posts that have a reference to  my company or my you know me as an individual   on social media and i want to make sure that if  they're really negative i've addressed them or   you know being able to sort through those really  toxic posts versus the really positive ones   so that's another use case or even checking like  google or yelp reviews about your business or your   company or something like that checking to find  out when really negative ones have been posted   or really positive ones and so that you can  reply accordingly um you could have a bot do   that kind of stuff okay so lots of interesting  classification problems i would encourage you   to play around with this get hands-on take a  look at the code it's all there and and really   you know explore what can be done with this so  this has been a illustrates again your feedback   helps to make these sessions more effective  let us know what you like let us know what you   want to see more of you can reach out to us on  twitter on linkedin or on our youtube page all   of those are great great ways to get a hold of  the appropriate decision makers i usually help   try to respond to some comments as well so if you  want to get a hold of me there you can do that   but again thanks for hanging out i know this was  kind of a long session but hopefully you found   this useful hopefully you can you know start to  turn some wheels and and think of how you can   explore this a little bit more okay this has been  a illustrates my name is micah smith go be great you 