 [MUSIC PLAYING] Welcome to SAP's UX mobile strategy session. My name is Sami Lechner. I'm going to be talking about the tools SAP has to offer to build and run your mobile solutions. And in the second part of the session, Thorsten Stephan is going to talk about the UX mobile strategy. Thank you, Sami. Happy to be here and welcome, everybody, to joining our session here. And I'm happy to walk you through the mobile UX strategy. Let's have a look, what are the challenges today with mobile solutions? So traditionally, mobile devices are connected via point-to-point connection to ABAP system. Once the smart phones and tablet enter the enterprise, a network of point-to-point connection is the result. And this poses several challenges. The first one being for the admin, who's accessing what data? And where is the data stored? The second one is, how do I support the users if I don't even know sometimes that these solutions are in place? For the developers, now I have to support multiple device platforms, Android and iOS with various form factors. And there's various back ends. How do I authenticate and access the data? And this is where SAP Mobile Services comes in place. We provide admins with the tools to manage the mobile connections all in one place. Admins can configure security settings per solution, and we have the tools to support and debug if that is needed. For developers, we offer various tools with the focus to accelerate the development which we're going to be looking at today. First tool we're going to be looking at is Mobile Transaction Bridge. The Mobile Transaction bridge allows you to create OData Services based on ABAP transaction. So let's have a look at the first demo. We opened up Mobile Services and we go to a Transaction Bridge. And we have a list of back end systems which are available to us, and each passing system obviously has a destination. And from here, we just open the recorder, which basically opens a set GUI right on our back end system. And it has this additional pane which is that recorder. And let's go right into a transaction which we want to create a recording for. And the next step here is then to give this kid a name this is TechEd2020, Create, and recording. We create a sequence, sequence name is Display. Remember this Display is important. We need this later. And we navigate into Display, and we have a recorder button. And now we are starting off the actual recording. So step one, we want to record is in our transaction. We want to do a search line. So we go here, and click here, this was recorded. And then we want to capture some fields here because we want to do a search inside the sales orders, in order to capture some fields which are important to us. We want to go to this Created By. This is an additional input field we want to have. It's mandatory, and it's a string, that's all good. And click this, go on, and the result, we obviously want to see and capture as well. So here's the result table, which the transaction brings, and we go we want to capture some of the results. And since almost all of it, so we can say almost all, but let's say there are certain items which are not so important so we can take them out-- this and this, and we add this. So we have the output. And this is essentially it. We can stop our recording. We now have just recorded an OData Service. And let's go and navigate out here. And if we go now to our Apps, we can have a look at this. How does this OData Service let's close this, just to be clean here. Let's do a test run here. We have this menu and we go and search for orders which are created by this user. We execute the query. And we get a result. And we can look at the raw response and this will be our OData response. And now let's close this window. We go click on the publish do we really want to publish this? Yes, and that's all. We have just published an OData Service to the mobile services. And in the following sequence of steps in the following demos, I will show you how we're making use of this OData Service. You just saw a fast generation of an actual OData Service through Mobile Transaction Bridge. The recording is intuitive and flexible, as the wizard guides you through the process. The no-code tooling allow reuse in multiple channels from web to any mobile app to enhance the user experience. This Mobile Transaction Bridge liberates your data from the ABAP system. As it's cloud platform-based tooling, it's fully secure. This empowers your power user to simplify access to transactional data via the wizards. And through that, build state-of-the-art solutions for any business process. The second tool we're going to be looking at today is SAP Mobile Cards, which enables developers to mobilize enterprise data really fast. Let's do the second demo. So this then where we're also going to start as a developer I'm starting here now in Business Application Studio. I start building up a Mobile Card from templates. So I choose my template, it will connect to Mobile Services, and I go take the sales order template. This is TechEd2020Demo. And what was created was this folder. And this folder consists of a HTML description how the card looks like. The card basically is your sales order, sales order ID, and a bunch of information. And we can preview this let's preview this. So we see this here, and this we rename let's go TechEd2020, save this, and it changes right here. We can also look at the data mapping right so I can see that data mapping, how this card is structured. And let's have a look at the metadata JSON because this is where all the configuration is. So let's open the metadata JSON oh, that opened on the wrong side. Oops now it's going a little bit out of control here. Let's close all of these. First, this is the name of our card. This is the destination where the service comes from. It's a multi-instance card. And the second piece is where the queries are. And here we're saying these are all the queries. And this query, we want to, for example, get the top three sales orders and expand that to customer detail. So first thing, we want to deploy this card, and let's have a look at how this card looks on a mobile device. So we want to deploy this card. It deployed it in version 1 to mobile services. And if we now switch to our mobile device so we open Mobile Cards and the TechEd cards are downloading. And Mobile Cards gives me the capability to view the items, and to see details of the cards, and have fast access to data on the cards. So the nice thing about these Mobile Cards is that the data is offline, and I have native experience, just like I have in a wallet. I can navigate in here, but we want to add some extra functionality to this card. So let's go ahead and add some more functionality to this line. And we want to add an action to the card. Action is basically that I have a workflow capability. And for this, we need some help. I'm going to go to the developer.com I didn't memorize everything and we basically say, hey, Tutorials, Actions, and here is a great tutorial from my colleague. And you can go and do everything I have shown to you basically here as well. But the key thing what I need is basically this URL. First of all, let's switch back to the Business Application Studio. We say we want to add an action. It's approve -- approve We want to make this active. This is we're going to do a patch to the data. And obviously, if there is anything, we can show it in notification center. And the body we also need to copy over. So we're basically changing the lifecycle status to accepted right? Pasting in the body, and we're saving this. We say Mobile Cards Deploy. We choose the card, and it deploys the new version of the card to the mobile device. And the card updates, obviously. And if we go and open the card, we now have the capability we have this action. And please have a look at the lifecycle status in the background right now, it's new. And if I click on Approve, we're sending the request. It was successfully performed and the card updated. So we can do mobile cards, gives us the capability not only view data really fast on a mobile device, we can also modify data. And we also wanted to have a look at the ABAP Mobile Transaction Bridge, and I created a card for the Transaction Bridge, actually, as well. And let's download the card. So I go to Subscription, I subscribe to the card. It looks very similar to the one we had. I took the sales order template and modified it a little bit. And you see here we have the data from the ABAP system shown. And let's have a look on the simple things we needed to do here. So if I open the metadata JSON for the ABAP card, you can see, it's the TechEdMobileCard, and all we needed to do is call the service, identify it by display, and say, hey, the function call is created by KREMS, and top=null, skip=null. And we changed a little bit the rendering pieces. So we exchanged the sales order number to purchase order number, and changed it to created by and the result you see here is then the data from the ABAP system showing in the right place, that's right. And this is how fast you can mobilize data not just out of standard area service, you can also via the Mobile Transaction Bridge, tap into ABAP system and present that data on a mobile device. SAP Mobile Cards enable you to quickly mobilize your enterprise data without compromising on security. And with our tools, you can leverage your HTML skills to build mobile solutions really fast. And since it's built on Mobile Services, it's maintainable and scalable. And through the native client, you can build context-aware solution, use to push API to enable your solution to accelerate your business processes, and on one side, JavaScript gives you, the developers, the capability to build complex cards with logic to highlight KPIs and render charts. And on the other side, the no-code tooling we offer allows you to develop and produce the solutions really quick. All cards are automatically offline enabled with background sync showing the latest and greatest status of your data. SAP Mobile Cards is available for Android and iOS with a deep integration into the platforms, enabling native features like maps, geofencing, notification, email, and more. The third tool we're going to be looking at today is SAP Mobile Development Kit, which enables developers to build mobile cross-platform solution. So let's do the third demo. Let's have a look how the Mobile Development Kit works. And here again, we'll start in developer role. We're opening up the SAP Business Application Studio. And in order to get started here, we select Project From Template, and we select our template, MDK Project, click on Next. It's now offering us various templates. The List Detail is the one I want to go with today we use the TechEdMDK as a name. We're connecting to our landscape this is all correct. And then we have to give this kit a name. This is also TechEdMDK. The select an application, which I have already configured to point at the sample service. And this is obviously the TechEdMDK destination. This is using the sample service. And next step, we're basically selecting, what data sets do we want to have? Let's go with the first three for simplicity in the demo. Then we click Finish, and it has created an MDK project for us let me close this. And here we have the project. We open the application and there is a QR code we can use, but let's first deploy this, obviously. And in order to deploy it, we go MDK Deploy. It's deploying the application now to the Mobile Services account. This was successful. Let's scan a QR code so we can connect our mobile device to this. Let's bring the mobile device to the front as well here we are. Scan the QR code, we're connecting. It's asking us to update. Yes, obviously this is version 1 of the application. And here we have our simple application. It's downloaded all the initial data. Let's switch here to the screen, and if we look at the pages, this is also what we will find in the editor, the page we just saw on the mobile device listing the three things. But let's go ahead and change this a little bit up and deploy a new version. In order to do this, we drag a toolbar item down here, add the toolbar bar item. We name this Products. And the toolbar item gets an action to it. Let's say if it's pressed, we want to navigate to the products to the list of the products. I'll double-click this and say OK. And obviously, we want to remove this item. And these are all the UI changes we want to do we really now for right now. And we save the changes saved and we go back to Application, deploy a new version, and look at the mobile device. It was successfully deployed. So we close the application, and the user next time opens the application, the application will connect and say, hey, you know there is an update? Confirm. I go and see, and then we have the UI changes. And if I click on Products, I can see a list of products. The images are loading still, but same for customers. I can also see customers. And this is all of the information directly from our sample service. And this is MDK right gives you capability to mobilize data really fast to build cross-platform applications for Android and iOS. And you can do everything right out of Business Applications Studio. SAP Mobile Development Kit allows you to build cross-platform solution fast and efficient, and customize existing apps. The solutions are fully flexible without compromising on security. Everything is deployed through Mobile Services. We offer low-code solution building, and the key mobile feature anytime anywhere is supported through push in offline. The native clients allow extensions in case you want to customize the user experience. Everything runs on Android and iOS out of the box, and with the latest release, you can even deploy your solution to the web with the web client. Last but not least, we're going to be talking about the native SDKs for Android and iOS. Let me show you how you can accelerate the development for our tool. So we want to start work on a net new application. We create one from an existing destination, which means that I can go to my Cloud Platform accounts. After it has downloaded the destinations, I can pick a destination. You can see the MDK application from earlier, but we want to use the native application, right? So I give this kit a name. And obviously, today, everything is TechEd2020, click on Next. I choose the sample service as our destination as our back end. These are the features we want to have. We just get a sample, a master detail generation here. And now it goes often generates a project. So here it is. Xcode open up right and before we go and compile this, let's have a quick look what was generated for us. The developer with a few clicks gets the complete sync layer, the mobile model completely generated. That means I have access to all of the entities and they sync out of the box. And I can choose offline this is already online enabled. And what does that mean? That means, for example, that let's have a look how queries how easy I can access data and I get that data to the device. So if I go and open this here, for example, this shows you how a query is built, right? I can say just as simple as, hey, data query for the suppliers right DataQuery, selectAll, top20, and then we fetch we fire this query against the suppliers, and this is I will get the top 20 suppliers, right? Let's run this, and then obviously we'll see the results. I click on Start, and we get to the login screen. I'm going to type my password and my login here and my password hold on. This is the password. Off we go. And we go through the Terms and Conditions screen, and what we get allow notifications is the sample you want. And this move in a few clicks, data from our sample service. Offline right you see the speed in which things are there, the data is offline. And I can work with it. And the UI obviously is you tose this in the projects, but you have to complete sync layer generator for you. And yeah, this is the power of the SAP Cloud SDKs for iOS, and the same is also then obviously inside Android Studio for Android available for you. So to summarize, the benefits for the native developer with the iOS SDK and the Android SDK for the Android you can build native apps really fast and efficient. The native apps have all of the performance as they run on the bare metal. And we accelerate the development, so developer can focus on building the really nice UX and integrate all the native device features. We offer a Swift-based SDK for iOS, and for Android, we offer a Kotlin-based SDK. Developers do not have to reinvent the wheel, as we offer a lot of SAP Fiori UI enterprise controls. And developers can test drive these controls with the SAP Mentor App. To summarize, the SAP Mobile Services enable enterprises to securely operate their mobile solution and accelerate the development through tools like SAP Mobile Transaction Bridge, SAP Mobile Cards, SAP Mobile Development Kit, and the SAP Cloud Platform Native SDKs for Android and iOS. So and now over to Thorsten. Thank you very much, Sami. There were quite some detailed insights-- right-- and outstanding demos, so thanks so much for that. And let me walk you through the mobile UX strategy. So on the one hand side, I would like to start with some principles that we have in mind, and of course always consuming in SAP and adopting, especially when we focus on the last vital mile of mobile experience. So the first one, obviously, is since user experience is holistic-- right-- it has to work well on the various device types mobile users might choose to do their job. But also it needs to provide kind of a single point of entry on a mobile device to help a mobile user to not get lost, basically, in all of the business transactions, the business data, and insights that are required to do the job on a mobile device. In addition, of course, it should provide a experience that brings data to the home screen, so to say, of the mobile device, when you unlock the device and have a first look to it without forcing a user to first tap to a business application and then get insights. Similar, you would expect and do have configured your device to get stocks or weather data live on the home screen of your device. Second, mobile masters multiexperience. With that, we mean obviously everybody with us experience that already from a private life perspective. So with native applications, browsers, text, App Clips, widgets, voice-- so all of that is routed and controlled and configure and personalized with a mobile device. So that really puts the mobile device into the center. And third, that actually goes back to the roots of SAP, which is the Intelligent Enterprise with business processes and business process excellence. So with that, of course, we can greatly combine this with the increased capabilities of the mobile devices. So on the one hand side, we have the computing power that allows to locally execute AI and machine learning business rules on the devices. And that, of course, gives the user in the moment they are, in the context and work, right at the edge, the corresponding push to really get new user experience on mobile live. Now how do we adopt those principles? And of course, it's all about persona-centric, right? So a mobile persona-- when we define that, it really needs to have a clear focus. And a mobile persona always has an industry focus. That means a persona works in a selected industry. That means a persona has various business process needs, extensions that are required, so that persona actually is in a position to execute these business processes and doing their job on mobile. Second, the work environment and the location are also key elements because the environment can maybe sometimes hinder you, influence your daily routines, but surely you need to react on that from a UX perspective. And then of course, the location itself-- location information can bring so much contextual information to the end user that it can really boost the user experience. And if you combine that with the new technologies that I just mentioned a little bit with all of the AI, machine learning, sensor technology that is all built in into the operating system of the mobile devices, you can really bring a new experience alive. And you can truly transform it. Now also new mobile devices actually reached a level of enterprise quality. So that means they qualify from a gadget perspective to be actually considered as true working tools. And that, of course, is something that they need to be blocked in, and need to nicely and seamlessly integrate into the mobile business processes that are offered on a leading device that's usually a phone or tablet. And then you have these companion devices which interact seamlessly with their leading application on such a device. And with that, of course, you have then an ecosystem of smaller devices which really transform the individual steps of your task-- the tasks that you actually doing-- and that empowers you, for instance, with, say, glasses that you can do a hands-free execution of selected tasks, but still in the context of your mobile persona work scope. But then if you have identified all of that, and a persona then only quantifies truly for being a true mobile persona if you hit a technical feasibility, the desirability for the end users, and of course, the business viability. And if all of that is given, then of course, you have truly identified a mobile persona, which has a huge benefit of getting a mobile application. Now when we take a look to the various personas, of course, and their various expectations in the different work environments, you have something like you see here on the screen. So that means on the one hand side, classic business user type of persona has full powered work environment on a web, on a desktop. So this is where they usually start from. But then of course, you can get this web experience down via responsive web to tablets and even to smartphones. But if you have identified, like what we just talked about, a true mobile persona which has to execute tasks and potentially the entire day on a mobile work environment, then of course that persona qualifies for a native experience. And that means a native mobile application. And if we then take a look to that on tablets and phones, you have both worlds coming together. And that is what I mentioned earlier, that a holistic user experience needs to provide a clear entry point and guidance, governance on how a user interacts in these two worlds on one device. And that is something, of course where we, from an SAP perspective, are looking into to provide exactly that design system. And our design system is SAP Fiori. So all of you know this from a web experience that I just mentioned, but also some of you for sure will know it from a native mobile application perspective. Like Sami introduced already the SDKs for iOS and for Android. So in that sense, the Fiori sign language has flavors for native user experience which consume and sit on top of the native mobile iOS technologies and embed them seamlessly right into the flow, how a application would be designed-- something like notifications, widgets, any kind of device OS-specific capabilities that you as a consumer of this device would already be used to using in other applications. Now with the Fiori for iOS and the Fiori for Android-- so both of those design languages, these specifications are sitting, so to say, on top of the mobile OS native design languages. On the other side is the Human Interface Guideline. On Android, it's a material design of Android. Very important is that we adopt those behaviors, but we enhance them to cover the business application needs, which are usually not covered in a consumer-like user experience. And with that combination, of course, now every user has the ease of consumption of those business applications in the same way of that persona would then consume any other mobile application natively on a mobile device Sami already did a great job by introducing those SDKs, and so it's very easy, then, for you to adopt those design languages, as the SDK is implementing those specifications for the iOS and for the Android. And on top of course, you have the overarching Mobile Development Kit. So that means on the application side of the house-- so that's my home in SAP, Mobile Applications, we're using exactly those SDKs and MDKs to build our SAP Standard Mobile Application offerings. And that is something the same tools that you are using to build your custom-built applications, or you as a partner would build your partner applications, or you take our SAP applications and enhance them in the corresponding harmonized way on the Cloud Platform. So now I would like to walk you into some of those mobile applications that we used recently have launched to outline also how we actually consume the underlying technology stack that you have seen previously in that session. So two type of personas, maybe, to make the introduction a little bit easy. On the one hand side, where we have to classic-- we'll call them mobile workers, right? Those personas which are away from the desk. They don't even have a work desk, right? That's the classical field workforce that everybody's aware of when talking from a traditional perspective about mobile personas and applications for them. But on the other side, we also have these personas, call them business users, information workers, knowledge workers, however you want to name them, which in previous days have started with a desktop-only work environment. But those personas move more and more away from the desk because they need to move around on the canvas, off the canvas, by traveling, customer visits and so on. But they need to continue to be tightly integrated and have that core information available, the mission critical information available of their core job. And that is why we then have chosen such selected mobile native applications as well as a combination, so to say, to allow them to transition truly away from the desk. So the first one is exactly such an application. So that's the SAP Customer Guide. That one is built for finance directors, CFO type of personas, in a finance LOB. That persona, again, is equipped with a full-blown ABAP experience that you have on the desktop with any kind of business transaction provider. But still such a persona is moving in from the desk, right? So they're moving around on the canvas, be it just in meetings, be it away from the traditional office space, being at home, being on a business trip, or meeting the customers, actually. And therefore, the application focuses on the mission critical data and business processes to allow that persona to continue and do the job by being away from the desk. This is what you see here with all of the KPIs eyes, the customer information, and of course with non-SAP data, because all in the context of a customer, a user like a finance director, CFO, is very much interested in additional information that is completing, so to say, the context of a customer discussion or meeting. So that application that you see here with the here screen is using SAP Fiori for iOS, and implemented with the Cloud Platform SDK for iOS. Now for the next application, that's an application for project managers and project team members. So that application is then used once you have defined and released, and so to say, put alive project out of the Professional Services S/4HANA application when everything is defined and you put a project in live. So usually a project manager in professional services is responsible for multiple projects. And same is mostly true also for the project members. So that means they are assigned to various projects, and therefore, of course, need to overlook the individual tasks that they are assigned to. That is exactly what that application is doing. So it allows a project manager to keep track overall on the progress of each individual project that he or she is responsible for, plus of course allowed to get in touch with the team members that are assigned and therefore being visible to him-- to the individual projects-- request action items for them to execute on, get an overview, or for you to get a reporting for upper management. And the same functionality obviously is given for the project team members. So they can ask questions, they can request support to really keep their actions on track and execute the projects in the right way. So also this application is using the SAP Fiori for iOS design language, and of course using the Cloud Platform SDK for iOS with deep integration, in the push notifications, calendar type of things, that is already existing on the mobile operating system. Now a completely different type of an application-- so that's an application for maintenance, field service technicians, that are supposed to maintain very complex assets in certain industries. So at the end, that's an application which is used in at least 15-plus different industries. And of course, remember in the beginning when we talked about a persona-centric design, the persona when working those industries has different requirements, or enhanced requirements per industry, be it for industries like utilities, oil and gas by working on an oil platform, facility management. So you see there is different flavors that the application needs to react on, needs to be flexible about. And that is what is application does very greatly, because it provides an open architecture by implementing and using the Mobile Development Kit of the SAP Cloud Platform. And that is of course sitting on top of the native domestic case. And that means that the iOS design language, Fiori for iOS is automatically consumed by the MDK, and therefore the application benefits from that without coding much. So the application then really gives with the Mobile Development Kit the opportunity, A, for you as a customer to personalize, to configure, to enhance, but also for the partners to enhance by simply building extensions that can be seamlessly blocked into the MDK, and therefore simply activated. And the application reacts for it, and therefore additional functionality is embedded seamlessly. And that is required to be really successful and achieve a broader adoption. And that is why that application is built by using the Mobile Development Kit. Now an outlook to a last application I want to mention. So that's not an application in the context of that persona starting to move away from the desk. So it's about shop floor managers. So shop floor managers of course are fully equipped with all of the business transactions from a web experience in the launch pad, to have to full overview of all of their business insights and capabilities required to do their job. But that persona is tasked to actually stay away from the desk, right? To be at a shop floor, be right next to the production lines, make sure that the workers are assigned to the various stations are there, they're doing fine, the machines are working well. So that means they're actually walking around most of the time on the shop floor, away from the desk. And then to be still able to do the core of their job, we have that application. But also the application then would allow to do more. While you're actually in front of a machine, while you're actually in exchange with your workers, you can easily react on the latest information that you receive while being there on the shop floor. And that application, also, as you can imagine, that many manufacturing sites have different needs, uses the Mobile Development Kit to provide highly flexible configuration, unique sensibility. And that is something that is really important so that we don't talk about just call it prepackaged mobile applications, but really bring them to a level where you as a customer and as a partner can implement, configure, and extend those. So with that, I wanted to give you a glimpse or a quick introduction on the mobile UX strategy, and how that is actually all empowered by the SAP Cloud Platform, including with all of the great tools we have there. You will find more information in the TechEd agenda, the ones that are listed up here. And we really ask you to take care of that opportunity. And then of course please take a look into the other offerings that we have from SAP to broaden your expertise, and that's always up to date. So therefore, we are looking forward to welcome you in such of these sessions. So therefore, let me wrap up, and thank you very much for joining our joint session here today, and enjoy TechEd. Thank you. [MUSIC PLAYING] 