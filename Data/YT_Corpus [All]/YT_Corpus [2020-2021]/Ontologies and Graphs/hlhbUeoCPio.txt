 my name is Keith Hare the among other things I'm the convener of something s-see 32 wg3 what i want to cover in this talk is a brief history of the SQL standard talk a little bit about what's in the SQL 2016 version that was published almost two years ago talk a little bit about something called the technical reports which is actually a really useful resource and then talk about what's next and what's next are things like multi-dimensional arrays streaming SQL and strangely enough there's interest in property graphs in the standard so Who am I my day job is I've been a consultant and high performance database systems for quite a few years and we specialize a lot in replicating data between database systems for fun I've gotten involved in standards I kind of have a weird sense of fun and I've ended up being the convener that is the chair of iso/iec JTC 1/sc 32 wg3 which is responsible for database languages and you're looking at that and saying huh I'll translate in a moment and I'm also the vice chair of the u.s. standards committee and I've been involved in some of the Big Data stuff actually I'm the vice chair of the US big data Technical Committee I started off as the chair and then I got a promotion to vice chair and at some point years ago I actually went to school now one of the things about the computer industry is the technology we're using today didn't exist when I was in school and so all of this we have to continue to learn and to learn new things abstract this is the the words that got you guys to show up here so what is SQL well it's a language you all heard of SQL probably many of you have used says SQL maybe some of you have even written SQL databases what does it stand for in the standard itself there is no definition my friend Jim Melton claims that SQL stands for SQL query language the important thing is that SQL queries are independent of how the data is actually stored you specify the data you want not how to get it so it's a declarative query language so who develops the SQL standards well there's an International Committee and the offices are officers on the convener which is a fancy word for chair but at a working group level they have convenors not chairs the editor is a guy by the name of Jim Melton who currently works for a company called Oracle and previously lives he worked for a company called Sybase and before that he worked for a company called Digital Equipment Corporation we have active participants from a number of countries around the world and each of those countries have their own committees that feed stuff into the international arena so the best way to describe this is a graph so there are two organizations ISO and IEC and they have overlapping work and they created something called joint Technical Committee one and it worked out so well that as far as I know there's never been a joint Technical Committee - with under JTC one there are a bunch of sub committees the data management and interchange is subcommittee 32 and under subcommittee 32 is working group 3 which is responsible for writing standards about database languages traditionally we've looked at that as being SQL brief history I'm going to spend the next three hours going through the feature every release of the SQL standard right but the thing to do is to look at this list and say okay this isn't static the SQL standard has changed since 1987 or 1992 whatever version of what you last looked at we've added a lot of things in in various releases over the years the most recent of which was SQL 2016 with with any project yeah you've done a lot of stuff and the question always is but what are we doing now to meet the emergency market needs SQL 2016 really had four major things row pattern recognition the idea of being able to do regular expressions across sequences of rows if I prepared I could do about an hour on that topic support for JavaScript object notation JSON objects to be able to store query and retrieve JSON objects and that's another good our talk polymorphic table functions the idea of a polymorphic table function is you can build a function where you don't know the the shape of the return table or the input parameters until runtime that's good for about two hours and and and then we did some additional stuff and the trigonometric and the logarithmic functions what we ended up doing is we ended up adding a bunch of things to the standard that every implementation was already doing so we needed it for some other things and that was just sort of a again me everybody's doing it we might as well put it in the standard here's the cheat sheet of all the parts there's a total of about 4,000 pages in these documents and it's exciting reading yeah maybe not so much it's really interesting once you get into it Sanders are interesting in a really boring way we've also done some technical reports what happens is the way we work is people write change proposals with justification for the change and then the details of the change well the details of the change end up in the standard the justifications don't and so over the years we've started taking the justification the descriptions the non-normative stuff and putting it into technical reports and there's a couple of good things about this one is that the technical reports are a lot more approachable a lot more readable because basically they include examples then the actual standard itself we're up to seven are published and we have a new one that is in the works that hopefully will be it's actually hung up in the the ISO hierarchy but hopefully by the end of this year it'll be published so we've got reports on things like the row pattern recognition and Jason and what we've started doing is when we add significant new features to the standard we also write technical reports to explain it best part about technical reports is that if you go to the correct location the JTC one site here and you search for nine one nine oh seven five which is the the part number we're using for reports they're free you do have to say that you're not going to pass them around to all sorts of people but you can download them for free and that gives you some some really interesting resources about what's going on in the standard okay so that's what we've done what's next well we've been working on something called multi-dimensional arrays I'll give you a high-level view of that we've been working on streaming SQL and working on property graphs the idea of multiple dimensional arrays the SQL standard prior to this part supports single dimensional arrays but the idea of a multi-dimensional Rajon create an N dimensional array where it has a single data type and the only restriction really is that the data type has to be essentially a fixed length so we don't currently support multi-dimensional arrays that are very care that our binary large objects but for numerix or fixed length characters we can pass them in and pass them out and whatever and there's a couple of operators MD are a type and MD are a operators and basically the work on this is all done except for the last final draft international standard ballot and that should have started by now but we're having a discussion with ISO and Geneva about some of the formatting stuff that they they want that doesn't really fit the way we've been doing standards so maybe they by the end of this year that'll be complete so why don't we want to support multi-dimensional arrays because then you can do things like do operations on images or seismic data or oceanographic data and basically do the operation in the database on the server as opposed to having pull the entire thing back and operate it locally so you can push the operations to where the data is get back only the data that you're interested which should reduce the network load also it gives transaction support I mean it used to be that storage space was a limitation storage is cheap enough that it's less and less of limitation memory is cheap enough that that's less and less of limitation and so if we could push these onto servers add the transaction support out all the database management capability then there should be some real wins streaming data talk about Internet of Things and the at various points time series data video audio the idea is that we want to be able to do continuous processing on a stream of data right now if you do a SQL select it selects stuff from query and you get a set of data back but what if instead of getting just back a set of Records you do a select stream from some input and you can process records in the stream and it goes on forever and then maybe you can bundle that with some of the other capabilities and process the data and maybe output the data to other things and if you had this capability it might look you might be able to map data that's coming in from something like Kafka or publish data to something and you could take advantage of all of the capabilities that exist in SQL now including queries compound statement stored procedures row pattern recognition JSON XML polymorphic table functions model arrays so the idea is to be able to use all of the capabilities that are now in SQL on data that is coming through continuously and we're working on that and potentially 2019 2020 2019 is highly optimistic but what about graphs well there's the existing graph language efforts there's w3c has a specification for a query language called sparkle and web ontology language called al for a sort of simplistic graph something called RDF resource description framework there's some work in the property graph queries from something called the linked data benchmark council query language task force say that fast 10 times there's the open cypher project and there are a number of vendors that are working on on property graphs in particular LD bc has some benchmarks and has been looking at requirements for a property graph language the open cypher project has is working on has been working on a declarative query language and has done some work and and neo4j has been sort of involved in open cypher but how does this all fit within SQL well where our current discussions are is adding a new part of the 9:07 5 that sort of standards defines ways for the SQL language to process property graphs and interact with them we're currently looking at read-only access to property graphs a concept called a graph table function or essentially you have a graph table function and the graph part of the query is within that graph table function it returns a table there's some work on that's been done on specifying how graph pattern recognition and a few other things that are in in process and maybe eventually it may make sense to actually within SQL to be able to do graph construction and graph update that's that's still under discussion still to be decided example graph table that I swiped from a recently posted paper that we will consider at our next wg3 meeting at the beginning of October this is coming out of the u.s. from a guy by the name of Fred Zemke who works for a company called Oracle but I know the neo4j have been in on discussions of all of this so why integrate property graphs with SQL well turns out that users are using both SQL databases and property graph databases an application development in theory should be easier better and quicker faster if there's only one interface and may be that there are some types of queries that are better done as a property graph query than as an SQL query there's some types of queries that are better done this an SQL query and so we think there's a benefit in merging the capabilities into [Music] into SQL so one will be real we should have a working draft by the end of this year a pretty good working draft of property graph queries what we're calling it is SQL such pgq and it's going to be part 16 if we do that there's a good shot that we can actually have an official stent standard by 20 20 there's a whole set of things that we've been referring to as SQL 20 20 and and this is part of it now along with the work in the standards group the database vendors are not standing still database vendors are adding graph support property graph declarative language support to their products now so that if you look at that the graph table example is sort of limited we can query graphs within an SQL table but what about a full-blown graph query language standard how would this fit into everything well what could we do could we build a declarative query language standard for a property graph query language and how would that different how would that work how would that be different how could that work together with what we're doing on on the SQL pgq stuff right now well earlier I showed you a list of the parts the SQL framework part has some base stuff that's used by all the other parts SQL Foundation has most of what you think of as SQL including things like data types specification for transactions there's a part called SQL schemata which is the schema information tables and so the thinking at the moment is that they'll be probably a part that is sort of the framework for gql the groundwork that is common information that that's common both to the pgq part SQL pgq part and to the gql proper and the gql groundwork can reference and include the parts of SQL foundation for example data types operations on those data types etc all the things that are not specifically a tional that a graph query language can take advantage of so rather than building a whole brand new standard that defines operations on integers we already have all that definition in SQL foundation we can take advantage of it in a gql standard so what might fit into this in gql proper the graph capabilities that are not needed by the pgq in the groundwork or framework whatever we managed to call it the capabilities that are common to both full gql standard and to the SQL pgq part of the standard so we can take advantage of things that are there in framework mostly the convention can conventions and possibly the conformance model the scalar datatypes operations functions the transaction model one of the questions that we need to look at is right now the SQL standard deals in terms of what's called an acid transaction model and some of the know SQL databases there's a concept called a base transaction and we need to look and see is there anything there that makes sense to add does the the transaction model fit with everything you're gonna do in a graph database or do we need additional capabilities security model may be the model for describing the client in this the session some of this is needed for SQL P gql and so what we probably will end up doing is adding it to be feed SQL pgq 2020 and then splitting it out later into the separate groundwork document but very few people are gonna care about the details of that then there's going to be the things that our graph only things like vertices and edges and path operations and so on and maybe a graphical analog of the schema information tables what's that going to look like I don't know yet that's gonna be interesting so when will this Ari be real a lot of the discussions on this are going on in something that's called the property graph ad hoc which is a subgroup of the u.s. committee DM 32.2 and it's chaired by a guy by the name of Yong Yong Michels who works for a company called Oracle it has participation from vendors from consultants occasionally we get people from the LD BC graph QL task force participating in the meetings and the work is beginning to bubble up out of that through DM 32 to SC 30 to WG 3 there'll be a quiz later on all these relationships and I expect at least Stephan to pass it Stefan but we're gonna do the SQL pql first I'm gonna get that done so the real thing is it depends on how much time the participants have to put into this because building a standard actually takes a lot of time it's a fair amount of detail a fair amount of picky low-level detail and it takes it takes time and takes input from participants but I'm really psyched about this because it looks like we're gonna have that input from participants so a possible timeline might be that we get for the gql we have an initial outline of a working draft there's a potential wg3 w3c workshop on graph data and I'll talk a little more about that later and so on and so on I owned this type blind time line and it's fair to say that this time line is highly speculative speculative and very optimistic and it depends a lot of war on a lot of work that hasn't been done yet and it's work that I'm not going to do other people are gonna have to do so I can speculate about the time line I can't make it happen without a lot of people doing a lot of work I mentioned a w3c workshop well there's a idea that there might be a w3c workshop on web standardization for graph data with the subtitle of creating bridges RDF property graphs and SQL so we're actually talking to various players in various forms the idea of this workshop is to get input from people that are in the w3c input from people that are in the open-source community input from people that are in the ISO standards community and it might happen to begin the last week of February in Berlin Germany now this workshop isn't planning there are a few details that haven't been finalized including w3c approval for the workshop the actual venue and the actual date so I think it's gonna be a really interesting workshop I think it's gonna happen but you may not want to book your plane tickets just yet that should happen then the next all those things should fall into the place in the next month or so ok so we got all this going on SQL standards have a fairly long history in the standards world we have a long history of incorporating data incorporating technology incorporating new things into the SQL standard so just in the last edition we added row pattern recognition jason polymorphic table functions analytics we've completed except for the final approval the support for multi-dimensional arrays we're looking at streaming streaming SQL and actually streaming SQL is kind of interesting because there have been some mentioned this week of doing property graph work against streaming data and so if we can complete the work on streaming SQL then a later edition of the property graph work can incorporate its streaming property graphs and take advantage of the capabilities that we the specifications and we do for streaming SQL and we're looking at a brand new database standard database language a graph query language any questions yes okay so quite the question is when you're doing these these graph queries well the first against against existing tables the first piece that's being added to the specification is a function called graph table and what that does is it takes a property graph query and returns data that looks like a table now somewhere in the works and I've lost track of where this is lose the idea of being able to create a view on top of existing relational tables that makes some make them look like property graphs and I don't remember where that sits whether I know we've talked about it I don't know that anybody has actually written anything to actually do that but ultimately it'd be nice to be able to do graph queries that returned it as a table views against underlying tables that return data as graphs that could then be queried and return data as a table when we get into the full graph query language it'd be nice to be able to have the full graph query language operate against essentially views against the underlying table I mean part of the reason for doing all of this is that there is a lot of data that only exists now in in in SQL style data there's a lot of capabilities that can be implemented with graph queries and so we want to be able to be everything to everybody but there's still still be a little bit of work to be done on that go ahead Jim Steiner so right I'm I'm a standards guy I don't implement SQL this is this here Alistair I'll hand you a mic that could be dangerous the I think the idea that's been discussed is that it would be possible to define a you know the the schema effectively of a graph and it have no relationship to underlying tables or to be able to map such a schemer to underlying tables that either way you'd be able to run graph queries over there over the graph definition so there would be freedom for implementers to decide is this a native graph database is it yeah you know on top of an existing SQL database and the standard would just give you the tools that the sort of interface level yeah so yeah this I'm all looking I'm looking at everything from the standpoint of the the the official standard that will be adopted as an iso/iec JTC one standard and then it's a matter of vendors actually implementing what's in the standard or something close to it and a lot of the specifications are being contributed by the vendors so there's a good chance that when we get done what's in the standard will be really close to what the vendors are doing yep any other questions all right thank you [Applause] 