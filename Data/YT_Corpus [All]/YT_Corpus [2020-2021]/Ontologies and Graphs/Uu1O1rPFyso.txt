 Let me let me start. I called it Semantics for DAMA International, the Global Data Management Community, and those of you who looked at FIB-DM, at the website, there is a YouTube Channel. There is a whole series of "Semantic for ..." videos and presentations. It started all with Semantics for Data Architects almost a year ago, and that kind of caught on, that catchphrase. Then came Semantics for Business/Finance users, for Managers, then the whole bank semantics series, Semantics for mid-size, large, and extra-large banks. That's why here we have it  "Semantics for DAMA International." Okay, how did we come to meet today? The FIBO, the Financial Industry Business Ontology, is the most extensive domain ontology schema. What I mean by that is: Certainly, there are other very large ontologies. You all know the Gene Ontology - it has millions of triples. However, that is data. If you look at industry or domain ontologies, and you just look at it by their schemas, the number of classes, FIBO is by far the most extensive one available for any industry or domain. Now, FIB-DM, the Financial Industry Business Data Model, is a complete model transformation of the industry-standard into a conceptual data model. As of today, I think now 850 users downloaded the FIBO data model. Many of you will remember in June, you hosted a meeting about managing huge data models in PowerDesigner. George McGeachie, he chose FIB-DM as an example for a large PowerDesigner model. After the meeting, participants wanted to learn more about that finance model. So that's when Howard asked me if I would like to present about it. This presentation - I think Howard already shared the download link there also one on the FIB-DM website.  There you can find the deck, and after the meeting also the video recording. You as the audience, as far as I understand, you work at a Financial Institution, and your FI already embraces model-driven development, reference models, and industry standards. As a Data Architect, you have experience in these, and you want to get started on the new industry standard. As an ontologist with FIBO experience, semantic technologies are still emerging at your bank, you want to promote FIBO concepts across your organization. Finally, for Finance folks, the business side, and management, you want to improve information management with a strategic path to semantic excellence. About myself, I worked in Finance as a Data Architect for  20 years at Global Financial Institutions and consulting service providers. In particular, for seven years, I was an IBM Software Group consultant for the Banking Data Warehouse Model, and in that capacity, I went to 45 banks in North America, Europe, and Asia to teach about the IBM model, to advice on customization and implementation. Alas, they never sent me to Africa or South America, and never to Australia, but everywhere else. After that, in New York, I was for four years, also BFMDW related, at CITI and Deutsche Bank. At Deutsche Bank, actually, somebody pointed me to the FIBO. That's now seven years ago, and that's when I became a fan and expert, and since then, even today, I'm still a contributor, reviewer for new FIBO releases, and a speaker at FIBO conferences. My company um is 20 years old and holds the FIB-DM copyrights and is the designated assignee of the Configurable Ontology to Data Model Transformation patent. This is the challenge: There is the proposition that there is a Chasm between Semantic and Conventional Data Management. The big Global Financial Institutions already implemented the FIBO. However, many mid-size and large banks face high barriers in tooling and needed human expertise. That is because the industry model is specified in Ontology Web Language. Ii fully support the decision that the Enterprise Data Management Council took It's the best way to specify a Business Model, it's the best way to specify a Conceptual Model. However, OWL is quite a complex language. It's a lot more complex than E/R modeling, and it needs highly specialized ontologists. When you want to instantiate, it runs on specialized databases the so-called RDF-Stores or Triple Stores. IT departments must still support and design relational databases. So, there's a chasm between the big Multinational Banks and smaller domestic organizations, and also a chasm within a Financial Institution between the ontology or semantic technology center of excellence and the rest of the bank. FIB-DM is the bridge across that chasm. It's meant to unite ontologists and data architects. The industry-standard is available in your data modeling tool. The vision is to have Semantic Enterprise Information Architecture, SEIA. When we look at architecture, we can look at it by the Use, the Type, and the Level that it applies.  We all have done that for 20 years now on the data side: We have Conceptual, Logical Data Models, we transform them into Physical Models, and deploy on relational database management systems. Now we also have ontologies expressed in RDF/OWL. They deploy on RDF databases. FIB-DM is an ontology-derived model derived from the ontology. Also, the sibling FIB-UM, that was originally developed because some data modeling tools cannot import native PowerDesigner files. The UML version of the model um you would use it to generate a class model, you can generate Java/C++ code out of it. The latest entrant is FIB-CM, the Concept Maps. that is actually. Yeah? PARTICIPANT: no, I was just impressed.  Okay, FIB-CM, the Concept Maps, that is a simplified model. It's simpler than the data model or the ontology. It is meant for our interactions with the Business Users because in mine and probably your experience, a data model is becoming far too complicated, too abstract for them. Likewise even more so, an Ontology Graph. So this is the vision. Note that we have the same names, the same design patterns, and the same definitions for data, message, process, and object across the enterprise. Now, how can we get to that vision? What is the path to it, especially for domestic smaller financial institutions that do not have the resources of the big global banks?  Starting this year you can adopt the industry-standard, adopt the FIBO Data Model, and then as you roll out the data models throughout your organization, in parallel you train data architects in Ontology Web Language, you proceed to customize the FIBO, make your Enterprise Ontology. You reach your goal of Semantic Enterprise Information Architecture. The years are just indicative. Some [FIs] may traverse faster some may take a bit more time. The benefit of the path is that you have an immediate return on investment because you're using the FIBO content and design patterns from day one - not in two years from now when you finally have customized and implemented the FIBO. Also, I believe you find it easier to learn a new language, RDF/OWL, because you already know the vocabulary. If you're familiar with the Data Model, the 15 Concepts, and so on, you see the same patterns that you already know from the data model. You see it then as a Graph. It is easier to to learn OWL as opposed to both new language and content. Yeah, and if you become a reference implementation, I can teach and advise you on along that path. The FIBO is the authoritative model of Financial Industry concepts, the definitions, and relations. About the Enterprise Data Management Council: Both the EDMC and DAMA promote data management best practices. Now, DAMA, you are the world's largest association of professionals, and you are not sector-specific. Opposed to that the EDMC is a Global Association of over 200 Financial Institutions, and they describe the FIBO as "a Business Conceptual Model developed by our members." That's what I mean by "authoritative." It's the consensus of large banks and investment managers - that's why it is authoritative, more authoritative than any vendor model. The origins: How did I come to develop FIB-DM, and CODT, the transformation ontology. One and a half years ago, a New York Bank, they needed a schema for a new Security Master System. Of course, as a FIBO advocate, I tried to leverage the industry-standard. However, the challenge was that the data architects are not familiar with RDF/OWL, they don't have experience in the ontology editors like Protégé or TopBraid So, at that time, it was for me the ontologist to write SPARQL queries, extract metadata into MS-Excel, so that the architects could review the content. Another project was with a Connecticut Alternative Investment Manager. They had the Hedge Fund Ontology and some applications to process regulatory forms. They just wanted to have that ontology data also on an RDBMS. I then had the challenge of converting my operational ontology of some 200 FIBO and hedge fund classes into a data model, so I could create a database schema from it. There the workaround was manual transcription of graphs into ERWin, basically looking at the ontology and typing it into ERWin. Existing tooling chokes on very large ontologies and it does not derive a useful data model. Some modeling tools like IBM IDA and Sparx EA, they have a rudimentary import for RDF files. However, what comes out of it is not useful as a data model, and they crash um if they're confronted with a gigantic ontology like the FIBO.  That leaves ontologists and data architects to copy and paste manually. That's when I developed a better transformation and the FIBO Data Model. About the Premium/Freemium funding model: We all know that not like we know it from the android or apple store. - French language: Parlez-vous français? If we want to learn French, we can get 10 free lessons and then we can buy more lessons in the Premium version. Together, free content plus Premium - it's called a Freemium marketing/pricing strategy. That's what I do for FIB-DM. We have seen the open-source four modules, 1029 entities. The upgrade, adds eight more modules, 3500 entities, and that together makes up the Full, right now it's the 2020/Q2 release with 4500 entities. The ontology-derived data model, I think that was a question that Howard also had. Let's look at it at the left-hand side:: I have a simple ontology graph. We have a bank, which is a Depository Institution, and it provides a Bank Account, and a Bank Account is identified by exactly one Bank Account Identifier, the account number. At the right-hand side, is what you, as a data modeler, would design if you create a logical or conceptual data model. You would have entities for the Depository Institution; you would have subtypes; you would have associative entities, and so on. How does CODT work, how does it derive? Classes transform into entities, and the subclass in the ontology becomes a data model subtype. Object properties transform to associative entities. Just one word, this is critical, different, and new: A common wisdom in numerous academic papers and in commercially available transformation is object properties transform into relationships - this is wrong! There is an article I wrote about it, pointing out where this failed approach loses metadata. So, object properties become associative entities in the model, and class restrictions, domain/range determine relationships and cardinalities. When I did this transformation first, I found that the generated E/R diagram is the best representation of the business rules. It is what I, as a data modeler, would design. There are no missing entities and no unnecessary entities and relationships in the design. Okay and for this here, I want to just switch over to PowerDesigner. We have 4,500 entities, over 5000 relationships, 300 model packages (in ERWin you call it Subject Areas. This is the world's largest data model. Okay, and here we are in PowerDesigner. I have a couple of models: This is the Core, the open-source version. There is a Normative and Informative data model. A Normative basically derived from FIBO Production the Informative derived from FIBO Development. I open the Normative model. This also was a question. I want to explain the package structure of the FIBO Data Model and also the FIBO because data model packages are derived from FIBO ontologies. When we look at it here, the central module is FIBO Foundation. That is the FIBO base module that has the framework for everything else. FIBO in-turn imports three Upper Ontologies. There's a Simple Knowledge Organization System, SKOS, and Specification Metadata. This is mainly used for Annotation Properties, for documentation in other words. It imports from the Object Modeling Group, languages, countries & currencies. These are the ISO currency and country codes. This is all within a Core, all in the open-source model version. Then there's FIBO Business Entities, that adds on more types of legal entities and more roles that an entity can play. We have Finance Business & Commerce, that adds on contracts, and business relationships, and so on. So, this constitutes the FIBO Core and then the Full Version, the Normative content derived from FIBO Production that is Securities, Derivatives, and Indicators. The Informative version is FIBO Development. When I say Development it is of very high quality and it has been vetted and reviewed and everything -  it's just not it doesn't have the final sign-off yet to make it Normative. The Informative model then adds on Loans & Mortgages, Collective Investment Vehicles, in other words, Funds, Market Data, Business Processes, and Corporate Actions & Events. So, that is the structure of the FIBO. When you when you learn the data model, it is one approach to it: You start out with FIBO Foundation, understand the subfolders the submodules underneath. You can dive into one. Here I look for instance at Agreements and I want to want to look at Contracts. I open the model diagram for contracts. Let me make this a bit bigger here. I'm not sure you probably cannot read the entities but one thing you can can see is, they all come with the stamp here that shows you the version. Here is the contract entities and you see because FIB-DM is a Semantic Data Model, it has deep hierarchies of subtypes. Here the Contract breaks down into Written, Verbal Contracts, Mutual and Unilateral Contracts. The blue entities are associations. A Contract has an effective date, it has an execution date, it has Contract Parties, which can be a creditor, or Debtor. That's the structure of the Semantic Model We have the Contract which is an Agreement and we have a Things in Role, Debtor, Creditor, the Contract Parties. That is a typical design pattern. You see throughout. Also, the associations have deep hierarchies. This is just a sample of it, the Contract Party can break down into "has Counterparty," "has Principal," and then with the Counterparty you may have more specialized base entities like a Policyholder in insurance, and so on. Okay, when I look at an entity (let me move up here to the contract) I'm looking here at Contract so it in the model it has the name and the code that is actually derived from the FIBO Prefix. That's the model code in the FIBO. The Local Name. Then there's a comment, some modeling tools say description or definition. That is derived from the SKOS definition. New tabs in PowerDesigner, in other tools, you may just have the Extended Attribute or User-Defined Properties in ERWin or Sparx calls it Tagged Values. These are all documentation items in the FIBO. The FIBO is very extensively documented. The documentation is bigger than anything you would see on your data models. Where it's "Adapted from," "Explanatory notes," and so on. The other very important tab is the Lineage. This is is basically the traceability from the data model to its original in the um ontology. So, I have the resource name in the ontology Localname/ Prefix, what kind of ontology object it is, Class, Datatype Property, Object Property or an Ontology. I have the URI. That is the link into the FIBO, the full traceability. Look at this: In PowerDesigner, I can click I can click on this link and and it takes me right into the FIBO, the FIBO Definition of the Contract on spec.edmcouncil.org Oops, where are we? Okay, just bear with me. Here we are. Okay, the restrictions serve two purposes: First of all, this is Ontology Metadata. These are Class Restrictions, and we preserve them in the FIBO Data Model. So that we can rationalize why does the contract why does the contract have an association a connection to "has Contract Party?" We see this is how it's expressed in the ontology and we can validate then why does the model look like this. Furthermore, OWL is more powerful than the E/R paradigm. Some of these Restrictions, they may traverse several classes (or several entities) that something we cannot specify in a Data Model. Some Restrictions may refer to sample values, to lookup values. We cannot do that in the data model. In the Lineage tab, I preserve these ontology, these FIBO definitions. Okay, I guess that it here, let me go back to the to the deck. When you download the slides, you can just see the example. Also, the fiber resolves conceptual defects. This is a quote from Robert II. Let's listen: -- French audio: Le Roi Est Mort, Vive Le Roi! The Involved Party is dead, long live the Autonomous Agent. Now, 600 years later the Involved Party is still an ultimate supertype in numerous reference models and databases. The FIBO breaks up that commingled entity into two fundamental concepts: The Autonomous Agent, that would be  a Person, Legal Entity, and the Thing in Role, that is what the Autonomous Agent does, the role it plays as a customer, as an employee, as a broker ... This is really important. You probably have an Involved Party in your Enterprise Models and this is dead wrong. These are two separate things. They would not have a common supertype and they should never be in the same table - period. The FIBO has 15 Business Concepts and they all are in the Concept Maps That's 15 concepts, with mnemonic icons and abbreviations. We have Autonomous Agent, Thing in Role, we spoke about already. We have References, Arrangements. These are like codes, schemes, and classifications. We have Locations, Products, and Services. Again, the Service is not a subtype of the Product - these are two different things. We have Agreements, and then we have Documents, and then to detail Agreements, we have Commitments. For instance, your limit on the credit card is a Commitment related to the credit card Agreement. Agreements break down into Contractual Elements. They may refer to Legal Construct. Of course, Account is a Fundamental Concept, and so is Time and Occurrence. Occurrence, elsewhere it's known as "events." These fifteen concepts are enough to visualize the design in user-friendly Concept Maps. Actually, 70% of FIB-DM entities are a subtype of the concept entities.  That's the second access into the model.  You look at the 15 Concepts and then you traverse down, you study the concept hierarchies. Here's an example of a small one, of the Location. All 15 Concepts have SVG diagrams where you can follow the subtype hierarchy. For our interaction with the users the Concept Maps ... I think this is a way a user-friendly way to express and discuss the design. Here we have a Depository Institution, which is a Stock Corporation. It "has Issued Capital," it has a Legal Entity Identifier. It has another Reference here, a Registered Address which is in some Country. There's a direct correspondence from this user-friendly Concept Map to the Data Model. In other words, as a data modeler/ data architect, you discuss the left side and confirm it with the user, and then you go back to your office or cube and you scope from FIB-DM as is a data model. Likewise, once you move on to ontologies, the same Concept Map directly corresponds to an ontology graph. You scope from the FIBO. I said that that the FIBO resolves several defects that are in vendor, and probably in your in-house models. However, you should keep it. Harvest the content. That is what Robert advises. You adhere to the 15 industry-standards, and the subtype hierarchies, you adopt the FIBO/FIB-DM names and definitions, and then you just identify direct and indirect entity matches. What here's Agreement some models call it an Arrangement. Probably all models have Security. You merge entities that are not already in FIB-DM. Okay, you just have to identify the appropriate supertype, and you merge in attributes from your vendor model. Note, the FIBO Data Model correctly defines Financial Instruments, Securities is a a subtype of a Contract - it's not a Product as in some vendor model. There are two models, actually, Informative and Normative. The open- source has Foundation, Business Entities, Language, Countries & Currencies, and Finance, Business & Commerce. The production version adds Derivatives, Indicators, Securities, and the Development version adds five more modules. As new models enter FIBO Development, they end up here, in the Informative model and some like Loan are almost ready. Once they are signed-off, they move into the Normative model. You should do the same with your FIBO extension. Let's say if you develop a module or a subject area for Credit Cards: You start it in the Informative part. When it's all vetted, you move it over to your Normative Enterprise Model. Okay, here's another way to look at it: Our goal is to leverage. We want to leverage for implementation at a department, project, application level. Our method is to derive. We first turn to the industry-standard, we derive from the Normative FIBO Production scope Enterprise Data Model. Then we consult FIBO development alongside with other standards, with in-house models, and with vendor models. FIB-DM m plus CODT, the Configurable Ontology to Data Transformation is the strategic solution. At the left-hand side, I have OWL, and there is FIBO, other industry in-house ontologies. At the right hand side, I have FIB-DM, our Enterprise model, project models. We generate data models from industry, and domain, and our proprietary ontologies. Actually, we design Conceptual Models in RDF/OWL. The endstate in Semantic Enterprise Information Architecture is that the conceptual modeling, we do it in the ontology, no longer as a data model, and then we derive the LDM or CDM from our Conceptual Ontology. We reverse-engineer our data models to extend the Enterprise and Project Ontologies. Basically, that is for FIs who adapted the FIBO ontologies. That is a way to customize it rapidly because you can reverse-engineer your data models into RDF/OWL. Okay, CODT. The U.S. Patent and Trademark Office, they acknowledged the Utility Patent Application. It's quite detailed with a lot of drawings, tables, pages, claims. The point for that is once granted, the patent protects CODT licensees, the generated models, including FIB-DM, and it enables me to share the transformation technology, to offer it for licensing. Here's a comparison of the open-source GPL 3.0 license and the Customer Commercial license.: The open- source requires you to copyleft, that is to license your derived models to the public. With the Commercial License, you can keep your extensions private. Likewise, Education Materials are subject to copyright. You're welcome to share it, distribute it, but you should not change them, including this PowerPoint. With the Commercial License, you're free to modify, translate, edit, or even lift off images, but you must keep them within your organization. Here's my appeal for DAMA and for consultants, vendors: Publish open source! That's a way to showcase your expertise. The most question I get asked is about migrating FIB-DM from PowerDesigner to other tools. To be honest, I have Sparx EA, I have PowerDesigner, but I don't know how to migrate to E/R Studio. So if you have done that, publish a migration tutorial! Share your extensions and diagrams with hundreds of users. If you're using the Sparx version and you did diagrams, then publish your Sparx model open-source. Here's a breakdown of what modeling tools FIB-DM downloaders are using: You see like 60% are on ERWin and PowerDesigner, here are the other tools. Publish your ERWin, Sparx EA, Paradigm, or E/R Studio FIBO Data Model! Under the GP License, all the Core-derived works are open source already. You don't have to ask for my permission to share them. Just make sure to retain or add the Jayzed, EDMC, and OMG copyright and license properties on all packages. For further reading, there's the FIB-DM website. For news follow the LinkedIn page. You can watch Education Videos on YouTube. Just email me, if you have questions that you didn't get to ask in our meeting, or if you want to schedule a private overview at your FI.  So, thanks a lot. - Howard: Jurgen thank you very much. Welcome. you really appreciate your the effort that you've put in and it's a lot of intense work that you've done here. Thank you, I appreciate you sharing and spending time with us. So, I would like to open it to the floor. I know we've left quite a bit of time for questions. Just to share with you guys, I did put the link to the presentation that Jurgen shared is on LinkedIn at the moment, is on on Google drive, so you can access it and download it. But if you guys wouldn't mind um working on the participant: If you could just, maybe if you want to ask a question, if you can just indicate Yes, and I'll work through it. Then we can ask. We just tried to synchronize the questions to Jurgen. Anybody got any questions? I know, I've got 12 that I've written down. But let's get the floor going first, and then I can ask mine towards the end. any questions? -Participant: If I may, the diagrams in the PowerDesigner presents very well. So my question was, did Jurgen develop a layout algorithm or was it manually laid out for, can I say, cosmetics? -Jurgen: PowerDesigner, just like ERWin, it does some default layouts and so on. In that regard, it's much better, they are much more powerful than ontology tools. But no, I spend many days in laying out, and making the diagrams neat. I kind of follow some methodology, I had over the time: I like to have the flow of foreign keys from the upper-left to the lower-right corner.  That kind of makes them consistent and kind of clean to read and understand. Another thing of course is the color-coding: All Associative Entities are blue and the Base Entities are orange. -Howard: And I'm assuming that you set up in PowerDesigner and any single time you create that of that type but those colors are there you don't need to. -Jurgen: Right this is a display preference and you will see like the associative entities, that's the Stereotype on the entity and that's how then they all become blue. Likewise, the relationships have stereotypes whether they are a child or a parent. When we looked at the contract "has Counterparty," then the contract to the associative entity is a parent and the counterparty, debtor or whatever is a child relationship. Again that is really because the FIB-DM is a Semantic Data Model  -Howard: Any other questions? -Paul: I have one. So you started advice by you know with your roadmap. You mentioned, you know you start with the adoption the data model as your client, or for a bank and then you progress to more and more. But that initial adoption This is a better word for a baton invasive. Should that be so typically in industry-standards, you want to apply. I don't know 60% or 70% to that but you still need to leave room for the bank's specific details. In your experience, when you do this sort of thing, can you just talk more about that process? -Jurgen: You mean when I said. You're referring to this slide, like, adopt the industry-standard? Well it is to make the FIBO, to make FIB-DM your Enterprise Reference Model. That's what it means right now, and it's, of course, it's something that that comes gradually, evolves over time. But that's really what I'm saying, you should follow what I had on the other slide, to adopt the industry standard and then merge your current enterprise model into the FIBO framework. -Paul: That in itself would be a big job, right. When a large organization does something like that it will require many political discussions and and lots of debates, and so on. Or actually true in your experience, that adoption is a fairly a fairly smooth process just to get through that first hurdle? -Jurgen: Well, I think it is a lot easier because um the FIBO is an industry-standard. It's not like you, a group of enterprise architects, says, I want to call it a Depository Institution, and some users want to call it a Retail Bank. You just say: Okay, that's what the industry consensus is. Furthermore, you want to use the same names and patterns in the data models that you have on the ontology side. -Paul: Yeah, I'm actually thinking of, you know for example, IBM's model, I just know of a local customer here, or actually are just more than one, even if it is, you know, it brings with it not a lot of new concepts, that they bring in. It is and has been developed over time but still actually to quote-unquote debate with that model and make it your own we're still quite a process for the customer that I'm thinking of. Yeah, but of course it is a vendor model. So as you said earlier, as well something like this there is more consensus around it, whereas the vendor model would also, be built around consensus, but there would be a particular flavor of that. -Jurgen: Right. See it's not a Waterfall thing, it's not like you have to completely review customize the whole model. You do this gradually. What you also do is, if you  have a design a new system, a new database, then, of course, you return to the industry-standard.  So that gradually well, your physical instantiations conform to the FIBO. Think of it. If in a year or two from now, you actually do the Knowledge Graph, then it's totally easy because your data sources use the same names as the Knowledge Graph Ontology. It's a gradual process. That's why I had it in the timeline maybe it's two years now maybe for some institution, maybe it's three years. Some may go faster, but it is really the end-state, the vision that we should strive towards it. -Paul: All right yeah, that makes sense, cool, thanks. - Howard: Thanks, Paul. Any other questions? - Henry: Just in terms of industry standards, in Financial Messaging world, ISO 20022, do you want do you want to comment around how those links work? Because they also do development around different data models etc. -Jurgen: Yeah, did they hear you right, you mean the ISO 20022? -Henry: Yeah, that's correct. -Jurgen: Well, the ISO, that's the messaging standard, and the FIBO is a Business Conceptual Model. Having said that, what the fibo team did, you know, and like 30 person-years went into FIBO development, they considered ISO, FpML, and other industry standards.  So, that went into designing the the FIBO. It's kind of like a lingua franca across industry-standards, including the ISO. -Howard: Henry are you comfortable with that answer? -Henry: I'm comfortable, thanks, Howard -Howard: Okay, any other questions, guys? -Carl: If I may ask another question, often these competing initiatives so TOGAF, Enterprise Architecture Initiative, would have as a part information architecture and then business process architecture etc. If it comes to competing sort of initiatives in a corporate now, can FIBO DM serve as enterprise-wide information architecture, for the sake of the TOGAF-style enterprise architecture initiative? -Jurgen: Well, I don't know, maybe Howard or somebody can answer that better. The FIBO is a data model and it has its place, I guess, in TOGAF and elsewhere. Maybe you could speak to that, Howard. -Howard: Yeah, so FIBO, as Jurgen says, that's your data model, in terms of the business entities, whereas TOGAF is more of your architecture practice definition. How do I structure my practice? What are the roles, what are the activities? How do I measure the performance of it, and how do I go through the life-cycle of development. So, they're quite different in terms of what FIBO brings out together is very much focused on the Financial Sector, on the Financial Industry. So, it's going to talk about credit cards and things like that. TOGAF, typically, wouldn't. They wouldn't get involved at that level. They would talk more about almost the cycle where you go from conceptual, logical, physical. What are your artifacts? What sort of processes you apply. So, very similar to the DMBOK that would talk about data architecture and the important thing is developing an enterprise data model, but exactly it's industry agnostic. It wouldn't go down to customer agreement, it would give you maybe some examples but it wouldn't take you down to that level of detail. Does that answer your question, Carl? Carl: Thanks for the input. Yeah, I think there's a healthy degree of skepticism around enterprise architecture. It's it's kind of ... There's a lot of preaching about enterprise architecture but in practice, I'm not too sure if the effort is actually so comprehensive that it's overwhelming. Howard: So, yeah, and I think this is one of the real benefits of an industry model like FIB-DM and FIBO. All of that work that the architects used to do has been done by a standard organization. So, at the bottom line architects are there to provide blueprints for applications and this this step that you get up when using something like FIBO is phenomenal compared to starting on a blank page. But you are right, there are lots of challenges in terms of people buying massive models and not getting the value out of it. There are lots of questions around that. Certainly when you look at the details, and you look at the structure, and you look at the documentation, I think, Jurgen mentioned, what something like 30 man-years of development for FIBO. Yeah, it's it's a phenomenal effort and I don't think architects in an organization can get to that level that quickly. Even talking to people like Steve Hoberman, he was working on AT&T, he actually came in on the last two years of a 12-year project, and they canned it. From an architectural point of view: So lots of failures but I do feel it's things like FIBO and what Jurgen's done in terms of creating a base model, there's a tremendous starting point, and a lift up in that area, If you were to tackle that on your own, and I know of some organizations for example, she may not be on here but they are busy doing that, and it's really helpful for them to have a reference model like this. -Jurgen: Yeah, and I would say, in addition: Number one, it's a gradual path. You don't have to implement it in full. You certainly, don't have to make a 12-year project out of it. While you are developing an enterprise model, you have the Reference Model for your project models. So if if you have to design Mortgages, a new database for Mortgages, you take the design patterns from FIB-DM. You don't start with a blank page. That's an immediate return on investment, irrespective of how long it takes to flash out a full custom Enterprise Reference Model. Use the Reference for your project models just like like you would use code libraries for your application development. You pick the pieces that help you for your specific project model. -Howard: Henry, you've gotta you got your hand up, Henry? Henry, on mute? -Henry: Sorry, in terms of unstructured data and unstructured content, it supported, and can you use it as an input into a document taxonomy of some sort? -Howard: It is certainly, Henry, I mean you've got this whole ontology translate into a Knowledge Graph very well, and that's almost where you want to bring your unstructured data in, and specifically, if you think of unstructured data you're going to bring it in predicate-subject-object, but that's just going to be at a word level, but then you can start saying that, for example, this word is alone and then you would associate it with a Knowledge Graph. So, you're getting a true Knowledge Graph development here, which is fantastic. And that's exactly what Jurgen is saying is in the end, we want to land up with a Semantic  Enterprise Information Architecture, and not just a data model because that Knowledge Graph that you get is so much more powerful than just the data model. Jurgen is that correct? -Jurgen: Yeah, would say so. That's what I mean by SEIA. -Howard: Yeah is phenomenal. That's a great way to bring in your unstructured data using taxonomies, using just the English structure to to unravel your unstructured document. Then you link it to the Knowledge Graph and then then you really got what I like to call Knowledge-driven Data. And not just data that's sitting in a Knowledge Graph and a property graph. -Henry: Well, I mean a lot of clients battle to develop a document taxonomy, because they're trying to do it from a blank piece of paper.  -Howard: Yeah, agreed, 100%. I think this is phenomenal in terms of what the step that it gives you and but that's what reference architectures are about. If you think of the presentation that Len Ailverston gave, he actually said: "Guys just force yourself into one, and that's almost what Jurgen's saying as well. There's this combination of what FIBO giving us there's lovely concept maps to show the business, to interact with them, in saying is this really your understanding and what you can learn. And then it's about interacting with your own reference architecture as well.  -Jurgen: Yeah, and just one more, because you guys mentioned taxonomies, the FIB-DM hierarchies, they effectively they are taxonomies. [oh, yeah here. I don't get it] What we saw on Okay, now, what we see it here: This is the Subtype / Supertype hierarchy. That's a taxonomy. You can extract it from the data model and put it in a spreadsheet, or load into your taxonomy visualization and sharing tools.  Likewise, the 15 Concepts, these are the 15 FIB-DM taxonomies. If you want to look in that closer, there is one Education Video, "Semantics for Finance Users," which dives in-depth into the 15 Concepts, and actually makes a comparison about the taxonomy and the Concept Map hierarchy. -Howard: So Jurgen, maybe I can ask you some of my questions. You keep on saying, that the ontology translates to a conceptual data model, and my understanding of the difference between a Conceptual Data Model and a Logical Data Model is purely at an attribute level. It's almost as if what you finally generating is a sixth Normal Form data model that there are very few attributes other than metadata may be just a business key so. Is that is that why you're not referring to it as a Logical Data Model, because I'm still seeing things like expiry date, which normally one would think that goes into as as an attribute, but I'm assuming now you're saying it's not a logical because it's almost in Sixth Normal Form. Is that correct? -Jurgen: Well, number one, PowerDesigner differentiates between Logical and Conceptual data models -  other tools don't do that. If you look at the FIB-DM in ERWin, it has the same diagram notation as to any other logical data model. Now, I choose the PowerDesigner Conceptual Models because  its Meta Model is closer to the ontology. One example is that ontology Data Properties, the data items, they are a thing on their own in the PowerDesigner Conceptual Model. Okay, so, that "expiration date" is defined on its own, it can become an attribute on several entities. Another thing is that the CDM has associations as a model object type, that's a PowerDesigner thing. Having said that, the FIBO largely is conceptual by the definition. that you used Howard. So it is sparsely attributed, it's mostly on an entity level. -Howard: Right, okay. What I did find interesting, I liked your progress map in terms of you refer about an ontologist and so that's it's it is a data architect, but someone that's very comfortable with the semantic way of modeling information. is that really what your differentiation is between an architect, that's comfortable from a data modeling point of view to an ontologist, which is capable at operating at the semantic level. Is that your differentiation? -Jurgen: I would say, the data architect is somebody who um is an expert in in data modeling, in the data modeling tool, in SQL, maybe Stored Procedures, and the ontologist is an expert in RDF/OWL, in SPARQL, and to some extent in RDF databases. -Howard: Okay, alright. -Jurgen: So these are certainly distinct qualifications, these are usually distinct roles. But what I'm saying is, that data, I think the two roads are merging. Data architects they aspire to learn OWL, and so on.  What I'm saying is: If you use, if you know the Vocabulary, FIBO Design Patterns, the hierarchies the names, and then you see the same thing all of a sudden in an Ontology Graph, it is easier to understand and learn RDF/OWL. -Howard: Right, that certainly makes sense. Would you mind comparing data-centric architecture? I'm not sure if you read the paper by David McComb, who presented a data-centric architecture, and his big criticism on lots of the organizations was the fact that the core model was was too big, and he's basically saying we develop models that are too complex, and his suggestion and I'm not sure if you've seen it, is to have a core ontology. Then you extend the core ontology for a specific domain, call it Financial Instrument, and then you would grow the taxonomies and the ontology within that domain. but you don't affect the core. So, he's saying keep the core in terms of your basic elements and then you extend it further. Again, I'm not sure if you've read  a lot of his articles. -Jurgen: No, I didn't read it. Hmm, yeah, I mean, if you want to look at it that way, you know what constitutes FIBO Core - it is Foundation, BE, and Finance Business & Commerce, and you want to regard the other modules as extensions, I don't think the EDMC agrees with that. If you look at the Normative content: These are 2 000 classes or 2 000 entities in the data model. So, we are not saying, we just make 200 and call everything else extensions. Okay, don't shy away from huge or large data models. Again, it's a library. If you have the Encyclopedia Britannica, you don't have to read through through all 24 volumes maybe you just look up a few terms, but it's good to have it on the shelf. -Howard: I understand. Okay, maybe George could help. My understanding of lots of the data modeling tools is that you can, you mentioned something about Domain Values. And I was a little bit confused there, lots of the modeling tools would allow me to, for example, define a list of currencies in the domain values and then the attribute can have that associated domain. Now, you mentioned something that and maybe I got you wrong, was that you couldn't do that in an in the normal relational modeling? -Jurgen: Yeah, it's not just allowed value for a code field. In OWL it includes reference data. I can say like can say a Treasury Bond is a Fixed Income Security with a Duration of 10 years, that has been issued by the Federal Reserve Bank. Now, that goes certainly beyond what you have with the domain values, right? -Howard: Okay, so, when you when you're using the term reference, you're not talking about code/decode, you're talking about values that come from out from other providers, third-party providers. -Jurgen: No, it doesn't have to be a third-party provider. See, in the ontology instances of a class, the data. You can refer to it in your Class Restrictions, and I cannot do that in the data model. The data model has relationships from one entity to another. I cannot formulate some logic that goes across several entities, or refers to data instances and that is where basically the ontology is more powerful than what we can do with E/R modeling. That is why I say, in the end-state, you will do conceptual modeling in OWL, and then derive a Logical Data Model. That is why the FIB-DM preserves these class restrictions, these business rules, as Extended Attributes, as Documentation Items. Howard: Okay, that leads me on to my next question, because the one I wanted to ask was if we reverse-engineer. Let's take this approach: We've taken FIBO, we've converted it to FIB-DM, we've extended FIB-DM, to introduce other stuff, and now we want to take it back to the ontology. My question was what do we lose? -Jurgen: That's a that's a pretty good question Yeah, you cannot ... If you were to reverse-engineer FIB-DM back into RDF/OWL, you have a simplified ontology. Every entity becomes an ontology class, every Associative Entity becomes an object property, but you will never get back these complex class restrictions that you have in the ontology. So it is an isomorphic subset. What you can do is of course, if have the FIB-DM model and you extend it for some purpose, iIhad that example, if you built some system for credit cards; so, you add like 20 new entities to the model, maybe you add attributes, remember the FIBO is not attributed. Now, if you reverse that back into RDF/OWL, then you can use that to incorporate it into your Enterprise Ontology. It's a very simple ontology but it gives you a starting point. You don't have to copy and paste and type in manually. You already have these entities converted into classes. Then you can add the Semantic Rules. It saves a lot of time. -Howard: Yeah and I think that's what I mean, certainly, what I've been looking at is: Many of my customers are sitting with data models. They want to go into the new world of semantics, being taxonomies and ontologies. And I really got excited when you publish that reverse-engineer as a way of getting our starting point a simplified or isomorphic ontology. -Jurgen: Yeah, if you want, you have the links in on the PowerPoint. Check out on the YouTube channel, "Semantics for extra-large banks." This is the Education Class about the Transformation Technology. Okay, who knows maybe we will do a follow-up in a while. I just didn't want to to put too many slides in here because I think most people, not most in the audience, they are not ontologists.  -Howard: Sure, sure, okay. My last question for now is: You mentioned something about the Party and the Party Role. I'm certainly very comfortable with the differentiation between the subtypes of Party being Individual, Organization, and with the latest one, which is called the bot, and then the Party Roles being Customer Employee. I'm very comfortable with that but you you didn't seem to... You seem to think otherwise. Most of us were still dealing with it altogether. -Jurgen: Yeah that is because a lot of models have that concept of an Involved Party. You know the definition of an involved party. That's a common supertype, some models call it Individuals, FIBO calls it the Person, human beings, Legal Entities, Organizations, and so on. And then entities do their roles, uh here This is here clearly, these two are separate concepts. There is no common supertype, customer, employee, your employee record, you as a Person don't belong in the same table. You are one record in the Person table, and then you may have a reference to some Employee table, to a Customer table, to a Borrower table. -Howard: Sure, and that's sort of what I'm comfortable with. Maybe someone else can comment on that. Paul, maybe, on your side from a master data point of view, when you make use of Party, and then Party Role, in terms of Customer and Employee - they tend to be quite different to the actual individual, that am I. What's your view on that, Paul? -Paul: Yeah, the data points would be quite different. There would be some shade at the points, I guess as well. So, whether you are I mean, yeah, Party ID, or I mean, you could even argue some of the contact point information, I was interested in, What you can say here, and I didn't catch all of it, but the Autonomous Agents, maybe just clarify that concept again, Jurgen. -Jurgen: Paul, you know the the Involved Party, you know  that's what you have in the IBM model, in the Teradata, in many others. That is an ultimate supertype, as a data concept. Underneath it, yes you do have Persons, the IBM model calls it Individuals, Legal Entities, Organizations, Organization Unit, and so on. And also under it are roles, like a Customer, Employee, Broker. What the FIBO says is that this is wrong. The Autonomous Agent is the Person, Legal Entity, and the roles, these are separate concepts. They do not have a common supertype. -Paul: Oh yeah, okay, that makes sense.  -Jurgen: And there are other examples. For example, Product and Services are separate concepts. In the FIBO and FIB-DM, the Service is not a subtype of the Product.  -Paul: Yeah, I would agree with that as well. But I mean, don't they, Product and Service, don't they have a common supertype at all? -Jurgen: No, they don't. They relate to each other. Like, I can have a Product that's a credit card, or the special checking account offer. And with that come services. Again, these are separate concepts in our data model, separate entities, and they should never be in the same table. in the physical implementation. -Paul: Agreed, a hundred percent. -Jurgen: There are many more examples, for instance, Security, Financial Instruments. In the FIBO they are a form of agreement conceptually. And here again, some data models have Securities underneath the Product which is wrong, unless you're an Investment Manager and it's one of your mutual funds or ETFs. But then the securities in your ETFs they are Products - they are Agreements. -Paul: So what I'm wondering is, yes okay that, I mean that makes complete sense, and I totally agree, but so a Product and Service, they might be bundled together in something else, like an offering or something like that, right? But would you actually care to model, to keep that in this kind of model, or is that purely a function of um of the implementation? I mean. Jurgen: Hmm, I'm not sure, have to look that up myself. I think, a Product has an Associative Entity to another Product. That's how you would structure Bundles. And Products relate to two Services. The checking account Product relates to whatever payment services, check cashing services, and so online services. -Paul: I guess, those are one of the things, that would be potentially, what I was trying to get to in my first question. Maybe that's an area where the bank or the institution needs to think about how they want to deal with those concepts. Whether they want to roll both those things as peers into a, sorry, not a supertype, but if they want to relate them in some way into a higher level object or a high level concept that incorporates both of these two. Maybe that's one way, the other way is just to have them associate each other to each other, in some way, but I guess that's where like how the bank thinks about their product development, or offering development, maybe I should put it that way: Maybe that's where the nuances come in. -Jurgen: I think so. Also, that's where the Agreement comes in. You see, the credit card offering with the associated services and you sign an agreement that would stipulate the limit on your credit with the interest, and so on. So the Product provides a template specifies the Services, and then Agreements, and you also may have master template Agreements - these are the individual instances, where a customer signs up for it. -Howard: With the associated Contractual Elements. -Jurgen: Exactly, yes the agreement would typically refer to your defined Product/ Services, it has Contractual Elements, it may refer to Legal Constructs, the consumer protection, blah, blah, blah, and the Document is actually PDF of of the printed, signed thing -Howard: Right -Paul: Which is unstructured stuff that starts coming in -Jurgen: Right, exactly the agreement also confirms the Commitments, that's the credit card limit. -Howard: Right. Jurgen, I know we we're going really late. I'm hoping that's okay with you? -Jurgen: Yeah sure, I'm fine it's  Labor Day in the US  -Paul: Thank you Sir thought you may have. -Gaucher (?): Sorry, I just want to have one comment. after everybody maybe just something as well if I can. -Howard: Go for it raise your hand. Anyone who wants to ask, just raise your hand and then we'll let you in. Gaucher, do you wanna go for it? -Gaucher: Well, thanks, just a comment I think what I'm seeing is is great. That the what you call your ontology basically a few concepts, or a bunch of concepts, which then basically have relationships between concepts and they are basically showing pictures or icons. So, what is nice about that is the business can kind of associate with those icons. So it helps them a lot with that association. Yes, so that is excellent, and I think your PowerDesigner is excellent in conceptual modeling. But I think this, where you go into ontology, where you then picture your conceptual model. But it's actually a conceptual model. If you think about it, although we call it an ontology - it's an entity-relationship diagram, relationships between concepts so so that's very nice, I think. What is the challenge or whatever one of the things what can do is give those ontologies a good taxonomy, a good definition, a business definition. So, if you go to call it in South Africa, we've got a standard bank and a first national bank, and all those big ones, so conceptually they all call it doing the same thing, but on a business level or a business term it's something different. So, they're coming back to the definitions. The first thing is one to relate the business to this model, because I know there's a lot of skepticism, which is appreciated, but I think to relate, to get business to buy into something like that, is to take them through it and then make the definitions their own putting their company words in there, and whatever, that's how you would win them down, and then you can build your Logical and Physical models based on this. This is just my comment. -Jurgen: Well you know I would say number one, the FIBO has excellent definitions. You know, they really did a great job on that. Even beyond the definitions or these annotation properties, they refer to the source. So it's extensively documented. I would say any bank should adopt the industry-standard definitions. You can always add to it. But don't don't redefine the concepts. The second thing, indeed, if you look here at this diagram with the icons. This is something a user can understand - as opposed to the complexity of the data model, or even worse the Graph, which has even more boxes, more objects in it. Also, it's not just drawing, pretty pictures. The icons are the 15 Concepts. Then you draw what you have here, Registration Authority, or the Stock Corporation. This is a controlled vocabulary. What you write here in the Concept Map for the users, you already pick from something that's a base entity in the model. Likewise, when you do the Concept Maps, connections, the arrows, here "has Identity," "has Registered Address," these are associative entities in the model. So as you develop the Concept Map with the users, You use the icons that she can understand but you guide her with the controlled vocabulary to utilize. That and that makes it easier when you go back to your office or cube, and have scope the ontology graph or the data model diagram. -Gaucher: 100% and just another ... Your catalog, your business catalog or go to your meta catalogue, and the repository. It's actually where you start with so you document this into your catalog or your repository, and then from there on you derive your data types and and things like that. because in some companies a material is called a Product and in other companies that material is called something different so materials or Customers or or all those at all Parties and things like that can physically be named different in a business now what I'm just saying is this is excellent but to make it work, to roll it out one has to make it business things, business language. So, you need to make this generic terms because they are bank terms but there's specific. I mean in a country like South Africa, we call it something like this, in a country like America, it's called something like that, but it's actually derived to the same concept. They need to take the language or the that region and into consideration when one develops a business specific one but i support this. This is excellent. -Howard: So just to bring just to bring an important point. This concept map is not an ontology it's a conceptual mapping, it's a way of modeling that is helpful to build these Concept Maps or almost subject areas. The ontology is a lot more powerful than what those concept maps are. But I think Jurgen's done a fantastic job of taking the FIBO as an ontology and creating a Concept Map model, creating a Data Model, and creating the other ones, the UML. So there's been lots of derivatives of the core ontology. You must be careful of saying an ontology is a concept. It's basically the language and the structure of all elements within that. We would probably use those Concept Maps as groupings of data so that we can go into Powerdesigner in certain areas. But an ontology is not equivalent to a Concept Map. Am I correct, Jurgen? -Jurgen: Correct. The Concept Map is an isomorphic subset of the Data Model and the ontology. Like I said, going from the ontology, the FIBO to FIB-DM, you lose some semantics. The same applies here, the Concept Map is a simplification. It does not have the powerful constructs of the ontology or even the data model. But my argument is: As we interact with business users, they can understand the left-hand side but the right-hand side goes over their heads. -Paul: Right and I think there's a big push now to start interacting and working more with concept maps to get the business to share with us the relationships and understand how these entities, how these concepts interact. -Jurgen: Right and I would recommend for anyone who's interested in the FIB Concept Maps to look at the YouTube channel. There is a class about it called "Semantics for Finance Users," and that explains them in detail. The point really is concept maps have been around as a communication tool with the business. The difference is, we don't start with a blank page and circles. We use the icons that over time, the users internalize, and we use that controlled vocabulary for what we call the circles, and what we call the arrows. -Howard: Right. -Paul: Jurgen, quick one FIRO. I got really excited with FIRO in that it could bring about regulatory adherence and compliance on top of an ingested FIBO ontology. Now, I know, just having a quick chat with George, there's a little bit of, well how does one say, a lack of maturity on the FIRO level. Is that your understanding? What's happening with FIRO? -Jurgen: I don't think anything is happening with FIRO. Nothing had happened with it for the past three years, I suppose. -Paul: I was quite excited from that idea or the concept of being able to regulate the data. That the elements that come into the FIBO. Is that still a vision? I mean just to apply a regulatory view? -Jurgen: There are no references between the two. FIRO is an independent thing. It doesn't specify equivalent classes or pointers into the FIBO. So, they're separate developments and my personal opinion is that the FIBO ... Just look at it. What is a hundred classes? It's nothing, okay.  -Paul: Maybe I misread it. I thought FIRO was something that was on top of FIBO? Not unless I missed something that happened in the past few months, but it's an ontology, Financial Industry Regulation Ontology. It has its own classes that are subclass of The Thing. But it's very rudimentary. I think it was some academic project. Sometimes something gets launched and then it doesn't get pursued further. But I would be interested to hear more. Look at it, download it, and count the classes. -Paul: I have and it's nowhere near that of FIBO. I just thought the purpose of FIBO was to complement FIBO and ensure for example, the way I read it was that FIBO would have an instrument, it needed the appropriate elements within that instrument. If didn't have that element then it wasn't compliant. That's what FIRO was there to do, to validate and to pick up irregularities within certain financial instruments, structures, transactions, and things like that. That was my understanding of FIRO. Maybe George knows? -Howard: George, hello. -George: FIRO, don't know very much about it at all apart from what's just been said. I'm afraid.  -Howard: Okay. -Jurgen: Well I don't know either. I don't really pursue it anymore but let me see if it's here... If you want you can watch my conference presentations. I worked on that a couple of years ago.  The "Bank Call Report in FIBO" or the "U.S. Investment Advisor Act in FIBO." These were the Enterprise Data World conferences. Yeah at the time, I proposed the "Financial Regulation Ontologies" - they emerge the FIBO with the Legal ontology - LKIF, Legal Knowledge Interchange Format. That's the proposition here to address regulatory compliance. Okay, I'm a fan of LKIF, Legal Knowledge Interchange Format. I'm not a fan of FIRO. Howard: All right, okay. There was something else that I wanted to ask you. Just in terms of your understanding between the IBM model and the FIBO. What's your feeling about it. I'm assuming you like the FIBO because it's an industry-driven open-source. Then you have IBM. Is IBM pulling together some form of ontology of its data model? How is it progressing on this path? -Jurgen: I don't really know, I left IBM a couple of years ago. I was suggesting that they should make the Industry Models are available in RDF/OWL. I do think very clearly that FIBO and the FIBO Data Model are far superior to IBM or any other vendor models.  It's like three or four times the size. It has a more modern design that addresses some conceptual deficiencies. it's extensively documented. Yes, banks should adopt the industry-standard - not a vendor model. Having said that, there's a lot of value in it, and this is what what you see on the screen: Yes change to the 15 Concepts, change to the FIBO names and definitions, but don't throw out your IBM model. Harvest in the valuable content. There are a lot of entities in the BDW that you don't find in the FIBO. You merge these in, underneath the right supertype in the FIBO hierarchy. Okay, and attributes as we said, FIBO is conceptual, it's sparsely attributed. So, all the attributes in IBM and other vendor models, in your in-house models, have tremendous value. You have to merge them in. However, the target, the structure that should be the modern design of the FIBO. -Howard: Okay, and in the last EDW [Enterprise Data World conference] in San Diego, they mentioned FIBO or EDMC had taken on Retail as well? Yeah, retail that applied and merged some of the retail development. Are you aware of that? -Jurgen: [laughs] Well well that was what I showed you here. I was in San Diego. I was was a speaker at the FIBO conference. I heard this as well. The latest is that they are interested in doing "Auto," like in vehicles, automobiles as an ontology. I don't know. Well, I worked in Finance all my life.  So, personally, I wish they would focus the energy on the Financial Industry: Get Loans and these other modules into into the Normative part, into Production, add on new subject areas like credit cards, and many others. The FIBO model, at least the Normative part, in my opinion is a bit heavy on the investment side. It could have more for Retail and Commercial Banks. -Howard: And also the Insurance. -Jurgen: Oh yeah, exactly, an excellent point. Thank you. Yes I would rather see the EDMC taking on Insurance than Retail or Automobiles. -Howard: Okay. Participant (?): I agree because that was actually going to be my question. If there is any videos or presentation more relating this model to the insurance industry?  I've seen things that make sense to me in terms of that but now my question is. -Jurgen: Good question but I don't have any any presentation on the YouTube channel or on the website. I think you have a good foundation for insurances. That's a FIBO Foundation, Business Entities, Finance Business & Commerce. That together gives you over a thousand entities. Plus, as an Insurance Company you have to manage your assets.  That's where it becomes interesting with the investment side, Securities, and so on. How you manage your assets. But no detailed stuff, like policies & claims and so on, are not there yet. So, well, take the FIB-DM as a foundation and engage with the EDMC to add insurance content. They are looking for that. I had an appeal together with Robert Trupitz, he's the leader of the FIBO development team, for data modelers to engage with the EDMC, to help build out subject areas. They are very interested, looking for it. They would love to see insurance people join the content groups and develop a model together with them. -Participant: Because lots of this, I mean we've got the parties, you've got agreements, the product and offering would be interesting to see how that would work out in this model. -Jurgen: Right. So you have the foundation, framework, you have the asset management side how you manage... -Participant: Long Term pay out. -Jurgen: But it doesn't really have detail on policies, on claims, and so on. So that's what you would have to to add, to customize by yourself. -Howard: All right. Jurgen, thank you very much. I'm not sure, thank you, anybody else with any more questions? Paul anything from your side? -Paul: No nothing but Jurgen, it was a great discussion, and just thanks so much for your input and insights. -Jurgen: Well thank you guys, I enjoyed it and I was blown away, like how many people were interested in, dialed in into this meeting. Again my appeal is to DAMA, folks who listened in: Published content open-source, in particular model migrations There is so much duplication. I don't have the answer. If you  migrated FIB-DM to ERWin, put it on the web open-source, so other folks just take your ERWin model, rather than trying to migrate import on their own. -Howard: Yeah, fantastic, awesome. Okay, any last question? -Participant: Praising your presentation, very interesting. What I'm interested in these days, has to do with the central securities depository. It was shown in one of your slides. Right now I'm taking a look at the model and it's very well thought out. It's really easy. Thank you. -Howard: Thanks, everybody. I will be adding the recording as soon as we finish to that shared folder that i published on LinkedIn this afternoon. I'll make the announcement and share it with everybody. Again, Jurgen, thank you very much. -Jurgen: Thanks to you, Howard, Paul, and thanks for attending -Participants: Thank you. Thank you. 