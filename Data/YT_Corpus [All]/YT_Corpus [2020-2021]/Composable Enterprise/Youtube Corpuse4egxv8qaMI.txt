 [MUSIC]  Welcome to The Control Room. I'm Scott Bounds, a Media Cloud Architect from Microsoft. Today, I'm coming to you from my apartment in Greenwich Village in New York City. This episode of The Control Room is the technical companion to an earlier session on editing in the Cloud. Today, we're going to look at technical architecture and components for an enterprise solution for post-production using Avid Media Composer and Avid NEXIS all running on Azure Cloud services. Avid is a key Microsoft partner and is used extensively in the media industry from scenarios such as episodic to promo creation. We have a jam-packed agenda, and by the end of this episode, you will have an understanding of what it takes to run a solution and where to begin for editing in the Cloud. Let's get started. [MUSIC] Now, I'd like to welcome Mike Desilver, General Manager for Customer Success at Microsoft, to give us a view of what he's hearing from customers about their needs for editing in the Cloud. Mike, what have you been hearing from your customers concerning content creation in the Cloud and how has it evolved over time?  Thanks Scott, and again, thanks for allowing me to do this. We've been working with media customers for probably the last 18 months or so to move content creation to the Cloud. This would include broadcasters, advertisers, studios. They're all just looking for the best way to make the shift to the Cloud, and what COVID-19 really did was it made an unbelievable sense of urgency. They needed to enable work-from-home scenarios really, really quickly. We needed to move fast, but we understood there's going to be some trade-offs between functionality and completeness of solution. Now, we're in the next phase. We're going back, we're refining architectures from stuff that was built really quickly. We want to make sure we can get some connectivity back to on-prem video systems. What we really want to make sure we do is full integration with an extreme focus on enterprise security, so that includes single sign-on, MFA. It's a really exciting time. We're happy to get involved and we're looking to make it possible for every studio that needs it.  Mike, I'd like you to take a look in your crystal ball and what do you see happening over the next three, six, or 12 months in the industry?  Yes Scott, two things really need to happen. As businesses and offices open up and stay-at-home orders are relaxed a little, we're beginning to see how the modern workplace has changed. Are people staying home out of convenience and also because they gained higher productivity when they were home? For those who are going into the office, do we transition to Cloud-based solutions for editing, just for the portability factor alone? Then the next thing is as production ramp up, how many people are going to be on set and will that be limited? You'll need some set-to-Cloud solutions to move raw files for Cloud workflows, to do things like editing, visual effects. At Microsoft, we're actively working with production studios to understand what those requirements look like and provide solutions with our partners.  Now, I'd like to welcome Richard Duke, Chief Cloud Solutions Architect from Avid. Richard and I have worked extensively with many enterprise customers. I would like to ask Richard to give us a demo of the end user experience. A successful [inaudible] Cloud project really is about delivering an end user experience to the editor equivalent to what they have on-prem. Richard, go ahead and give us an idea of what this looks like with Media Composer on Azure.  Hi, Scott. Thank you for having me. It's great to be with you. I'm very excited to be able to show accessing a Avid Media Composer remotely. In this particular case, we're going to be connecting to Media Composers that are inside of Azure. I'm demonstrating this from home today. We're all in this work-from-home environment and excited to be able to show you this use case. As you'll see on the screen, I'm going to use the Teradici client to access one or many Media Composer VMs. These are GPU-enabled VMs that are running inside of Azure. When I log in to one, I of course get a login screen where I'm able to use my credentials to be able to log in to this particular VM, and then I can see the desktop of what is being displayed on this. You see on the screen that I have a Media Composer project that is open, Media Composer is running on this GPU-enabled VM, and for simplicity, I have this up and running. I'm going to be opening a project. This is a project that we did as part of the most recent HPA event that happened a couple months ago and it's exciting to be able to pull this up and demonstrate this on the screen for you. I'm able to have a very good real-time editorial experience inside of the Media Composer.  When working with customers for content creation to Cloud, I always like to start with a few key qualifying questions. The first question is, what functionality is needed? Today, we're talking about video editing with Avid Media Composer. It could also be other scenarios such as visual effects using programs such as Cinema 4D, Maya, Adobe After Effects. This information helps us choose the proper size of workstation to actually use. The second question is, where? As we'll learn, editing in the Cloud is very sensitive to latency and you want to get the workloads as close to your end users as possible in an Azure region. The third question is, when? How fast do you need to deliver a solution to your customers? At the start of the COVID crisis, many customers need to stand something up as quickly as possible, and they're always a trade-off between speed, completeness of design, and integration. These are decisions you have to make on how quickly that you need to get something into your end-users' hands. The last question is the level of security needed. This plays into the speeds, so how users authenticate. These come to design decisions such as single-sign-on, multi-factor authentication. Do you need those in the short-term or long-term? As you think about that, that will actually impact your design and how it's actually implemented. Now, I'd like to start to take a deeper look at the Azure services needed to power it in a Cloud solution. Please welcome Bruce Cosden, Cloud Solution Architect at Microsoft based here in New York and a member of my team. Welcome Bruce.  Thanks, Scott. Happy to be here with you.  Bruce, let's partner and give everyone an abbreviated version of our Azure Bootcamp. I know we've done this in numerous customers. It usually takes a full day. Let's see if we could do the quick version. Bruce, looking at Azure, how does Azure's footprint and regions really apply itself to this scenario?  Sure, Scott, I'd be happy to. Azure is generally available in 53 regions and has announced plans for seven more regions. With that, Azure is available in 140 countries. What this means is that you can put your media workloads close to your locations. Why is this important? Well, because latency matters. Real-time collaborative editing of media workloads utilizing 4K and 8K content requires latency to be as low as possible in order to minimize lag in the editing process. Azure's region layout and dedicated fiber network interconnecting all of our Azure regions globally enables very low latency, low jitter, and a consistent network experience. This allows editors to be located in different regions around the globe, and receive and collaborate on media content in real time with that same low latency experience. At the same time, Azure's region-based architecture consists of multiple datacenters, also known as availability zones, in each region in order to provide customers with resiliency in the Cloud for mission-critical workflows.  Bruce, could you walk everyone through a high-level architecture of what editing in Cloud looks like inside of Azure?  Sure, Scott. Here's a typical reference architecture for a media workflow. You can see in the center that resources are deployed within a virtual network within an Azure region. Within this virtual network are your virtual machines and private endpoints to your storage backend. Additionally, Active Directory is deployed here as well and is the primary point of authentication for clients such as Teradici. Network security groups attached to the subnets for virtual machines can then control the flow of traffic within the virtual network, across peered virtual networks, and across subnets within a virtual network. The setup of this reference architecture can be enabled via the Azure Resource Manager, ARM, which is the secured API layer to Azure. From the API layer, you can use ARM automation templates or terraformed HCL scripting language with the Azure terraform provider to build out the environment. Note that we recommend customers utilize Azure Security Center and Azure Monitoring so the operations team can keep track of the security posture and performance of the virtual machines and resources deployed in Azure.  What does the connectivity to Azure look like both for end users and for on-prem hybrid systems?  Of course, you can access your Azure resources via the Internet utilizing the Teradici client with its native PCoIP connection protocol. This way, you can connect to the public IP address of a virtual machine or load balancer. For private connections from your on-premise site, you can utilize a site-to-site VPN or an ExpressRoute, which is a dedicated circuit connecting your on-premise location to Azure via a meet-me provider. Note that for high-speed ingestion into Azure, which is not pictured here, there are products available from our partners such as Signiant or Spira which optimize the transfer stream to move files faster than direct copy.  Bruce, as you get started with Azure, can you give us some insight on governance and management?  Sure, Scott. Microsoft understands the importance of governance controls in the Cloud to manage resource creation, audit user actions, and control costs. Azure resources such as virtual machines, software-defined networking services, and storage are created in Azure subscriptions. Subscriptions provide containers for your resources to run in that are secured via Azure Active Directory utilizing your existing on-premise identities. With that, Azure provides a set of services that allow security and IT administrators to provide a few very useful functions. The first one, management groups, allows administrators to create a hierarchy and relationship between subscriptions to manage user access controls, policies, and budgets across a broad set of subscriptions. Policies allow administrators to create a schema definition to control the property settings of a resource. This is different than access controls which authorize access to a resource. For example, a policy might control that public IP addresses cannot be created for a virtual machine, or another example might be that a managed disk must use Azure Disk Encryption. There's also Azure Blueprints which provides an Azure built-in version control system for deploying a standardized subscription model layout. An Azure Blueprint could be used to deploy a full media Azure baseline environment and prevent drift of that configuration to simplify management. Additionally, automation controls allow customers to define their infrastructure as code and use that code in automation workbooks to deploy the code changes on demand. Finally, a cost management service built right into the Azure Portal provides admins and financial teams with an up-to-date view of historical spend, current monthly spend, and forecasted spend for the remainder of the invoice period. With that, let's go to the Azure Portal for a demo of Azure Cost Management. Cost Management will show up here if you have used it frequently in the past. It's under "Subscriptions". If we click on "Subscriptions" and we click on a particular subscription, you will see a screen come up here with a blade that has properties for that subscription. Cost Management has been integrated into the Azure Portal. It formerly was a separate piece of Azure known as Cloudyn. Now, that functionality is integrated fully into the Azure Portal, except for CSPs. If you're using the Azure Portal and you're under the Subscription blade here, you can find Cost Management under this section here. Click on "Cost analysis." Here we are now on the Azure Cost analysis page for your subscription. You can see in the main page here, you have your costs accumulated by month. You're able to change the scope up here so that you can see multiple subscriptions or management groups. You can change the view to different types of cost models, such as cost by resource, daily costs, cost by service, invoice details. You can change the granulation of month, invoice, or particular custom date ranges, or you could add custom filters.  Bruce, one of the most important aspect of this is networking. Could you give us an overview of Azure networking?  Thanks, Scott. This is a critical topic and one of the first conversations we run up against when setting up a media workflow for a customer. IT admins want to understand how to segment and secure the network to protect resources on-premise and in Azure. Microsoft's software-defined networking stack allows customers several routes and security models to access resources in Azure. This will allow editors and directors to access the media frontend via the Internet utilizing technologies such as Teradici, which is secured via Active Directory while segmenting the network in Azure so that back-end components can access on-premise media environments via high speed and secure private connection. Editors can additionally access Azure over the private network internally and reach the same media edit environments in Azure. The private connection to your customer's site can be enabled in multiple ways depending on the workload sizing requirements, velocity, and performance in which a customer needs to stand up a media workflow. For example, a customer can set up a VPN. A VPN is an IPSec site-to-site tunnel from Azure to their on-premise location which can be established very quickly. Azure natively can provide a one gigabit per second tunnel. In addition, third-party networking partners can provide a software-based VPN in Azure that can handle up to 30 gigabit per second tunnels. These tunnels can be torn down and put up in multiple occasions fairly quickly if you have media workloads that are time-sensitive or need to move around the globe based on editing requirements. Another option is ExpressRoute for a more globally distributed environment with a single site near a particular Azure region for customers with multiple locations around the globe, and ExpressRoute might be the ideal option. ExpressRoute is a dedicated link from the customer's site to an Azure meet-me location provider; an ISP such as CoreSite or Equinix and many others. Speeds of ExpressRoute can be provided from one gigabit per second up to 100 gigabit per second direct connections to the Azure backbone. In this picture, you can also see a hub and spoke model, which is a standard reference architecture for Azure. In this model, shared resources can be secured in the hub and the bandwidths shared across the spokes, which is where your media pods reside via network peering. Additionally, network security groups allow access control lists to be created to control access between subnets and virtual networks. Additionally, pods can be created in multiple regions as well and peered across regions to shuttle traffic between teams working on media assets. This model allows customers to leverage Azure's backbone for media and data transfer while providing a dedicated on-ramp for customer datacenter locations to ingest data into Azure.  Now, I want to take a look at the Azure compute use, the power of the virtual machines that'll be running Media Composer and Windows. Azure offers a variety of virtual machines with different capabilities. The key thing here are GPU-powered virtual machines. For this case, we actually have the NV series, and we actually have a couple of SKUs I'd like to review. The NVv3-series is an NVIDIA-based GPU virtual machine with an Intel processor. It's also available in a variety of sizes to match to your workloads starting with 12 cores and going all the way up to 48, and also up to four GPUs. A key aspect of these SKUs is premium storage. This is a high-speed disk that's actually attached to the virtual machine that can really support the needs of video editing. The NVv3 also is broadly available across all our Azure regions that Bruce talked about earlier. The newest SKU is the NVv4-series. This was actually a design looking at VDI and remote visualization. This is based on AMD for both GPU and CPU. What you'll see here too is there's also a variety of sizes and you can right-size your workload based on your needs. Also, you think about the size of a virtual machine that relates directly to the cost per hour. Another aspect is this also supports premium storage. Being the newest SKU, the NVv4 actually today as of May 2020 has limited availability. Right now today, it's available in US South and in the Europe West regions. More regions will follow as we roll this technology out. A fundamental building block of this solution is storage. Azure Blob Storage is our object storage technology that really powers this whole solution. We have worked very closely with Avid to make sure that the Avid NEXIS runs on top of our storage. In this case, if you look at the chart, you can see the multiple temperature tiers inside of Azure Blob. At the very high-end, we have Azure Premium Blob. This actually maps to the NEXIS online storage for video editing. We also have other temperature tiers; hot, cool, and archive. The way you differentiate between these is the access speed from milliseconds to hours as well as the costs for retrieving the content. These would actually map to other tiers. For example, hot would be your NEXIS nearline. Then you can think about what you want to have for offline. Archive is really used at the end of a project. Think about this as a replacement for your LTO tapes. The second aspect of storage is really what we think about with Azure Managed Disks. These are disks for virtual machines. As mentioned earlier in compute, there's different performance standards here. We have HDD, SSD, premium SSD. The premium SSD is really what we're looking to map against those virtual machines running Media Composer. So this really gives you the very high IOPS and bandwidth needed to do content production and editing on that machine. Hey, Bruce. Now, let's take a look at security for the solution.  Sure, Scott, definitely. Azure security is a fundamental underpinning of Microsoft's Cloud platform. Azure Active Directory and Azure's hybrid-secure capabilities enable customers to set up traditional workloads that would normally run on premise. Setting up a hybrid security model in Azure is fairly straightforward. Azure Active Directory, your tenant, serves as the identity provider for Azure, providing your internal users or external users that you invite to the directory to manage Azure resources and access the Azure Portal. These users can be synchronized from your on-premise Active Directory via Azure Active Directory Connect, also known as AD Connect. Additionally, with Azure Active Directory integrated to your on-premise Active Directory, an organization can achieve seamless advanced access controls such as conditional access and privileged identity management. Active Directory on the other hand provides domain-joined authentication for workloads on-premise and in Azure. As long as there's a connection between Azure and your on-premise environment, albeit via IPSec VPN or ExpressRoute, users can authenticate utilizing the same, secure, multi-factor authentication and single sign on services they enjoy on-premise through the Teradici front end to access Avid Media resources. For reliability, we recommend deploying an Active Directory controller to Azure and replicating only the users required to access the media tools to the Azure instance, but that is not required.  Hey, Bruce. Can you give us an overview of automation? That's a key thing that customers were really interested in, how to stand these up very quickly.  Sure, Scott. Automation of media workflows is critical to success for organizations. Having a jumpstart set of scripts and processes to stand up media workflow quickly has also proven a critical function. There are several ways to set up your media workflow environment. We allow this flexibility to suit your organization's existing skills and practices. First-off, we recommend deploying a repository to store your code. This repository can be an Azure Blueprint, Microsoft GitHub, or your own repository that you utilize today as part of your existing CI/CD processes. However, with GitHub, you can use GitHub Actions or an Azure DevOps pipeline to create or continually release updates to your media workflow environment. So if you need to scale for example another pod for your environment for a few weeks, run the deployment script to set up a pod in Azure and media users can get started as soon as the automation finishes. With Azure Automation, and in particular, something like Logic Apps, you can even schedule or set events to shut down virtual machines that are not in use to save money. There are a couple of GitHub repositories available today to help you set up media workflow quickly. The first one here is to create an Azure-recommended landing zone to deploy your media resources. This was written in Terraform and there are scripts for Azure's Automation language as well. The second repo here is an Avid end-to-end deployment for editorial in the Cloud utilizing Terraform written by one of my colleagues, James Pruitt. He's a peer of mine in the media entertainment group. We are working to provide a robust set of templates to accommodate the most frequently requested media scenarios, so we would love to hear from you if you have input on workflows that you would like to see in the future. Additionally, a repo will be released soon that will serve as the GitHub media and entertainment hub which will link to all the great media resources and tools that we will be creating.  I would take a quick look at another key component of the solution, and that's Teradici. Teradici provides the high resolution [inaudible] desktops that we need for editing in the Cloud. Let's jump into the portal and take a look at the key components of Teradici that we actually have installed. Here we are inside the Azure portal. This is all the virtual machines as part of my edit pod. What you'll notice down here is this machine called Teradici Connect. This is the component that I actually installed inside my resource group. This is a Linux box running the Teradici components. Now, if I jump over here, I'm actually going back into the Teradici portal for Cloud [inaudible] manager. One here is from my dashboard, you can actually see the connectors I have, in this case, it's the Avid pilot in South Central. This is actually connected to Active Directory as well as that Linux box. From here, I can actually configure workstations of users that access workstations as well as being able to configure Teradici to spin up and spin down the machines as needed to really save costs. Now that we covered the Azure components through the Azure Bootcamp, I'd like to invite Richard from Avid back to give us an idea of how you would actually go about installing all the Avid pieces.  I'll now give a quick demonstration of how to use this ARM template here under the Media Composer section. Again, this will deploy a NEXIS, multiple Media Composers, a Signiant Media Shuttle VM, and use Teradici on these machines for access. I go up here to the ARM template and use the "Deploy to Azure" button. This pulls up the custom deployment that I've shown earlier. In this ARM template or this custom template, I'm able to very quickly enter the information that is specific to this deployment. There's a couple of different sections. First, the subscription that I'm working in and the resource group. If I have a resource group I already created, I can select it. Otherwise, I can choose New. The region that I'm going to do the deployment in, the username and password that will be used for these various VMs, the name of the NEXIS, whether I'm using a new or existing VNet, and if I'm using an existing VNet, then of course, the VNet name and the VNet resource group and the subnet where this is going to be deployed in. If I'm specifying a new subnet for instance, I'll need to specify the address space of that subnet. The size of the VMs, and that's selectable from a couple different GPU-enabled VMs, the number of Media Composer instances that I'm using, and where to find these installers. Now, the way this is done is that you create a container in a storage account and you put in it the installers that you're interested in putting in. So depending on which version of Media Composer that you want or which version of the Graphics Agent or which particular grid driver that you need, etc., you put inside this, so you create the link here to where the template can find this group of installers. Once you've entered all of this piece of information into here, you simply hit "Review + Create", and it will run a validation, verify that everything is good, and then you're able to move forward. Another thing that we have done here at Avid is to create an ARM template for deploying a NEXIS, either an online or a nearline NEXIS. I'm going to demonstrate that really quickly here using our "Deploy to Azure" ARM template. I'm able here to select and choose where this is going to be deployed to just as I have done before, enter all of the right information into this. Down here at the bottom is the part number, and the part number, if you hover over this, determines whether or not this is a nearline NEXIS or an online NEXIS, so something to pay close attention to when you're doing a deployment. Enter the information, hit "Review + Create", and you're on your way. My deployment of NEXIS has been going for a couple of minutes. I can always jump in and look at either the notifications section or come into the deployment details and click on the deployment and look and see at what step it's at. It's been able to create all the resources and it is now installing the NEXIS software. My NEXIS deployment just completed. I'm able to go to the resource and actually come in and see the components of that particular VM, or I can come and I'll see it over here from the portal. You see now I have a nexis-01 and a nexis-02. Now, I still need to configure and license the NEXIS, and we have some step-by-step guides that are also part of the Edit in the Cloud section on GitHub that take you very carefully through that step by step. You do need to obtain a license for the NEXIS from Avid and it needs to be specific to the deployment type that you do. So depending on whether you're doing a nearline deployment or an online deployment, the NEXIS needs a different license, and of course, the storage account that sits behind it as I described earlier is important. Now that my NEXIS has been created from a virtual machine inside of the same subnet, I'm going to go in and log into this NEXIS. I need to use the Administrator login and the credential that I entered during the deployment. When I log in to the NEXIS for the first time, you'll see the name, nexis-02, which I created during the deployment, but nothing else is configured. So I will need to come in first and license the NEXIS. I need to obtain a license as I described from Avid. In this particular case, I'm able to use an online license. Now, there's two pieces of information that are important. First is the activation ID I bring from the license that I received from Avid, and then the second is the system ID. Once I have the system ID entered, copied in, I hit "Activate." It'll take just a second for this activation to occur. If you're in a highly secure environment, there's an offline activation process that is also documented in the information that we have put up in GitHub. I wait until the license is activated and then I'm able to proceed with the next steps of creating the NEXIS file system. Now, my license has been successfully activated. I'll need to log back in again. Then I am prompted when I come back in to create a file system. No file system so far exists, so I'll need to use the "Create File System", and then hit "Submit." This warns me, In this case, no file system exists so there's nothing to worry about. I will choose "Okay" and the file system will be created. Again, this takes a minute or two for this to occur and then I'm prompted again to log back in. Now, the file system has been successfully created, and again, it will require me to log back in one more time. Now, the next thing to do is to notice that everything has been created, but there is no media pack that is bound so far. So I'll need to come over here to "Storage" and to the "Media Packs". The media pack has been created. It was created as part of the NEXIS deployment but is not yet bound to the system. I select this, I bind it. The next thing that will come up and warn me of is that it is not tied to a storage account. It does that by telling me that the account credentials are not valid because I have not created a storage account yet. So I next need to create a storage group. The storage group can be almost anything that you want it to be. In this particular case, I'm on nexis-02, so I'll create Nexis02_SG. Now, this is where we link it to the storage account that we created inside of the Azure Portal. So I want to come back over to the Azure Portal, go to the storage account I created. I need to obtain the access key, worked, put one of the keys in place, bind it to the media pack, and hit "Save." Once I have entered the credentials in the storage group, created the storage group, and connected it to the storage account inside of Azure, then you'll see that the media pack has turned green and it is successful and online. At this point, I'm able to come in and to create workspaces. I could create a workspace, something like Avid_Projects, choose the storage group, of course right now, there's only one storage group, give it some size, and hit "Create." Again, just like an on-prem NEXIS, I can create mini workspaces based on the needs of the projects, etc. Now, I will need to associate users to workspaces, etc. I can also do that when I'm creating workspaces now that I've created users. Now, those workspaces will be visible on the clients. So here I am on one of the clients. I do need to enter the remote host information into the NEXIS client so that the NEXIS client will see it. Again, it just takes a minute or two to be able to see that NEXIS show up in the list. I'll see nexis-02 show up and then I will see those two workspaces that I've just created. Nexis-02 now shows up in the list. I log in using the credentials that I just created. I'm able to now see the Avid_Projects workspace that I had created and the Media_01 workspace that I had created on nexis-02. Those are the two workspaces and I'm able to read and write content to that NEXIS now. Very simple, very straightforward.  Richard, now I have all the pieces in place from Media Composer to NEXIS to Teradici, can you walk us through the end-to-end solution that we actually have now in the edit pod?  Let's take a quick look around the Azure portal. You'll see here that I have avid-edit-1. Avid-edit-1 is an NV12 v3 GPU-enabled VM. This is where our first Media Composer editing VM sits, as opposed to avid-edit-41 which is an NV8 v4. This is one of the newer AMD GPU VMs. It's a very small VM, lower cost, very lightweight. In this class, you'll have several different classes that you can use of the new AMD GPU VMs. This one could be used for just very basic editing. You would need a beefier one for anything that is heavier. Then we have an Avid license server. The license server provides licensing for any of the VMs that are inside the Cloud. We have an Active Directory environment that is run by this VM. We have an upload server. This is the one that is being used for Signiant Media Shuttle so that a user can connect in through a simple web browser and upload content to the NEXIS. You'll see that we have nexis-01. This is our first NEXIS. This is an online NEXIS for use with the editorial environment, has multiple workspaces on it, does [inaudible] as I've showed earlier. Then we also have the Teradici Connect. This is the Cloud Access Connector that is used to tie this environment to the Cloud Access Manager. It becomes the broker for using the Teradici client to access the environment. It's what we used earlier to connect up to the environment using the PC-over-IP. You'll see in avid-edit-1, I'm going to do something where I'm going to take a snapshot of avid-edit-1. Avid-edit-1, think of it as our gold image. We've installed all the software that we want onto that VM; the Media Composer, software, the plugins, all the different components that we need. We want to take avid-edit-1 and use its disk as a snapshot, and then we'll take and replicate that, and we'll create a couple more virtual machines from that. So I go here to the disk, I find the OS disk of this machine, and I click here on "Create snapshot". I'm going to call this mediacomposer1snapshot1 and make sure that it is zone-redundant, set the encryption, hit "Review + Create". Now, I have a snapshot of that machine. I'm going to use that snapshot to create other machines just like it. This really aids in companies being able to set one machine up, get it all configured exactly how they want, and then replicate many machines to be just like it. So we've created this very simple PowerShell script that is going to replicate that snapshot and make me the OS disks. That's the first step so that I have an OS disk built for each of the VMs that I'm going to make. I create this, enter the pieces quickly in here, adding the resource group name, the snapshot name, the VM names that I'm going to use, etc. So we've created this very simple VM cloning ARM template. It allows you to very easily take that snapshot that we have captured from our gold image VM and to be able to replicate it. It's very simple. You come here, hit the "Deploy to Azure". It will log me in with my default subscription and it brings me up a custom deployment. I'm going to select the location that we're working in, in this particular case, we're working in the South Central. I'm going to call this avid-edit, add two more starting at two. I simply hit "Review + Create", check that the validation is passed, and I can hit "Create", and then I see confirmation that the deployment has completed.  Thanks, Richard. Next, I'd like to share with everyone a set of resources you could go to for more information. On this list, you'll find a variety of resources from the industry site for Microsoft where you could find other episodes of The Control Room as well as case studies, the Azure documentation, the great blog article for COVID response, as well as all the scripts that Bruce talked about earlier. I'd like to invite Richard back to talk about some of the resources available from Avid.  One of the things we've done this last year is upload a couple of templates to GitHub so that people who are interested in doing Cloud deployments and utilizing our tools in the Cloud can very simply do their own deployments. There are two sections; the EitC, Editorial in the Cloud section which contains some Terraform templates, and then the Media Composer section which uses an ARM template and a quick description here on the landing page. Then you can jump into the two individual sections and use the type of deployment that you're interested in. In the EitC section, again, it uses Terraform templates. There's a quick description, a drawing that describes the environment, the use of Azure CLI and Terraform to do the deployment. Simple step-by-step guide. You simply modify the Terraform template to add the environmental variables that you need and execute it, and the environment will stand up very quickly. In the Media Composer section, it uses an ARM template. Again, you need to go in, enter the environmental variables for your particular deployment, and hit "Deploy to Azure". Very simple, very straightforward, great way to do a deployment. In this deployment, it includes an online NEXIS for editorial performance, multiple Media Composers, you can choose 1, 5, 10, as many as you would like, Signiant Media Shuttle to be able to upload content to the NEXIS, and of course, the use of the Teradici PC-over-IP for remotely accessing the Media Composer VMs and having that great editorial experience that we showed you earlier.  I'd like to welcome back Mike Desilver. Mike, what should be the next steps for someone who's very interested in pursuing editing in the Cloud?  Thanks again, Scott. For customers interested in taking the next steps and learning more about the solution and build an [inaudible] proof of concepts or a pilot, I definitely recommend reviewing the information provided earlier in the links with Microsoft and Avid. This will provide some technical documentation for Azure and Avid along with some scripts, assist you with the setup. I'd also recommend for enterprise customers, please reach out to their Microsoft account team for any assistance they'll need. Thanks again.  That's a wrap on this episode of The Control Room. Be sure to check out some of the other sessions that we actually have covering a variety of topics including the technical deep dives. Thanks. [MUSIC] 