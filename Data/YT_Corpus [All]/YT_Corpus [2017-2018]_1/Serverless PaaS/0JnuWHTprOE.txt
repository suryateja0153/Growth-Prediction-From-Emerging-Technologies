 It's time for another 2 Minute Tech Tip! Clearly there is no such thing as serverless computing. However there is such a thing as dedicated serverless computing. That means that there's no server constantly dedicated to your application. You don't need to have a web server that's constantly running, waiting for requests to come in. The new paradigm of serverless, that's what I urge you to take a close look at. With serverless, you implement functions that can take requests, that can respond to events, but are only started up once an event or request needs to be dealt with. That means, in terms of compute resources, you don't have any dedicated resources, but those resources are made available when processing the events or the requests, firing up if there is a big load, and completely letting go of all compute resources if there isn't any load. Serverless doesn't mean there's no server. There's a server somewhere. There's this big server pool in a cloud vendor's pool of compute resources, and we only pay for the actual compute we're using, typically a combination of the memory used by our functions while executing in the time they take to execute. It's a true pay-per-use model. In terms of technology to use for this, Oracle offers a managed serverless cloud service that will run using an open-source platform, the FN platform. With the ebb and flow functionality, it allows us to create and implement functions in various languages such as Java, JavaScript, Python, and Go, and we can string these functions together, having one function publish events or publish output that can be piped into another function. Like I said, I urge you to take a look at these functions to be able to benefit from the serverless architecture that's going to be crucial to the future of IT and computing. Was that a good tip? "This is like a dream I've had!" We want your opinion! Thanks for watching, and stay tuned! 